{"mappings":"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","sources":["src/NoteProvider/RangeNoteProvider.ts","src/utils.ts","src/ReplayProvider.ts","src/NoteProvider/utils.ts","src/views/EqualDurationNoteDisplayer.ts","node_modules/vexflow/build/cjs/webpack:/Vex/webpack/universalModuleDefinition","node_modules/vexflow/build/cjs/webpack:/Vex/webpack/bootstrap","node_modules/vexflow/build/cjs/webpack:/Vex/webpack/runtime/define property getters","node_modules/vexflow/build/cjs/webpack:/Vex/webpack/runtime/global","node_modules/vexflow/build/cjs/webpack:/Vex/webpack/runtime/hasOwnProperty shorthand","node_modules/vexflow/build/cjs/webpack:/Vex/webpack/runtime/make namespace object","node_modules/vexflow/build/cjs/webpack:/Vex/src/typeguard.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/util.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/fraction.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/boundingbox.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/boundingboxcomputation.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/font.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/registry.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/element.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/glyph.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/modifier.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/music.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/tables.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/accidental.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/stem.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/textformatter.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/annotation.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/articulation.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/rendercontext.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/tickable.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/note.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/stavemodifier.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/stavebarline.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/chordsymbol.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/voice.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/barnote.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/bend.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/dot.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/frethandfinger.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/stavetie.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/tabtie.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/gracenotegroup.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/notesubgroup.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/tickcontext.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/ornament.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/parenthesis.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/notehead.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/stemmablenote.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/stavenote.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/web.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/canvascontext.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/svgcontext.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/renderer.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/textnote.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/stavevolta.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/stringnumber.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/strokes.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/vibrato.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/modifiercontext.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/clef.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/keysignature.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/staverepetition.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/stavesection.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/stavetempo.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/stavetext.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/timesigglyph.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/timesignature.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/stave.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/staveconnector.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/formatter.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/tuplet.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/beam.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/clefnote.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/crescendo.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/curve.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/parser.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/easyscore.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/ghostnote.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/glyphnote.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/gracenote.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/keysignote.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/multimeasurerest.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/pedalmarking.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/repeatnote.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/staveline.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/system.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/tabnote.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/tabstave.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/textbracket.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/textdynamics.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/timesignote.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/vibratobracket.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/factory.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/gracetabnote.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/keymanager.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/stavehairpin.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/tabslide.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/tremolo.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/tuning.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/flow.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/version.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/fonts/bravura_glyphs.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/fonts/bravura_metrics.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/fonts/custom_glyphs.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/fonts/custom_metrics.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/fonts/gonville_glyphs.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/fonts/gonville_metrics.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/fonts/petaluma_glyphs.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/fonts/petaluma_metrics.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/fonts/petalumascript_glyphs.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/fonts/robotoslab_glyphs.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/vex.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/fonts/load_bravura.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/fonts/load_gonville.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/fonts/load_petaluma.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/fonts/load_custom.ts","node_modules/vexflow/build/cjs/webpack:/Vex/entry/vexflow.ts","node_modules/vexflow/build/cjs/webpack:/Vex/src/fonts/textfonts.ts","src/views/NoteDisplayer.ts","src/views/Question.ts","src/views/StaveDisplayer.ts"],"sourcesContent":["import { noteRange } from \"../utils\";\nimport { NoteProvider } from \"./NoteProvider\";\n\nexport class RangeNoteProvider implements NoteProvider {\n  range!: string[];\n  constructor(private start: string, private end: string) {\n    this.setRange(this.start, this.end);\n  }\n\n  setRange(start: string, end: string) {\n    this.start = start;\n    this.end = end;\n    this.range = noteRange(start, end);\n  }\n\n  next() {\n    const randomNote =\n      this.range[Math.floor(Math.random() * this.range.length)];\n    return randomNote;\n  }\n\n  available() {\n    return true;\n  }\n}\nexport const bassNoteRanger = new RangeNoteProvider(\"f/1\", \"g/4\");\n\nexport const trebleNoteRanger = new RangeNoteProvider(\"f/3\", \"e/6\");\n","const noteOrder: NoteName[] = [\"c\", \"d\", \"e\", \"f\", \"g\", \"a\", \"b\"];\nexport type NoteName = \"c\" | \"d\" | \"e\" | \"f\" | \"g\" | \"a\" | \"b\";\nfunction nextNoteName(note: NoteName): NoteName {\n  if (note === \"g\") {\n    return \"a\";\n  }\n  return String.fromCharCode(note.charCodeAt(0) + 1) as NoteName;\n}\nfunction preNoteName(note: NoteName): NoteName {\n  if (note === \"a\") {\n    return \"g\";\n  }\n  return String.fromCharCode(note.charCodeAt(0) - 1) as NoteName;\n}\n/**\n * less than 0 if a<b\n * larger than 1 if a>b\n * 0 if equal\n * @param a\n * @param b\n */\nfunction compareNote(\n  a: { noteName: NoteName; group: number },\n  b: { noteName: NoteName; group: number }\n) {\n  if (a.noteName === b.noteName && a.group === b.group) {\n    return 0;\n  }\n  if (a.group > b.group) {\n    return 1;\n  }\n  if (a.group < b.group) {\n    return -1;\n  }\n  if (noteOrder.indexOf(a.noteName) > noteOrder.indexOf(b.noteName)) {\n    return 1;\n  }\n  return -1;\n}\nexport function nextNoteBy(\n  a: { noteName: NoteName; group: number },\n  by: number\n) {\n  let _iter = by - 1;\n  while (_iter) {\n    a = nextNote(a);\n    _iter--;\n  }\n  return a\n}\nexport function preNoteBy(\n  a: { noteName: NoteName; group: number },\n  by: number\n) {\n  let _iter = by - 1;\n  while (_iter) {\n    a = preNote(a);\n    _iter--;\n  }\n  return a\n}\nexport function nextNote(a: { noteName: NoteName; group: number }) {\n  return {\n    noteName: nextNoteName(a.noteName),\n    group: a.noteName === \"b\" ? a.group + 1 : a.group,\n  };\n}\nexport function preNote(a: { noteName: NoteName; group: number }) {\n  return {\n    noteName: preNoteName(a.noteName),\n    group: a.noteName === \"c\" ? a.group - 1 : a.group,\n  };\n}\n/**\n * both includes\n * @param from\n * @param to\n */\nexport function noteRange(from: string, to: string) {\n  let range: string[] = [];\n  let initial = {\n    noteName: from.split(\"/\")[0] as NoteName,\n    group: parseInt(from.split(\"/\")[1]),\n  };\n  const last = {\n    noteName: to.split(\"/\")[0] as NoteName,\n    group: parseInt(to.split(\"/\")[1]),\n  };\n  while (compareNote(initial, last) <= 0) {\n    range.push(`${initial.noteName}/${initial.group}`);\n    initial = nextNote(initial);\n  }\n  return range;\n}\nexport function noteNear(mid: string, near: number = 3) {\n  let initial1 = {\n    noteName: mid.split(\"/\")[0] as NoteName,\n    group: parseInt(mid.split(\"/\")[1]),\n  };\n  let initial2 = {\n    noteName: mid.split(\"/\")[0] as NoteName,\n    group: parseInt(mid.split(\"/\")[1]),\n  };\n  let range: string[] = [];\n  for (let index = 0; index < near; index++) {\n    initial1 = preNote(initial1);\n    range.push(`${initial1.noteName}/${initial1.group}`);\n    initial2 = nextNote(initial2);\n    range.push(`${initial2.noteName}/${initial2.group}`);\n  }\n  return range;\n}\n\nexport function shuffle<T>(arr: T[]) {\n  // https://github.com/ccforward/cc/issues/44\n  let n = arr.length,\n    random;\n  while (0 != n) {\n    random = (Math.random() * n--) >>> 0; // 无符号右移位运算符向下取整\n    [arr[n], arr[random]] = [arr[random], arr[n]]; // ES6的结构赋值实现变量互换\n  }\n  return arr;\n}\n","import { NoteProvider } from \"./NoteProvider/NoteProvider\";\nimport { randomItem } from \"./NoteProvider/utils\";\nexport interface ReplayProviderConfig {\n  // 词典大小\n  size: number;\n  // 0-1答对时调整值\n  learnRate: number;\n  keepNegetaive: boolean;\n}\nexport interface SourceProvider {\n  available(): boolean;\n  next(): string;\n}\nexport class ReplayProvider implements SourceProvider{\n  private map: Map<string, number>;\n  private bassMap: Map<string, number>;\n  private trebleMap: Map<string, number>;\n\n  constructor(\n    private readonly config: ReplayProviderConfig = {\n      size: 0,\n      learnRate: 0.5,\n      keepNegetaive: false,\n    }\n  ) {\n    this.bassMap = new Map();\n    this.trebleMap = new Map();\n    this.map = this.trebleMap;\n  }\n\n  public addWrong(note: string) {\n    if (this.map.has(note)) {\n      this.map.set(note, this.map.get(note)! + 1);\n    } else {\n      this.addNewNote(note);\n    }\n  }\n  public addRight(note: string) {\n    if (this.map.has(note)) {\n      if (!this.config.keepNegetaive && this.map.get(note)! - 1 <= 0) {\n        this.map.delete(note);\n      } else {\n        this.map.set(note, this.map.get(note)! - 0.5);\n      }\n    } else if (this.config.keepNegetaive) {\n      this.map.set(note, -0.5);\n    }\n  }\n\n  private deleteMinialKey() {\n    // find minial and remove\n    let key = \"\";\n    let _small = Infinity;\n    for (const [k, v] of this.map.entries()) {\n      if (v <= _small) {\n        _small = v;\n        key = k;\n      }\n    }\n    this.map.delete(key);\n  }\n\n  private shouldDeleteNote() {\n    return this.config.size !== 0 && this.map.size >= this.config.size;\n  }\n\n  private addNewNote(note: string) {\n    if (this.shouldDeleteNote()) {\n      this.deleteMinialKey();\n    }\n\n    this.map.set(note, 1);\n  }\n\n  public next() {\n    let fullList: { note: string; weight: number }[] = [];\n    this.map.forEach((v, k) => {\n      fullList.push({\n        note: k,\n        weight: v,\n      });\n    });\n    return randomItem(fullList).note;\n  }\n\n  available() {\n    return this.map.size > 0;\n  }\n\n  setClef(clef: \"bass\" | \"treble\") {\n    if (clef === \"bass\") {\n      this.map = this.bassMap;\n    } else {\n      this.map = this.trebleMap;\n    }\n  }\n}\n","export function randRange(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n//  http://codetheory.us/weighted-biased-random-number-generation-with-javascript-based-on-probability/\nexport function randomItem<T extends { weight: number }>(list: T[]) {\n  const totalWeight = list.reduce((prev, curr) => {\n    return prev + curr.weight;\n  }, 0);\n  const randomNum = randRange(0, totalWeight);\n  let weightSum = 0;\n  for (var i = 0; i < list.length; i++) {\n    weightSum += list[i].weight;\n    weightSum = +weightSum.toFixed(2);\n    if (randomNum <= weightSum) {\n      return list[i];\n    }\n  }\n  return list[0];\n}\n","import { Stave, StaveNote, SVGContext, VoiceTime } from \"vexflow\";\nimport { NoteDisplayer } from \"./NoteDisplayer\";\n\nexport class EqualDurationNoteDisplayer extends NoteDisplayer {\n  constructor(\n    context: SVGContext,\n    stave: Stave,\n    private voiceInfo: {\n      voiceTime: VoiceTime;\n      subDuration: number;\n      clef: \"treble\" | \"bass\";\n    }\n  ) {\n    super(context, stave);\n  }\n\n  setClef(clef: \"treble\" | \"bass\") {\n    this.voiceInfo.clef = clef;\n  }\n\n  draw(noteChar: string[]) {\n    const notes = noteChar.map((note) => {\n      return new StaveNote({\n        clef: this.voiceInfo.clef,\n        keys: [note],\n        duration: String(this.voiceInfo.subDuration),\n      });\n    });\n\n    this.ndraw({\n      notesList: notes,\n      voiceTime: this.voiceInfo.voiceTime,\n    });\n  }\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Vex\"] = factory();\n\telse\n\t\troot[\"Vex\"] = factory();\n})((typeof window !== 'undefined' ? window : typeof globalThis !== 'undefined' ? globalThis : this), function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Ron B. Yeh\n// MIT License\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Use instead of `instanceof` as a more flexible type guard.\n * @param obj check if this object's CATEGORY matches the provided category.\n * @param category a string representing a category of VexFlow objects.\n * @param checkAncestors defaults to `true`, so we walk up the prototype chain to look for a matching `CATEGORY`.\n *        If `false`, we do not check the superclass or other ancestors.\n * @returns true if `obj` has a static `CATEGORY` property that matches `category`.\n */\nexport function isCategory(obj, category, checkAncestors = true) {\n    // obj is undefined, a number, a primitive string, or null.\n    if (typeof obj !== 'object' || obj === null) {\n        return false;\n    }\n    // `obj.constructor` is a reference to the constructor function that created the `obj` instance.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\n    let constructorFcn = obj.constructor;\n    // Check if the object's static .CATEGORY matches the provided category.\n    if (checkAncestors) {\n        // Walk up the prototype chain to look for a matching obj.constructor.CATEGORY.\n        while (obj !== null) {\n            constructorFcn = obj.constructor;\n            if ('CATEGORY' in constructorFcn && constructorFcn.CATEGORY === category) {\n                return true;\n            }\n            obj = Object.getPrototypeOf(obj);\n        }\n        return false;\n    }\n    else {\n        // Do not walk up the prototype chain. Just check this particular object's static .CATEGORY string.\n        return 'CATEGORY' in constructorFcn && constructorFcn.CATEGORY === category;\n    }\n}\nexport const isAccidental = (obj) => isCategory(obj, Category.Accidental);\nexport const isAnnotation = (obj) => isCategory(obj, Category.Annotation);\nexport const isBarline = (obj) => isCategory(obj, Category.Barline);\nexport const isDot = (obj) => isCategory(obj, Category.Dot);\nexport const isGraceNote = (obj) => isCategory(obj, Category.GraceNote);\nexport const isGraceNoteGroup = (obj) => isCategory(obj, Category.GraceNoteGroup);\nexport const isNote = (obj) => isCategory(obj, Category.Note);\nexport const isRenderContext = (obj) => isCategory(obj, Category.RenderContext);\nexport const isStaveNote = (obj) => isCategory(obj, Category.StaveNote);\nexport const isStemmableNote = (obj) => isCategory(obj, Category.StemmableNote);\nexport const isTabNote = (obj) => isCategory(obj, Category.TabNote);\n// 'const' enums are erased by the TypeScript compiler. The string values are inlined at all the use sites.\n// See: https://www.typescriptlang.org/docs/handbook/enums.html#const-enums\nexport var Category;\n(function (Category) {\n    Category[\"Accidental\"] = \"Accidental\";\n    Category[\"Annotation\"] = \"Annotation\";\n    Category[\"Articulation\"] = \"Articulation\";\n    Category[\"Barline\"] = \"Barline\";\n    Category[\"BarNote\"] = \"BarNote\";\n    Category[\"Beam\"] = \"Beam\";\n    Category[\"Bend\"] = \"Bend\";\n    Category[\"ChordSymbol\"] = \"ChordSymbol\";\n    Category[\"Clef\"] = \"Clef\";\n    Category[\"ClefNote\"] = \"ClefNote\";\n    Category[\"Crescendo\"] = \"Crescendo\";\n    Category[\"Curve\"] = \"Curve\";\n    Category[\"Dot\"] = \"Dot\";\n    Category[\"Element\"] = \"Element\";\n    Category[\"Fraction\"] = \"Fraction\";\n    Category[\"FretHandFinger\"] = \"FretHandFinger\";\n    Category[\"GhostNote\"] = \"GhostNote\";\n    Category[\"Glyph\"] = \"Glyph\";\n    Category[\"GlyphNote\"] = \"GlyphNote\";\n    Category[\"GraceNote\"] = \"GraceNote\";\n    Category[\"GraceNoteGroup\"] = \"GraceNoteGroup\";\n    Category[\"GraceTabNote\"] = \"GraceTabNote\";\n    Category[\"KeySignature\"] = \"KeySignature\";\n    Category[\"KeySigNote\"] = \"KeySigNote\";\n    Category[\"Modifier\"] = \"Modifier\";\n    Category[\"MultiMeasureRest\"] = \"MultiMeasureRest\";\n    Category[\"Note\"] = \"Note\";\n    Category[\"NoteHead\"] = \"NoteHead\";\n    Category[\"NoteSubGroup\"] = \"NoteSubGroup\";\n    Category[\"Ornament\"] = \"Ornament\";\n    Category[\"Parenthesis\"] = \"Parenthesis\";\n    Category[\"PedalMarking\"] = \"PedalMarking\";\n    Category[\"RenderContext\"] = \"RenderContext\";\n    Category[\"RepeatNote\"] = \"RepeatNote\";\n    Category[\"Repetition\"] = \"Repetition\";\n    Category[\"Stave\"] = \"Stave\";\n    Category[\"StaveConnector\"] = \"StaveConnector\";\n    Category[\"StaveHairpin\"] = \"StaveHairpin\";\n    Category[\"StaveLine\"] = \"StaveLine\";\n    Category[\"StaveModifier\"] = \"StaveModifier\";\n    Category[\"StaveNote\"] = \"StaveNote\";\n    Category[\"StaveSection\"] = \"StaveSection\";\n    Category[\"StaveTempo\"] = \"StaveTempo\";\n    Category[\"StaveText\"] = \"StaveText\";\n    Category[\"StaveTie\"] = \"StaveTie\";\n    Category[\"Stem\"] = \"Stem\";\n    Category[\"StemmableNote\"] = \"StemmableNote\";\n    Category[\"StringNumber\"] = \"StringNumber\";\n    Category[\"Stroke\"] = \"Stroke\";\n    Category[\"System\"] = \"System\";\n    Category[\"TabNote\"] = \"TabNote\";\n    Category[\"TabSlide\"] = \"TabSlide\";\n    Category[\"TabStave\"] = \"TabStave\";\n    Category[\"TabTie\"] = \"TabTie\";\n    Category[\"TextBracket\"] = \"TextBracket\";\n    Category[\"TextDynamics\"] = \"TextDynamics\";\n    Category[\"TextNote\"] = \"TextNote\";\n    Category[\"Tickable\"] = \"Tickable\";\n    Category[\"TimeSignature\"] = \"TimeSignature\";\n    Category[\"TimeSigNote\"] = \"TimeSigNote\";\n    Category[\"Tremolo\"] = \"Tremolo\";\n    Category[\"Tuplet\"] = \"Tuplet\";\n    Category[\"Vibrato\"] = \"Vibrato\";\n    Category[\"VibratoBracket\"] = \"VibratoBracket\";\n    Category[\"Voice\"] = \"Voice\";\n    Category[\"Volta\"] = \"Volta\";\n})(Category || (Category = {}));\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n// Note: Keep this module free of imports to reduce the chance of circular dependencies.\n/** `RuntimeError` will be thrown by VexFlow classes in case of error. */\nexport class RuntimeError extends Error {\n    constructor(code, message = '') {\n        super('[RuntimeError] ' + code + ': ' + message);\n        this.code = code;\n    }\n}\n/** VexFlow can be used outside of the browser (e.g., Node) where `window` may not be defined. */\n// eslint-disable-next-line\nexport function globalObject() {\n    if (typeof globalThis !== 'undefined') {\n        return globalThis;\n    }\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    return Function('return this')();\n}\n/**\n * Check that `x` is of type `T` and not `undefined`.\n * If `x` is `undefined`, throw a RuntimeError with the optionally provided error code and message.\n */\nexport function defined(x, code = 'undefined', message = '') {\n    if (x === undefined) {\n        throw new RuntimeError(code, message);\n    }\n    return x;\n}\n/** Default log function sends all arguments to console. */\n// eslint-disable-next-line\nexport function log(block, ...args) {\n    if (!args)\n        return;\n    const line = Array.prototype.slice.call(args).join(' ');\n    globalObject().console.log(block + ': ' + line);\n}\n/** Dump warning to console. */\n// eslint-disable-next-line\nexport function warn(...args) {\n    const line = args.join(' ');\n    const err = new Error();\n    globalObject().console.log('Warning: ', line, err.stack);\n}\n/** Round number to nearest fractional value (`.5`, `.25`, etc.) */\nfunction roundN(x, n) {\n    return x % n >= n / 2 ? parseInt(`${x / n}`, 10) * n + n : parseInt(`${x / n}`, 10) * n;\n}\n/** Locate the mid point between stave lines. Returns a fractional line if a space. */\nexport function midLine(a, b) {\n    let mid_line = b + (a - b) / 2;\n    if (mid_line % 2 > 0) {\n        mid_line = roundN(mid_line * 10, 5) / 10;\n    }\n    return mid_line;\n}\n/**\n * Used by various classes (e.g., SVGContext) to provide a\n * unique prefix to element names (or other keys in shared namespaces).\n */\nexport function prefix(text) {\n    return `vf-${text}`;\n}\n/**\n * Convert an arbitrary angle in radians to the equivalent one in the range [0, pi).\n */\nexport function normalizeAngle(a) {\n    a = a % (2 * Math.PI);\n    if (a < 0) {\n        a += 2 * Math.PI;\n    }\n    return a;\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n//\n// Author: Joshua Koo / @zz85\n// Author: @incompleteopus\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\n/** Fraction represents a rational number. */\nexport class Fraction {\n    /** Set the numerator and denominator. */\n    constructor(numerator, denominator) {\n        this.numerator = 1;\n        this.denominator = 1;\n        this.set(numerator, denominator);\n    }\n    static get CATEGORY() {\n        return Category.Fraction;\n    }\n    /**\n     * GCD: Greatest common divisor using the Euclidean algorithm.\n     * Note: GCD(0, 0) => 0 and GCD(0, n) => n.\n     */\n    static GCD(a, b) {\n        if (typeof a !== 'number' || Number.isNaN(a) || typeof b !== 'number' || Number.isNaN(b)) {\n            throw new RuntimeError('BadArgument', `Invalid numbers: ${a}, ${b}`);\n        }\n        let t;\n        while (b !== 0) {\n            t = b;\n            b = a % b;\n            a = t;\n        }\n        return a;\n    }\n    /** LCM: Lowest common multiple. */\n    static LCM(a, b) {\n        return (a * b) / Fraction.GCD(a, b);\n    }\n    /** Lowest common multiple for more than two numbers. */\n    static LCMM(args) {\n        if (args.length === 0) {\n            return 0;\n        }\n        else if (args.length === 1) {\n            return args[0];\n        }\n        else if (args.length === 2) {\n            return Fraction.LCM(args[0], args[1]);\n        }\n        else {\n            // args.shift() removes the first number.\n            // LCM the first number with the rest of the numbers.\n            return Fraction.LCM(args.shift(), Fraction.LCMM(args));\n        }\n    }\n    /** Set the numerator and denominator. */\n    set(numerator = 1, denominator = 1) {\n        this.numerator = numerator;\n        this.denominator = denominator;\n        return this;\n    }\n    /** Return the value of the fraction. */\n    value() {\n        return this.numerator / this.denominator;\n    }\n    /** Simplify numerator and denominator using GCD. */\n    simplify() {\n        let u = this.numerator;\n        let d = this.denominator;\n        const gcd = Fraction.GCD(u, d);\n        u /= gcd;\n        d /= gcd;\n        if (d < 0) {\n            d = -d;\n            u = -u;\n        }\n        return this.set(u, d);\n    }\n    /** Add value of another fraction. */\n    add(param1 = 0, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        const lcm = Fraction.LCM(this.denominator, otherDenominator);\n        const a = lcm / this.denominator;\n        const b = lcm / otherDenominator;\n        const u = this.numerator * a + otherNumerator * b;\n        return this.set(u, lcm);\n    }\n    /** Substract value of another fraction. */\n    subtract(param1 = 0, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        const lcm = Fraction.LCM(this.denominator, otherDenominator);\n        const a = lcm / this.denominator;\n        const b = lcm / otherDenominator;\n        const u = this.numerator * a - otherNumerator * b;\n        return this.set(u, lcm);\n    }\n    /** Multiply by value of another fraction. */\n    multiply(param1 = 1, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        return this.set(this.numerator * otherNumerator, this.denominator * otherDenominator);\n    }\n    /** Divide by value of another Fraction. */\n    divide(param1 = 1, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        return this.set(this.numerator * otherDenominator, this.denominator * otherNumerator);\n    }\n    /** Simplify both sides and check if they are equal. */\n    equals(compare) {\n        const a = Fraction.__staticFractionA.copy(compare).simplify();\n        const b = Fraction.__staticFractionB.copy(this).simplify();\n        return a.numerator === b.numerator && a.denominator === b.denominator;\n    }\n    /** Greater than operator. */\n    greaterThan(compare) {\n        const a = Fraction.__staticFractionB.copy(this);\n        a.subtract(compare);\n        return a.numerator > 0;\n    }\n    /** Greater than or equals operator. */\n    greaterThanEquals(compare) {\n        const a = Fraction.__staticFractionB.copy(this);\n        a.subtract(compare);\n        return a.numerator >= 0;\n    }\n    /** Less than operator. */\n    lessThan(compare) {\n        return !this.greaterThanEquals(compare);\n    }\n    /** Less than or equals operator. */\n    lessThanEquals(compare) {\n        return !this.greaterThan(compare);\n    }\n    /** Return a new copy with current values. */\n    clone() {\n        return new Fraction(this.numerator, this.denominator);\n    }\n    /** Copy value of another fraction. */\n    copy(other) {\n        if (typeof other === 'number') {\n            return this.set(other, 1);\n        }\n        else {\n            return this.set(other.numerator, other.denominator);\n        }\n    }\n    /** Return the integer component (eg. 5/2 => 2). */\n    quotient() {\n        return Math.floor(this.numerator / this.denominator);\n    }\n    /** Return the remainder component (eg. 5/2 => 1). */\n    remainder() {\n        return this.numerator % this.denominator;\n    }\n    /** Calculate absolute value. */\n    makeAbs() {\n        this.denominator = Math.abs(this.denominator);\n        this.numerator = Math.abs(this.numerator);\n        return this;\n    }\n    /** Return a raw string representation (eg. \"5/2\"). */\n    toString() {\n        return `${this.numerator}/${this.denominator}`;\n    }\n    /** Return a simplified string respresentation. */\n    toSimplifiedString() {\n        return Fraction.__staticFractionTmp.copy(this).simplify().toString();\n    }\n    /** Return string representation in mixed form. */\n    toMixedString() {\n        let s = '';\n        const q = this.quotient();\n        const f = Fraction.__staticFractionTmp.copy(this);\n        if (q < 0) {\n            f.makeAbs();\n        }\n        if (q !== 0) {\n            s += q;\n            if (f.numerator !== 0) {\n                s += ` ${f.toSimplifiedString()}`;\n            }\n        }\n        else if (f.numerator === 0) {\n            s = '0';\n        }\n        else {\n            s = f.toSimplifiedString();\n        }\n        return s;\n    }\n    /** Parse a fraction string. */\n    parse(str) {\n        const i = str.split('/');\n        const n = parseInt(i[0], 10);\n        const d = i[1] ? parseInt(i[1], 10) : 1;\n        return this.set(n, d);\n    }\n}\n// Cached objects for comparisons.\nFraction.__staticFractionA = new Fraction();\nFraction.__staticFractionB = new Fraction();\nFraction.__staticFractionTmp = new Fraction();\n/** Helper function to extract the numerator and denominator from another fraction. */\nfunction getNumeratorAndDenominator(n, d = 1) {\n    if (typeof n === 'number') {\n        // Both params are numbers, so we return them as [numerator, denominator].\n        return [n, d];\n    }\n    else {\n        // First param is a Fraction object. We ignore the second param.\n        return [n.numerator, n.denominator];\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nexport class BoundingBox {\n    constructor(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this.w = w;\n        this.h = h;\n    }\n    /**\n     * Create a new copy.\n     */\n    static copy(that) {\n        return new BoundingBox(that.x, that.y, that.w, that.h);\n    }\n    /** Get x position. */\n    getX() {\n        return this.x;\n    }\n    /** Get y position. */\n    getY() {\n        return this.y;\n    }\n    /** Get width. */\n    getW() {\n        return this.w;\n    }\n    /** Get height. */\n    getH() {\n        return this.h;\n    }\n    /** Set x position. */\n    setX(x) {\n        this.x = x;\n        return this;\n    }\n    /** Set y position. */\n    setY(y) {\n        this.y = y;\n        return this;\n    }\n    /** Set width. */\n    setW(w) {\n        this.w = w;\n        return this;\n    }\n    /** Set height. */\n    setH(h) {\n        this.h = h;\n        return this;\n    }\n    /** Move to position. */\n    move(x, y) {\n        this.x += x;\n        this.y += y;\n        return this;\n    }\n    /** Clone. */\n    clone() {\n        return BoundingBox.copy(this);\n    }\n    /**\n     * Merge my box with given box. Creates a bigger bounding box unless\n     * the given box is contained in this one.\n     */\n    mergeWith(boundingBox) {\n        const that = boundingBox;\n        const new_x = this.x < that.x ? this.x : that.x;\n        const new_y = this.y < that.y ? this.y : that.y;\n        const new_w = Math.max(this.x + this.w, that.x + that.w) - new_x;\n        const new_h = Math.max(this.y + this.h, that.y + that.h) - new_y;\n        this.x = new_x;\n        this.y = new_y;\n        this.w = new_w;\n        this.h = new_h;\n        return this;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n/**\n * BoundingBoxComputation computes metrics for a bounding box by continuously\n * taking canvas path commands.\n *\n * Warning: This class is merely a crutch to get bounding box information without\n * explicit metadata. This is likely to get deprecated following SMuFL support.\n *\n * based on: https://github.com/canvg/canvg/blob/master/src/BoundingBox.ts (MIT License)\n */\nexport class BoundingBoxComputation {\n    constructor() {\n        this.x1 = Number.NaN;\n        this.y1 = Number.NaN;\n        this.x2 = Number.NaN;\n        this.y2 = Number.NaN;\n    }\n    /** Get calculated X1. */\n    getX1() {\n        return this.x1;\n    }\n    /** Get calculated Y1. */\n    getY1() {\n        return this.y1;\n    }\n    /** Get calculated width. */\n    width() {\n        return this.x2 - this.x1;\n    }\n    /** Get calculated height. */\n    height() {\n        return this.y2 - this.y1;\n    }\n    /** Add point to BoundingBox. */\n    addPoint(x, y) {\n        if (isNaN(this.x1) || x < this.x1)\n            this.x1 = x;\n        if (isNaN(this.x2) || x > this.x2)\n            this.x2 = x;\n        if (isNaN(this.y1) || y < this.y1)\n            this.y1 = y;\n        if (isNaN(this.y2) || y > this.y2)\n            this.y2 = y;\n    }\n    /** Add X to BoundingBox. */\n    addX(x) {\n        this.addPoint(x, this.y1);\n    }\n    /** Add Y to BoundingBox. */\n    addY(y) {\n        this.addPoint(this.x1, y);\n    }\n    /** Add quadratic curve to BoundingBox. */\n    addQuadraticCurve(p0x, p0y, p1x, p1y, p2x, p2y) {\n        this.addPoint(p0x, p0y);\n        this.addPoint(p2x, p2y);\n        const p01x = p1x - p0x;\n        const p12x = p2x - p1x;\n        let denom = p01x - p12x;\n        if (denom != 0) {\n            const t = p01x / denom;\n            if (t > 0 && t < 1) {\n                const it = 1 - t;\n                this.addX(it * it * p0x + 2 * it * t * p1x + t * t * p2x);\n            }\n        }\n        const p01y = p1y - p0y;\n        const p12y = p2y - p1y;\n        denom = p01y - p12y;\n        if (denom != 0) {\n            const t = p01y / denom;\n            if (t > 0 && t < 1) {\n                const it = 1 - t;\n                this.addY(it * it * p0y + 2 * it * t * p1y + t * t * p2y);\n            }\n        }\n    }\n    /** Add bezier curve to BoundingBox. */\n    addBezierCurve(p0x, p0y, p1x, p1y, p2x, p2y, p3x, p3y) {\n        // from http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n        const p0 = [p0x, p0y];\n        const p1 = [p1x, p1y];\n        const p2 = [p2x, p2y];\n        const p3 = [p3x, p3y];\n        let i;\n        this.addPoint(p0[0], p0[1]);\n        this.addPoint(p3[0], p3[1]);\n        const f = (t, i) => Math.pow(1 - t, 3) * p0[i] +\n            3 * Math.pow(1 - t, 2) * t * p1[i] +\n            3 * (1 - t) * Math.pow(t, 2) * p2[i] +\n            Math.pow(t, 3) * p3[i];\n        for (i = 0; i <= 1; i++) {\n            const b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n            const a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n            const c = 3 * p1[i] - 3 * p0[i];\n            if (a === 0) {\n                if (b === 0)\n                    continue;\n                const t = -c / b;\n                if (0 < t && t < 1) {\n                    if (i === 0)\n                        this.addX(f(t, i));\n                    if (i === 1)\n                        this.addY(f(t, i));\n                }\n                continue;\n            }\n            const b2ac = Math.pow(b, 2) - 4 * c * a;\n            if (b2ac < 0)\n                continue;\n            const t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n            if (0 < t1 && t1 < 1) {\n                if (i === 0)\n                    this.addX(f(t1, i));\n                if (i === 1)\n                    this.addY(f(t1, i));\n            }\n            const t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n            if (0 < t2 && t2 < 1) {\n                if (i === 0)\n                    this.addX(f(t2, i));\n                if (i === 1)\n                    this.addY(f(t2, i));\n            }\n        }\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { defined } from './util';\nexport var FontWeight;\n(function (FontWeight) {\n    FontWeight[\"NORMAL\"] = \"normal\";\n    FontWeight[\"BOLD\"] = \"bold\";\n})(FontWeight || (FontWeight = {}));\nexport var FontStyle;\n(function (FontStyle) {\n    FontStyle[\"NORMAL\"] = \"normal\";\n    FontStyle[\"ITALIC\"] = \"italic\";\n})(FontStyle || (FontStyle = {}));\n// Internal <span></span> element for parsing CSS font shorthand strings.\nlet fontParser;\nconst Fonts = {};\nexport class Font {\n    /**\n     * Use `Font.load(fontName)` to get a Font object.\n     * Do not call this constructor directly.\n     */\n    constructor(fontName) {\n        this.name = fontName;\n    }\n    /**\n     * @param fontSize a font size to convert. Can be specified as a CSS length string (e.g., '16pt', '1em')\n     * or as a number (the unit is assumed to be 'pt'). See `Font.scaleToPxFrom` for the supported\n     * units (e.g., pt, em, %).\n     * @returns the number of pixels that is equivalent to `fontSize`\n     */\n    static convertSizeToPixelValue(fontSize = Font.SIZE) {\n        var _a;\n        if (typeof fontSize === 'number') {\n            // Assume the numeric fontSize is specified in pt.\n            return fontSize * Font.scaleToPxFrom.pt;\n        }\n        else {\n            const value = parseFloat(fontSize);\n            if (isNaN(value)) {\n                return 0;\n            }\n            const unit = fontSize.replace(/[\\d.\\s]/g, '').toLowerCase(); // Extract the unit by removing all numbers, dots, spaces.\n            const conversionFactor = (_a = Font.scaleToPxFrom[unit]) !== null && _a !== void 0 ? _a : 1;\n            return value * conversionFactor;\n        }\n    }\n    /**\n     * @param fontSize a font size to convert. Can be specified as a CSS length string (e.g., '16pt', '1em')\n     * or as a number (the unit is assumed to be 'pt'). See `Font.scaleToPxFrom` for the supported\n     * units (e.g., pt, em, %).\n     * @returns the number of points that is equivalent to `fontSize`\n     */\n    static convertSizeToPointValue(fontSize = Font.SIZE) {\n        var _a;\n        if (typeof fontSize === 'number') {\n            // Assume the numeric fontSize is specified in pt.\n            return fontSize;\n        }\n        else {\n            const value = parseFloat(fontSize);\n            if (isNaN(value)) {\n                return 0;\n            }\n            const unit = fontSize.replace(/[\\d.\\s]/g, '').toLowerCase(); // Extract the unit by removing all numbers, dots, spaces.\n            const conversionFactor = ((_a = Font.scaleToPxFrom[unit]) !== null && _a !== void 0 ? _a : 1) / Font.scaleToPxFrom.pt;\n            return value * conversionFactor;\n        }\n    }\n    /**\n     * @param f\n     * @param size\n     * @param weight\n     * @param style\n     * @returns the `size` field will include the units (e.g., '12pt', '16px').\n     */\n    static validate(f, size, weight, style) {\n        // If f is a string but all other arguments are undefined, we assume that\n        // f is CSS font shorthand (e.g., 'italic bold 10pt Arial').\n        if (typeof f === 'string' && size === undefined && weight === undefined && style === undefined) {\n            return Font.fromCSSString(f);\n        }\n        let family;\n        if (typeof f === 'object') {\n            // f is a FontInfo object, so we extract its fields.\n            family = f.family;\n            size = f.size;\n            weight = f.weight;\n            style = f.style;\n        }\n        else {\n            // f is a string representing the font family name or undefined.\n            family = f;\n        }\n        family = family !== null && family !== void 0 ? family : Font.SANS_SERIF;\n        size = size !== null && size !== void 0 ? size : Font.SIZE + 'pt';\n        weight = weight !== null && weight !== void 0 ? weight : FontWeight.NORMAL;\n        style = style !== null && style !== void 0 ? style : FontStyle.NORMAL;\n        if (weight === '') {\n            weight = FontWeight.NORMAL;\n        }\n        if (style === '') {\n            style = FontStyle.NORMAL;\n        }\n        // If size is a number, we assume the unit is `pt`.\n        if (typeof size === 'number') {\n            size = `${size}pt`;\n        }\n        // If weight is a number (e.g., 900), turn it into a string representation of that number.\n        if (typeof weight === 'number') {\n            weight = weight.toString();\n        }\n        // At this point, `family`, `size`, `weight`, and `style` are all strings.\n        return { family, size, weight, style };\n    }\n    /**\n     * @param cssFontShorthand a string formatted as CSS font shorthand (e.g., 'italic bold 15pt Arial').\n     */\n    static fromCSSString(cssFontShorthand) {\n        // Let the browser parse this string for us.\n        // First, create a span element.\n        // Then, set its style.font and extract it back out.\n        if (!fontParser) {\n            fontParser = document.createElement('span');\n        }\n        fontParser.style.font = cssFontShorthand;\n        const { fontFamily, fontSize, fontWeight, fontStyle } = fontParser.style;\n        return { family: fontFamily, size: fontSize, weight: fontWeight, style: fontStyle };\n    }\n    /**\n     * @returns a CSS font shorthand string of the form `italic bold 16pt Arial`.\n     */\n    static toCSSString(fontInfo) {\n        var _a;\n        if (!fontInfo) {\n            return '';\n        }\n        let style;\n        const st = fontInfo.style;\n        if (st === FontStyle.NORMAL || st === '' || st === undefined) {\n            style = ''; // no space! Omit the style section.\n        }\n        else {\n            style = st.trim() + ' ';\n        }\n        let weight;\n        const wt = fontInfo.weight;\n        if (wt === FontWeight.NORMAL || wt === '' || wt === undefined) {\n            weight = ''; // no space! Omit the weight section.\n        }\n        else if (typeof wt === 'number') {\n            weight = wt + ' ';\n        }\n        else {\n            weight = wt.trim() + ' ';\n        }\n        let size;\n        const sz = fontInfo.size;\n        if (sz === undefined) {\n            size = Font.SIZE + 'pt ';\n        }\n        else if (typeof sz === 'number') {\n            size = sz + 'pt ';\n        }\n        else {\n            // size is already a string.\n            size = sz.trim() + ' ';\n        }\n        const family = (_a = fontInfo.family) !== null && _a !== void 0 ? _a : Font.SANS_SERIF;\n        return `${style}${weight}${size}${family}`;\n    }\n    /**\n     * @param fontSize a number representing a font size, or a string font size with units.\n     * @param scaleFactor multiply the size by this factor.\n     * @returns size * scaleFactor (e.g., 16pt * 3 = 48pt, 8px * 0.5 = 4px, 24 * 2 = 48).\n     * If the fontSize argument was a number, the return value will be a number.\n     * If the fontSize argument was a string, the return value will be a string.\n     */\n    static scaleSize(fontSize, scaleFactor) {\n        if (typeof fontSize === 'number') {\n            return (fontSize * scaleFactor);\n        }\n        else {\n            const value = parseFloat(fontSize);\n            const unit = fontSize.replace(/[\\d.\\s]/g, ''); // Remove all numbers, dots, spaces.\n            return `${value * scaleFactor}${unit}`;\n        }\n    }\n    /**\n     * @param weight a string (e.g., 'bold') or a number (e.g., 600 / semi-bold in the OpenType spec).\n     * @returns true if the font weight indicates bold.\n     */\n    static isBold(weight) {\n        if (!weight) {\n            return false;\n        }\n        else if (typeof weight === 'number') {\n            return weight >= 600;\n        }\n        else {\n            // a string can be 'bold' or '700'\n            const parsedWeight = parseInt(weight, 10);\n            if (isNaN(parsedWeight)) {\n                return weight.toLowerCase() === 'bold';\n            }\n            else {\n                return parsedWeight >= 600;\n            }\n        }\n    }\n    /**\n     * @param style\n     * @returns true if the font style indicates 'italic'.\n     */\n    static isItalic(style) {\n        if (!style) {\n            return false;\n        }\n        else {\n            return style.toLowerCase() === FontStyle.ITALIC;\n        }\n    }\n    /**\n     * @param fontName\n     * @param woffURL The absolute or relative URL to the woff file.\n     * @param includeWoff2 If true, we assume that a woff2 file is in\n     * the same folder as the woff file, and will append a `2` to the url.\n     */\n    // Support distributions of the typescript compiler that do not yet include the FontFace API declarations.\n    // eslint-disable-next-line\n    // @ts-ignore\n    static loadWebFont(fontName, woffURL, includeWoff2 = true) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const woff2URL = includeWoff2 ? `url(${woffURL}2) format('woff2'), ` : '';\n            const woff1URL = `url(${woffURL}) format('woff')`;\n            const woffURLs = woff2URL + woff1URL;\n            // eslint-disable-next-line\n            // @ts-ignore\n            const fontFace = new FontFace(fontName, woffURLs);\n            yield fontFace.load();\n            // eslint-disable-next-line\n            // @ts-ignore\n            document.fonts.add(fontFace);\n            return fontFace;\n        });\n    }\n    /**\n     * Load the web fonts that are used by ChordSymbol. For example, `flow.html` calls:\n     *   `await Vex.Flow.Font.loadWebFonts();`\n     * Alternatively, you may load web fonts with a stylesheet link (e.g., from Google Fonts),\n     * and a @font-face { font-family: ... } rule in your CSS.\n     * If you do not load either of these fonts, ChordSymbol will fall back to Times or Arial,\n     * depending on the current music engraving font.\n     *\n     * You can customize `Font.WEB_FONT_HOST` and `Font.WEB_FONT_FILES` to load different fonts\n     * for your app.\n     */\n    static loadWebFonts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const host = Font.WEB_FONT_HOST;\n            const files = Font.WEB_FONT_FILES;\n            for (const fontName in files) {\n                const fontPath = files[fontName];\n                Font.loadWebFont(fontName, host + fontPath);\n            }\n        });\n    }\n    /**\n     * @param fontName\n     * @param data optionally set the Font object's `.data` property.\n     *   This is usually done when setting up a font for the first time.\n     * @param metrics optionally set the Font object's `.metrics` property.\n     *   This is usually done when setting up a font for the first time.\n     * @returns a Font object with the given `fontName`.\n     *   Reuse an existing Font object if a matching one is found.\n     */\n    static load(fontName, data, metrics) {\n        let font = Fonts[fontName];\n        if (!font) {\n            font = new Font(fontName);\n            Fonts[fontName] = font;\n        }\n        if (data) {\n            font.setData(data);\n        }\n        if (metrics) {\n            font.setMetrics(metrics);\n        }\n        return font;\n    }\n    getName() {\n        return this.name;\n    }\n    getData() {\n        return defined(this.data, 'FontError', 'Missing font data');\n    }\n    getMetrics() {\n        return defined(this.metrics, 'FontError', 'Missing metrics');\n    }\n    setData(data) {\n        this.data = data;\n    }\n    setMetrics(metrics) {\n        this.metrics = metrics;\n    }\n    hasData() {\n        return this.data !== undefined;\n    }\n    getResolution() {\n        return this.getData().resolution;\n    }\n    getGlyphs() {\n        return this.getData().glyphs;\n    }\n    /**\n     * Use the provided key to look up a value in this font's metrics file (e.g., bravura_metrics.ts, petaluma_metrics.ts).\n     * @param key is a string separated by periods (e.g., stave.endPaddingMax, clef.lineCount.'5'.shiftY).\n     * @param defaultValue is returned if the lookup fails.\n     * @returns the retrieved value (or `defaultValue` if the lookup fails).\n     */\n    // eslint-disable-next-line\n    lookupMetric(key, defaultValue) {\n        const keyParts = key.split('.');\n        // Start with the top level font metrics object, and keep looking deeper into the object (via each part of the period-delimited key).\n        let currObj = this.getMetrics();\n        for (let i = 0; i < keyParts.length; i++) {\n            const keyPart = keyParts[i];\n            const value = currObj[keyPart];\n            if (value === undefined) {\n                // If the key lookup fails, we fall back to the defaultValue.\n                return defaultValue;\n            }\n            // The most recent lookup succeeded, so we drill deeper into the object.\n            currObj = value;\n        }\n        // After checking every part of the key (i.e., the loop completed), return the most recently retrieved value.\n        return currObj;\n    }\n    /** For debugging. */\n    toString() {\n        return '[' + this.name + ' Font]';\n    }\n}\n//////////////////////////////////////////////////////////////////////////////////////////////////\n// STATIC MEMBERS\n/** Default sans-serif font family. */\nFont.SANS_SERIF = 'Arial, sans-serif';\n/** Default serif font family. */\nFont.SERIF = 'Times New Roman, serif';\n/** Default font size in `pt`. */\nFont.SIZE = 10;\n// CSS Font Sizes: 36pt == 48px == 3em == 300% == 0.5in\n/** Given a length (for units: pt, px, em, %, in, mm, cm) what is the scale factor to convert it to px? */\nFont.scaleToPxFrom = {\n    pt: 4 / 3,\n    px: 1,\n    em: 16,\n    '%': 4 / 25,\n    in: 96,\n    mm: 96 / 25.4,\n    cm: 96 / 2.54,\n};\n/**\n * Customize this field to specify a different CDN for delivering web fonts.\n * Alternative: https://cdn.jsdelivr.net/npm/vexflow-fonts@1.0.3/\n * Or you can use your own host.\n */\nFont.WEB_FONT_HOST = 'https://unpkg.com/vexflow-fonts@1.0.3/';\n/**\n * These font files will be loaded from the CDN specified by `Font.WEB_FONT_HOST` when\n * `await Font.loadWebFonts()` is called. Customize this field to specify a different\n * set of fonts to load. See: `Font.loadWebFonts()`.\n */\nFont.WEB_FONT_FILES = {\n    'Roboto Slab': 'robotoslab/RobotoSlab-Medium_2.001.woff',\n    PetalumaScript: 'petaluma/PetalumaScript_1.10_FS.woff',\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a registry for VexFlow elements. It allows users\n// to track, query, and manage some subset of generated elements, and\n// dynamically get and set attributes.\n//\n// There are two ways to register with a registry:\n//\n// 1) Explicitly call `registry.register(elem:Element, id?:string)`, or,\n// 2) Call `Registry.enableDefaultRegistry(registry)` when ready, and all future\n//    elements will automatically register with it.\n//\n// Once an element is registered, selected attributes are tracked and indexed by\n// the registry. This allows fast look up of elements by attributes like id, type,\n// and class.\nimport { RuntimeError } from './util';\n// Indexes are represented as maps of maps of maps. This allows\n// for both multi-labeling (e.g., an element can have multiple classes)\n// and efficient lookup.\nclass Index {\n    constructor() {\n        this.id = {};\n        this.type = {};\n        this.class = {};\n    }\n}\nexport class Registry {\n    constructor() {\n        this.index = new Index();\n    }\n    static getDefaultRegistry() {\n        return Registry.defaultRegistry;\n    }\n    // If you call `enableDefaultRegistry`, any new elements will auto-register with\n    // the provided registry as soon as they're constructed.\n    static enableDefaultRegistry(registry) {\n        Registry.defaultRegistry = registry;\n    }\n    static disableDefaultRegistry() {\n        Registry.defaultRegistry = undefined;\n    }\n    clear() {\n        this.index = new Index();\n        return this;\n    }\n    setIndexValue(name, value, id, elem) {\n        const index = this.index;\n        if (!index[name][value]) {\n            index[name][value] = {};\n        }\n        index[name][value][id] = elem;\n    }\n    // Updates the indexes for element 'id'. If an element's attribute changes\n    // from A -> B, make sure to remove the element from A.\n    updateIndex({ id, name, value, oldValue }) {\n        const elem = this.getElementById(id);\n        if (oldValue !== undefined && this.index[name][oldValue]) {\n            delete this.index[name][oldValue][id];\n        }\n        if (value && elem) {\n            this.setIndexValue(name, value, elem.getAttribute('id'), elem);\n        }\n    }\n    /**\n     * Register element `elem` with this registry.\n     * This adds the element to its index and watches it for attribute changes.\n     * @param elem\n     * @param id\n     * @returns this\n     */\n    register(elem, id) {\n        id = id || elem.getAttribute('id');\n        if (!id) {\n            throw new RuntimeError(\"Can't add element without `id` attribute to registry\");\n        }\n        // Manually add id to index, then update other indexes.\n        elem.setAttribute('id', id);\n        this.setIndexValue('id', id, id, elem);\n        this.updateIndex({ id, name: 'type', value: elem.getAttribute('type'), oldValue: undefined });\n        elem.onRegister(this);\n        return this;\n    }\n    getElementById(id) {\n        var _a, _b;\n        return (_b = (_a = this.index.id) === null || _a === void 0 ? void 0 : _a[id]) === null || _b === void 0 ? void 0 : _b[id]; // return undefined if the id is not found.\n    }\n    getElementsByAttribute(attribute, value) {\n        const index_attr = this.index[attribute];\n        if (index_attr) {\n            const index_attr_val = index_attr[value];\n            if (index_attr_val) {\n                const keys = Object.keys(index_attr_val);\n                return keys.map((k) => index_attr_val[k]);\n            }\n        }\n        return [];\n    }\n    getElementsByType(type) {\n        return this.getElementsByAttribute('type', type);\n    }\n    getElementsByClass(className) {\n        return this.getElementsByAttribute('class', className);\n    }\n    // This is called by the element when an attribute value changes. If an indexed\n    // attribute changes, then update the local index.\n    onUpdate(info) {\n        const allowedNames = ['id', 'type', 'class'];\n        if (allowedNames.includes(info.name)) {\n            this.updateIndex(info);\n        }\n        return this;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n// MIT License\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Registry } from './registry';\nimport { Category } from './typeguard';\nimport { defined } from './util';\n/**\n * Element implements a generic base class for VexFlow, with implementations\n * of general functions and properties that can be inherited by all VexFlow elements.\n */\nexport class Element {\n    constructor() {\n        var _a;\n        this.attrs = {\n            id: Element.newID(),\n            el: undefined,\n            type: this.getCategory(),\n            classes: {},\n        };\n        this.rendered = false;\n        // If a default registry exist, then register with it right away.\n        (_a = Registry.getDefaultRegistry()) === null || _a === void 0 ? void 0 : _a.register(this);\n    }\n    static get CATEGORY() {\n        return Category.Element;\n    }\n    static newID() {\n        return `auto${Element.ID++}`;\n    }\n    /** Get element category string. */\n    getCategory() {\n        return this.constructor.CATEGORY;\n    }\n    /**\n     * Set the element style used to render.\n     *\n     * Example:\n     * ```typescript\n     * element.setStyle({ fillStyle: 'red', strokeStyle: 'red' });\n     * element.draw();\n     * ```\n     * Note: If the element draws additional sub-elements (ie.: Modifiers in a Stave),\n     * the style can be applied to all of them by means of the context:\n     * ```typescript\n     * element.setStyle({ fillStyle: 'red', strokeStyle: 'red' });\n     * element.getContext().setFillStyle('red');\n     * element.getContext().setStrokeStyle('red');\n     * element.draw();\n     * ```\n     * or using drawWithStyle:\n     * ```typescript\n     * element.setStyle({ fillStyle: 'red', strokeStyle: 'red' });\n     * element.drawWithStyle();\n     * ```\n     */\n    setStyle(style) {\n        this.style = style;\n        return this;\n    }\n    /** Get the element style used for rendering. */\n    getStyle() {\n        return this.style;\n    }\n    /** Apply the element style to `context`. */\n    applyStyle(context = this.context, style = this.getStyle()) {\n        if (!style)\n            return this;\n        if (!context)\n            return this;\n        context.save();\n        if (style.shadowColor)\n            context.setShadowColor(style.shadowColor);\n        if (style.shadowBlur)\n            context.setShadowBlur(style.shadowBlur);\n        if (style.fillStyle)\n            context.setFillStyle(style.fillStyle);\n        if (style.strokeStyle)\n            context.setStrokeStyle(style.strokeStyle);\n        if (style.lineWidth)\n            context.setLineWidth(style.lineWidth);\n        return this;\n    }\n    /** Restore the style of `context`. */\n    restoreStyle(context = this.context, style = this.getStyle()) {\n        if (!style)\n            return this;\n        if (!context)\n            return this;\n        context.restore();\n        return this;\n    }\n    /**\n     * Draw the element and all its sub-elements (ie.: Modifiers in a Stave)\n     * with the element style.\n     */\n    drawWithStyle() {\n        this.checkContext();\n        this.applyStyle();\n        this.draw();\n        this.restoreStyle();\n    }\n    /** Check if it has a class label (An element can have multiple class labels).  */\n    hasClass(className) {\n        return this.attrs.classes[className] === true;\n    }\n    /** Add a class label (An element can have multiple class labels).  */\n    addClass(className) {\n        var _a;\n        this.attrs.classes[className] = true;\n        (_a = this.registry) === null || _a === void 0 ? void 0 : _a.onUpdate({\n            id: this.attrs.id,\n            name: 'class',\n            value: className,\n            oldValue: undefined,\n        });\n        return this;\n    }\n    /** Remove a class label (An element can have multiple class labels).  */\n    removeClass(className) {\n        var _a;\n        delete this.attrs.classes[className];\n        (_a = this.registry) === null || _a === void 0 ? void 0 : _a.onUpdate({\n            id: this.attrs.id,\n            name: 'class',\n            value: undefined,\n            oldValue: className,\n        });\n        return this;\n    }\n    /** Call back from registry after the element is registered. */\n    onRegister(registry) {\n        this.registry = registry;\n        return this;\n    }\n    /** Return the rendered status. */\n    isRendered() {\n        return this.rendered;\n    }\n    /** Set the rendered status. */\n    setRendered(rendered = true) {\n        this.rendered = rendered;\n        return this;\n    }\n    /** Return the element attributes. */\n    getAttributes() {\n        return this.attrs;\n    }\n    /** Return an attribute. */\n    // eslint-disable-next-line\n    getAttribute(name) {\n        return this.attrs[name];\n    }\n    /** Set an attribute. */\n    // eslint-disable-next-line\n    setAttribute(name, value) {\n        var _a;\n        const oldID = this.attrs.id;\n        const oldValue = this.attrs[name];\n        this.attrs[name] = value;\n        // Register with old id to support id changes.\n        (_a = this.registry) === null || _a === void 0 ? void 0 : _a.onUpdate({ id: oldID, name, value, oldValue });\n        return this;\n    }\n    /** Get the boundingBox. */\n    getBoundingBox() {\n        return this.boundingBox;\n    }\n    /** Return the context. */\n    getContext() {\n        return this.context;\n    }\n    /** Set the context. */\n    setContext(context) {\n        this.context = context;\n        return this;\n    }\n    /** Validate and return the context. */\n    checkContext() {\n        return defined(this.context, 'NoContext', 'No rendering context attached to instance.');\n    }\n    //////////////////////////////////////////////////////////////////////////////////////////////////\n    // Font Handling\n    /**\n     * Provide a CSS compatible font string (e.g., 'bold 16px Arial').\n     */\n    set font(f) {\n        this.setFont(f);\n    }\n    /** Returns the CSS compatible font string. */\n    get font() {\n        return Font.toCSSString(this.textFont);\n    }\n    /**\n     * Set the element's font family, size, weight, style (e.g., `Arial`, `10pt`, `bold`, `italic`).\n     * @param font is 1) a `FontInfo` object or\n     *                2) a string formatted as CSS font shorthand (e.g., 'bold 10pt Arial') or\n     *                3) a string representing the font family (at least one of `size`, `weight`, or `style` must also be provided).\n     * @param size a string specifying the font size and unit (e.g., '16pt'), or a number (the unit is assumed to be 'pt').\n     * @param weight is a string (e.g., 'bold', 'normal') or a number (100, 200, ... 900).\n     * @param style is a string (e.g., 'italic', 'normal').\n     * If no arguments are provided, then the font is set to the default font.\n     * Each Element subclass may specify its own default by overriding the static `TEXT_FONT` property.\n     */\n    setFont(font, size, weight, style) {\n        // Allow subclasses to override `TEXT_FONT`.\n        const defaultTextFont = this.constructor.TEXT_FONT;\n        const fontIsObject = typeof font === 'object';\n        const fontIsString = typeof font === 'string';\n        const fontIsUndefined = font === undefined;\n        const sizeWeightStyleAreUndefined = size === undefined && weight === undefined && style === undefined;\n        if (fontIsObject) {\n            // `font` is case 1) a FontInfo object\n            this.textFont = Object.assign(Object.assign({}, defaultTextFont), font);\n        }\n        else if (fontIsString && sizeWeightStyleAreUndefined) {\n            // `font` is case 2) CSS font shorthand.\n            this.textFont = Font.fromCSSString(font);\n        }\n        else if (fontIsUndefined && sizeWeightStyleAreUndefined) {\n            // All arguments are undefined. Do not check for `arguments.length === 0`,\n            // which fails on the edge case: `setFont(undefined)`.\n            // TODO: See if we can remove this case entirely without introducing a visual diff.\n            // The else case below seems like it should be equivalent to this case.\n            this.textFont = Object.assign({}, defaultTextFont);\n        }\n        else {\n            // `font` is case 3) a font family string (e.g., 'Times New Roman').\n            // The other parameters represent the size, weight, and style.\n            // It is okay for `font` to be undefined while one or more of the other arguments is provided.\n            // Following CSS conventions, unspecified params are reset to the default.\n            this.textFont = Font.validate(font !== null && font !== void 0 ? font : defaultTextFont.family, size !== null && size !== void 0 ? size : defaultTextFont.size, weight !== null && weight !== void 0 ? weight : defaultTextFont.weight, style !== null && style !== void 0 ? style : defaultTextFont.style);\n        }\n        return this;\n    }\n    getFont() {\n        if (!this.textFont) {\n            this.resetFont();\n        }\n        return Font.toCSSString(this.textFont);\n    }\n    /**\n     * Reset the text font to the style indicated by the static `TEXT_FONT` property.\n     * Subclasses can call this to initialize `textFont` for the first time.\n     */\n    resetFont() {\n        this.setFont();\n    }\n    /** Return a copy of the current FontInfo object. */\n    get fontInfo() {\n        if (!this.textFont) {\n            this.resetFont();\n        }\n        // We can cast to Required<FontInfo> here, because\n        // we just called resetFont() above to ensure this.textFont is set.\n        return Object.assign({}, this.textFont);\n    }\n    set fontInfo(fontInfo) {\n        this.setFont(fontInfo);\n    }\n    /** Change the font size, while keeping everything else the same. */\n    setFontSize(size) {\n        const fontInfo = this.fontInfo;\n        this.setFont(fontInfo.family, size, fontInfo.weight, fontInfo.style);\n        return this;\n    }\n    /**\n     * @returns a CSS font-size string (e.g., '18pt', '12px', '1em').\n     * See Element.fontSizeInPixels or Element.fontSizeInPoints if you need to get a number for calculation purposes.\n     */\n    getFontSize() {\n        return this.fontSize;\n    }\n    /**\n     * The size is 1) a string of the form '10pt' or '16px', compatible with the CSS font-size property.\n     *          or 2) a number, which is interpreted as a point size (i.e. 12 == '12pt').\n     */\n    set fontSize(size) {\n        this.setFontSize(size);\n    }\n    /**\n     * @returns a CSS font-size string (e.g., '18pt', '12px', '1em').\n     */\n    get fontSize() {\n        let size = this.fontInfo.size;\n        if (typeof size === 'number') {\n            size = `${size}pt`;\n        }\n        return size;\n    }\n    /**\n     * @returns the font size in `pt`.\n     */\n    get fontSizeInPoints() {\n        return Font.convertSizeToPointValue(this.fontSize);\n    }\n    /**\n     * @returns the font size in `px`.\n     */\n    get fontSizeInPixels() {\n        return Font.convertSizeToPixelValue(this.fontSize);\n    }\n    /**\n     * @returns a CSS font-style string (e.g., 'italic').\n     */\n    get fontStyle() {\n        return this.fontInfo.style;\n    }\n    set fontStyle(style) {\n        const fontInfo = this.fontInfo;\n        this.setFont(fontInfo.family, fontInfo.size, fontInfo.weight, style);\n    }\n    /**\n     * @returns a CSS font-weight string (e.g., 'bold').\n     * As in CSS, font-weight is always returned as a string, even if it was set as a number.\n     */\n    get fontWeight() {\n        return this.fontInfo.weight + '';\n    }\n    set fontWeight(weight) {\n        const fontInfo = this.fontInfo;\n        this.setFont(fontInfo.family, fontInfo.size, weight, fontInfo.style);\n    }\n}\nElement.ID = 1000;\n/**\n * Default font for text. This is not related to music engraving. Instead, see `Flow.setMusicFont(...fontNames)`\n * to customize the font for musical symbols placed on the score.\n */\nElement.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: Font.SIZE,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { BoundingBox } from './boundingbox';\nimport { BoundingBoxComputation } from './boundingboxcomputation';\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\nexport var OutlineCode;\n(function (OutlineCode) {\n    OutlineCode[OutlineCode[\"MOVE\"] = 0] = \"MOVE\";\n    OutlineCode[OutlineCode[\"LINE\"] = 1] = \"LINE\";\n    OutlineCode[OutlineCode[\"QUADRATIC\"] = 2] = \"QUADRATIC\";\n    OutlineCode[OutlineCode[\"BEZIER\"] = 3] = \"BEZIER\";\n})(OutlineCode || (OutlineCode = {}));\nclass GlyphCacheEntry {\n    constructor(fontStack, code, category) {\n        this.point = -1;\n        this.metrics = Glyph.loadMetrics(fontStack, code, category);\n        this.bbox = Glyph.getOutlineBoundingBox(this.metrics.outline, this.metrics.scale, this.metrics.x_shift, this.metrics.y_shift);\n        if (category) {\n            this.point = Glyph.lookupFontMetric(this.metrics.font, category, code, 'point', -1);\n        }\n    }\n}\nclass GlyphCache {\n    constructor() {\n        this.cache = new Map();\n    }\n    lookup(code, category) {\n        let entries = this.cache.get(Glyph.CURRENT_CACHE_KEY);\n        if (entries === undefined) {\n            entries = {};\n            this.cache.set(Glyph.CURRENT_CACHE_KEY, entries);\n        }\n        const key = category ? `${code}%${category}` : code;\n        let entry = entries[key];\n        if (entry === undefined) {\n            entry = new GlyphCacheEntry(Glyph.MUSIC_FONT_STACK, code, category);\n            entries[key] = entry;\n        }\n        return entry;\n    }\n}\nclass GlyphOutline {\n    constructor(outline, originX, originY, scale) {\n        this.outline = outline;\n        this.originX = originX;\n        this.originY = originY;\n        this.scale = scale;\n        this.i = 0;\n        // Automatically assign private properties: this.outline, this.originX, this.originY, and this.scale.\n    }\n    done() {\n        return this.i >= this.outline.length;\n    }\n    next() {\n        return this.outline[this.i++];\n    }\n    nextX() {\n        return this.originX + this.outline[this.i++] * this.scale;\n    }\n    nextY() {\n        return this.originY - this.outline[this.i++] * this.scale;\n    }\n    static parse(str) {\n        const result = [];\n        const parts = str.split(' ');\n        let i = 0;\n        while (i < parts.length) {\n            switch (parts[i++]) {\n                case 'm':\n                    result.push(OutlineCode.MOVE, parseInt(parts[i++]), parseInt(parts[i++]));\n                    break;\n                case 'l':\n                    result.push(OutlineCode.LINE, parseInt(parts[i++]), parseInt(parts[i++]));\n                    break;\n                case 'q':\n                    result.push(OutlineCode.QUADRATIC, parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]));\n                    break;\n                case 'b':\n                    result.push(OutlineCode.BEZIER, parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]));\n                    break;\n            }\n        }\n        return result;\n    }\n}\nexport class Glyph extends Element {\n    /**\n     * @param code\n     * @param point\n     * @param options\n     */\n    constructor(code, point, options) {\n        super();\n        //////////////////////////////////////////////////////////////////////////////////////////////////\n        // INSTANCE MEMBERS\n        this.bbox = new BoundingBox(0, 0, 0, 0);\n        this.topGlyphs = [];\n        this.botGlyphs = [];\n        this.options = {};\n        this.scale = 1;\n        this.code = code;\n        this.point = point;\n        this.originShift = { x: 0, y: 0 };\n        this.x_shift = 0;\n        this.y_shift = 0;\n        if (options) {\n            this.setOptions(options);\n        }\n        else {\n            this.reset();\n        }\n    }\n    //////////////////////////////////////////////////////////////////////////////////////////////////\n    // STATIC MEMBERS\n    static get CATEGORY() {\n        return Category.Glyph;\n    }\n    /**\n     * Pass a key of the form `glyphs.{category}.{code}.{key}` to Font.lookupMetric(). If the initial lookup fails,\n     * try again with the path `glyphs.{category}.{key}`. If the second lookup fails, return the defaultValue.\n     *\n     * @param font\n     * @param category any metric path under 'glyphs', so 'stem.up' could resolve to glyphs.stem.up.shiftX, glyphs.stem.up.shiftY, etc.\n     * @param code\n     * @param key\n     * @param defaultValue\n     */\n    static lookupFontMetric(font, category, code, key, defaultValue) {\n        let value = font.lookupMetric(`glyphs.${category}.${code}.${key}`, undefined);\n        if (value === undefined) {\n            // The first lookup failed, so we omit .${code} and try again (with a defaultValue this time).\n            value = font.lookupMetric(`glyphs.${category}.${key}`, defaultValue);\n        }\n        return value;\n    }\n    static lookupGlyph(fontStack, code) {\n        defined(fontStack, 'BadFontStack', 'Font stack is misconfigured');\n        let glyph;\n        let font;\n        for (let i = 0; i < fontStack.length; i++) {\n            font = fontStack[i];\n            glyph = font.getGlyphs()[code];\n            if (glyph)\n                return { glyph, font };\n        }\n        throw new RuntimeError('BadGlyph', `Glyph ${code} does not exist in font.`);\n    }\n    static loadMetrics(fontStack, code, category) {\n        const { glyph, font } = Glyph.lookupGlyph(fontStack, code);\n        if (!glyph.o)\n            throw new RuntimeError('BadGlyph', `Glyph ${code} has no outline defined.`);\n        let x_shift = 0;\n        let y_shift = 0;\n        let scale = 1;\n        if (category && font) {\n            x_shift = Glyph.lookupFontMetric(font, category, code, 'shiftX', 0);\n            y_shift = Glyph.lookupFontMetric(font, category, code, 'shiftY', 0);\n            scale = Glyph.lookupFontMetric(font, category, code, 'scale', 1);\n        }\n        const x_min = glyph.x_min;\n        const x_max = glyph.x_max;\n        const ha = glyph.ha;\n        if (!glyph.cached_outline) {\n            glyph.cached_outline = GlyphOutline.parse(glyph.o);\n        }\n        return {\n            x_min,\n            x_max,\n            x_shift,\n            y_shift,\n            scale,\n            ha,\n            outline: glyph.cached_outline,\n            font,\n            width: x_max - x_min,\n            height: ha,\n        };\n    }\n    /**\n     * Renders glyphs from the default font stack.\n     *\n     * @param ctx Canvas or SVG context\n     * @param x_pos x coordinate\n     * @param y_pos y coordinate\n     * @param point the point size of the font\n     * @param code the glyph code in font.getGlyphs()\n     * @param options\n     * @returns\n     */\n    static renderGlyph(ctx, x_pos, y_pos, point, code, options) {\n        var _a;\n        const data = Glyph.cache.lookup(code, options === null || options === void 0 ? void 0 : options.category);\n        const metrics = data.metrics;\n        if (data.point != -1) {\n            point = data.point;\n        }\n        const customScale = (_a = options === null || options === void 0 ? void 0 : options.scale) !== null && _a !== void 0 ? _a : 1;\n        const scale = ((point * 72.0) / (metrics.font.getResolution() * 100.0)) * metrics.scale * customScale;\n        Glyph.renderOutline(ctx, metrics.outline, scale, x_pos + metrics.x_shift * customScale, y_pos + metrics.y_shift * customScale);\n        return metrics;\n    }\n    static renderOutline(ctx, outline, scale, x_pos, y_pos) {\n        const go = new GlyphOutline(outline, x_pos, y_pos, scale);\n        ctx.beginPath();\n        let x, y;\n        while (!go.done()) {\n            switch (go.next()) {\n                case OutlineCode.MOVE:\n                    ctx.moveTo(go.nextX(), go.nextY());\n                    break;\n                case OutlineCode.LINE:\n                    ctx.lineTo(go.nextX(), go.nextY());\n                    break;\n                case OutlineCode.QUADRATIC:\n                    x = go.nextX();\n                    y = go.nextY();\n                    ctx.quadraticCurveTo(go.nextX(), go.nextY(), x, y);\n                    break;\n                case OutlineCode.BEZIER:\n                    x = go.nextX();\n                    y = go.nextY();\n                    ctx.bezierCurveTo(go.nextX(), go.nextY(), go.nextX(), go.nextY(), x, y);\n                    break;\n            }\n        }\n        ctx.fill();\n    }\n    static getOutlineBoundingBox(outline, scale, x_pos, y_pos) {\n        const go = new GlyphOutline(outline, x_pos, y_pos, scale);\n        const bboxComp = new BoundingBoxComputation();\n        // (penX, penY) hold the pen position: the start of each stroke.\n        let penX = x_pos;\n        let penY = y_pos;\n        let x, y;\n        while (!go.done()) {\n            switch (go.next()) {\n                case OutlineCode.MOVE:\n                    // Note that we don't add any points to the bounding box until a srroke is actually drawn.\n                    penX = go.nextX();\n                    penY = go.nextY();\n                    break;\n                case OutlineCode.LINE:\n                    bboxComp.addPoint(penX, penY);\n                    penX = go.nextX();\n                    penY = go.nextY();\n                    bboxComp.addPoint(penX, penY);\n                    break;\n                case OutlineCode.QUADRATIC:\n                    x = go.nextX();\n                    y = go.nextY();\n                    bboxComp.addQuadraticCurve(penX, penY, go.nextX(), go.nextY(), x, y);\n                    penX = x;\n                    penY = y;\n                    break;\n                case OutlineCode.BEZIER:\n                    x = go.nextX();\n                    y = go.nextY();\n                    bboxComp.addBezierCurve(penX, penY, go.nextX(), go.nextY(), go.nextX(), go.nextY(), x, y);\n                    penX = x;\n                    penY = y;\n                    break;\n            }\n        }\n        return new BoundingBox(bboxComp.getX1(), bboxComp.getY1(), bboxComp.width(), bboxComp.height());\n    }\n    static getWidth(code, point, category) {\n        const data = Glyph.cache.lookup(code, category);\n        if (data.point != -1) {\n            point = data.point;\n        }\n        const scale = (point * 72) / (data.metrics.font.getResolution() * 100);\n        return data.bbox.getW() * scale;\n    }\n    // eslint-disable-next-line\n    draw(...args) {\n        // DO NOTHING.\n    }\n    getCode() {\n        return this.code;\n    }\n    // eslint-disable-next-line\n    setOptions(options) {\n        this.options = Object.assign(Object.assign({}, this.options), options);\n        this.reset();\n    }\n    setPoint(point) {\n        this.point = point;\n        return this;\n    }\n    setStave(stave) {\n        this.stave = stave;\n        return this;\n    }\n    getXShift() {\n        return this.x_shift;\n    }\n    setXShift(x_shift) {\n        this.x_shift = x_shift;\n        return this;\n    }\n    getYshift() {\n        return this.y_shift;\n    }\n    setYShift(y_shift) {\n        this.y_shift = y_shift;\n        return this;\n    }\n    reset() {\n        const data = Glyph.cache.lookup(this.code, this.options.category);\n        this.metrics = data.metrics;\n        // Override point from metrics file\n        if (data.point != -1) {\n            this.point = data.point;\n        }\n        this.scale = (this.point * 72) / (this.metrics.font.getResolution() * 100);\n        this.bbox = new BoundingBox(data.bbox.getX() * this.scale, data.bbox.getY() * this.scale, data.bbox.getW() * this.scale, data.bbox.getH() * this.scale);\n    }\n    checkMetrics() {\n        return defined(this.metrics, 'BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n    getMetrics() {\n        const metrics = this.checkMetrics();\n        const metricsScale = metrics.scale;\n        return {\n            x_min: metrics.x_min * this.scale * metricsScale,\n            x_max: metrics.x_max * this.scale * metricsScale,\n            width: this.bbox.getW(),\n            height: this.bbox.getH(),\n            scale: this.scale * metricsScale,\n            x_shift: metrics.x_shift,\n            y_shift: metrics.y_shift,\n            outline: metrics.outline,\n            font: metrics.font,\n            ha: metrics.ha,\n        };\n    }\n    setOriginX(x) {\n        const { bbox } = this;\n        const originX = Math.abs(bbox.getX() / bbox.getW());\n        const xShift = (x - originX) * bbox.getW();\n        this.originShift.x = -xShift;\n    }\n    setOriginY(y) {\n        const { bbox } = this;\n        const originY = Math.abs(bbox.getY() / bbox.getH());\n        const yShift = (y - originY) * bbox.getH();\n        this.originShift.y = -yShift;\n    }\n    setOrigin(x, y) {\n        this.setOriginX(x);\n        this.setOriginY(y);\n    }\n    render(ctx, x, y) {\n        const metrics = this.checkMetrics();\n        const outline = metrics.outline;\n        const scale = this.scale * metrics.scale;\n        this.setRendered();\n        this.applyStyle(ctx);\n        const xPos = x + this.originShift.x + metrics.x_shift;\n        const yPos = y + this.originShift.y + metrics.y_shift;\n        Glyph.renderOutline(ctx, outline, scale, xPos, yPos);\n        this.restoreStyle(ctx);\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    renderToStave(x) {\n        const context = this.checkContext();\n        const metrics = this.checkMetrics();\n        const stave = this.checkStave();\n        const outline = metrics.outline;\n        const scale = this.scale * metrics.scale;\n        this.setRendered();\n        this.applyStyle();\n        const xPos = x + this.x_shift + metrics.x_shift;\n        const yPos = stave.getYForGlyphs() + this.y_shift + metrics.y_shift;\n        Glyph.renderOutline(context, outline, scale, xPos, yPos);\n        this.restoreStyle();\n    }\n}\nGlyph.cache = new GlyphCache();\n// The current cache key for GlyphCache above.\n// Computed when Flow.setMusicFont(...) is called.\n// It is set to a comma separated list of font names.\nGlyph.CURRENT_CACHE_KEY = '';\n// Used by the GlyphCache above.\n// Set when Flow.setMusicFont(...) is called.\nGlyph.MUSIC_FONT_STACK = [];\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\nexport var ModifierPosition;\n(function (ModifierPosition) {\n    ModifierPosition[ModifierPosition[\"CENTER\"] = 0] = \"CENTER\";\n    ModifierPosition[ModifierPosition[\"LEFT\"] = 1] = \"LEFT\";\n    ModifierPosition[ModifierPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n    ModifierPosition[ModifierPosition[\"ABOVE\"] = 3] = \"ABOVE\";\n    ModifierPosition[ModifierPosition[\"BELOW\"] = 4] = \"BELOW\";\n})(ModifierPosition || (ModifierPosition = {}));\n// To enable logging for this class. Set `Vex.Flow.Modifier.DEBUG` to `true`.\n// function L(...args) { if (Modifier.DEBUG) log('Vex.Flow.Modifier', args); }\n/**\n * `Modifier` is an abstract interface for notational elements that modify\n * a `Note`. Examples of modifiers are `Accidental`, `Annotation`, `Stroke`, etc.\n *\n * For a `Modifier` instance to be positioned correctly, it must be part of\n * a `ModifierContext`. All modifiers in the same context are rendered relative to\n * one another.\n *\n * Typically, all modifiers to a note are part of the same `ModifierContext` instance. Also,\n * in multi-voice staves, all modifiers to notes on the same `tick` are part of the same\n * `ModifierContext`. This ensures that multiple voices don't trample all over each other.\n */\nexport class Modifier extends Element {\n    constructor() {\n        super();\n        this.width = 0;\n        // The `text_line` is reserved space above or below a stave.\n        this.text_line = 0;\n        this.position = Modifier.Position.LEFT;\n        this.x_shift = 0;\n        this.y_shift = 0;\n        this.spacingFromNextModifier = 0;\n    }\n    /**\n     * Modifiers category string. Every modifier has a different category.\n     * The `ModifierContext` uses this to determine the type and order of the modifiers.\n     */\n    static get CATEGORY() {\n        return Category.Modifier;\n    }\n    /** Modifiers can be positioned almost anywhere, relative to a note. */\n    static get Position() {\n        return ModifierPosition;\n    }\n    static get PositionString() {\n        return {\n            center: ModifierPosition.CENTER,\n            above: ModifierPosition.ABOVE,\n            below: ModifierPosition.BELOW,\n            left: ModifierPosition.LEFT,\n            right: ModifierPosition.RIGHT,\n        };\n    }\n    /** Called when position changes. */\n    reset() {\n        // DO NOTHING.\n    }\n    /** Get modifier widths. */\n    getWidth() {\n        return this.width;\n    }\n    /** Set modifier widths. */\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    /** Get attached note (`StaveNote`, `TabNote`, etc.) */\n    getNote() {\n        return defined(this.note, 'NoNote', 'Modifier has no note.');\n    }\n    /**\n     * Used in draw() to check and get the attached note (`StaveNote`, `TabNote`, etc.).\n     * Also verifies that the index is valid.\n     */\n    checkAttachedNote() {\n        const category = this.getCategory();\n        defined(this.index, 'NoIndex', `Can't draw ${category} without an index.`);\n        return defined(this.note, 'NoNote', `Can't draw ${category} without a note.`);\n    }\n    /**\n     * Set attached note.\n     * @param note (`StaveNote`, `TabNote`, etc.)\n     */\n    setNote(note) {\n        this.note = note;\n        return this;\n    }\n    /** Get note index, which is a specific note in a chord. */\n    getIndex() {\n        return this.index;\n    }\n    /** Check and get note index, which is a specific note in a chord. */\n    checkIndex() {\n        return defined(this.index, 'NoIndex', 'Modifier has an invalid index.');\n    }\n    /** Set note index, which is a specific note in a chord. */\n    setIndex(index) {\n        this.index = index;\n        return this;\n    }\n    /** Get `ModifierContext`. */\n    getModifierContext() {\n        return this.modifierContext;\n    }\n    /** Check and get `ModifierContext`. */\n    checkModifierContext() {\n        return defined(this.modifierContext, 'NoModifierContext', 'Modifier Context Required');\n    }\n    /** Every modifier must be part of a `ModifierContext`. */\n    setModifierContext(c) {\n        this.modifierContext = c;\n        return this;\n    }\n    /** Get position. */\n    getPosition() {\n        return this.position;\n    }\n    /**\n     * Set position.\n     * @param position CENTER | LEFT | RIGHT | ABOVE | BELOW\n     */\n    setPosition(position) {\n        this.position = typeof position === 'string' ? Modifier.PositionString[position] : position;\n        this.reset();\n        return this;\n    }\n    /** Set the `text_line` for the modifier. */\n    setTextLine(line) {\n        this.text_line = line;\n        return this;\n    }\n    /** Shift modifier down `y` pixels. Negative values shift up. */\n    setYShift(y) {\n        this.y_shift = y;\n        return this;\n    }\n    /** Set spacing from next modifier. */\n    setSpacingFromNextModifier(x) {\n        this.spacingFromNextModifier = x;\n    }\n    /** Get spacing from next modifier. */\n    getSpacingFromNextModifier() {\n        return this.spacingFromNextModifier;\n    }\n    /**\n     * Shift modifier `x` pixels in the direction of the modifier. Negative values\n     * shift reverse.\n     */\n    setXShift(x) {\n        this.x_shift = 0;\n        if (this.position === Modifier.Position.LEFT) {\n            this.x_shift -= x;\n        }\n        else {\n            this.x_shift += x;\n        }\n        return this;\n    }\n    /** Get shift modifier `x` */\n    getXShift() {\n        return this.x_shift;\n    }\n    /** Render the modifier onto the canvas. */\n    draw() {\n        this.checkContext();\n        throw new RuntimeError('NotImplemented', 'draw() not implemented for this modifier.');\n    }\n    // aligns sub notes of NoteSubGroup (or GraceNoteGroup) to the main note with correct x-offset\n    alignSubNotesWithNote(subNotes, note) {\n        // Shift over the tick contexts of each note\n        const tickContext = note.getTickContext();\n        const metrics = tickContext.getMetrics();\n        const stave = note.getStave();\n        const subNoteXOffset = tickContext.getX() - metrics.modLeftPx - metrics.modRightPx + this.getSpacingFromNextModifier();\n        subNotes.forEach((subNote) => {\n            const subTickContext = subNote.getTickContext();\n            if (stave)\n                subNote.setStave(stave);\n            subTickContext.setXOffset(subNoteXOffset); // don't touch baseX to avoid shift each render\n        });\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { RuntimeError } from './util';\n/** Music implements some standard music theory routines. */\nexport class Music {\n    /** Number of an canonical notes (12). */\n    static get NUM_TONES() {\n        return this.canonical_notes.length;\n    }\n    /** Names of root notes ('c', 'd',...) */\n    static get roots() {\n        return ['c', 'd', 'e', 'f', 'g', 'a', 'b'];\n    }\n    /** Values of the root notes.*/\n    static get root_values() {\n        return [0, 2, 4, 5, 7, 9, 11];\n    }\n    /** Indices of the root notes.*/\n    static get root_indices() {\n        return {\n            c: 0,\n            d: 1,\n            e: 2,\n            f: 3,\n            g: 4,\n            a: 5,\n            b: 6,\n        };\n    }\n    /** Names of canonical notes ('c', 'c#', 'd',...). */\n    static get canonical_notes() {\n        return ['c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#', 'a', 'a#', 'b'];\n    }\n    /** Names of diatonic intervals ('unison', 'm2', 'M2',...). */\n    static get diatonic_intervals() {\n        return ['unison', 'm2', 'M2', 'm3', 'M3', 'p4', 'dim5', 'p5', 'm6', 'M6', 'b7', 'M7', 'octave'];\n    }\n    /** NoteAccidental associated to diatonic intervals. */\n    static get diatonic_accidentals() {\n        return {\n            unison: { note: 0, accidental: 0 },\n            m2: { note: 1, accidental: -1 },\n            M2: { note: 1, accidental: 0 },\n            m3: { note: 2, accidental: -1 },\n            M3: { note: 2, accidental: 0 },\n            p4: { note: 3, accidental: 0 },\n            dim5: { note: 4, accidental: -1 },\n            p5: { note: 4, accidental: 0 },\n            m6: { note: 5, accidental: -1 },\n            M6: { note: 5, accidental: 0 },\n            b7: { note: 6, accidental: -1 },\n            M7: { note: 6, accidental: 0 },\n            octave: { note: 7, accidental: 0 },\n        };\n    }\n    /** Semitones shift associated to intervals .*/\n    static get intervals() {\n        return {\n            u: 0,\n            unison: 0,\n            m2: 1,\n            b2: 1,\n            min2: 1,\n            S: 1,\n            H: 1,\n            2: 2,\n            M2: 2,\n            maj2: 2,\n            T: 2,\n            W: 2,\n            m3: 3,\n            b3: 3,\n            min3: 3,\n            M3: 4,\n            3: 4,\n            maj3: 4,\n            4: 5,\n            p4: 5,\n            '#4': 6,\n            b5: 6,\n            aug4: 6,\n            dim5: 6,\n            5: 7,\n            p5: 7,\n            '#5': 8,\n            b6: 8,\n            aug5: 8,\n            6: 9,\n            M6: 9,\n            maj6: 9,\n            b7: 10,\n            m7: 10,\n            min7: 10,\n            dom7: 10,\n            M7: 11,\n            maj7: 11,\n            8: 12,\n            octave: 12,\n        };\n    }\n    /** Semitones shifts associated with scales. */\n    static get scales() {\n        return {\n            major: [2, 2, 1, 2, 2, 2, 1],\n            minor: [2, 1, 2, 2, 1, 2, 2],\n            ionian: [2, 2, 1, 2, 2, 2, 1],\n            dorian: [2, 1, 2, 2, 2, 1, 2],\n            phyrgian: [1, 2, 2, 2, 1, 2, 2],\n            lydian: [2, 2, 2, 1, 2, 2, 1],\n            mixolydian: [2, 2, 1, 2, 2, 1, 2],\n            aeolian: [2, 1, 2, 2, 1, 2, 2],\n            locrian: [1, 2, 2, 1, 2, 2, 2],\n        };\n    }\n    /** Scales associated with m (minor) and M (major). */\n    static get scaleTypes() {\n        return {\n            M: Music.scales.major,\n            m: Music.scales.minor,\n        };\n    }\n    /** Accidentals abbreviations. */\n    static get accidentals() {\n        return ['bb', 'b', 'n', '#', '##'];\n    }\n    /** Note values. */\n    static get noteValues() {\n        return {\n            c: { root_index: 0, int_val: 0 },\n            cn: { root_index: 0, int_val: 0 },\n            'c#': { root_index: 0, int_val: 1 },\n            'c##': { root_index: 0, int_val: 2 },\n            cb: { root_index: 0, int_val: 11 },\n            cbb: { root_index: 0, int_val: 10 },\n            d: { root_index: 1, int_val: 2 },\n            dn: { root_index: 1, int_val: 2 },\n            'd#': { root_index: 1, int_val: 3 },\n            'd##': { root_index: 1, int_val: 4 },\n            db: { root_index: 1, int_val: 1 },\n            dbb: { root_index: 1, int_val: 0 },\n            e: { root_index: 2, int_val: 4 },\n            en: { root_index: 2, int_val: 4 },\n            'e#': { root_index: 2, int_val: 5 },\n            'e##': { root_index: 2, int_val: 6 },\n            eb: { root_index: 2, int_val: 3 },\n            ebb: { root_index: 2, int_val: 2 },\n            f: { root_index: 3, int_val: 5 },\n            fn: { root_index: 3, int_val: 5 },\n            'f#': { root_index: 3, int_val: 6 },\n            'f##': { root_index: 3, int_val: 7 },\n            fb: { root_index: 3, int_val: 4 },\n            fbb: { root_index: 3, int_val: 3 },\n            g: { root_index: 4, int_val: 7 },\n            gn: { root_index: 4, int_val: 7 },\n            'g#': { root_index: 4, int_val: 8 },\n            'g##': { root_index: 4, int_val: 9 },\n            gb: { root_index: 4, int_val: 6 },\n            gbb: { root_index: 4, int_val: 5 },\n            a: { root_index: 5, int_val: 9 },\n            an: { root_index: 5, int_val: 9 },\n            'a#': { root_index: 5, int_val: 10 },\n            'a##': { root_index: 5, int_val: 11 },\n            ab: { root_index: 5, int_val: 8 },\n            abb: { root_index: 5, int_val: 7 },\n            b: { root_index: 6, int_val: 11 },\n            bn: { root_index: 6, int_val: 11 },\n            'b#': { root_index: 6, int_val: 0 },\n            'b##': { root_index: 6, int_val: 1 },\n            bb: { root_index: 6, int_val: 10 },\n            bbb: { root_index: 6, int_val: 9 },\n        };\n    }\n    isValidNoteValue(note) {\n        return note >= 0 && note < Music.canonical_notes.length;\n    }\n    isValidIntervalValue(interval) {\n        return interval >= 0 && interval < Music.diatonic_intervals.length;\n    }\n    /** Return root and accidental associated to a note. */\n    getNoteParts(noteString) {\n        if (!noteString || noteString.length < 1) {\n            throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n        }\n        if (noteString.length > 3) {\n            throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n        }\n        const note = noteString.toLowerCase();\n        const regex = /^([cdefgab])(b|bb|n|#|##)?$/;\n        const match = regex.exec(note);\n        if (match !== null) {\n            const root = match[1];\n            const accidental = match[2];\n            return {\n                root,\n                accidental,\n            };\n        }\n        else {\n            throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n        }\n    }\n    /** Return root, accidental and type associated to a key. */\n    getKeyParts(keyString) {\n        if (!keyString || keyString.length < 1) {\n            throw new RuntimeError('BadArguments', 'Invalid key: ' + keyString);\n        }\n        const key = keyString.toLowerCase();\n        // Support Major, Minor, Melodic Minor, and Harmonic Minor key types.\n        const regex = /^([cdefgab])(b|#)?(mel|harm|m|M)?$/;\n        const match = regex.exec(key);\n        if (match !== null) {\n            const root = match[1];\n            const accidental = match[2];\n            let type = match[3];\n            // Unspecified type implies major\n            if (!type)\n                type = 'M';\n            return {\n                root,\n                accidental,\n                type,\n            };\n        }\n        else {\n            throw new RuntimeError('BadArguments', `Invalid key: ${keyString}`);\n        }\n    }\n    /** Note value associated to a note name. */\n    getNoteValue(noteString) {\n        const value = Music.noteValues[noteString];\n        if (value === undefined) {\n            throw new RuntimeError('BadArguments', `Invalid note name: ${noteString}`);\n        }\n        return value.int_val;\n    }\n    /** Interval value associated to an interval name. */\n    getIntervalValue(intervalString) {\n        const value = Music.intervals[intervalString];\n        if (value === undefined) {\n            throw new RuntimeError('BadArguments', `Invalid interval name: ${intervalString}`);\n        }\n        return value;\n    }\n    /** Canonical note name associated to a value. */\n    getCanonicalNoteName(noteValue) {\n        if (!this.isValidNoteValue(noteValue)) {\n            throw new RuntimeError('BadArguments', `Invalid note value: ${noteValue}`);\n        }\n        return Music.canonical_notes[noteValue];\n    }\n    /** Interval name associated to a value. */\n    getCanonicalIntervalName(intervalValue) {\n        if (!this.isValidIntervalValue(intervalValue)) {\n            throw new RuntimeError('BadArguments', `Invalid interval value: ${intervalValue}`);\n        }\n        return Music.diatonic_intervals[intervalValue];\n    }\n    /**\n     * Given a note, interval, and interval direction, produce the relative note.\n     */\n    getRelativeNoteValue(noteValue, intervalValue, direction = 1) {\n        if (direction !== 1 && direction !== -1) {\n            throw new RuntimeError('BadArguments', `Invalid direction: ${direction}`);\n        }\n        let sum = (noteValue + direction * intervalValue) % Music.NUM_TONES;\n        if (sum < 0)\n            sum += Music.NUM_TONES;\n        return sum;\n    }\n    /**\n     * Given a root and note value, produce the relative note name.\n     */\n    getRelativeNoteName(root, noteValue) {\n        const parts = this.getNoteParts(root);\n        const rootValue = this.getNoteValue(parts.root);\n        let interval = noteValue - rootValue;\n        if (Math.abs(interval) > Music.NUM_TONES - 3) {\n            let multiplier = 1;\n            if (interval > 0)\n                multiplier = -1;\n            // Possibly wrap around. (Add +1 for modulo operator)\n            const reverse_interval = ((noteValue + 1 + (rootValue + 1)) % Music.NUM_TONES) * multiplier;\n            if (Math.abs(reverse_interval) > 2) {\n                throw new RuntimeError('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n            }\n            else {\n                interval = reverse_interval;\n            }\n        }\n        if (Math.abs(interval) > 2) {\n            throw new RuntimeError('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n        }\n        let relativeNoteName = parts.root;\n        if (interval > 0) {\n            for (let i = 1; i <= interval; ++i) {\n                relativeNoteName += '#';\n            }\n        }\n        else if (interval < 0) {\n            for (let i = -1; i >= interval; --i) {\n                relativeNoteName += 'b';\n            }\n        }\n        return relativeNoteName;\n    }\n    /**\n     * Return scale tones, given intervals. Each successive interval is\n     * relative to the previous one, e.g., Major Scale:\n     *\n     *   TTSTTTS = [2,2,1,2,2,2,1]\n     *\n     * When used with key = 0, returns C scale (which is isomorphic to\n     * interval list).\n     */\n    getScaleTones(key, intervals) {\n        const tones = [key];\n        let nextNote = key;\n        for (let i = 0; i < intervals.length; i++) {\n            nextNote = this.getRelativeNoteValue(nextNote, intervals[i]);\n            if (nextNote !== key)\n                tones.push(nextNote);\n        }\n        return tones;\n    }\n    /**\n     * Return the interval of a note, given a diatonic scale.\n     * e.g., given the scale C, and the note E, returns M3.\n     */\n    getIntervalBetween(note1, note2, direction = 1) {\n        if (direction !== 1 && direction !== -1) {\n            throw new RuntimeError('BadArguments', `Invalid direction: ${direction}`);\n        }\n        if (!this.isValidNoteValue(note1) || !this.isValidNoteValue(note2)) {\n            throw new RuntimeError('BadArguments', `Invalid notes: ${note1}, ${note2}`);\n        }\n        let difference = direction === 1 ? note2 - note1 : note1 - note2;\n        if (difference < 0)\n            difference += Music.NUM_TONES;\n        return difference;\n    }\n    /**\n     * Create a scale map that represents the pitch state for a\n     * `keySignature`. For example, passing a `G` to `keySignature` would\n     * return a scale map with every note naturalized except for `F` which\n     * has an `F#` state.\n     */\n    createScaleMap(keySignature) {\n        const keySigParts = this.getKeyParts(keySignature);\n        if (!keySigParts.type)\n            throw new RuntimeError('BadArguments', 'Unsupported key type: undefined');\n        const scaleName = Music.scaleTypes[keySigParts.type];\n        let keySigString = keySigParts.root;\n        if (keySigParts.accidental)\n            keySigString += keySigParts.accidental;\n        if (!scaleName)\n            throw new RuntimeError('BadArguments', 'Unsupported key type: ' + keySignature);\n        const scale = this.getScaleTones(this.getNoteValue(keySigString), scaleName);\n        const noteLocation = Music.root_indices[keySigParts.root];\n        const scaleMap = {};\n        for (let i = 0; i < Music.roots.length; ++i) {\n            const index = (noteLocation + i) % Music.roots.length;\n            const rootName = Music.roots[index];\n            let noteName = this.getRelativeNoteName(rootName, scale[i]);\n            if (noteName.length === 1) {\n                noteName += 'n';\n            }\n            scaleMap[rootName] = noteName;\n        }\n        return scaleMap;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\nimport { Fraction } from './fraction';\nimport { Glyph } from './glyph';\nimport { RuntimeError } from './util';\nconst RESOLUTION = 16384;\n/**\n * Map duration numbers to 'ticks', the unit of duration used throughout VexFlow.\n * For example, a quarter note is 4, so it maps to RESOLUTION / 4 = 4096 ticks.\n */\nconst durations = {\n    '1/2': RESOLUTION * 2,\n    1: RESOLUTION / 1,\n    2: RESOLUTION / 2,\n    4: RESOLUTION / 4,\n    8: RESOLUTION / 8,\n    16: RESOLUTION / 16,\n    32: RESOLUTION / 32,\n    64: RESOLUTION / 64,\n    128: RESOLUTION / 128,\n    256: RESOLUTION / 256,\n};\nconst durationAliases = {\n    w: '1',\n    h: '2',\n    q: '4',\n    // This is the default duration used to render bars (BarNote). Bars no longer\n    // consume ticks, so this should be a no-op.\n    // TODO(0xfe): This needs to be cleaned up.\n    b: '256',\n};\nconst keySignatures = {\n    C: { num: 0 },\n    Am: { num: 0 },\n    F: { acc: 'b', num: 1 },\n    Dm: { acc: 'b', num: 1 },\n    Bb: { acc: 'b', num: 2 },\n    Gm: { acc: 'b', num: 2 },\n    Eb: { acc: 'b', num: 3 },\n    Cm: { acc: 'b', num: 3 },\n    Ab: { acc: 'b', num: 4 },\n    Fm: { acc: 'b', num: 4 },\n    Db: { acc: 'b', num: 5 },\n    Bbm: { acc: 'b', num: 5 },\n    Gb: { acc: 'b', num: 6 },\n    Ebm: { acc: 'b', num: 6 },\n    Cb: { acc: 'b', num: 7 },\n    Abm: { acc: 'b', num: 7 },\n    G: { acc: '#', num: 1 },\n    Em: { acc: '#', num: 1 },\n    D: { acc: '#', num: 2 },\n    Bm: { acc: '#', num: 2 },\n    A: { acc: '#', num: 3 },\n    'F#m': { acc: '#', num: 3 },\n    E: { acc: '#', num: 4 },\n    'C#m': { acc: '#', num: 4 },\n    B: { acc: '#', num: 5 },\n    'G#m': { acc: '#', num: 5 },\n    'F#': { acc: '#', num: 6 },\n    'D#m': { acc: '#', num: 6 },\n    'C#': { acc: '#', num: 7 },\n    'A#m': { acc: '#', num: 7 },\n};\nconst clefs = {\n    treble: { line_shift: 0 },\n    bass: { line_shift: 6 },\n    tenor: { line_shift: 4 },\n    alto: { line_shift: 3 },\n    soprano: { line_shift: 1 },\n    percussion: { line_shift: 0 },\n    'mezzo-soprano': { line_shift: 2 },\n    'baritone-c': { line_shift: 5 },\n    'baritone-f': { line_shift: 5 },\n    subbass: { line_shift: 7 },\n    french: { line_shift: -1 },\n};\nconst notesInfo = {\n    C: { index: 0, int_val: 0 },\n    CN: { index: 0, int_val: 0, accidental: 'n' },\n    'C#': { index: 0, int_val: 1, accidental: '#' },\n    'C##': { index: 0, int_val: 2, accidental: '##' },\n    CB: { index: 0, int_val: 11, accidental: 'b' },\n    CBB: { index: 0, int_val: 10, accidental: 'bb' },\n    D: { index: 1, int_val: 2 },\n    DN: { index: 1, int_val: 2, accidental: 'n' },\n    'D#': { index: 1, int_val: 3, accidental: '#' },\n    'D##': { index: 1, int_val: 4, accidental: '##' },\n    DB: { index: 1, int_val: 1, accidental: 'b' },\n    DBB: { index: 1, int_val: 0, accidental: 'bb' },\n    E: { index: 2, int_val: 4 },\n    EN: { index: 2, int_val: 4, accidental: 'n' },\n    'E#': { index: 2, int_val: 5, accidental: '#' },\n    'E##': { index: 2, int_val: 6, accidental: '##' },\n    EB: { index: 2, int_val: 3, accidental: 'b' },\n    EBB: { index: 2, int_val: 2, accidental: 'bb' },\n    F: { index: 3, int_val: 5 },\n    FN: { index: 3, int_val: 5, accidental: 'n' },\n    'F#': { index: 3, int_val: 6, accidental: '#' },\n    'F##': { index: 3, int_val: 7, accidental: '##' },\n    FB: { index: 3, int_val: 4, accidental: 'b' },\n    FBB: { index: 3, int_val: 3, accidental: 'bb' },\n    G: { index: 4, int_val: 7 },\n    GN: { index: 4, int_val: 7, accidental: 'n' },\n    'G#': { index: 4, int_val: 8, accidental: '#' },\n    'G##': { index: 4, int_val: 9, accidental: '##' },\n    GB: { index: 4, int_val: 6, accidental: 'b' },\n    GBB: { index: 4, int_val: 5, accidental: 'bb' },\n    A: { index: 5, int_val: 9 },\n    AN: { index: 5, int_val: 9, accidental: 'n' },\n    'A#': { index: 5, int_val: 10, accidental: '#' },\n    'A##': { index: 5, int_val: 11, accidental: '##' },\n    AB: { index: 5, int_val: 8, accidental: 'b' },\n    ABB: { index: 5, int_val: 7, accidental: 'bb' },\n    B: { index: 6, int_val: 11 },\n    BN: { index: 6, int_val: 11, accidental: 'n' },\n    'B#': { index: 6, int_val: 12, accidental: '#' },\n    'B##': { index: 6, int_val: 13, accidental: '##' },\n    BB: { index: 6, int_val: 10, accidental: 'b' },\n    BBB: { index: 6, int_val: 9, accidental: 'bb' },\n    R: { index: 6, rest: true },\n    X: {\n        index: 6,\n        accidental: '',\n        octave: 4,\n        code: 'noteheadXBlack',\n        shift_right: 5.5,\n    },\n};\nconst validNoteTypes = {\n    n: { name: 'note' },\n    r: { name: 'rest' },\n    h: { name: 'harmonic' },\n    m: { name: 'muted' },\n    s: { name: 'slash' },\n    g: { name: 'ghost' },\n};\nconst customNoteHeads = {\n    /* Diamond */\n    D0: { code: 'noteheadDiamondWhole' },\n    D1: { code: 'noteheadDiamondHalf' },\n    D2: { code: 'noteheadDiamondBlack' },\n    D3: { code: 'noteheadDiamondBlack' },\n    /* Triangle */\n    T0: { code: 'noteheadTriangleUpWhole' },\n    T1: { code: 'noteheadTriangleUpHalf' },\n    T2: { code: 'noteheadTriangleUpBlack' },\n    T3: { code: 'noteheadTriangleUpBlack' },\n    /* Cross */\n    X0: { code: 'noteheadXWhole' },\n    X1: { code: 'noteheadXHalf' },\n    X2: { code: 'noteheadXBlack' },\n    X3: { code: 'noteheadCircleX' },\n    /* Square */\n    S1: { code: 'noteheadSquareWhite' },\n    S2: { code: 'noteheadSquareBlack' },\n    /* Rectangle */\n    R1: { code: 'vexNoteHeadRectWhite' },\n    R2: { code: 'vexNoteHeadRectBlack' }, // no smufl code\n};\nconst accidentals = {\n    '#': { code: 'accidentalSharp', parenRightPaddingAdjustment: -1 },\n    '##': { code: 'accidentalDoubleSharp', parenRightPaddingAdjustment: -1 },\n    b: { code: 'accidentalFlat', parenRightPaddingAdjustment: -2 },\n    bb: { code: 'accidentalDoubleFlat', parenRightPaddingAdjustment: -2 },\n    n: { code: 'accidentalNatural', parenRightPaddingAdjustment: -1 },\n    '{': { code: 'accidentalParensLeft', parenRightPaddingAdjustment: -1 },\n    '}': { code: 'accidentalParensRight', parenRightPaddingAdjustment: -1 },\n    db: { code: 'accidentalThreeQuarterTonesFlatZimmermann', parenRightPaddingAdjustment: -1 },\n    d: { code: 'accidentalQuarterToneFlatStein', parenRightPaddingAdjustment: 0 },\n    '++': { code: 'accidentalThreeQuarterTonesSharpStein', parenRightPaddingAdjustment: -1 },\n    '+': { code: 'accidentalQuarterToneSharpStein', parenRightPaddingAdjustment: -1 },\n    '+-': { code: 'accidentalKucukMucennebSharp', parenRightPaddingAdjustment: -1 },\n    bs: { code: 'accidentalBakiyeFlat', parenRightPaddingAdjustment: -1 },\n    bss: { code: 'accidentalBuyukMucennebFlat', parenRightPaddingAdjustment: -1 },\n    o: { code: 'accidentalSori', parenRightPaddingAdjustment: -1 },\n    k: { code: 'accidentalKoron', parenRightPaddingAdjustment: -1 },\n    bbs: { code: 'vexAccidentalMicrotonal1', parenRightPaddingAdjustment: -1 },\n    '++-': { code: 'vexAccidentalMicrotonal2', parenRightPaddingAdjustment: -1 },\n    ashs: { code: 'vexAccidentalMicrotonal3', parenRightPaddingAdjustment: -1 },\n    afhf: { code: 'vexAccidentalMicrotonal4', parenRightPaddingAdjustment: -1 },\n    accSagittal5v7KleismaUp: { code: 'accSagittal5v7KleismaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v7KleismaDown: { code: 'accSagittal5v7KleismaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5CommaUp: { code: 'accSagittal5CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5CommaDown: { code: 'accSagittal5CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal7CommaUp: { code: 'accSagittal7CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal7CommaDown: { code: 'accSagittal7CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal25SmallDiesisUp: { code: 'accSagittal25SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal25SmallDiesisDown: { code: 'accSagittal25SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal35MediumDiesisUp: { code: 'accSagittal35MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal35MediumDiesisDown: { code: 'accSagittal35MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal11MediumDiesisUp: { code: 'accSagittal11MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal11MediumDiesisDown: { code: 'accSagittal11MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal11LargeDiesisUp: { code: 'accSagittal11LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal11LargeDiesisDown: { code: 'accSagittal11LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal35LargeDiesisUp: { code: 'accSagittal35LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal35LargeDiesisDown: { code: 'accSagittal35LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp25SDown: { code: 'accSagittalSharp25SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat25SUp: { code: 'accSagittalFlat25SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7CDown: { code: 'accSagittalSharp7CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7CUp: { code: 'accSagittalFlat7CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5CDown: { code: 'accSagittalSharp5CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5CUp: { code: 'accSagittalFlat5CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v7kDown: { code: 'accSagittalSharp5v7kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v7kUp: { code: 'accSagittalFlat5v7kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp: { code: 'accSagittalSharp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat: { code: 'accSagittalFlat', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v7kUp: { code: 'accSagittalSharp5v7kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v7kDown: { code: 'accSagittalFlat5v7kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5CUp: { code: 'accSagittalSharp5CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5CDown: { code: 'accSagittalFlat5CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7CUp: { code: 'accSagittalSharp7CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7CDown: { code: 'accSagittalFlat7CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp25SUp: { code: 'accSagittalSharp25SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat25SDown: { code: 'accSagittalFlat25SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp35MUp: { code: 'accSagittalSharp35MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat35MDown: { code: 'accSagittalFlat35MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11MUp: { code: 'accSagittalSharp11MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11MDown: { code: 'accSagittalFlat11MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11LUp: { code: 'accSagittalSharp11LUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11LDown: { code: 'accSagittalFlat11LDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp35LUp: { code: 'accSagittalSharp35LUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat35LDown: { code: 'accSagittalFlat35LDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp25SDown: { code: 'accSagittalDoubleSharp25SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat25SUp: { code: 'accSagittalDoubleFlat25SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp7CDown: { code: 'accSagittalDoubleSharp7CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat7CUp: { code: 'accSagittalDoubleFlat7CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp5CDown: { code: 'accSagittalDoubleSharp5CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat5CUp: { code: 'accSagittalDoubleFlat5CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp5v7kDown: { code: 'accSagittalDoubleSharp5v7kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat5v7kUp: { code: 'accSagittalDoubleFlat5v7kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp: { code: 'accSagittalDoubleSharp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat: { code: 'accSagittalDoubleFlat', parenRightPaddingAdjustment: -1 },\n    accSagittal7v11KleismaUp: { code: 'accSagittal7v11KleismaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal7v11KleismaDown: { code: 'accSagittal7v11KleismaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal17CommaUp: { code: 'accSagittal17CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal17CommaDown: { code: 'accSagittal17CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal55CommaUp: { code: 'accSagittal55CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal55CommaDown: { code: 'accSagittal55CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal7v11CommaUp: { code: 'accSagittal7v11CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal7v11CommaDown: { code: 'accSagittal7v11CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v11SmallDiesisUp: { code: 'accSagittal5v11SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v11SmallDiesisDown: { code: 'accSagittal5v11SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v11SDown: { code: 'accSagittalSharp5v11SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v11SUp: { code: 'accSagittalFlat5v11SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v11CDown: { code: 'accSagittalSharp7v11CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v11CUp: { code: 'accSagittalFlat7v11CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp55CDown: { code: 'accSagittalSharp55CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat55CUp: { code: 'accSagittalFlat55CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp17CDown: { code: 'accSagittalSharp17CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat17CUp: { code: 'accSagittalFlat17CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v11kDown: { code: 'accSagittalSharp7v11kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v11kUp: { code: 'accSagittalFlat7v11kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v11kUp: { code: 'accSagittalSharp7v11kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v11kDown: { code: 'accSagittalFlat7v11kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp17CUp: { code: 'accSagittalSharp17CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat17CDown: { code: 'accSagittalFlat17CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp55CUp: { code: 'accSagittalSharp55CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat55CDown: { code: 'accSagittalFlat55CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v11CUp: { code: 'accSagittalSharp7v11CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v11CDown: { code: 'accSagittalFlat7v11CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v11SUp: { code: 'accSagittalSharp5v11SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v11SDown: { code: 'accSagittalFlat5v11SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp5v11SDown: { code: 'accSagittalDoubleSharp5v11SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat5v11SUp: { code: 'accSagittalDoubleFlat5v11SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp7v11CDown: { code: 'accSagittalDoubleSharp7v11CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat7v11CUp: { code: 'accSagittalDoubleFlat7v11CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp55CDown: { code: 'accSagittalDoubleSharp55CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat55CUp: { code: 'accSagittalDoubleFlat55CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp17CDown: { code: 'accSagittalDoubleSharp17CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat17CUp: { code: 'accSagittalDoubleFlat17CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp7v11kDown: { code: 'accSagittalDoubleSharp7v11kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat7v11kUp: { code: 'accSagittalDoubleFlat7v11kUp', parenRightPaddingAdjustment: -1 },\n    accSagittal23CommaUp: { code: 'accSagittal23CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal23CommaDown: { code: 'accSagittal23CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v19CommaUp: { code: 'accSagittal5v19CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v19CommaDown: { code: 'accSagittal5v19CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v23SmallDiesisUp: { code: 'accSagittal5v23SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v23SmallDiesisDown: { code: 'accSagittal5v23SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v23SDown: { code: 'accSagittalSharp5v23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v23SUp: { code: 'accSagittalFlat5v23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v19CDown: { code: 'accSagittalSharp5v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v19CUp: { code: 'accSagittalFlat5v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp23CDown: { code: 'accSagittalSharp23CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat23CUp: { code: 'accSagittalFlat23CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp23CUp: { code: 'accSagittalSharp23CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat23CDown: { code: 'accSagittalFlat23CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v19CUp: { code: 'accSagittalSharp5v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v19CDown: { code: 'accSagittalFlat5v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v23SUp: { code: 'accSagittalSharp5v23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v23SDown: { code: 'accSagittalFlat5v23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp5v23SDown: { code: 'accSagittalDoubleSharp5v23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat5v23SUp: { code: 'accSagittalDoubleFlat5v23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp5v19CDown: { code: 'accSagittalDoubleSharp5v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat5v19CUp: { code: 'accSagittalDoubleFlat5v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp23CDown: { code: 'accSagittalDoubleSharp23CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat23CUp: { code: 'accSagittalDoubleFlat23CUp', parenRightPaddingAdjustment: -1 },\n    accSagittal19SchismaUp: { code: 'accSagittal19SchismaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal19SchismaDown: { code: 'accSagittal19SchismaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal17KleismaUp: { code: 'accSagittal17KleismaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal17KleismaDown: { code: 'accSagittal17KleismaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal143CommaUp: { code: 'accSagittal143CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal143CommaDown: { code: 'accSagittal143CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal11v49CommaUp: { code: 'accSagittal11v49CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal11v49CommaDown: { code: 'accSagittal11v49CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal19CommaUp: { code: 'accSagittal19CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal19CommaDown: { code: 'accSagittal19CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal7v19CommaUp: { code: 'accSagittal7v19CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal7v19CommaDown: { code: 'accSagittal7v19CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal49SmallDiesisUp: { code: 'accSagittal49SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal49SmallDiesisDown: { code: 'accSagittal49SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal23SmallDiesisUp: { code: 'accSagittal23SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal23SmallDiesisDown: { code: 'accSagittal23SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v13MediumDiesisUp: { code: 'accSagittal5v13MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v13MediumDiesisDown: { code: 'accSagittal5v13MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal11v19MediumDiesisUp: { code: 'accSagittal11v19MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal11v19MediumDiesisDown: { code: 'accSagittal11v19MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal49MediumDiesisUp: { code: 'accSagittal49MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal49MediumDiesisDown: { code: 'accSagittal49MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v49MediumDiesisUp: { code: 'accSagittal5v49MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v49MediumDiesisDown: { code: 'accSagittal5v49MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal49LargeDiesisUp: { code: 'accSagittal49LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal49LargeDiesisDown: { code: 'accSagittal49LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal11v19LargeDiesisUp: { code: 'accSagittal11v19LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal11v19LargeDiesisDown: { code: 'accSagittal11v19LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v13LargeDiesisUp: { code: 'accSagittal5v13LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v13LargeDiesisDown: { code: 'accSagittal5v13LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp23SDown: { code: 'accSagittalSharp23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat23SUp: { code: 'accSagittalFlat23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp49SDown: { code: 'accSagittalSharp49SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat49SUp: { code: 'accSagittalFlat49SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v19CDown: { code: 'accSagittalSharp7v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v19CUp: { code: 'accSagittalFlat7v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp19CDown: { code: 'accSagittalSharp19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat19CUp: { code: 'accSagittalFlat19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11v49CDown: { code: 'accSagittalSharp11v49CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11v49CUp: { code: 'accSagittalFlat11v49CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp143CDown: { code: 'accSagittalSharp143CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat143CUp: { code: 'accSagittalFlat143CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp17kDown: { code: 'accSagittalSharp17kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat17kUp: { code: 'accSagittalFlat17kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp19sDown: { code: 'accSagittalSharp19sDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat19sUp: { code: 'accSagittalFlat19sUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp19sUp: { code: 'accSagittalSharp19sUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat19sDown: { code: 'accSagittalFlat19sDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp17kUp: { code: 'accSagittalSharp17kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat17kDown: { code: 'accSagittalFlat17kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp143CUp: { code: 'accSagittalSharp143CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat143CDown: { code: 'accSagittalFlat143CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11v49CUp: { code: 'accSagittalSharp11v49CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11v49CDown: { code: 'accSagittalFlat11v49CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp19CUp: { code: 'accSagittalSharp19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat19CDown: { code: 'accSagittalFlat19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v19CUp: { code: 'accSagittalSharp7v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v19CDown: { code: 'accSagittalFlat7v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp49SUp: { code: 'accSagittalSharp49SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat49SDown: { code: 'accSagittalFlat49SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp23SUp: { code: 'accSagittalSharp23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat23SDown: { code: 'accSagittalFlat23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v13MUp: { code: 'accSagittalSharp5v13MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v13MDown: { code: 'accSagittalFlat5v13MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11v19MUp: { code: 'accSagittalSharp11v19MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11v19MDown: { code: 'accSagittalFlat11v19MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp49MUp: { code: 'accSagittalSharp49MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat49MDown: { code: 'accSagittalFlat49MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v49MUp: { code: 'accSagittalSharp5v49MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v49MDown: { code: 'accSagittalFlat5v49MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp49LUp: { code: 'accSagittalSharp49LUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat49LDown: { code: 'accSagittalFlat49LDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11v19LUp: { code: 'accSagittalSharp11v19LUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11v19LDown: { code: 'accSagittalFlat11v19LDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v13LUp: { code: 'accSagittalSharp5v13LUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v13LDown: { code: 'accSagittalFlat5v13LDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp23SDown: { code: 'accSagittalDoubleSharp23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat23SUp: { code: 'accSagittalDoubleFlat23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp49SDown: { code: 'accSagittalDoubleSharp49SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat49SUp: { code: 'accSagittalDoubleFlat49SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp7v19CDown: { code: 'accSagittalDoubleSharp7v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat7v19CUp: { code: 'accSagittalDoubleFlat7v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp19CDown: { code: 'accSagittalDoubleSharp19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat19CUp: { code: 'accSagittalDoubleFlat19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp11v49CDown: { code: 'accSagittalDoubleSharp11v49CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat11v49CUp: { code: 'accSagittalDoubleFlat11v49CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp143CDown: { code: 'accSagittalDoubleSharp143CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat143CUp: { code: 'accSagittalDoubleFlat143CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp17kDown: { code: 'accSagittalDoubleSharp17kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat17kUp: { code: 'accSagittalDoubleFlat17kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp19sDown: { code: 'accSagittalDoubleSharp19sDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat19sUp: { code: 'accSagittalDoubleFlat19sUp', parenRightPaddingAdjustment: -1 },\n    accSagittalShaftUp: { code: 'accSagittalShaftUp', parenRightPaddingAdjustment: -1 },\n    accSagittalShaftDown: { code: 'accSagittalShaftDown', parenRightPaddingAdjustment: -1 },\n    accSagittalAcute: { code: 'accSagittalAcute', parenRightPaddingAdjustment: -1 },\n    accSagittalGrave: { code: 'accSagittalGrave', parenRightPaddingAdjustment: -1 },\n    accSagittal1MinaUp: { code: 'accSagittal1MinaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal1MinaDown: { code: 'accSagittal1MinaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal2MinasUp: { code: 'accSagittal2MinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal2MinasDown: { code: 'accSagittal2MinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal1TinaUp: { code: 'accSagittal1TinaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal1TinaDown: { code: 'accSagittal1TinaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal2TinasUp: { code: 'accSagittal2TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal2TinasDown: { code: 'accSagittal2TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal3TinasUp: { code: 'accSagittal3TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal3TinasDown: { code: 'accSagittal3TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal4TinasUp: { code: 'accSagittal4TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal4TinasDown: { code: 'accSagittal4TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5TinasUp: { code: 'accSagittal5TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5TinasDown: { code: 'accSagittal5TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal6TinasUp: { code: 'accSagittal6TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal6TinasDown: { code: 'accSagittal6TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal7TinasUp: { code: 'accSagittal7TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal7TinasDown: { code: 'accSagittal7TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal8TinasUp: { code: 'accSagittal8TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal8TinasDown: { code: 'accSagittal8TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal9TinasUp: { code: 'accSagittal9TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal9TinasDown: { code: 'accSagittal9TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFractionalTinaUp: { code: 'accSagittalFractionalTinaUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFractionalTinaDown: { code: 'accSagittalFractionalTinaDown', parenRightPaddingAdjustment: -1 },\n    accidentalNarrowReversedFlat: { code: 'accidentalNarrowReversedFlat', parenRightPaddingAdjustment: -1 },\n    accidentalNarrowReversedFlatAndFlat: {\n        code: 'accidentalNarrowReversedFlatAndFlat',\n        parenRightPaddingAdjustment: -1,\n    },\n    accidentalWilsonPlus: { code: 'accidentalWilsonPlus', parenRightPaddingAdjustment: -1 },\n    accidentalWilsonMinus: { code: 'accidentalWilsonMinus', parenRightPaddingAdjustment: -1 },\n};\n// Helps determine the layout of accidentals.\nconst accidentalColumns = {\n    1: {\n        a: [1],\n        b: [1],\n    },\n    2: {\n        a: [1, 2],\n    },\n    3: {\n        a: [1, 3, 2],\n        b: [1, 2, 1],\n        second_on_bottom: [1, 2, 3],\n    },\n    4: {\n        a: [1, 3, 4, 2],\n        b: [1, 2, 3, 1],\n        spaced_out_tetrachord: [1, 2, 1, 2],\n    },\n    5: {\n        a: [1, 3, 5, 4, 2],\n        b: [1, 2, 4, 3, 1],\n        spaced_out_pentachord: [1, 2, 3, 2, 1],\n        very_spaced_out_pentachord: [1, 2, 1, 2, 1],\n    },\n    6: {\n        a: [1, 3, 5, 6, 4, 2],\n        b: [1, 2, 4, 5, 3, 1],\n        spaced_out_hexachord: [1, 3, 2, 1, 3, 2],\n        very_spaced_out_hexachord: [1, 2, 1, 2, 1, 2],\n    },\n};\nconst articulations = {\n    'a.': { code: 'augmentationDot', between_lines: true },\n    av: {\n        aboveCode: 'articStaccatissimoAbove',\n        belowCode: 'articStaccatissimoBelow',\n        between_lines: true,\n    },\n    'a>': {\n        aboveCode: 'articAccentAbove',\n        belowCode: 'articAccentBelow',\n        between_lines: true,\n    },\n    'a-': {\n        aboveCode: 'articTenutoAbove',\n        belowCode: 'articTenutoBelow',\n        between_lines: true,\n    },\n    'a^': {\n        aboveCode: 'articMarcatoAbove',\n        belowCode: 'articMarcatoBelow',\n        between_lines: false,\n    },\n    'a+': { code: 'pluckedLeftHandPizzicato', between_lines: false },\n    ao: {\n        aboveCode: 'pluckedSnapPizzicatoAbove',\n        belowCode: 'pluckedSnapPizzicatoBelow',\n        between_lines: false,\n    },\n    ah: { code: 'stringsHarmonic', between_lines: false },\n    'a@': { aboveCode: 'fermataAbove', belowCode: 'fermataBelow', between_lines: false },\n    'a@a': { code: 'fermataAbove', between_lines: false },\n    'a@u': { code: 'fermataBelow', between_lines: false },\n    'a|': { code: 'stringsUpBow', between_lines: false },\n    am: { code: 'stringsDownBow', between_lines: false },\n    'a,': { code: 'pictChokeCymbal', between_lines: false }, // Choked\n};\nconst ornaments = {\n    mordent: { code: 'ornamentShortTrill' },\n    mordent_inverted: { code: 'ornamentMordent' },\n    turn: { code: 'ornamentTurn' },\n    turn_inverted: { code: 'ornamentTurnSlash' },\n    tr: { code: 'ornamentTrill' },\n    upprall: { code: 'ornamentPrecompSlideTrillDAnglebert' },\n    downprall: { code: 'ornamentPrecompDoubleCadenceUpperPrefix' },\n    prallup: { code: 'ornamentPrecompTrillSuffixDandrieu' },\n    pralldown: { code: 'ornamentPrecompTrillLowerSuffix' },\n    upmordent: { code: 'ornamentPrecompSlideTrillBach' },\n    downmordent: { code: 'ornamentPrecompDoubleCadenceUpperPrefixTurn' },\n    lineprall: { code: 'ornamentPrecompAppoggTrill' },\n    prallprall: { code: 'ornamentTremblement' },\n    scoop: { code: 'brassScoop' },\n    doit: { code: 'brassDoitMedium' },\n    fall: { code: 'brassFallLipShort' },\n    doitLong: { code: 'brassLiftMedium' },\n    fallLong: { code: 'brassFallRoughMedium' },\n    bend: { code: 'brassBend' },\n    plungerClosed: { code: 'brassMuteClosed' },\n    plungerOpen: { code: 'brassMuteOpen' },\n    flip: { code: 'brassFlip' },\n    jazzTurn: { code: 'brassJazzTurn' },\n    smear: { code: 'brassSmear' },\n};\nexport class Tables {\n    /**\n     * @returns the `Font` object at the head of the music font stack.\n     */\n    static currentMusicFont() {\n        if (Tables.MUSIC_FONT_STACK.length === 0) {\n            throw new RuntimeError('NoFonts', 'The font stack is empty. See: await Flow.fetchMusicFont(...); Flow.setMusicFont(...).');\n        }\n        else {\n            return Tables.MUSIC_FONT_STACK[0];\n        }\n    }\n    static clefProperties(clef) {\n        if (!clef || !(clef in clefs))\n            throw new RuntimeError('BadArgument', 'Invalid clef: ' + clef);\n        return clefs[clef];\n    }\n    /**\n     * @param keyOctaveGlyph a string in the format \"key/octave\" (e.g., \"c/5\") or \"key/octave/custom-note-head-code\" (e.g., \"g/5/t3\").\n     * @param clef\n     * @param params a struct with one option, `octave_shift` for clef ottavation (0 = default; 1 = 8va; -1 = 8vb, etc.).\n     * @returns properties for the specified note.\n     */\n    // eslint-disable-next-line\n    static keyProperties(keyOctaveGlyph, clef = 'treble', params) {\n        let options = { octave_shift: 0 };\n        if (typeof params === 'object') {\n            options = Object.assign(Object.assign({}, options), params);\n        }\n        const pieces = keyOctaveGlyph.split('/');\n        if (pieces.length < 2) {\n            throw new RuntimeError('BadArguments', `First argument must be note/octave or note/octave/glyph-code: ${keyOctaveGlyph}`);\n        }\n        const key = pieces[0].toUpperCase();\n        const value = notesInfo[key];\n        if (!value)\n            throw new RuntimeError('BadArguments', 'Invalid key name: ' + key);\n        if (value.octave)\n            pieces[1] = value.octave.toString();\n        let octave = parseInt(pieces[1], 10);\n        // Octave_shift is the shift to compensate for clef 8va/8vb.\n        octave += -1 * options.octave_shift;\n        const baseIndex = octave * 7 - 4 * 7;\n        let line = (baseIndex + value.index) / 2;\n        line += Tables.clefProperties(clef).line_shift;\n        let stroke = 0;\n        if (line <= 0 && (line * 2) % 2 === 0)\n            stroke = 1; // stroke up\n        if (line >= 6 && (line * 2) % 2 === 0)\n            stroke = -1; // stroke down\n        // Integer value for note arithmetic.\n        const int_value = typeof value.int_val !== 'undefined' ? octave * 12 + value.int_val : undefined;\n        // If the user specified a glyph, overwrite the glyph code.\n        const code = value.code;\n        const shift_right = value.shift_right;\n        let customNoteHeadProps = {};\n        if (pieces.length > 2 && pieces[2]) {\n            const glyphName = pieces[2].toUpperCase();\n            customNoteHeadProps = customNoteHeads[glyphName] || {};\n        }\n        return Object.assign({ key,\n            octave,\n            line,\n            int_value, accidental: value.accidental, code,\n            stroke,\n            shift_right, displaced: false }, customNoteHeadProps);\n    }\n    static integerToNote(integer) {\n        if (typeof integer === 'undefined' || integer < 0 || integer > 11) {\n            throw new RuntimeError('BadArguments', `integerToNote() requires an integer in the range [0, 11]: ${integer}`);\n        }\n        const table = {\n            0: 'C',\n            1: 'C#',\n            2: 'D',\n            3: 'D#',\n            4: 'E',\n            5: 'F',\n            6: 'F#',\n            7: 'G',\n            8: 'G#',\n            9: 'A',\n            10: 'A#',\n            11: 'B',\n        };\n        const noteValue = table[integer];\n        if (!noteValue) {\n            throw new RuntimeError('BadArguments', `Unknown note value for integer: ${integer}`);\n        }\n        return noteValue;\n    }\n    static tabToGlyph(fret, scale = 1.0) {\n        let glyph = undefined;\n        let width = 0;\n        let shift_y = 0;\n        if (fret.toUpperCase() === 'X') {\n            const glyphMetrics = new Glyph('accidentalDoubleSharp', Tables.TABLATURE_FONT_SCALE).getMetrics();\n            glyph = 'accidentalDoubleSharp';\n            if (glyphMetrics.width == undefined || glyphMetrics.height == undefined)\n                throw new RuntimeError('InvalidMetrics', 'Width and height required');\n            width = glyphMetrics.width;\n            shift_y = -glyphMetrics.height / 2;\n        }\n        else {\n            width = Tables.textWidth(fret);\n        }\n        return {\n            text: fret,\n            code: glyph,\n            getWidth: () => width * scale,\n            shift_y,\n        };\n    }\n    // Used by annotation.ts and bend.ts. Clearly this implementation only works for the default font size.\n    // TODO: The actual width depends on the font family, size, weight, style.\n    static textWidth(text) {\n        return 7 * text.toString().length;\n    }\n    static articulationCodes(artic) {\n        return articulations[artic];\n    }\n    static accidentalCodes(acc) {\n        return accidentals[acc];\n    }\n    static ornamentCodes(acc) {\n        return ornaments[acc];\n    }\n    static keySignature(spec) {\n        const keySpec = keySignatures[spec];\n        if (!keySpec) {\n            throw new RuntimeError('BadKeySignature', `Bad key signature spec: '${spec}'`);\n        }\n        if (!keySpec.acc) {\n            return [];\n        }\n        const accidentalList = {\n            b: [2, 0.5, 2.5, 1, 3, 1.5, 3.5],\n            '#': [0, 1.5, -0.5, 1, 2.5, 0.5, 2],\n        };\n        const notes = accidentalList[keySpec.acc];\n        const acc_list = [];\n        for (let i = 0; i < keySpec.num; ++i) {\n            const line = notes[i];\n            acc_list.push({ type: keySpec.acc, line });\n        }\n        return acc_list;\n    }\n    static getKeySignatures() {\n        return keySignatures;\n    }\n    static hasKeySignature(spec) {\n        return spec in keySignatures;\n    }\n    /**\n     * Convert duration aliases to the number based duration.\n     * If the input isn't an alias, simply return the input.\n     * @param duration\n     * @returns Example: 'q' -> '4', '8' -> '8'\n     */\n    static sanitizeDuration(duration) {\n        const durationNumber = durationAliases[duration];\n        if (durationNumber !== undefined) {\n            duration = durationNumber;\n        }\n        if (durations[duration] === undefined) {\n            throw new RuntimeError('BadArguments', `The provided duration is not valid: ${duration}`);\n        }\n        return duration;\n    }\n    /** Convert the `duration` to a fraction. */\n    static durationToFraction(duration) {\n        return new Fraction().parse(Tables.sanitizeDuration(duration));\n    }\n    /** Convert the `duration` to a number. */\n    static durationToNumber(duration) {\n        return Tables.durationToFraction(duration).value();\n    }\n    /* Convert the `duration` to total ticks. */\n    static durationToTicks(duration) {\n        duration = Tables.sanitizeDuration(duration);\n        const ticks = durations[duration];\n        if (ticks === undefined) {\n            throw new RuntimeError('InvalidDuration');\n        }\n        return ticks;\n    }\n    // Return a glyph given duration and type. The type can be a custom glyph code from customNoteHeads.\n    // The default type is a regular note ('n').\n    // eslint-disable-next-line\n    static getGlyphProps(duration, type = 'n') {\n        duration = Tables.sanitizeDuration(duration);\n        // Lookup duration for default glyph head code\n        const code = durationCodes[duration];\n        if (code === undefined) {\n            return undefined;\n        }\n        // Get glyph properties for 'type' from duration string (note, rest, harmonic, muted, slash)\n        let glyphTypeProperties = code.type[type];\n        // If this isn't a standard type, then lookup the custom note head map.\n        if (glyphTypeProperties === undefined) {\n            // Try and get it from the custom list of note heads\n            const customGlyphTypeProperties = customNoteHeads[type.toUpperCase()];\n            // If not, then return with nothing.\n            if (customGlyphTypeProperties === undefined) {\n                return undefined;\n            }\n            // Otherwise set it as the code_head value\n            glyphTypeProperties = Object.assign({ code_head: customGlyphTypeProperties.code }, customGlyphTypeProperties);\n        }\n        const code_head = glyphTypeProperties.code_head;\n        // The default implementation of getWidth() calls Glyph.getWidth(code_head, scale).\n        // This can be overridden by an individual glyph type (see slash noteheads below: Tables.SLASH_NOTEHEAD_WIDTH).\n        const getWidth = (scale = Tables.NOTATION_FONT_SCALE) => Glyph.getWidth(code_head, scale);\n        // Merge duration props for 'duration' with the note head properties.\n        return Object.assign(Object.assign(Object.assign({}, code.common), { getWidth: getWidth }), glyphTypeProperties);\n    }\n}\nTables.STEM_WIDTH = 1.5;\nTables.STEM_HEIGHT = 35;\nTables.STAVE_LINE_THICKNESS = 1;\nTables.RESOLUTION = RESOLUTION;\n/**\n * Customize this by calling Flow.setMusicFont(...fontNames);\n */\nTables.MUSIC_FONT_STACK = [];\nTables.NOTATION_FONT_SCALE = 39;\nTables.TABLATURE_FONT_SCALE = 39;\nTables.SLASH_NOTEHEAD_WIDTH = 15;\nTables.STAVE_LINE_DISTANCE = 10;\n// HACK:\n// Since text origins are positioned at the baseline, we must\n// compensate for the ascender of the text. Of course, 1 staff space is\n// a very poor approximation.\n//\n// This will be deprecated in the future. This is a temporary solution until\n// we have more robust text metrics.\nTables.TEXT_HEIGHT_OFFSET_HACK = 1;\nTables.accidentalMap = accidentals;\nTables.accidentalColumnsTable = accidentalColumns;\nTables.unicode = {\n    // ♯ accidental sharp\n    sharp: String.fromCharCode(0x266f),\n    // ♭ accidental flat\n    flat: String.fromCharCode(0x266d),\n    // ♮ accidental natural\n    natural: String.fromCharCode(0x266e),\n    // △ major seventh\n    triangle: String.fromCharCode(0x25b3),\n    // ø half-diminished\n    'o-with-slash': String.fromCharCode(0x00f8),\n    // ° diminished\n    degrees: String.fromCharCode(0x00b0),\n    // ○ diminished\n    circle: String.fromCharCode(0x25cb),\n};\n/* The list of valid note types. Used by note.ts during parseNoteStruct(). */\nTables.validTypes = validNoteTypes;\n// Default time signature.\nTables.TIME4_4 = {\n    num_beats: 4,\n    beat_value: 4,\n    resolution: RESOLUTION,\n};\n// 1/2, 1, 2, 4, 8, 16, 32, 64, 128\n// NOTE: There is no 256 here! However, there are other mentions of 256 in this file.\n// For example, in durations has a 256 key, and sanitizeDuration() can return 256.\n// The sanitizeDuration() bit may need to be removed by 0xfe.\n// eslint-disable-next-line\nconst durationCodes = {\n    '1/2': {\n        common: {\n            stem: false,\n            stem_offset: 0,\n            flag: false,\n            stem_up_extension: -Tables.STEM_HEIGHT,\n            stem_down_extension: -Tables.STEM_HEIGHT,\n            tabnote_stem_up_extension: -Tables.STEM_HEIGHT,\n            tabnote_stem_down_extension: -Tables.STEM_HEIGHT,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        type: {\n            n: {\n                // Breve note\n                code_head: 'noteheadDoubleWhole',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadDoubleWhole', scale);\n                // },\n            },\n            h: {\n                // Breve note harmonic\n                code_head: 'unpitchedPercussionClef1',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('unpitchedPercussionClef1', scale);\n                // },\n            },\n            m: {\n                // Breve note muted\n                code_head: 'vexNoteHeadMutedBreve',\n                stem_offset: 0,\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('vexNoteHeadMutedBreve', scale);\n                // },\n            },\n            r: {\n                // Breve rest\n                code_head: 'restDoubleWhole',\n                rest: true,\n                position: 'B/5',\n                dot_shiftY: 0.5,\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('restDoubleWhole', scale);\n                // },\n            },\n            s: {\n                // Breve note slash -\n                // Drawn with canvas primitives\n                getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n                position: 'B/4',\n            },\n            g: {\n                // Ghostnote\n                code_head: 'noteheadDoubleWhole',\n            },\n        },\n    },\n    1: {\n        common: {\n            stem: false,\n            stem_offset: 0,\n            flag: false,\n            stem_up_extension: -Tables.STEM_HEIGHT,\n            stem_down_extension: -Tables.STEM_HEIGHT,\n            tabnote_stem_up_extension: -Tables.STEM_HEIGHT,\n            tabnote_stem_down_extension: -Tables.STEM_HEIGHT,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        type: {\n            n: {\n                // Whole note\n                code_head: 'noteheadWhole',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadWhole', scale);\n                // },\n            },\n            h: {\n                // Whole note harmonic\n                code_head: 'noteheadDiamondWhole',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadDiamondWhole', scale);\n                // },\n            },\n            m: {\n                // Whole note muted\n                code_head: 'noteheadXWhole',\n                stem_offset: -3,\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadXWhole', scale);\n                // },\n            },\n            r: {\n                // Whole rest\n                code_head: 'restWhole',\n                rest: true,\n                position: 'D/5',\n                dot_shiftY: 0.5,\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('restWhole', scale);\n                // },\n            },\n            s: {\n                // Whole note slash\n                // Drawn with canvas primitives\n                getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n                position: 'B/4',\n            },\n            g: {\n                // Ghostnote\n                code_head: 'noteheadWhole',\n            },\n        },\n    },\n    2: {\n        common: {\n            stem: true,\n            stem_offset: 0,\n            flag: false,\n            stem_up_extension: 0,\n            stem_down_extension: 0,\n            tabnote_stem_up_extension: 0,\n            tabnote_stem_down_extension: 0,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        type: {\n            n: {\n                // Half note\n                code_head: 'noteheadHalf',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadHalf', scale);\n                // },\n            },\n            h: {\n                // Half note harmonic\n                code_head: 'noteheadDiamondHalf',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadDiamondHalf', scale);\n                // },\n            },\n            m: {\n                // Half note muted\n                code_head: 'noteheadXHalf',\n                stem_offset: -3,\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadXHalf', scale);\n                // },\n            },\n            r: {\n                // Half rest\n                code_head: 'restHalf',\n                stem: false,\n                rest: true,\n                position: 'B/4',\n                dot_shiftY: -0.5,\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('restHalf', scale);\n                // },\n            },\n            s: {\n                // Half note slash\n                // Drawn with canvas primitives\n                getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n                position: 'B/4',\n            },\n            g: {\n                // Ghostnote\n                code_head: 'noteheadHalf',\n            },\n        },\n    },\n    4: {\n        common: {\n            stem: true,\n            stem_offset: 0,\n            flag: false,\n            stem_up_extension: 0,\n            stem_down_extension: 0,\n            tabnote_stem_up_extension: 0,\n            tabnote_stem_down_extension: 0,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        type: {\n            n: {\n                // Quarter note\n                code_head: 'noteheadBlack',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadBlack', scale);\n                // },\n            },\n            h: {\n                // Quarter harmonic\n                code_head: 'noteheadDiamondBlack',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadDiamondBlack', scale);\n                // },\n            },\n            m: {\n                // Quarter muted\n                code_head: 'noteheadXBlack',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadXBlack', scale);\n                // },\n            },\n            r: {\n                // Quarter rest\n                code_head: 'restQuarter',\n                stem: false,\n                rest: true,\n                position: 'B/4',\n                dot_shiftY: -0.5,\n                line_above: 1.5,\n                line_below: 1.5,\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('restQuarter', scale);\n                // },\n            },\n            s: {\n                // Quarter slash\n                // Drawn with canvas primitives\n                getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n                position: 'B/4',\n            },\n            g: {\n                // Ghostnote\n                code_head: 'noteheadBlack',\n            },\n        },\n    },\n    8: {\n        common: {\n            stem: true,\n            stem_offset: 0,\n            flag: true,\n            beam_count: 1,\n            stem_beam_extension: 0,\n            code_flag_upstem: 'flag8thUp',\n            code_flag_downstem: 'flag8thDown',\n            stem_up_extension: 0,\n            stem_down_extension: 0,\n            tabnote_stem_up_extension: 0,\n            tabnote_stem_down_extension: 0,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        type: {\n            n: {\n                // Eighth note\n                code_head: 'noteheadBlack',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadBlack', scale);\n                // },\n            },\n            h: {\n                // Eighth note harmonic\n                code_head: 'noteheadDiamondBlack',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadDiamondBlack', scale);\n                // },\n            },\n            m: {\n                // Eighth note muted\n                code_head: 'noteheadXBlack',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadXBlack', scale);\n                // },\n            },\n            r: {\n                // Eighth rest\n                code_head: 'rest8th',\n                stem: false,\n                flag: false,\n                rest: true,\n                position: 'B/4',\n                dot_shiftY: -0.5,\n                line_above: 1.0,\n                line_below: 1.0,\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('rest8th', scale);\n                // },\n            },\n            s: {\n                // Eighth slash\n                // Drawn with canvas primitives\n                getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n                position: 'B/4',\n            },\n            g: {\n                // Ghostnote\n                code_head: 'noteheadBlack',\n            },\n        },\n    },\n    16: {\n        common: {\n            beam_count: 2,\n            stem_beam_extension: 0,\n            stem: true,\n            stem_offset: 0,\n            flag: true,\n            code_flag_upstem: 'flag16thUp',\n            code_flag_downstem: 'flag16thDown',\n            stem_up_extension: 0,\n            stem_down_extension: 0,\n            tabnote_stem_up_extension: 0,\n            tabnote_stem_down_extension: 0,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        type: {\n            n: {\n                // Sixteenth note\n                code_head: 'noteheadBlack',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadBlack', scale);\n                // },\n            },\n            h: {\n                // Sixteenth note harmonic\n                code_head: 'noteheadDiamondBlack',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadDiamondBlack', scale);\n                // },\n            },\n            m: {\n                // Sixteenth note muted\n                code_head: 'noteheadXBlack',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadXBlack', scale);\n                // },\n            },\n            r: {\n                // Sixteenth rest\n                code_head: 'rest16th',\n                stem: false,\n                flag: false,\n                rest: true,\n                position: 'B/4',\n                dot_shiftY: -0.5,\n                line_above: 1.0,\n                line_below: 2.0,\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('rest16th', scale);\n                // },\n            },\n            s: {\n                // Sixteenth slash\n                // Drawn with canvas primitives\n                getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n                position: 'B/4',\n            },\n            g: {\n                // Ghostnote\n                code_head: 'noteheadBlack',\n            },\n        },\n    },\n    32: {\n        common: {\n            beam_count: 3,\n            stem_beam_extension: 7.5,\n            stem: true,\n            stem_offset: 0,\n            flag: true,\n            code_flag_upstem: 'flag32ndUp',\n            code_flag_downstem: 'flag32ndDown',\n            stem_up_extension: 9,\n            stem_down_extension: 9,\n            tabnote_stem_up_extension: 9,\n            tabnote_stem_down_extension: 9,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        type: {\n            n: {\n                // Thirty-second note\n                code_head: 'noteheadBlack',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadBlack', scale);\n                // },\n            },\n            h: {\n                // Thirty-second harmonic\n                code_head: 'noteheadDiamondBlack',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadDiamondBlack', scale);\n                // },\n            },\n            m: {\n                // Thirty-second muted\n                code_head: 'noteheadXBlack',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadXBlack', scale);\n                // },\n            },\n            r: {\n                // Thirty-second rest\n                code_head: 'rest32nd',\n                stem: false,\n                flag: false,\n                rest: true,\n                position: 'B/4',\n                dot_shiftY: -1.5,\n                line_above: 2.0,\n                line_below: 2.0,\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('rest32nd', scale);\n                // },\n            },\n            s: {\n                // Thirty-second slash\n                // Drawn with canvas primitives\n                getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n                position: 'B/4',\n            },\n            g: {\n                // Ghostnote\n                code_head: 'noteheadBlack',\n            },\n        },\n    },\n    64: {\n        common: {\n            beam_count: 4,\n            stem_beam_extension: 15,\n            stem: true,\n            stem_offset: 0,\n            flag: true,\n            code_flag_upstem: 'flag64thUp',\n            code_flag_downstem: 'flag64thDown',\n            stem_up_extension: 13,\n            stem_down_extension: 13,\n            tabnote_stem_up_extension: 13,\n            tabnote_stem_down_extension: 13,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        type: {\n            n: {\n                // Sixty-fourth note\n                code_head: 'noteheadBlack',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadBlack', scale);\n                // },\n            },\n            h: {\n                // Sixty-fourth harmonic\n                code_head: 'noteheadDiamondBlack',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadDiamondBlack', scale);\n                // },\n            },\n            m: {\n                // Sixty-fourth muted\n                code_head: 'noteheadXBlack',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadXBlack', scale);\n                // },\n            },\n            r: {\n                // Sixty-fourth rest\n                code_head: 'rest64th',\n                stem: false,\n                flag: false,\n                rest: true,\n                position: 'B/4',\n                dot_shiftY: -1.5,\n                line_above: 2.0,\n                line_below: 3.0,\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('rest64th', scale);\n                // },\n            },\n            s: {\n                // Sixty-fourth slash\n                // Drawn with canvas primitives\n                getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n                position: 'B/4',\n            },\n            g: {\n                // Ghostnote\n                code_head: 'noteheadBlack',\n            },\n        },\n    },\n    128: {\n        common: {\n            beam_count: 5,\n            stem_beam_extension: 22.5,\n            stem: true,\n            stem_offset: 0,\n            flag: true,\n            code_flag_upstem: 'flag128thUp',\n            code_flag_downstem: 'flag128thDown',\n            stem_up_extension: 22,\n            stem_down_extension: 22,\n            tabnote_stem_up_extension: 22,\n            tabnote_stem_down_extension: 22,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        type: {\n            n: {\n                // Hundred-twenty-eight note\n                code_head: 'noteheadBlack',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadBlack', scale);\n                // },\n            },\n            h: {\n                // Hundred-twenty-eight harmonic\n                code_head: 'noteheadDiamondBlack',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadDiamondBlack', scale);\n                // },\n            },\n            m: {\n                // Hundred-twenty-eight muted\n                code_head: 'noteheadXBlack',\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('noteheadXBlack', scale);\n                // },\n            },\n            r: {\n                // Hundred-twenty-eight rest\n                code_head: 'rest128th',\n                stem: false,\n                flag: false,\n                rest: true,\n                position: 'B/4',\n                dot_shiftY: -2.5,\n                line_above: 3.0,\n                line_below: 3.0,\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('rest128th', scale);\n                // },\n            },\n            s: {\n                // Hundred-twenty-eight slash\n                // Drawn with canvas primitives\n                getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n                position: 'B/4',\n            },\n            g: {\n                // Ghostnote\n                code_head: 'noteheadBlack',\n            },\n        },\n    },\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n// @author Mohit Cheppudira\n// @author Greg Ristow (modifications)\nimport { Fraction } from './fraction';\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Music } from './music';\nimport { Tables } from './tables';\nimport { Category, isAccidental, isGraceNote, isGraceNoteGroup, isStaveNote } from './typeguard';\nimport { defined, log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Accidental.DEBUG)\n        log('Vex.Flow.Accidental', args);\n}\n/**\n * An `Accidental` inherits from `Modifier`, and is formatted within a\n * `ModifierContext`. Accidentals are modifiers that can be attached to\n * notes. Support is included for both western and microtonal accidentals.\n *\n * See `tests/accidental_tests.ts` for usage examples.\n */\nexport class Accidental extends Modifier {\n    /**\n     * Create accidental.\n     * @param type value from `Vex.Flow.accidentalCodes.accidentals` table in `tables.ts`.\n     * For example: `#`, `##`, `b`, `n`, etc.\n     */\n    constructor(type) {\n        super();\n        L('New accidental: ', type);\n        this.type = type;\n        this.position = Modifier.Position.LEFT;\n        this.render_options = {\n            // Font size for glyphs\n            font_scale: 38,\n            // Padding between accidental and parentheses on each side\n            parenLeftPadding: 2,\n            parenRightPadding: 2,\n        };\n        this.accidental = Tables.accidentalCodes(this.type);\n        defined(this.accidental, 'ArgumentError', `Unknown accidental type: ${type}`);\n        // Cautionary accidentals have parentheses around them\n        this.cautionary = false;\n        this.reset();\n    }\n    /** Accidentals category string. */\n    static get CATEGORY() {\n        return Category.Accidental;\n    }\n    /** Arrange accidentals inside a ModifierContext. */\n    static format(accidentals, state) {\n        // If there are no accidentals, no need to format their positions.\n        if (!accidentals || accidentals.length === 0)\n            return;\n        const musicFont = Tables.currentMusicFont();\n        const noteheadAccidentalPadding = musicFont.lookupMetric('accidental.noteheadAccidentalPadding');\n        const leftShift = state.left_shift + noteheadAccidentalPadding;\n        const accidentalSpacing = musicFont.lookupMetric('accidental.accidentalSpacing');\n        const additionalPadding = musicFont.lookupMetric('accidental.leftPadding'); // padding to the left of all accidentals\n        const accList = [];\n        let prevNote = undefined;\n        let shiftL = 0;\n        // First determine the accidentals' Y positions from the note.keys\n        for (let i = 0; i < accidentals.length; ++i) {\n            const acc = accidentals[i];\n            const note = acc.getNote();\n            const stave = note.getStave();\n            const index = acc.checkIndex();\n            const props = note.getKeyProps()[index];\n            if (note !== prevNote) {\n                // Iterate through all notes to get the displaced pixels\n                for (let n = 0; n < note.keys.length; ++n) {\n                    shiftL = Math.max(note.getLeftDisplacedHeadPx() - note.getXShift(), shiftL);\n                }\n                prevNote = note;\n            }\n            if (stave) {\n                const lineSpace = stave.getSpacingBetweenLines();\n                const y = stave.getYForLine(props.line);\n                const accLine = Math.round((y / lineSpace) * 2) / 2;\n                accList.push({ y, line: accLine, shift: shiftL, acc, lineSpace });\n            }\n            else {\n                accList.push({ line: props.line, shift: shiftL, acc });\n            }\n        }\n        // Sort accidentals by line number.\n        accList.sort((a, b) => b.line - a.line);\n        // FIXME: Confusing name. Each object in this array has a property called `line`.\n        // So if this is a list of lines, you end up with: `line.line` which is very awkward.\n        const lineList = [];\n        // amount by which all accidentals must be shifted right or left for\n        // stem flipping, notehead shifting concerns.\n        let accShift = 0;\n        let previousLine = undefined;\n        // Create an array of unique line numbers (lineList) from accList\n        for (let i = 0; i < accList.length; i++) {\n            const acc = accList[i];\n            // if this is the first line, or a new line, add a lineList\n            if (previousLine === undefined || previousLine !== acc.line) {\n                lineList.push({\n                    line: acc.line,\n                    flatLine: true,\n                    dblSharpLine: true,\n                    numAcc: 0,\n                    width: 0,\n                    column: 0,\n                });\n            }\n            // if this accidental is not a flat, the accidental needs 3.0 lines lower\n            // clearance instead of 2.5 lines for b or bb.\n            // FIXME: Naming could use work. acc.acc is very awkward\n            if (acc.acc.type !== 'b' && acc.acc.type !== 'bb') {\n                lineList[lineList.length - 1].flatLine = false;\n            }\n            // if this accidental is not a double sharp, the accidental needs 3.0 lines above\n            if (acc.acc.type !== '##') {\n                lineList[lineList.length - 1].dblSharpLine = false;\n            }\n            // Track how many accidentals are on this line:\n            lineList[lineList.length - 1].numAcc++;\n            // Track the total x_offset needed for this line which will be needed\n            // for formatting lines w/ multiple accidentals:\n            // width = accidental width + universal spacing between accidentals\n            lineList[lineList.length - 1].width += acc.acc.getWidth() + accidentalSpacing;\n            // if this accShift is larger, use it to keep first column accidentals in the same line\n            accShift = acc.shift > accShift ? acc.shift : accShift;\n            previousLine = acc.line;\n        }\n        // ### Place Accidentals in Columns\n        //\n        // Default to a classic triangular layout (middle accidental farthest left),\n        // but follow exceptions as outlined in G. Read's _Music Notation_ and\n        // Elaine Gould's _Behind Bars_.\n        //\n        // Additionally, this implements different vertical collision rules for\n        // flats (only need 2.5 lines clearance below) and double sharps (only\n        // need 2.5 lines of clearance above or below).\n        //\n        // Classic layouts and exception patterns are found in the 'tables.js'\n        // in 'Tables.accidentalColumnsTable'\n        //\n        // Beyond 6 vertical accidentals, default to the parallel ascending lines approach,\n        // using as few columns as possible for the verticle structure.\n        //\n        // TODO (?): Allow column to be specified for an accidental at run-time?\n        let totalColumns = 0;\n        // establish the boundaries for a group of notes with clashing accidentals:\n        for (let i = 0; i < lineList.length; i++) {\n            let noFurtherConflicts = false;\n            const groupStart = i;\n            let groupEnd = i;\n            while (groupEnd + 1 < lineList.length && !noFurtherConflicts) {\n                // if this note conflicts with the next:\n                if (this.checkCollision(lineList[groupEnd], lineList[groupEnd + 1])) {\n                    // include the next note in the group:\n                    groupEnd++;\n                }\n                else {\n                    noFurtherConflicts = true;\n                }\n            }\n            // Gets an a line from the `lineList`, relative to the current group\n            const getGroupLine = (index) => lineList[groupStart + index];\n            const getGroupLines = (indexes) => indexes.map(getGroupLine);\n            const lineDifference = (indexA, indexB) => {\n                const [a, b] = getGroupLines([indexA, indexB]).map((item) => item.line);\n                return a - b;\n            };\n            const notColliding = (...indexPairs) => indexPairs.map(getGroupLines).every(([line1, line2]) => !this.checkCollision(line1, line2));\n            // Set columns for the lines in this group:\n            const groupLength = groupEnd - groupStart + 1;\n            // Set the accidental column for each line of the group\n            let endCase = this.checkCollision(lineList[groupStart], lineList[groupEnd]) ? 'a' : 'b';\n            switch (groupLength) {\n                case 3:\n                    if (endCase === 'a' && lineDifference(1, 2) === 0.5 && lineDifference(0, 1) !== 0.5) {\n                        endCase = 'second_on_bottom';\n                    }\n                    break;\n                case 4:\n                    if (notColliding([0, 2], [1, 3])) {\n                        endCase = 'spaced_out_tetrachord';\n                    }\n                    break;\n                case 5:\n                    if (endCase === 'b' && notColliding([1, 3])) {\n                        endCase = 'spaced_out_pentachord';\n                        if (notColliding([0, 2], [2, 4])) {\n                            endCase = 'very_spaced_out_pentachord';\n                        }\n                    }\n                    break;\n                case 6:\n                    if (notColliding([0, 3], [1, 4], [2, 5])) {\n                        endCase = 'spaced_out_hexachord';\n                    }\n                    if (notColliding([0, 2], [2, 4], [1, 3], [3, 5])) {\n                        endCase = 'very_spaced_out_hexachord';\n                    }\n                    break;\n                default:\n                    break;\n            }\n            let groupMember;\n            let column;\n            // If the group contains seven members or more, use ascending parallel lines\n            // of accidentals, using as few columns as possible while avoiding collisions.\n            if (groupLength >= 7) {\n                // First, determine how many columns to use:\n                let patternLength = 2;\n                let collisionDetected = true;\n                while (collisionDetected === true) {\n                    collisionDetected = false;\n                    for (let line = 0; line + patternLength < lineList.length; line++) {\n                        if (this.checkCollision(lineList[line], lineList[line + patternLength])) {\n                            collisionDetected = true;\n                            patternLength++;\n                            break;\n                        }\n                    }\n                }\n                // Then, assign a column to each line of accidentals\n                for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n                    column = ((groupMember - i) % patternLength) + 1;\n                    lineList[groupMember].column = column;\n                    totalColumns = totalColumns > column ? totalColumns : column;\n                }\n            }\n            else {\n                // If the group contains fewer than seven members, use the layouts from\n                // the Tables.accidentalColumnsTable (See: tables.ts).\n                for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n                    column = Tables.accidentalColumnsTable[groupLength][endCase][groupMember - i];\n                    lineList[groupMember].column = column;\n                    totalColumns = totalColumns > column ? totalColumns : column;\n                }\n            }\n            // Increment i to the last note that was set, so that if a lower set of notes\n            // does not conflict at all with this group, it can have its own classic shape.\n            i = groupEnd;\n        }\n        // ### Convert Columns to x_offsets\n        //\n        // This keeps columns aligned, even if they have different accidentals within them\n        // which sometimes results in a larger x_offset than is an accidental might need\n        // to preserve the symmetry of the accidental shape.\n        //\n        // Neither A.C. Vinci nor G. Read address this, and it typically only happens in\n        // music with complex chord clusters.\n        //\n        // TODO (?): Optionally allow closer compression of accidentals, instead of forcing\n        // parallel columns.\n        // track each column's max width, which will be used as initial shift of later columns:\n        const columnWidths = [];\n        const columnXOffsets = [];\n        for (let i = 0; i <= totalColumns; i++) {\n            columnWidths[i] = 0;\n            columnXOffsets[i] = 0;\n        }\n        columnWidths[0] = accShift + leftShift;\n        columnXOffsets[0] = accShift + leftShift;\n        // Fill columnWidths with widest needed x-space;\n        // this is what keeps the columns parallel.\n        lineList.forEach((line) => {\n            if (line.width > columnWidths[line.column])\n                columnWidths[line.column] = line.width;\n        });\n        for (let i = 1; i < columnWidths.length; i++) {\n            // this column's offset = this column's width + previous column's offset\n            columnXOffsets[i] = columnWidths[i] + columnXOffsets[i - 1];\n        }\n        const totalShift = columnXOffsets[columnXOffsets.length - 1];\n        // Set the xShift for each accidental according to column offsets:\n        let accCount = 0;\n        lineList.forEach((line) => {\n            let lineWidth = 0;\n            const lastAccOnLine = accCount + line.numAcc;\n            // handle all of the accidentals on a given line:\n            for (accCount; accCount < lastAccOnLine; accCount++) {\n                const xShift = columnXOffsets[line.column - 1] + lineWidth;\n                accList[accCount].acc.setXShift(xShift);\n                // keep track of the width of accidentals we've added so far, so that when\n                // we loop, we add space for them.\n                lineWidth += accList[accCount].acc.getWidth() + accidentalSpacing;\n                L('Line, accCount, shift: ', line.line, accCount, xShift);\n            }\n        });\n        // update the overall layout with the full width of the accidental shapes:\n        state.left_shift += totalShift + additionalPadding;\n    }\n    /** Helper function to determine whether two lines of accidentals collide vertically */\n    static checkCollision(line1, line2) {\n        let clearance = line2.line - line1.line;\n        let clearanceRequired = 3;\n        // But less clearance is required for certain accidentals: b, bb and ##.\n        if (clearance > 0) {\n            // then line 2 is on top\n            clearanceRequired = line2.flatLine || line2.dblSharpLine ? 2.5 : 3.0;\n            if (line1.dblSharpLine)\n                clearance -= 0.5;\n        }\n        else {\n            // line 1 is on top\n            clearanceRequired = line1.flatLine || line1.dblSharpLine ? 2.5 : 3.0;\n            if (line2.dblSharpLine)\n                clearance -= 0.5;\n        }\n        const collision = Math.abs(clearance) < clearanceRequired;\n        L('Line_1, Line_2, Collision: ', line1.line, line2.line, collision);\n        return collision;\n    }\n    /**\n     * Use this method to automatically apply accidentals to a set of `voices`.\n     * The accidentals will be remembered between all the voices provided.\n     * Optionally, you can also provide an initial `keySignature`.\n     */\n    static applyAccidentals(voices, keySignature) {\n        const tickPositions = [];\n        const tickNoteMap = {};\n        // Sort the tickables in each voice by their tick position in the voice.\n        voices.forEach((voice) => {\n            const tickPosition = new Fraction(0, 1);\n            const tickable = voice.getTickables();\n            tickable.forEach((t) => {\n                if (t.shouldIgnoreTicks())\n                    return;\n                const notesAtPosition = tickNoteMap[tickPosition.value()];\n                if (!notesAtPosition) {\n                    tickPositions.push(tickPosition.value());\n                    tickNoteMap[tickPosition.value()] = [t];\n                }\n                else {\n                    notesAtPosition.push(t);\n                }\n                tickPosition.add(t.getTicks());\n            });\n        });\n        const music = new Music();\n        // Default key signature is C major.\n        if (!keySignature)\n            keySignature = 'C';\n        // Get the scale map, which represents the current state of each pitch.\n        const scaleMapKey = music.createScaleMap(keySignature);\n        const scaleMap = {};\n        tickPositions.forEach((tickPos) => {\n            const tickables = tickNoteMap[tickPos];\n            // Array to store all pitches that modified accidental states\n            // at this tick position\n            const modifiedPitches = [];\n            const processNote = (t) => {\n                // Only StaveNote implements .addModifier(), which is used below.\n                if (!isStaveNote(t) || t.isRest() || t.shouldIgnoreTicks()) {\n                    return;\n                }\n                // Go through each key and determine if an accidental should be applied.\n                const staveNote = t;\n                staveNote.keys.forEach((keyString, keyIndex) => {\n                    const key = music.getNoteParts(keyString.split('/')[0]);\n                    const octave = keyString.split('/')[1];\n                    // Force a natural for every key without an accidental\n                    const accidentalString = key.accidental || 'n';\n                    const pitch = key.root + accidentalString;\n                    // Determine if the current pitch has the same accidental\n                    // as the scale state\n                    if (!scaleMap[key.root + octave])\n                        scaleMap[key.root + octave] = scaleMapKey[key.root];\n                    const sameAccidental = scaleMap[key.root + octave] === pitch;\n                    // Determine if an identical pitch in the chord already\n                    // modified the accidental state\n                    const previouslyModified = modifiedPitches.indexOf(keyString) > -1;\n                    // Remove accidentals\n                    staveNote.getModifiers().forEach((modifier, index) => {\n                        if (isAccidental(modifier) && modifier.type == accidentalString && modifier.getIndex() == keyIndex) {\n                            staveNote.getModifiers().splice(index, 1);\n                        }\n                    });\n                    // Add the accidental to the StaveNote\n                    if (!sameAccidental || (sameAccidental && previouslyModified)) {\n                        // Modify the scale map so that the root pitch has an\n                        // updated state\n                        scaleMap[key.root + octave] = pitch;\n                        // Create the accidental\n                        const accidental = new Accidental(accidentalString);\n                        // Attach the accidental to the StaveNote\n                        staveNote.addModifier(accidental, keyIndex);\n                        // Add the pitch to list of pitches that modified accidentals\n                        modifiedPitches.push(keyString);\n                    }\n                });\n                // process grace notes\n                staveNote.getModifiers().forEach((modifier) => {\n                    if (isGraceNoteGroup(modifier)) {\n                        modifier.getGraceNotes().forEach(processNote);\n                    }\n                });\n            };\n            tickables.forEach(processNote);\n        });\n    }\n    reset() {\n        const fontScale = this.render_options.font_scale;\n        this.glyph = new Glyph(this.accidental.code, fontScale);\n        this.glyph.setOriginX(1.0);\n        if (this.cautionary) {\n            this.parenLeft = new Glyph(Tables.accidentalCodes('{').code, fontScale);\n            this.parenRight = new Glyph(Tables.accidentalCodes('}').code, fontScale);\n            this.parenLeft.setOriginX(1.0);\n            this.parenRight.setOriginX(1.0);\n        }\n    }\n    /** Get width in pixels. */\n    getWidth() {\n        if (this.cautionary) {\n            const parenLeft = defined(this.parenLeft);\n            const parenRight = defined(this.parenRight);\n            const parenWidth = parenLeft.getMetrics().width +\n                parenRight.getMetrics().width +\n                this.render_options.parenLeftPadding +\n                this.render_options.parenRightPadding;\n            return this.glyph.getMetrics().width + parenWidth;\n        }\n        else {\n            return this.glyph.getMetrics().width;\n        }\n    }\n    /** Attach this accidental to `note`, which must be a `StaveNote`. */\n    setNote(note) {\n        defined(note, 'ArgumentError', `Bad note value: ${note}`);\n        this.note = note;\n        // Accidentals attached to grace notes are rendered smaller.\n        if (isGraceNote(note)) {\n            this.render_options.font_scale = 25;\n            this.reset();\n        }\n        return this;\n    }\n    /** If called, draws parenthesis around accidental. */\n    setAsCautionary() {\n        this.cautionary = true;\n        this.render_options.font_scale = 28;\n        this.reset();\n        return this;\n    }\n    /** Render accidental onto canvas. */\n    draw() {\n        const { type, position, index, cautionary, x_shift, y_shift, glyph, render_options: { parenLeftPadding, parenRightPadding }, } = this;\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        // Figure out the start `x` and `y` coordinates for note and index.\n        const start = note.getModifierStartXY(position, index);\n        let accX = start.x + x_shift;\n        const accY = start.y + y_shift;\n        L('Rendering: ', type, accX, accY);\n        if (!cautionary) {\n            glyph.render(ctx, accX, accY);\n        }\n        else {\n            const parenLeft = defined(this.parenLeft);\n            const parenRight = defined(this.parenRight);\n            // Render the accidental in parentheses.\n            parenRight.render(ctx, accX, accY);\n            accX -= parenRight.getMetrics().width;\n            accX -= parenRightPadding;\n            accX -= this.accidental.parenRightPaddingAdjustment;\n            glyph.render(ctx, accX, accY);\n            accX -= glyph.getMetrics().width;\n            accX -= parenLeftPadding;\n            parenLeft.render(ctx, accX, accY);\n        }\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Accidental.DEBUG` to `true`. */\nAccidental.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements the `Stem` object. Generally this object is handled\n// by its parent `StemmableNote`.\nimport { Element } from './element';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Stem.DEBUG)\n        log('Vex.Flow.Stem', args);\n}\nexport class Stem extends Element {\n    constructor(options) {\n        super();\n        this.stem_up_y_offset = 0;\n        this.stem_down_y_offset = 0;\n        this.stem_up_y_base_offset = 0;\n        this.stem_down_y_base_offset = 0;\n        // Default notehead x bounds\n        this.x_begin = (options === null || options === void 0 ? void 0 : options.x_begin) || 0;\n        this.x_end = (options === null || options === void 0 ? void 0 : options.x_end) || 0;\n        // Y bounds for top/bottom most notehead\n        this.y_top = (options === null || options === void 0 ? void 0 : options.y_top) || 0;\n        this.y_bottom = (options === null || options === void 0 ? void 0 : options.y_bottom) || 0;\n        // Stem top extension\n        this.stem_extension = (options === null || options === void 0 ? void 0 : options.stem_extension) || 0;\n        // Direction of the stem\n        this.stem_direction = (options === null || options === void 0 ? void 0 : options.stem_direction) || 0;\n        // Flag to override all draw calls\n        this.hide = (options === null || options === void 0 ? void 0 : options.hide) || false;\n        this.isStemlet = (options === null || options === void 0 ? void 0 : options.isStemlet) || false;\n        this.stemletHeight = (options === null || options === void 0 ? void 0 : options.stemletHeight) || 0;\n        // Use to adjust the rendered height without affecting\n        // the results of `.getExtents()`\n        this.renderHeightAdjustment = 0;\n        this.setOptions(options);\n    }\n    static get CATEGORY() {\n        return Category.Stem;\n    }\n    // Stem directions\n    static get UP() {\n        return 1;\n    }\n    static get DOWN() {\n        return -1;\n    }\n    // Theme\n    static get WIDTH() {\n        return Tables.STEM_WIDTH;\n    }\n    static get HEIGHT() {\n        return Tables.STEM_HEIGHT;\n    }\n    setOptions(options) {\n        // Changing where the stem meets the head\n        this.stem_up_y_offset = (options === null || options === void 0 ? void 0 : options.stem_up_y_offset) || 0;\n        this.stem_down_y_offset = (options === null || options === void 0 ? void 0 : options.stem_down_y_offset) || 0;\n        this.stem_up_y_base_offset = (options === null || options === void 0 ? void 0 : options.stem_up_y_base_offset) || 0;\n        this.stem_down_y_base_offset = (options === null || options === void 0 ? void 0 : options.stem_down_y_base_offset) || 0;\n    }\n    // Set the x bounds for the default notehead\n    setNoteHeadXBounds(x_begin, x_end) {\n        this.x_begin = x_begin;\n        this.x_end = x_end;\n        return this;\n    }\n    // Set the direction of the stem in relation to the noteheads\n    setDirection(direction) {\n        this.stem_direction = direction;\n    }\n    // Set the extension for the stem, generally for flags or beams\n    setExtension(ext) {\n        this.stem_extension = ext;\n    }\n    getExtension() {\n        return this.stem_extension;\n    }\n    // The the y bounds for the top and bottom noteheads\n    setYBounds(y_top, y_bottom) {\n        this.y_top = y_top;\n        this.y_bottom = y_bottom;\n    }\n    // Gets the entire height for the stem\n    getHeight() {\n        const y_offset = this.stem_direction === Stem.UP ? this.stem_up_y_offset : this.stem_down_y_offset;\n        const unsigned_height = this.y_bottom - this.y_top + (Stem.HEIGHT - y_offset + this.stem_extension); // parentheses just for grouping.\n        return unsigned_height * this.stem_direction;\n    }\n    getBoundingBox() {\n        throw new RuntimeError('NotImplemented', 'getBoundingBox() not implemented.');\n    }\n    // Get the y coordinates for the very base of the stem to the top of\n    // the extension\n    getExtents() {\n        const isStemUp = this.stem_direction === Stem.UP;\n        const ys = [this.y_top, this.y_bottom];\n        const stemHeight = Stem.HEIGHT + this.stem_extension;\n        const innerMostNoteheadY = (isStemUp ? Math.min : Math.max)(...ys);\n        const outerMostNoteheadY = (isStemUp ? Math.max : Math.min)(...ys);\n        const stemTipY = innerMostNoteheadY + stemHeight * -this.stem_direction;\n        return { topY: stemTipY, baseY: outerMostNoteheadY };\n    }\n    setVisibility(isVisible) {\n        this.hide = !isVisible;\n        return this;\n    }\n    setStemlet(isStemlet, stemletHeight) {\n        this.isStemlet = isStemlet;\n        this.stemletHeight = stemletHeight;\n        return this;\n    }\n    adjustHeightForFlag() {\n        this.renderHeightAdjustment = Tables.currentMusicFont().lookupMetric('stem.heightAdjustmentForFlag', -3);\n    }\n    adjustHeightForBeam() {\n        this.renderHeightAdjustment = -Stem.WIDTH / 2;\n    }\n    // Render the stem onto the canvas\n    draw() {\n        this.setRendered();\n        if (this.hide)\n            return;\n        const ctx = this.checkContext();\n        let stem_x;\n        let stem_y;\n        const stem_direction = this.stem_direction;\n        let y_base_offset = 0;\n        if (stem_direction === Stem.DOWN) {\n            // Down stems are rendered to the left of the head.\n            stem_x = this.x_begin;\n            stem_y = this.y_top + this.stem_down_y_offset;\n            y_base_offset = this.stem_down_y_base_offset;\n        }\n        else {\n            // Up stems are rendered to the right of the head.\n            stem_x = this.x_end;\n            stem_y = this.y_bottom - this.stem_up_y_offset;\n            y_base_offset = this.stem_up_y_base_offset;\n        }\n        const stemHeight = this.getHeight();\n        L('Rendering stem - ', 'Top Y: ', this.y_top, 'Bottom Y: ', this.y_bottom);\n        // The offset from the stem's base which is required fo satisfy the stemlet height\n        const stemletYOffset = this.isStemlet ? stemHeight - this.stemletHeight * this.stem_direction : 0;\n        // Draw the stem\n        ctx.save();\n        this.applyStyle(ctx);\n        ctx.beginPath();\n        ctx.setLineWidth(Stem.WIDTH);\n        ctx.moveTo(stem_x, stem_y - stemletYOffset + y_base_offset);\n        ctx.lineTo(stem_x, stem_y - stemHeight - this.renderHeightAdjustment * stem_direction);\n        ctx.stroke();\n        this.restoreStyle(ctx);\n        ctx.restore();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Stem.DEBUG` to `true`. */\nStem.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font, FontStyle, FontWeight } from './font';\nimport { log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (TextFormatter.DEBUG)\n        log('Vex.Flow.TextFormatter', args);\n}\n/**\n * Text widths are stored in a cache, so we don't have to recompute widths\n * for the same font + string combination.\n *\n * The cache is first keyed by the font information. The key is of the form:\n *   `${family}-${size}-${weight}-${style}`\n * The second level key is the specific text to be measured.\n *\n * The stored value is the measured width in `em` units.\n *   textWidth == textWidthCache[cacheKey][textToMeasure]\n */\nconst textWidthCache = {};\n/**\n * Applications may register additional fonts via `TextFormatter.registerInfo(info)`.\n * The metrics for those fonts will be made available to the application.\n */\nconst registry = {};\nexport class TextFormatter {\n    /**\n     * Use `TextFormatter.create(...)` to build an instance from information previously\n     * registered via `TextFormatter.registerInfo(info)`.\n     */\n    constructor(formatterInfo) {\n        /** Font family. */\n        this.family = '';\n        /** Specified in `pt` units. */\n        this.size = 14;\n        /** Font metrics are extracted at 1000 upem (units per em). */\n        this.resolution = 1000;\n        /**\n         * For text formatting, we do not require glyph outlines, but instead rely on glyph\n         * bounding box metrics such as:\n         * ```\n         * {\n         *    x_min: 48,\n         *    x_max: 235,\n         *    y_min: -17,\n         *    y_max: 734,\n         *    ha: 751,\n         *    leftSideBearing: 48,\n         *    advanceWidth: 286,\n         *  }\n         * ```\n         */\n        this.glyphs = {};\n        this.serifs = false;\n        this.monospaced = false;\n        this.italic = false;\n        this.bold = false;\n        this.superscriptOffset = 0;\n        this.subscriptOffset = 0;\n        this.maxSizeGlyph = 'H';\n        // This is an internal key used to index the `textWidthCache`.\n        this.cacheKey = '';\n        this.updateParams(formatterInfo);\n    }\n    /**\n     * Return all registered font families.\n     */\n    static getFontFamilies() {\n        const registeredFonts = [];\n        for (const fontFamily in registry) {\n            const formatterInfo = registry[fontFamily];\n            registeredFonts.push(Object.assign({}, formatterInfo));\n        }\n        return registeredFonts;\n    }\n    /**\n     * Call `TextFormatter.registerInfo(info)` to register font information before using this method.\n     *\n     * This method creates a formatter for the font that most closely matches the requested font.\n     * We compare font family, bold, and italic attributes.\n     * This method will return a fallback formatter if there are no matches.\n     */\n    static create(requestedFont = {}) {\n        L('create: ', requestedFont);\n        if (!requestedFont.family) {\n            requestedFont.family = Font.SANS_SERIF;\n        }\n        // TODO: One potential (small) optimization is to cache the TextFormatter object\n        // returned for each font info. We would probably want to clear the cache if\n        // the registry is ever updated.\n        const candidates = [];\n        // The incoming font family is a string of comma-separated font family names.\n        // (e.g., `PetalumaScript, Arial, sans-serif`).\n        const requestedFamilies = requestedFont.family.split(/\\s*,\\s*/);\n        for (const requestedFamily of requestedFamilies) {\n            for (const fontFamily in registry) {\n                // Support cases where the registry contains 'Roboto Slab Medium',\n                // but the requestedFont.family is 'Roboto Slab'.\n                if (fontFamily.startsWith(requestedFamily)) {\n                    candidates.push(registry[fontFamily]);\n                }\n            }\n            if (candidates.length > 0) {\n                break;\n            }\n        }\n        let formatter;\n        if (candidates.length === 0) {\n            // No match, so return a fallback text formatter.\n            formatter = new TextFormatter(Object.values(registry)[0]);\n        }\n        else if (candidates.length === 1) {\n            formatter = new TextFormatter(candidates[0]);\n        }\n        else {\n            const bold = Font.isBold(requestedFont.weight);\n            const italic = Font.isItalic(requestedFont.style);\n            const perfectMatch = candidates.find((f) => f.bold === bold && f.italic === italic);\n            if (perfectMatch) {\n                formatter = new TextFormatter(perfectMatch);\n            }\n            else {\n                const partialMatch = candidates.find((f) => f.italic === italic || f.bold === bold);\n                if (partialMatch) {\n                    formatter = new TextFormatter(partialMatch);\n                }\n                else {\n                    formatter = new TextFormatter(candidates[0]);\n                }\n            }\n        }\n        const fontSize = requestedFont.size;\n        if (typeof fontSize !== 'undefined') {\n            const fontSizeInPt = Font.convertSizeToPointValue(fontSize);\n            formatter.setFontSize(fontSizeInPt);\n        }\n        return formatter;\n    }\n    /**\n     * @param fontFamily used as a key to the font registry.\n     * @returns the same info object that was passed in via `TextFormatter.registerInfo(info)`\n     */\n    static getInfo(fontFamily) {\n        return registry[fontFamily];\n    }\n    /**\n     * Apps may register their own fonts and metrics, and those metrics\n     * will be available to the app for formatting.\n     *\n     * Metrics can be generated from a font file using fontgen_text.js in the tools/fonts directory.\n     * @param info\n     * @param overwrite\n     */\n    static registerInfo(info, overwrite = false) {\n        L('registerInfo: ', info, overwrite);\n        const fontFamily = info.family;\n        const currFontInfo = registry[fontFamily];\n        if (currFontInfo === undefined || overwrite) {\n            registry[fontFamily] = info;\n        }\n    }\n    updateParams(params) {\n        if (params.family)\n            this.family = params.family;\n        if (params.resolution)\n            this.resolution = params.resolution;\n        if (params.glyphs)\n            this.glyphs = params.glyphs;\n        if (params.serifs)\n            this.serifs = params.serifs;\n        if (params.monospaced)\n            this.monospaced = params.monospaced;\n        if (params.italic)\n            this.italic = params.italic;\n        if (params.bold)\n            this.bold = params.bold;\n        if (params.maxSizeGlyph)\n            this.maxSizeGlyph = params.maxSizeGlyph;\n        if (params.superscriptOffset)\n            this.superscriptOffset = params.superscriptOffset;\n        if (params.subscriptOffset)\n            this.subscriptOffset = params.subscriptOffset;\n        this.updateCacheKey();\n    }\n    /** Create a hash with the current font data, so we can cache computed widths. */\n    updateCacheKey() {\n        const family = this.family.replace(/\\s+/g, '_');\n        const size = this.size;\n        const weight = this.bold ? FontWeight.BOLD : FontWeight.NORMAL;\n        const style = this.italic ? FontStyle.ITALIC : FontStyle.NORMAL;\n        // Use the same key format as SVGContext.\n        this.cacheKey = `${family}%${size}%${weight}%${style}`;\n    }\n    /**\n     * The glyphs table is indexed by the character (e.g., 'C', '@').\n     * See: robotoslab_glyphs.ts & petalumascript_glyphs.ts.\n     */\n    getGlyphMetrics(character) {\n        if (this.glyphs[character]) {\n            return this.glyphs[character];\n        }\n        else {\n            return this.glyphs[this.maxSizeGlyph];\n        }\n    }\n    get maxHeight() {\n        const metrics = this.getGlyphMetrics(this.maxSizeGlyph);\n        return (metrics.ha / this.resolution) * this.fontSizeInPixels;\n    }\n    /**\n     * Retrieve the character's advanceWidth as a fraction of an `em` unit.\n     * For the space character ' ' as defined in the:\n     *   petalumascript_glyphs.ts: 250 advanceWidth in the 1000 unitsPerEm font returns 0.25.\n     *   robotoslab_glyphs.ts:     509 advanceWidth in the 2048 unitsPerEm font returns 0.2485.\n     */\n    getWidthForCharacterInEm(c) {\n        var _a;\n        const metrics = this.getGlyphMetrics(c);\n        if (!metrics) {\n            // An arbitrary number, close to the `em` width of the '#' and '5' characters in PetalumaScript.\n            return 0.65;\n        }\n        else {\n            const advanceWidth = (_a = metrics.advanceWidth) !== null && _a !== void 0 ? _a : 0;\n            return advanceWidth / this.resolution;\n        }\n    }\n    /**\n     * Retrieve the total width of `text` in `em` units.\n     */\n    getWidthForTextInEm(text) {\n        const key = this.cacheKey;\n        // Get the cache for this specific font family, size, weight, style combination.\n        // The cache contains previously computed widths for different `text` strings.\n        let cachedWidths = textWidthCache[key];\n        if (cachedWidths === undefined) {\n            cachedWidths = {};\n            textWidthCache[key] = cachedWidths;\n        }\n        let width = cachedWidths[text];\n        if (width === undefined) {\n            width = 0;\n            for (let i = 0; i < text.length; ++i) {\n                width += this.getWidthForCharacterInEm(text[i]);\n            }\n            cachedWidths[text] = width;\n        }\n        return width;\n    }\n    /** The width of the text (in `em`) is scaled by the font size (in `px`). */\n    getWidthForTextInPx(text) {\n        return this.getWidthForTextInEm(text) * this.fontSizeInPixels;\n    }\n    /**\n     * @param size in pt.\n     */\n    setFontSize(size) {\n        this.size = size;\n        // The width cache key depends on the current font size.\n        this.updateCacheKey();\n        return this;\n    }\n    /** `this.size` is specified in points. Convert to pixels. */\n    get fontSizeInPixels() {\n        return this.size * Font.scaleToPxFrom.pt;\n    }\n    getResolution() {\n        return this.resolution;\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.TextFormatter.DEBUG` to `true`. */\nTextFormatter.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { TextFormatter } from './textformatter';\nimport { Category, isStemmableNote, isTabNote } from './typeguard';\nimport { log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Annotation.DEBUG)\n        log('Vex.Flow.Annotation', args);\n}\nexport var AnnotationHorizontalJustify;\n(function (AnnotationHorizontalJustify) {\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"LEFT\"] = 1] = \"LEFT\";\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"CENTER\"] = 2] = \"CENTER\";\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"RIGHT\"] = 3] = \"RIGHT\";\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"CENTER_STEM\"] = 4] = \"CENTER_STEM\";\n})(AnnotationHorizontalJustify || (AnnotationHorizontalJustify = {}));\nexport var AnnotationVerticalJustify;\n(function (AnnotationVerticalJustify) {\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"TOP\"] = 1] = \"TOP\";\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"CENTER\"] = 2] = \"CENTER\";\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"BOTTOM\"] = 3] = \"BOTTOM\";\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"CENTER_STEM\"] = 4] = \"CENTER_STEM\";\n})(AnnotationVerticalJustify || (AnnotationVerticalJustify = {}));\n/**\n * Annotations are modifiers that can be attached to\n * notes.\n *\n * See `tests/annotation_tests.ts` for usage examples.\n */\nexport class Annotation extends Modifier {\n    /**\n     * Annotations inherit from `Modifier` and is positioned correctly when\n     * in a `ModifierContext`.\n     * Create a new `Annotation` with the string `text`.\n     */\n    constructor(text) {\n        super();\n        this.text = text;\n        this.horizontalJustification = AnnotationHorizontalJustify.CENTER;\n        // warning: the default in the constructor is TOP, but in the factory the default is BOTTOM.\n        // this is to support legacy application that may expect this.\n        this.verticalJustification = AnnotationVerticalJustify.TOP;\n        this.resetFont();\n        // The default width is calculated from the text.\n        this.setWidth(Tables.textWidth(text));\n    }\n    /** Annotations category string. */\n    static get CATEGORY() {\n        return Category.Annotation;\n    }\n    // Use the same padding for annotations as note head so the\n    // words don't run into each other.\n    static get minAnnotationPadding() {\n        const musicFont = Tables.currentMusicFont();\n        return musicFont.lookupMetric('glyphs.noteHead.minPadding');\n    }\n    /** Arrange annotations within a `ModifierContext` */\n    static format(annotations, state) {\n        if (!annotations || annotations.length === 0)\n            return false;\n        let leftWidth = 0;\n        let rightWidth = 0;\n        let maxLeftGlyphWidth = 0;\n        let maxRightGlyphWidth = 0;\n        for (let i = 0; i < annotations.length; ++i) {\n            const annotation = annotations[i];\n            const textFormatter = TextFormatter.create(annotation.textFont);\n            // Text height is expressed in fractional stave spaces.\n            const textLines = (5 + textFormatter.maxHeight) / Tables.STAVE_LINE_DISTANCE;\n            let verticalSpaceNeeded = textLines;\n            const note = annotation.checkAttachedNote();\n            const glyphWidth = note.getGlyph().getWidth();\n            // Get the text width from the font metrics.\n            const textWidth = textFormatter.getWidthForTextInPx(annotation.text);\n            if (annotation.horizontalJustification === AnnotationHorizontalJustify.LEFT) {\n                maxLeftGlyphWidth = Math.max(glyphWidth, maxLeftGlyphWidth);\n                leftWidth = Math.max(leftWidth, textWidth) + Annotation.minAnnotationPadding;\n            }\n            else if (annotation.horizontalJustification === AnnotationHorizontalJustify.RIGHT) {\n                maxRightGlyphWidth = Math.max(glyphWidth, maxLeftGlyphWidth);\n                rightWidth = Math.max(rightWidth, textWidth);\n            }\n            else {\n                leftWidth = Math.max(leftWidth, textWidth / 2) + Annotation.minAnnotationPadding;\n                rightWidth = Math.max(rightWidth, textWidth / 2);\n                maxLeftGlyphWidth = Math.max(glyphWidth / 2, maxLeftGlyphWidth);\n                maxRightGlyphWidth = Math.max(glyphWidth / 2, maxRightGlyphWidth);\n            }\n            const stave = note.getStave();\n            const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n            let stemHeight = 0;\n            let lines = 5;\n            if (isTabNote(note)) {\n                if (note.render_options.draw_stem) {\n                    const stem = note.getStem();\n                    if (stem) {\n                        stemHeight = Math.abs(stem.getHeight()) / Tables.STAVE_LINE_DISTANCE;\n                    }\n                }\n                else {\n                    stemHeight = 0;\n                }\n            }\n            else if (isStemmableNote(note)) {\n                const stem = note.getStem();\n                if (stem && note.getNoteType() === 'n') {\n                    stemHeight = Math.abs(stem.getHeight()) / Tables.STAVE_LINE_DISTANCE;\n                }\n            }\n            if (stave) {\n                lines = stave.getNumLines();\n            }\n            if (annotation.verticalJustification === this.VerticalJustify.TOP) {\n                let noteLine = note.getLineNumber(true);\n                if (isTabNote(note)) {\n                    noteLine = lines - (note.leastString() - 0.5);\n                }\n                if (stemDirection === Stem.UP) {\n                    noteLine += stemHeight;\n                }\n                const curTop = noteLine + state.top_text_line + 0.5;\n                if (curTop < lines) {\n                    annotation.setTextLine(lines - noteLine);\n                    verticalSpaceNeeded += lines - noteLine;\n                    state.top_text_line = verticalSpaceNeeded;\n                }\n                else {\n                    annotation.setTextLine(state.top_text_line);\n                    state.top_text_line += verticalSpaceNeeded;\n                }\n            }\n            else if (annotation.verticalJustification === this.VerticalJustify.BOTTOM) {\n                let noteLine = lines - note.getLineNumber();\n                if (isTabNote(note)) {\n                    noteLine = note.greatestString() - 1;\n                }\n                if (stemDirection === Stem.DOWN) {\n                    noteLine += stemHeight;\n                }\n                const curBottom = noteLine + state.text_line + 1;\n                if (curBottom < lines) {\n                    annotation.setTextLine(lines - curBottom);\n                    verticalSpaceNeeded += lines - curBottom;\n                    state.text_line = verticalSpaceNeeded;\n                }\n                else {\n                    annotation.setTextLine(state.text_line);\n                    state.text_line += verticalSpaceNeeded;\n                }\n            }\n            else {\n                annotation.setTextLine(state.text_line);\n            }\n        }\n        const rightOverlap = Math.min(Math.max(rightWidth - maxRightGlyphWidth, 0), Math.max(rightWidth - state.right_shift, 0));\n        const leftOverlap = Math.min(Math.max(leftWidth - maxLeftGlyphWidth, 0), Math.max(leftWidth - state.left_shift, 0));\n        state.left_shift += leftOverlap;\n        state.right_shift += rightOverlap;\n        return true;\n    }\n    /**\n     * Set vertical position of text (above or below stave).\n     * @param just value in `AnnotationVerticalJustify`.\n     */\n    setVerticalJustification(just) {\n        this.verticalJustification = typeof just === 'string' ? Annotation.VerticalJustifyString[just] : just;\n        return this;\n    }\n    /**\n     * Get horizontal justification.\n     */\n    getJustification() {\n        return this.horizontalJustification;\n    }\n    /**\n     * Set horizontal justification.\n     * @param justification value in `Annotation.Justify`.\n     */\n    setJustification(just) {\n        this.horizontalJustification = typeof just === 'string' ? Annotation.HorizontalJustifyString[just] : just;\n        return this;\n    }\n    /** Render text beside the note. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n        const textFormatter = TextFormatter.create(this.textFont);\n        const start = note.getModifierStartXY(ModifierPosition.ABOVE, this.index);\n        this.setRendered();\n        // We're changing context parameters. Save current state.\n        ctx.save();\n        // Apply style might not save context, if this.style is undefined, so we\n        // still need to save context state just before this, since we will be\n        // changing ctx parameters below.\n        this.applyStyle();\n        const classString = Object.keys(this.getAttribute('classes')).join(' ');\n        ctx.openGroup(classString, this.getAttribute('id'));\n        ctx.setFont(this.textFont);\n        const text_width = ctx.measureText(this.text).width;\n        const text_height = textFormatter.maxHeight + 2;\n        let x;\n        let y;\n        if (this.horizontalJustification === AnnotationHorizontalJustify.LEFT) {\n            x = start.x;\n        }\n        else if (this.horizontalJustification === AnnotationHorizontalJustify.RIGHT) {\n            x = start.x - text_width;\n        }\n        else if (this.horizontalJustification === AnnotationHorizontalJustify.CENTER) {\n            x = start.x - text_width / 2;\n        } /* CENTER_STEM */\n        else {\n            x = note.getStemX() - text_width / 2;\n        }\n        let stem_ext = {};\n        let spacing = 0;\n        const has_stem = note.hasStem();\n        const stave = note.checkStave();\n        // The position of the text varies based on whether or not the note\n        // has a stem.\n        if (has_stem) {\n            stem_ext = note.checkStem().getExtents();\n            spacing = stave.getSpacingBetweenLines();\n        }\n        if (this.verticalJustification === AnnotationVerticalJustify.BOTTOM) {\n            // Use the largest (lowest) Y value\n            const ys = note.getYs();\n            y = ys.reduce((a, b) => (a > b ? a : b));\n            y += (this.text_line + 1) * Tables.STAVE_LINE_DISTANCE + text_height;\n            if (has_stem && stemDirection === Stem.DOWN) {\n                y = Math.max(y, stem_ext.topY + text_height + spacing * this.text_line);\n            }\n        }\n        else if (this.verticalJustification === AnnotationVerticalJustify.CENTER) {\n            const yt = note.getYForTopText(this.text_line) - 1;\n            const yb = stave.getYForBottomText(this.text_line);\n            y = yt + (yb - yt) / 2 + text_height / 2;\n        }\n        else if (this.verticalJustification === AnnotationVerticalJustify.TOP) {\n            y = note.getYs()[0] - (this.text_line + 1) * Tables.STAVE_LINE_DISTANCE;\n            if (has_stem && stemDirection === Stem.UP) {\n                // If the stem is above the stave already, go with default line width vs. actual\n                // since the lines between don't really matter.\n                spacing = stem_ext.topY < stave.getTopLineTopY() ? Tables.STAVE_LINE_DISTANCE : spacing;\n                y = Math.min(y, stem_ext.topY - spacing * (this.text_line + 1));\n            }\n        } /* CENTER_STEM */\n        else {\n            const extents = note.getStemExtents();\n            y = extents.topY + (extents.baseY - extents.topY) / 2 + text_height / 2;\n        }\n        L('Rendering annotation: ', this.text, x, y);\n        ctx.fillText(this.text, x, y);\n        ctx.closeGroup();\n        this.restoreStyle();\n        ctx.restore();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Annotation.DEBUG` to `true`. */\nAnnotation.DEBUG = false;\nAnnotation.TEXT_FONT = Object.assign({}, Element.TEXT_FONT);\n/** Text annotations can be positioned and justified relative to the note. */\nAnnotation.HorizontalJustify = AnnotationHorizontalJustify;\nAnnotation.HorizontalJustifyString = {\n    left: AnnotationHorizontalJustify.LEFT,\n    right: AnnotationHorizontalJustify.RIGHT,\n    center: AnnotationHorizontalJustify.CENTER,\n    centerStem: AnnotationHorizontalJustify.CENTER_STEM,\n};\nAnnotation.VerticalJustify = AnnotationVerticalJustify;\nAnnotation.VerticalJustifyString = {\n    above: AnnotationVerticalJustify.TOP,\n    top: AnnotationVerticalJustify.TOP,\n    below: AnnotationVerticalJustify.BOTTOM,\n    bottom: AnnotationVerticalJustify.BOTTOM,\n    center: AnnotationVerticalJustify.CENTER,\n    centerStem: AnnotationVerticalJustify.CENTER_STEM,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns.\n// MIT License\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category, isGraceNote, isStaveNote, isStemmableNote, isTabNote } from './typeguard';\nimport { defined, log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Articulation.DEBUG)\n        log('Vex.Flow.Articulation', args);\n}\nconst { ABOVE, BELOW } = Modifier.Position;\nfunction roundToNearestHalf(mathFn, value) {\n    return mathFn(value / 0.5) * 0.5;\n}\n// This includes both staff and ledger lines\nfunction isWithinLines(line, position) {\n    return position === ABOVE ? line <= 5 : line >= 1;\n}\nfunction getRoundingFunction(line, position) {\n    if (isWithinLines(line, position)) {\n        if (position === ABOVE) {\n            return Math.ceil;\n        }\n        else {\n            return Math.floor;\n        }\n    }\n    else {\n        return Math.round;\n    }\n}\nfunction snapLineToStaff(canSitBetweenLines, line, position, offsetDirection) {\n    // Initially, snap to nearest staff line or space\n    const snappedLine = roundToNearestHalf(getRoundingFunction(line, position), line);\n    const canSnapToStaffSpace = canSitBetweenLines && isWithinLines(snappedLine, position);\n    const onStaffLine = snappedLine % 1 === 0;\n    if (canSnapToStaffSpace && onStaffLine) {\n        const HALF_STAFF_SPACE = 0.5;\n        return snappedLine + HALF_STAFF_SPACE * -offsetDirection;\n    }\n    else {\n        return snappedLine;\n    }\n}\n// Helper function for checking if a Note object is either a StaveNote or a GraceNote.\nconst isStaveOrGraceNote = (note) => isStaveNote(note) || isGraceNote(note);\nfunction getTopY(note, textLine) {\n    const stemDirection = note.getStemDirection();\n    const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n    if (isStaveOrGraceNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return stemTipY;\n            }\n            else {\n                return stemBaseY;\n            }\n        }\n        else {\n            return Math.min(...note.getYs());\n        }\n    }\n    else if (isTabNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return stemTipY;\n            }\n            else {\n                return note.checkStave().getYForTopText(textLine);\n            }\n        }\n        else {\n            return note.checkStave().getYForTopText(textLine);\n        }\n    }\n    else {\n        throw new RuntimeError('UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes');\n    }\n}\nfunction getBottomY(note, textLine) {\n    const stemDirection = note.getStemDirection();\n    const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n    if (isStaveOrGraceNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return stemBaseY;\n            }\n            else {\n                return stemTipY;\n            }\n        }\n        else {\n            return Math.max(...note.getYs());\n        }\n    }\n    else if (isTabNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return note.checkStave().getYForBottomText(textLine);\n            }\n            else {\n                return stemTipY;\n            }\n        }\n        else {\n            return note.checkStave().getYForBottomText(textLine);\n        }\n    }\n    else {\n        throw new RuntimeError('UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes');\n    }\n}\n/**\n * Get the initial offset of the articulation from the y value of the starting position.\n * This is required because the top/bottom text positions already have spacing applied to\n * provide a \"visually pleasant\" default position. However the y values provided from\n * the stavenote's top/bottom do *not* have any pre-applied spacing. This function\n * normalizes this asymmetry.\n * @param note\n * @param position\n * @returns\n */\nfunction getInitialOffset(note, position) {\n    const isOnStemTip = (position === ABOVE && note.getStemDirection() === Stem.UP) ||\n        (position === BELOW && note.getStemDirection() === Stem.DOWN);\n    if (isStaveOrGraceNote(note)) {\n        if (note.hasStem() && isOnStemTip) {\n            return 0.5;\n        }\n        else {\n            // this amount is larger than the stem-tip offset because we start from\n            // the center of the notehead\n            return 1;\n        }\n    }\n    else {\n        if (note.hasStem() && isOnStemTip) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n}\n/**\n * Articulations and Accents are modifiers that can be\n * attached to notes. The complete list of articulations is available in\n * `tables.ts` under `Vex.Flow.articulationCodes`.\n *\n * See `tests/articulation_tests.ts` for usage examples.\n */\nexport class Articulation extends Modifier {\n    /**\n     * Create a new articulation.\n     * @param type entry in `Vex.Flow.articulationCodes` in `tables.ts`\n     */\n    constructor(type) {\n        super();\n        this.type = type;\n        this.position = BELOW;\n        this.render_options = {\n            font_scale: 38,\n        };\n        this.reset();\n    }\n    /** Articulations category string. */\n    static get CATEGORY() {\n        return Category.Articulation;\n    }\n    /**\n     * FIXME:\n     * Most of the complex formatting logic (ie: snapping to space) is\n     * actually done in .render(). But that logic belongs in this method.\n     *\n     * Unfortunately, this isn't possible because, by this point, stem lengths\n     * have not yet been finalized. Finalized stem lengths are required to determine the\n     * initial position of any stem-side articulation.\n     *\n     * This indicates that all objects should have their stave set before being\n     * formatted. It can't be an optional if you want accurate vertical positioning.\n     * Consistently positioned articulations that play nice with other modifiers\n     * won't be possible until we stop relying on render-time formatting.\n     *\n     * Ideally, when this function has completed, the vertical articulation positions\n     * should be ready to render without further adjustment. But the current state\n     * is far from this ideal.\n     */\n    static format(articulations, state) {\n        if (!articulations || articulations.length === 0)\n            return false;\n        const margin = 0.5;\n        let maxGlyphWidth = 0;\n        const getIncrement = (articulation, line, position) => roundToNearestHalf(getRoundingFunction(line, position), defined(articulation.glyph.getMetrics().height) / 10 + margin);\n        articulations.forEach((articulation) => {\n            const note = articulation.checkAttachedNote();\n            maxGlyphWidth = Math.max(note.getGlyph().getWidth(), maxGlyphWidth);\n            let lines = 5;\n            const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n            let stemHeight = 0;\n            // Decide if we need to consider beam direction in placement.\n            if (isStemmableNote(note)) {\n                const stem = note.getStem();\n                if (stem) {\n                    stemHeight = Math.abs(stem.getHeight()) / Tables.STAVE_LINE_DISTANCE;\n                }\n            }\n            const stave = note.getStave();\n            if (stave) {\n                lines = stave.getNumLines();\n            }\n            if (articulation.getPosition() === ABOVE) {\n                let noteLine = note.getLineNumber(true);\n                if (stemDirection === Stem.UP) {\n                    noteLine += stemHeight;\n                }\n                let increment = getIncrement(articulation, state.top_text_line, ABOVE);\n                const curTop = noteLine + state.top_text_line + 0.5;\n                // If articulation must be above stave, add lines between note and stave top\n                if (!articulation.articulation.between_lines && curTop < lines) {\n                    increment += lines - curTop;\n                }\n                articulation.setTextLine(state.top_text_line);\n                state.top_text_line += increment;\n            }\n            else if (articulation.getPosition() === BELOW) {\n                let noteLine = Math.max(lines - note.getLineNumber(), 0);\n                if (stemDirection === Stem.DOWN) {\n                    noteLine += stemHeight;\n                }\n                let increment = getIncrement(articulation, state.text_line, BELOW);\n                const curBottom = noteLine + state.text_line + 0.5;\n                // if articulation must be below stave, add lines from note to stave bottom\n                if (!articulation.articulation.between_lines && curBottom < lines) {\n                    increment += lines - curBottom;\n                }\n                articulation.setTextLine(state.text_line);\n                state.text_line += increment;\n            }\n        });\n        const width = articulations\n            .map((articulation) => articulation.getWidth())\n            .reduce((maxWidth, articWidth) => Math.max(articWidth, maxWidth));\n        const overlap = Math.min(Math.max(width - maxGlyphWidth, 0), Math.max(width - (state.left_shift + state.right_shift), 0));\n        state.left_shift += overlap / 2;\n        state.right_shift += overlap / 2;\n        return true;\n    }\n    static easyScoreHook({ articulations }, note, builder) {\n        if (!articulations)\n            return;\n        const articNameToCode = {\n            staccato: 'a.',\n            tenuto: 'a-',\n            accent: 'a>',\n        };\n        articulations\n            .split(',')\n            .map((articString) => articString.trim().split('.'))\n            .map(([name, position]) => {\n            const artic = { type: articNameToCode[name] };\n            if (position)\n                artic.position = Modifier.PositionString[position];\n            return builder.getFactory().Articulation(artic);\n        })\n            .map((artic) => note.addModifier(artic, 0));\n    }\n    reset() {\n        this.articulation = Tables.articulationCodes(this.type);\n        const articulation = defined(this.articulation, 'ArgumentError', `Articulation not found: ${this.type}`);\n        const code = (this.position === ABOVE ? articulation.aboveCode : articulation.belowCode) || articulation.code;\n        this.glyph = new Glyph(code !== null && code !== void 0 ? code : '', this.render_options.font_scale);\n        this.setWidth(defined(this.glyph.getMetrics().width));\n    }\n    /** Render articulation in position next to note. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const index = this.checkIndex();\n        const { position, glyph, text_line: textLine } = this;\n        const canSitBetweenLines = this.articulation.between_lines;\n        const stave = note.checkStave();\n        const staffSpace = stave.getSpacingBetweenLines();\n        const isTab = isTabNote(note);\n        // Articulations are centered over/under the note head.\n        const { x } = note.getModifierStartXY(position, index);\n        const shouldSitOutsideStaff = !canSitBetweenLines || isTab;\n        const initialOffset = getInitialOffset(note, position);\n        const padding = Tables.currentMusicFont().lookupMetric(`articulation.${glyph.getCode()}.padding`, 0);\n        let y = {\n            [ABOVE]: () => {\n                glyph.setOrigin(0.5, 1);\n                const y = getTopY(note, textLine) - (textLine + initialOffset) * staffSpace;\n                return shouldSitOutsideStaff ? Math.min(stave.getYForTopText(Articulation.INITIAL_OFFSET), y) : y;\n            },\n            [BELOW]: () => {\n                glyph.setOrigin(0.5, 0);\n                const y = getBottomY(note, textLine) + (textLine + initialOffset) * staffSpace;\n                return shouldSitOutsideStaff ? Math.max(stave.getYForBottomText(Articulation.INITIAL_OFFSET), y) : y;\n            },\n        }[position]();\n        if (!isTab) {\n            const offsetDirection = position === ABOVE ? -1 : +1;\n            const noteLine = note.getKeyProps()[index].line;\n            const distanceFromNote = (note.getYs()[index] - y) / staffSpace;\n            const articLine = distanceFromNote + Number(noteLine);\n            const snappedLine = snapLineToStaff(canSitBetweenLines, articLine, position, offsetDirection);\n            if (isWithinLines(snappedLine, position))\n                glyph.setOrigin(0.5, 0.5);\n            y += Math.abs(snappedLine - articLine) * staffSpace * offsetDirection + padding * offsetDirection;\n        }\n        L(`Rendering articulation at (x: ${x}, y: ${y})`);\n        glyph.render(ctx, x, y);\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Articulation.DEBUG` to `true`. */\nArticulation.DEBUG = false;\nArticulation.INITIAL_OFFSET = -0.5;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2021.\n// MIT License\nimport { Category } from './typeguard';\nexport class RenderContext {\n    static get CATEGORY() {\n        return Category.RenderContext;\n    }\n    set font(f) {\n        this.setFont(f);\n    }\n    get font() {\n        return this.getFont();\n    }\n    /**\n     * This is kept for backwards compatibility with 3.0.9.\n     * @deprecated use `setFont(...)` instead since it now supports CSS font shorthand.\n     */\n    setRawFont(f) {\n        this.setFont(f);\n        return this;\n    }\n}\n/**\n * Draw a tiny dot marker on the specified context. A great debugging aid.\n * @param ctx context\n * @param x dot x coordinate\n * @param y dot y coordinate\n * @param color\n */\nexport function drawDot(ctx, x, y, color = '#F55') {\n    ctx.save();\n    ctx.setFillStyle(color);\n    // draw a circle\n    ctx.beginPath();\n    ctx.arc(x, y, 3, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fill();\n    ctx.restore();\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\n/**\n * Tickable represents a element that sit on a score and\n * has a duration, i.e., Tickables occupy space in the musical rendering dimension.\n */\nexport class Tickable extends Element {\n    constructor() {\n        super();\n        this._preFormatted = false;\n        this._postFormatted = false;\n        // These properties represent the duration of\n        // this tickable element.\n        this.ticks = new Fraction(0, 1); // Fractional value of ticks\n        this.intrinsicTicks = 0; // Floating point value of ticks\n        this.tickMultiplier = new Fraction(1, 1);\n        // Formatter metrics\n        this.width = 0;\n        this.x_shift = 0; // Shift from tick context\n        this.modifiers = [];\n        this.tupletStack = [];\n        this.align_center = false;\n        this.center_x_shift = 0; // Shift from tick context if center aligned\n        // This flag tells the formatter to ignore this tickable during\n        // formatting and justification. It is set by tickables such as BarNote.\n        this.ignore_ticks = false;\n        // This is a space for an external formatting class or function to maintain\n        // metrics.\n        this.formatterMetrics = {\n            // The freedom of a tickable is the distance it can move without colliding\n            // with neighboring elements. A formatter can set these values during its\n            // formatting pass, which a different formatter can then use to fine tune.\n            freedom: { left: 0, right: 0 },\n            // The simplified rational duration of this tick as a string. It can be\n            // used as an index to a map or hashtable.\n            duration: '',\n            // The number of formatting iterations undergone.\n            iterations: 0,\n            // The space in pixels allocated by this formatter, along with the mean space\n            // for tickables of this duration, and the deviation from the mean.\n            space: {\n                used: 0,\n                mean: 0,\n                deviation: 0,\n            },\n        };\n    }\n    static get CATEGORY() {\n        return Category.Tickable;\n    }\n    /** Reset the Tickable, this function will be overloaded. */\n    reset() {\n        return this;\n    }\n    /** Return the ticks. */\n    getTicks() {\n        return this.ticks;\n    }\n    /** Check if it ignores the ticks. */\n    shouldIgnoreTicks() {\n        return this.ignore_ticks;\n    }\n    /** Ignore the ticks. */\n    setIgnoreTicks(flag) {\n        this.ignore_ticks = flag;\n        return this;\n    }\n    /** Set width of note. Used by the formatter for positioning. */\n    setWidth(width) {\n        this.width = width;\n    }\n    /** Get width of note. Used by the formatter for positioning. */\n    getWidth() {\n        if (!this._preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetWidth on an unformatted note.\");\n        }\n        return this.width + (this.modifierContext ? this.modifierContext.getWidth() : 0);\n    }\n    /** Displace note by `x` pixels. Used by the formatter. */\n    setXShift(x) {\n        this.x_shift = x;\n        return this;\n    }\n    /** Get the `x` displaced pixels of the note. */\n    getXShift() {\n        return this.x_shift;\n    }\n    /** Get `x` position of this tick context. */\n    getX() {\n        const tickContext = this.checkTickContext(`Can't getX() without a TickContext.`);\n        return tickContext.getX() + this.x_shift;\n    }\n    /** Return the formatterMetrics. */\n    getFormatterMetrics() {\n        return this.formatterMetrics;\n    }\n    /** Return the center `x` shift. */\n    getCenterXShift() {\n        if (this.isCenterAligned()) {\n            return this.center_x_shift;\n        }\n        return 0;\n    }\n    /** Set the center `x` shift. */\n    setCenterXShift(centerXShift) {\n        this.center_x_shift = centerXShift;\n        return this;\n    }\n    // Check if tickable is center aligned. */\n    isCenterAligned() {\n        return this.align_center;\n    }\n    // Set/unset center alignment. */\n    setCenterAlignment(align_center) {\n        this.align_center = align_center;\n        return this;\n    }\n    /**\n     * Return the associated voice. Every tickable must be associated with a voice.\n     * This allows formatters and preFormatter to associate them with the right modifierContexts.\n     */\n    getVoice() {\n        return defined(this.voice, 'NoVoice', 'Tickable has no voice.');\n    }\n    /** Set the associated voice. */\n    setVoice(voice) {\n        this.voice = voice;\n    }\n    /** Get the tuplet. */\n    getTuplet() {\n        return this.tuplet;\n    }\n    /** Return the intrinsic ticks. */\n    getTupletStack() {\n        return this.tupletStack;\n    }\n    /**\n     * Reset the specific Tuplet if this is not provided, all tuplets are reset.\n     * Remove any prior tuplets from the tick calculation and\n     * reset the intrinsic tick value.\n     */\n    resetTuplet(tuplet) {\n        let noteCount;\n        let notesOccupied;\n        if (tuplet) {\n            const i = this.tupletStack.indexOf(tuplet);\n            if (i !== -1) {\n                this.tupletStack.splice(i, 1);\n                noteCount = tuplet.getNoteCount();\n                notesOccupied = tuplet.getNotesOccupied();\n                // Revert old multiplier by inverting numerator & denom.:\n                this.applyTickMultiplier(noteCount, notesOccupied);\n            }\n            return this;\n        }\n        while (this.tupletStack.length) {\n            tuplet = this.tupletStack.pop();\n            noteCount = tuplet.getNoteCount();\n            notesOccupied = tuplet.getNotesOccupied();\n            // Revert old multiplier by inverting numerator & denom.:\n            this.applyTickMultiplier(noteCount, notesOccupied);\n        }\n        return this;\n    }\n    /** Attach to new tuplet. */\n    setTuplet(tuplet) {\n        if (tuplet) {\n            this.tupletStack.push(tuplet);\n            const noteCount = tuplet.getNoteCount();\n            const notesOccupied = tuplet.getNotesOccupied();\n            this.applyTickMultiplier(notesOccupied, noteCount);\n        }\n        this.tuplet = tuplet;\n        return this;\n    }\n    /**\n     * Add self to the provided ModifierContext `mc`.\n     * If this tickable has modifiers, set modifierContext.\n     * @returns this\n     */\n    addToModifierContext(mc) {\n        this.modifierContext = mc;\n        for (let i = 0; i < this.modifiers.length; ++i) {\n            this.modifierContext.addMember(this.modifiers[i]);\n        }\n        this.modifierContext.addMember(this);\n        this._preFormatted = false;\n        return this;\n    }\n    /**\n     * Optional, if tickable has modifiers, associate a Modifier.\n     * @param mod the modifier\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    addModifier(modifier, index = 0) {\n        this.modifiers.push(modifier);\n        this._preFormatted = false;\n        return this;\n    }\n    /** Get the list of associated modifiers. */\n    getModifiers() {\n        return this.modifiers;\n    }\n    /** Set the Tick Context. */\n    setTickContext(tc) {\n        this.tickContext = tc;\n        this._preFormatted = false;\n    }\n    checkTickContext(message = 'Tickable has no tick context.') {\n        return defined(this.tickContext, 'NoTickContext', message);\n    }\n    /** Preformat the Tickable. */\n    preFormat() {\n        if (this._preFormatted)\n            return;\n        this.width = 0;\n        if (this.modifierContext) {\n            this.modifierContext.preFormat();\n            this.width += this.modifierContext.getWidth();\n        }\n    }\n    /** Set preformatted status. */\n    set preFormatted(value) {\n        this._preFormatted = value;\n    }\n    get preFormatted() {\n        return this._preFormatted;\n    }\n    /** Postformat the Tickable. */\n    postFormat() {\n        if (this._postFormatted)\n            return this;\n        this._postFormatted = true;\n        return this;\n    }\n    /** Set postformatted status. */\n    set postFormatted(value) {\n        this._postFormatted = value;\n    }\n    get postFormatted() {\n        return this._postFormatted;\n    }\n    /** Return the intrinsic ticks. */\n    getIntrinsicTicks() {\n        return this.intrinsicTicks;\n    }\n    /** Set the intrinsic ticks. */\n    setIntrinsicTicks(intrinsicTicks) {\n        this.intrinsicTicks = intrinsicTicks;\n        this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n    }\n    /** Get the tick multiplier. */\n    getTickMultiplier() {\n        return this.tickMultiplier;\n    }\n    /** Apply a tick multiplier. */\n    applyTickMultiplier(numerator, denominator) {\n        this.tickMultiplier.multiply(numerator, denominator);\n        this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n    }\n    /** Set the duration. */\n    setDuration(duration) {\n        const ticks = duration.numerator * (Tables.RESOLUTION / duration.denominator);\n        this.ticks = this.tickMultiplier.clone().multiply(ticks);\n        this.intrinsicTicks = this.ticks.value();\n    }\n    getAbsoluteX() {\n        const tickContext = this.checkTickContext(`Can't getAbsoluteX() without a TickContext.`);\n        return tickContext.getX();\n    }\n    /** Attach this note to a modifier context. */\n    setModifierContext(mc) {\n        this.modifierContext = mc;\n        return this;\n    }\n    /** Get `ModifierContext`. */\n    getModifierContext() {\n        return this.modifierContext;\n    }\n    /** Check and get `ModifierContext`. */\n    checkModifierContext() {\n        return defined(this.modifierContext, 'NoModifierContext', 'No modifier context attached to this tickable.');\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font } from './font';\nimport { drawDot } from './rendercontext';\nimport { Tables } from './tables';\nimport { Tickable } from './tickable';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\n/**\n * Note implements an abstract interface for notes and chords that\n * are rendered on a stave. Notes have some common properties: All of them\n * have a value (e.g., pitch, fret, etc.) and a duration (quarter, half, etc.)\n *\n * Some notes have stems, heads, dots, etc. Most notational elements that\n * surround a note are called *modifiers*, and every note has an associated\n * array of them. All notes also have a rendering context and belong to a stave.\n */\nexport class Note extends Tickable {\n    /**\n     * Every note is a tickable, i.e., it can be mutated by the `Formatter` class for\n     * positioning and layout.\n     *\n     * @param noteStruct To create a new note you need to provide a `noteStruct`.\n     */\n    constructor(noteStruct) {\n        super();\n        if (!noteStruct) {\n            throw new RuntimeError('BadArguments', 'Note must have valid initialization data to identify duration and type.');\n        }\n        /** Parses `noteStruct` and get note properties. */\n        const parsedNoteStruct = Note.parseNoteStruct(noteStruct);\n        if (!parsedNoteStruct) {\n            throw new RuntimeError('BadArguments', `Invalid note initialization object: ${JSON.stringify(noteStruct)}`);\n        }\n        // Set note properties from parameters.\n        this.keys = noteStruct.keys || [];\n        // per-pitch properties\n        this.keyProps = [];\n        this.duration = parsedNoteStruct.duration;\n        this.noteType = parsedNoteStruct.type;\n        this.customTypes = parsedNoteStruct.customTypes;\n        if (noteStruct.duration_override) {\n            // Custom duration\n            this.setDuration(noteStruct.duration_override);\n        }\n        else {\n            // Default duration\n            this.setIntrinsicTicks(parsedNoteStruct.ticks);\n        }\n        this.modifiers = [];\n        // Get the glyph code for this note from the font.\n        this.glyph = Tables.getGlyphProps(this.duration, this.noteType);\n        this.customGlyphs = this.customTypes.map((t) => Tables.getGlyphProps(this.duration, t));\n        // Note to play for audio players.\n        this.playNote = undefined;\n        // Positioning contexts used by the Formatter.\n        this.ignore_ticks = false;\n        // Positioning variables\n        this.width = 0; // Width in pixels calculated after preFormat\n        this.leftDisplacedHeadPx = 0; // Extra room on left for displaced note head\n        this.rightDisplacedHeadPx = 0; // Extra room on right for displaced note head\n        this.x_shift = 0; // X shift from tick context X\n        this.ys = []; // list of y coordinates for each note\n        // we need to hold on to these for ties and beams.\n        if (noteStruct.align_center) {\n            this.setCenterAlignment(noteStruct.align_center);\n        }\n        // The render surface.\n        this.render_options = {\n            annotation_spacing: 5,\n            glyph_font_scale: 1,\n            stroke_px: 1,\n            scale: 1,\n            font: '',\n            y_shift: 0,\n        };\n    }\n    //////////////////////////////////////////////////////////////////////////////////////////////////\n    // STATIC MEMBERS\n    static get CATEGORY() {\n        return Category.Note;\n    }\n    /** Debug helper. Displays various note metrics for the given note. */\n    static plotMetrics(ctx, note, yPos) {\n        const metrics = note.getMetrics();\n        const xStart = note.getAbsoluteX() - metrics.modLeftPx - metrics.leftDisplacedHeadPx;\n        const xPre1 = note.getAbsoluteX() - metrics.leftDisplacedHeadPx;\n        const xAbs = note.getAbsoluteX();\n        const xPost1 = note.getAbsoluteX() + metrics.notePx;\n        const xPost2 = note.getAbsoluteX() + metrics.notePx + metrics.rightDisplacedHeadPx;\n        const xEnd = note.getAbsoluteX() + metrics.notePx + metrics.rightDisplacedHeadPx + metrics.modRightPx;\n        const xFreedomRight = xEnd + (note.getFormatterMetrics().freedom.right || 0);\n        const xWidth = xEnd - xStart;\n        ctx.save();\n        ctx.setFont(Font.SANS_SERIF, 8);\n        ctx.fillText(Math.round(xWidth) + 'px', xStart + note.getXShift(), yPos);\n        const y = yPos + 7;\n        function stroke(x1, x2, color, yy = y) {\n            ctx.beginPath();\n            ctx.setStrokeStyle(color);\n            ctx.setFillStyle(color);\n            ctx.setLineWidth(3);\n            ctx.moveTo(x1 + note.getXShift(), yy);\n            ctx.lineTo(x2 + note.getXShift(), yy);\n            ctx.stroke();\n        }\n        stroke(xStart, xPre1, 'red');\n        stroke(xPre1, xAbs, '#999');\n        stroke(xAbs, xPost1, 'green');\n        stroke(xPost1, xPost2, '#999');\n        stroke(xPost2, xEnd, 'red');\n        stroke(xEnd, xFreedomRight, '#DD0');\n        stroke(xStart - note.getXShift(), xStart, '#BBB'); // Shift\n        drawDot(ctx, xAbs + note.getXShift(), y, 'blue');\n        const formatterMetrics = note.getFormatterMetrics();\n        if (formatterMetrics.iterations > 0) {\n            const spaceDeviation = formatterMetrics.space.deviation;\n            const prefix = spaceDeviation >= 0 ? '+' : '';\n            ctx.setFillStyle('red');\n            ctx.fillText(prefix + Math.round(spaceDeviation), xAbs + note.getXShift(), yPos - 10);\n        }\n        ctx.restore();\n    }\n    static parseDuration(durationString) {\n        if (!durationString) {\n            return undefined;\n        }\n        const regexp = /(\\d*\\/?\\d+|[a-z])(d*)([nrhms]|$)/;\n        const result = regexp.exec(durationString);\n        if (!result) {\n            return undefined;\n        }\n        const duration = result[1];\n        const dots = result[2].length;\n        const type = result[3] || 'n';\n        return { duration, dots, type };\n    }\n    static parseNoteStruct(noteStruct) {\n        // Preserve backwards-compatibility\n        const durationProps = Note.parseDuration(noteStruct.duration);\n        if (!durationProps) {\n            return undefined;\n        }\n        // If specified type is invalid, return undefined.\n        let type = noteStruct.type;\n        if (type && !Tables.validTypes[type]) {\n            return undefined;\n        }\n        // If no type specified, check duration or custom types\n        const customTypes = [];\n        if (!type) {\n            type = durationProps.type || 'n';\n            // If we have keys, try and check if we've got a custom glyph\n            if (noteStruct.keys !== undefined) {\n                noteStruct.keys.forEach((k, i) => {\n                    const result = k.split('/');\n                    // We have a custom glyph specified after the note eg. /X2\n                    customTypes[i] = (result && result.length === 3 ? result[2] : type);\n                });\n            }\n        }\n        // Calculate the tick duration of the note\n        let ticks = Tables.durationToTicks(durationProps.duration);\n        if (!ticks) {\n            return undefined;\n        }\n        // Are there any dots?\n        const dots = noteStruct.dots ? noteStruct.dots : durationProps.dots;\n        if (typeof dots !== 'number') {\n            return undefined;\n        }\n        // Add ticks as necessary depending on the numbr of dots\n        let currentTicks = ticks;\n        for (let i = 0; i < dots; i++) {\n            if (currentTicks <= 1)\n                return undefined;\n            currentTicks = currentTicks / 2;\n            ticks += currentTicks;\n        }\n        return {\n            duration: durationProps.duration,\n            type,\n            customTypes,\n            dots,\n            ticks,\n        };\n    }\n    /**\n     * Get the play note, which is arbitrary data that can be used by an\n     * audio player.\n     */\n    getPlayNote() {\n        return this.playNote;\n    }\n    /**\n     * Set the play note, which is arbitrary data that can be used by an\n     * audio player.\n     */\n    setPlayNote(note) {\n        this.playNote = note;\n        return this;\n    }\n    /**\n     * @returns true if this note is a type of rest.\n     *\n     * Rests don't have pitches, but take up space in the score.\n     * Subclasses should override this default implementation.\n     */\n    isRest() {\n        return false;\n    }\n    /** Add stroke. */\n    addStroke(index, stroke) {\n        stroke.setNote(this);\n        stroke.setIndex(index);\n        this.modifiers.push(stroke);\n        this.preFormatted = false;\n        return this;\n    }\n    /** Get the target stave. */\n    getStave() {\n        return this.stave;\n    }\n    /** Check and get the target stave. */\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    /** Set the target stave. */\n    setStave(stave) {\n        this.stave = stave;\n        this.setYs([stave.getYForLine(0)]); // Update Y values if the stave is changed.\n        this.setContext(this.stave.getContext());\n        return this;\n    }\n    /** Get spacing to the left of the notes. */\n    getLeftDisplacedHeadPx() {\n        return this.leftDisplacedHeadPx;\n    }\n    /** Get spacing to the right of the notes. */\n    getRightDisplacedHeadPx() {\n        return this.rightDisplacedHeadPx;\n    }\n    /** Set spacing to the left of the notes. */\n    setLeftDisplacedHeadPx(x) {\n        this.leftDisplacedHeadPx = x;\n        return this;\n    }\n    /** Set spacing to the right of the notes. */\n    setRightDisplacedHeadPx(x) {\n        this.rightDisplacedHeadPx = x;\n        return this;\n    }\n    /** True if this note has no duration (e.g., bar notes, spacers, etc.). */\n    shouldIgnoreTicks() {\n        return this.ignore_ticks;\n    }\n    /** Get the stave line number for the note. */\n    // eslint-disable-next-line\n    getLineNumber(isTopNote) {\n        return 0;\n    }\n    /** Get the stave line number for rest. */\n    getLineForRest() {\n        return 0;\n    }\n    /** Get the glyph associated with this note. */\n    // eslint-disable-next-line\n    getGlyph() {\n        return this.glyph;\n    }\n    /** Get the glyph width. */\n    getGlyphWidth() {\n        // TODO: FIXME (multiple potential values for this.glyph)\n        if (this.glyph) {\n            if (this.glyph.getMetrics) {\n                return this.glyph.getMetrics().width;\n            }\n            else if (this.glyph.getWidth) {\n                return this.glyph.getWidth(this.render_options.glyph_font_scale);\n            }\n        }\n        return 0;\n    }\n    /**\n     * Set Y positions for this note. Each Y value is associated with\n     * an individual pitch/key within the note/chord.\n     */\n    setYs(ys) {\n        this.ys = ys;\n        return this;\n    }\n    /**\n     * Get Y positions for this note. Each Y value is associated with\n     * an individual pitch/key within the note/chord.\n     */\n    getYs() {\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', 'No Y-values calculated for this note.');\n        }\n        return this.ys;\n    }\n    /**\n     * Get the Y position of the space above the stave onto which text can\n     * be rendered.\n     */\n    getYForTopText(text_line) {\n        return this.checkStave().getYForTopText(text_line);\n    }\n    /** Return the voice that this note belongs in. */\n    getVoice() {\n        if (!this.voice)\n            throw new RuntimeError('NoVoice', 'Note has no voice.');\n        return this.voice;\n    }\n    /** Attach this note to `voice`. */\n    setVoice(voice) {\n        this.voice = voice;\n        this.preFormatted = false;\n        return this;\n    }\n    /** Get the `TickContext` for this note. */\n    getTickContext() {\n        return this.checkTickContext();\n    }\n    /** Set the `TickContext` for this note. */\n    setTickContext(tc) {\n        this.tickContext = tc;\n        this.preFormatted = false;\n        return this;\n    }\n    /** Accessor to duration. */\n    getDuration() {\n        return this.duration;\n    }\n    /** Accessor to isDotted. */\n    isDotted() {\n        return this.getModifiersByType('Dot').length > 0;\n    }\n    /** Accessor to hasStem. */\n    hasStem() {\n        return false;\n    }\n    /** Accessor to note type. */\n    getNoteType() {\n        return this.noteType;\n    }\n    /** Get the beam. */\n    getBeam() {\n        return this.beam;\n    }\n    /** Check and get the beam. */\n    checkBeam() {\n        return defined(this.beam, 'NoBeam', 'No beam attached to instance');\n    }\n    /** Check it has a beam. */\n    hasBeam() {\n        return this.beam != undefined;\n    }\n    /** Set the beam. */\n    setBeam(beam) {\n        this.beam = beam;\n        return this;\n    }\n    /**\n     * Attach a modifier to this note.\n     * @param modifier the Modifier to add.\n     * @param index of the key to modify.\n     * @returns this\n     */\n    addModifier(modifier, index = 0) {\n        const signature = 'Note.addModifier(modifier: Modifier, index: number=0)';\n        // Backwards compatibility with 3.0.9.\n        if (typeof index === 'string') {\n            index = parseInt(index);\n            // eslint-disable-next-line\n            console.warn(signature + ' expected a number for `index`, but received a string.');\n        }\n        // Some versions of VexFlow had the two parameters reversed.\n        // Check here and throw an error if the argument types are not correct.\n        if (typeof modifier !== 'object' || typeof index !== 'number') {\n            throw new RuntimeError('WrongParams', 'Incorrect call signature. Use ' + signature + ' instead.');\n        }\n        modifier.setNote(this);\n        modifier.setIndex(index);\n        super.addModifier(modifier);\n        return this;\n    }\n    /** Get all modifiers of a specific type in `this.modifiers`. */\n    getModifiersByType(type) {\n        return this.modifiers.filter((modifier) => modifier.getCategory() === type);\n    }\n    /** Get the coordinates for where modifiers begin. */\n    // eslint-disable-next-line\n    getModifierStartXY(position, index, options) {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n        }\n        return {\n            x: this.getAbsoluteX(),\n            y: this.ys[0],\n        };\n    }\n    getRightParenthesisPx(index) {\n        const props = this.getKeyProps()[index];\n        return props.displaced ? this.getRightDisplacedHeadPx() : 0;\n    }\n    getLeftParenthesisPx(index) {\n        const props = this.getKeyProps()[index];\n        return props.displaced ? this.getLeftDisplacedHeadPx() - this.x_shift : -this.x_shift;\n    }\n    getFirstDotPx() {\n        let px = this.getRightDisplacedHeadPx();\n        if (this.checkModifierContext().getMembers('Parenthesis').length !== 0)\n            px += Tables.currentMusicFont().lookupMetric('parenthesis.default.width');\n        return px;\n    }\n    /** Get the metrics for this note. */\n    getMetrics() {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call getMetrics on an unformatted note.\");\n        }\n        const modLeftPx = this.modifierContext ? this.modifierContext.getState().left_shift : 0;\n        const modRightPx = this.modifierContext ? this.modifierContext.getState().right_shift : 0;\n        const width = this.getWidth();\n        const glyphWidth = this.getGlyphWidth();\n        const notePx = width -\n            modLeftPx - // subtract left modifiers\n            modRightPx - // subtract right modifiers\n            this.leftDisplacedHeadPx - // subtract left displaced head\n            this.rightDisplacedHeadPx; // subtract right displaced head\n        // NOTE: If you change this, remember to update MockTickable.getMetrics() in the tests/ directory.\n        return {\n            width,\n            glyphWidth,\n            notePx,\n            // Modifier spacing.\n            modLeftPx,\n            modRightPx,\n            // Displaced note head on left or right.\n            leftDisplacedHeadPx: this.leftDisplacedHeadPx,\n            rightDisplacedHeadPx: this.rightDisplacedHeadPx,\n            glyphPx: 0,\n        };\n    }\n    /**\n     * Get the absolute `X` position of this note's tick context. This\n     * excludes x_shift, so you'll need to factor it in if you're\n     * looking for the post-formatted x-position.\n     */\n    getAbsoluteX() {\n        const tickContext = this.checkTickContext(`Can't getAbsoluteX() without a TickContext.`);\n        // Position note to left edge of tick context.\n        let x = tickContext.getX();\n        if (this.stave) {\n            x += this.stave.getNoteStartX() + Tables.currentMusicFont().lookupMetric('stave.padding');\n        }\n        if (this.isCenterAligned()) {\n            x += this.getCenterXShift();\n        }\n        return x;\n    }\n    /** Get the direction of the stem. */\n    getStemDirection() {\n        throw new RuntimeError('NoStem', 'No stem attached to this note.');\n    }\n    /** Get the top and bottom `y` values of the stem. */\n    getStemExtents() {\n        throw new RuntimeError('NoStem', 'No stem attached to this note.');\n    }\n    /** Get the `x` coordinate to the right of the note. */\n    getTieRightX() {\n        let tieStartX = this.getAbsoluteX();\n        const note_glyph_width = this.glyph.getWidth();\n        tieStartX += note_glyph_width / 2;\n        tieStartX += -this.width / 2 + this.width + 2;\n        return tieStartX;\n    }\n    /** Get the `x` coordinate to the left of the note. */\n    getTieLeftX() {\n        let tieEndX = this.getAbsoluteX();\n        const note_glyph_width = this.glyph.getWidth();\n        tieEndX += note_glyph_width / 2;\n        tieEndX -= this.width / 2 + 2;\n        return tieEndX;\n    }\n    // Get the pitches in the note\n    getKeys() {\n        return this.keys;\n    }\n    // Get the properties for all the keys in the note\n    getKeyProps() {\n        return this.keyProps;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A base class for stave modifiers (e.g. clefs, key signatures)\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { defined } from './util';\nexport var StaveModifierPosition;\n(function (StaveModifierPosition) {\n    StaveModifierPosition[StaveModifierPosition[\"CENTER\"] = 0] = \"CENTER\";\n    StaveModifierPosition[StaveModifierPosition[\"LEFT\"] = 1] = \"LEFT\";\n    StaveModifierPosition[StaveModifierPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n    StaveModifierPosition[StaveModifierPosition[\"ABOVE\"] = 3] = \"ABOVE\";\n    StaveModifierPosition[StaveModifierPosition[\"BELOW\"] = 4] = \"BELOW\";\n    StaveModifierPosition[StaveModifierPosition[\"BEGIN\"] = 5] = \"BEGIN\";\n    StaveModifierPosition[StaveModifierPosition[\"END\"] = 6] = \"END\";\n})(StaveModifierPosition || (StaveModifierPosition = {}));\nexport class StaveModifier extends Element {\n    constructor() {\n        super();\n        this.width = 0;\n        this.x = 0;\n        this.padding = 10;\n        this.position = StaveModifierPosition.ABOVE;\n    }\n    static get CATEGORY() {\n        return Category.StaveModifier;\n    }\n    static get Position() {\n        return StaveModifierPosition;\n    }\n    getPosition() {\n        return this.position;\n    }\n    setPosition(position) {\n        this.position = position;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    setStave(stave) {\n        this.stave = stave;\n        return this;\n    }\n    getWidth() {\n        return this.width;\n    }\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    getX() {\n        return this.x;\n    }\n    setX(x) {\n        this.x = x;\n        return this;\n    }\n    placeGlyphOnLine(glyph, stave, line, customShift = 0) {\n        glyph.setYShift(stave.getYForLine(line !== null && line !== void 0 ? line : 0) - stave.getYForGlyphs() + customShift);\n    }\n    getPadding(index) {\n        return index !== undefined && index < 2 ? 0 : this.padding;\n    }\n    setPadding(padding) {\n        this.padding = padding;\n        return this;\n    }\n    setLayoutMetrics(layoutMetrics) {\n        this.layoutMetrics = layoutMetrics;\n        return this;\n    }\n    getLayoutMetrics() {\n        return this.layoutMetrics;\n    }\n    // eslint-disable-next-line\n    draw(...args) {\n        // DO NOTHING.\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// Author Larry Kuhns 2011\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nexport var BarlineType;\n(function (BarlineType) {\n    BarlineType[BarlineType[\"SINGLE\"] = 1] = \"SINGLE\";\n    BarlineType[BarlineType[\"DOUBLE\"] = 2] = \"DOUBLE\";\n    BarlineType[BarlineType[\"END\"] = 3] = \"END\";\n    BarlineType[BarlineType[\"REPEAT_BEGIN\"] = 4] = \"REPEAT_BEGIN\";\n    BarlineType[BarlineType[\"REPEAT_END\"] = 5] = \"REPEAT_END\";\n    BarlineType[BarlineType[\"REPEAT_BOTH\"] = 6] = \"REPEAT_BOTH\";\n    BarlineType[BarlineType[\"NONE\"] = 7] = \"NONE\";\n})(BarlineType || (BarlineType = {}));\nexport class Barline extends StaveModifier {\n    constructor(type) {\n        super();\n        this.thickness = Tables.STAVE_LINE_THICKNESS;\n        const TYPE = BarlineType;\n        this.widths = {};\n        this.widths[TYPE.SINGLE] = 5;\n        this.widths[TYPE.DOUBLE] = 5;\n        this.widths[TYPE.END] = 5;\n        this.widths[TYPE.REPEAT_BEGIN] = 5;\n        this.widths[TYPE.REPEAT_END] = 5;\n        this.widths[TYPE.REPEAT_BOTH] = 5;\n        this.widths[TYPE.NONE] = 5;\n        this.paddings = {};\n        this.paddings[TYPE.SINGLE] = 0;\n        this.paddings[TYPE.DOUBLE] = 0;\n        this.paddings[TYPE.END] = 0;\n        this.paddings[TYPE.REPEAT_BEGIN] = 15;\n        this.paddings[TYPE.REPEAT_END] = 15;\n        this.paddings[TYPE.REPEAT_BOTH] = 15;\n        this.paddings[TYPE.NONE] = 0;\n        this.layoutMetricsMap = {};\n        this.layoutMetricsMap[TYPE.SINGLE] = {\n            xMin: 0,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.DOUBLE] = {\n            xMin: -3,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.END] = {\n            xMin: -5,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.REPEAT_END] = {\n            xMin: -10,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.REPEAT_BEGIN] = {\n            xMin: -2,\n            xMax: 10,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.REPEAT_BOTH] = {\n            xMin: -10,\n            xMax: 10,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.NONE] = {\n            xMin: 0,\n            xMax: 0,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.setType(type);\n    }\n    static get CATEGORY() {\n        return Category.Barline;\n    }\n    static get type() {\n        return BarlineType;\n    }\n    static get typeString() {\n        return {\n            single: BarlineType.SINGLE,\n            double: BarlineType.DOUBLE,\n            end: BarlineType.END,\n            repeatBegin: BarlineType.REPEAT_BEGIN,\n            repeatEnd: BarlineType.REPEAT_END,\n            repeatBoth: BarlineType.REPEAT_BOTH,\n            none: BarlineType.NONE,\n        };\n    }\n    getType() {\n        return this.type;\n    }\n    setType(type) {\n        this.type = typeof type === 'string' ? Barline.typeString[type] : type;\n        this.setWidth(this.widths[this.type]);\n        this.setPadding(this.paddings[this.type]);\n        this.setLayoutMetrics(this.layoutMetricsMap[this.type]);\n        return this;\n    }\n    // Draw barlines\n    draw(stave) {\n        stave.checkContext();\n        this.setRendered();\n        switch (this.type) {\n            case BarlineType.SINGLE:\n                this.drawVerticalBar(stave, this.x, false);\n                break;\n            case BarlineType.DOUBLE:\n                this.drawVerticalBar(stave, this.x, true);\n                break;\n            case BarlineType.END:\n                this.drawVerticalEndBar(stave, this.x);\n                break;\n            case BarlineType.REPEAT_BEGIN:\n                // If the barline is shifted over (in front of clef/time/key)\n                // Draw vertical bar at the beginning.\n                this.drawRepeatBar(stave, this.x, true);\n                if (stave.getX() !== this.x) {\n                    this.drawVerticalBar(stave, stave.getX());\n                }\n                break;\n            case BarlineType.REPEAT_END:\n                this.drawRepeatBar(stave, this.x, false);\n                break;\n            case BarlineType.REPEAT_BOTH:\n                this.drawRepeatBar(stave, this.x, false);\n                this.drawRepeatBar(stave, this.x, true);\n                break;\n            default:\n                // Default is NONE, so nothing to draw\n                break;\n        }\n    }\n    drawVerticalBar(stave, x, double_bar) {\n        const staveCtx = stave.checkContext();\n        const topY = stave.getTopLineTopY();\n        const botY = stave.getBottomLineBottomY();\n        if (double_bar) {\n            staveCtx.fillRect(x - 3, topY, 1, botY - topY);\n        }\n        staveCtx.fillRect(x, topY, 1, botY - topY);\n    }\n    drawVerticalEndBar(stave, x) {\n        const staveCtx = stave.checkContext();\n        const topY = stave.getTopLineTopY();\n        const botY = stave.getBottomLineBottomY();\n        staveCtx.fillRect(x - 5, topY, 1, botY - topY);\n        staveCtx.fillRect(x - 2, topY, 3, botY - topY);\n    }\n    drawRepeatBar(stave, x, begin) {\n        const staveCtx = stave.checkContext();\n        const topY = stave.getTopLineTopY();\n        const botY = stave.getBottomLineBottomY();\n        let x_shift = 3;\n        if (!begin) {\n            x_shift = -5;\n        }\n        staveCtx.fillRect(x + x_shift, topY, 1, botY - topY);\n        staveCtx.fillRect(x - 2, topY, 3, botY - topY);\n        const dot_radius = 2;\n        // Shift dots left or right\n        if (begin) {\n            x_shift += 4;\n        }\n        else {\n            x_shift -= 4;\n        }\n        const dot_x = x + x_shift + dot_radius / 2;\n        // calculate the y offset based on number of stave lines\n        let y_offset = (stave.getNumLines() - 1) * stave.getSpacingBetweenLines();\n        y_offset = y_offset / 2 - stave.getSpacingBetweenLines() / 2;\n        let dot_y = topY + y_offset + dot_radius / 2;\n        // draw the top repeat dot\n        staveCtx.beginPath();\n        staveCtx.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n        staveCtx.fill();\n        // draw the bottom repeat dot\n        dot_y += stave.getSpacingBetweenLines();\n        staveCtx.beginPath();\n        staveCtx.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n        staveCtx.fill();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// Author: Aaron (@AaronDavidNewman)\n//\n// This implements chord symbols above/below a chord.\n// Chord symbols are modifiers that can be attached to notes.\n// They can contain multiple 'blocks' which represent text or\n// glyphs with various positioning options.\n//\n// See `tests/chordsymbol_tests.ts` for usage examples.\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Tables } from './tables';\nimport { TextFormatter } from './textformatter';\nimport { Category } from './typeguard';\nimport { log } from './util';\n// To enable logging for this class. Set `Vex.Flow.ChordSymbol.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (ChordSymbol.DEBUG)\n        log('Vex.Flow.ChordSymbol', args);\n}\nexport var ChordSymbolHorizontalJustify;\n(function (ChordSymbolHorizontalJustify) {\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"LEFT\"] = 1] = \"LEFT\";\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"CENTER\"] = 2] = \"CENTER\";\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"RIGHT\"] = 3] = \"RIGHT\";\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"CENTER_STEM\"] = 4] = \"CENTER_STEM\";\n})(ChordSymbolHorizontalJustify || (ChordSymbolHorizontalJustify = {}));\nexport var ChordSymbolVerticalJustify;\n(function (ChordSymbolVerticalJustify) {\n    ChordSymbolVerticalJustify[ChordSymbolVerticalJustify[\"TOP\"] = 1] = \"TOP\";\n    ChordSymbolVerticalJustify[ChordSymbolVerticalJustify[\"BOTTOM\"] = 2] = \"BOTTOM\";\n})(ChordSymbolVerticalJustify || (ChordSymbolVerticalJustify = {}));\nexport var SymbolTypes;\n(function (SymbolTypes) {\n    SymbolTypes[SymbolTypes[\"GLYPH\"] = 1] = \"GLYPH\";\n    SymbolTypes[SymbolTypes[\"TEXT\"] = 2] = \"TEXT\";\n    SymbolTypes[SymbolTypes[\"LINE\"] = 3] = \"LINE\";\n})(SymbolTypes || (SymbolTypes = {}));\nexport var SymbolModifiers;\n(function (SymbolModifiers) {\n    SymbolModifiers[SymbolModifiers[\"NONE\"] = 1] = \"NONE\";\n    SymbolModifiers[SymbolModifiers[\"SUBSCRIPT\"] = 2] = \"SUBSCRIPT\";\n    SymbolModifiers[SymbolModifiers[\"SUPERSCRIPT\"] = 3] = \"SUPERSCRIPT\";\n})(SymbolModifiers || (SymbolModifiers = {}));\n/**\n * ChordSymbol is a modifier that creates a chord symbol above/below a chord.\n * As a modifier, it is attached to an existing note.\n */\nexport class ChordSymbol extends Modifier {\n    constructor() {\n        super();\n        this.symbolBlocks = [];\n        this.horizontal = ChordSymbolHorizontalJustify.LEFT;\n        this.vertical = ChordSymbolVerticalJustify.TOP;\n        this.useKerning = true;\n        this.reportWidth = true;\n        this.resetFont();\n    }\n    static get CATEGORY() {\n        return Category.ChordSymbol;\n    }\n    static get superSubRatio() {\n        return ChordSymbol.metrics.global.superSubRatio;\n    }\n    /** Currently unused: Globally turn off text formatting, if the built-in formatting does not work for your font. */\n    static set NO_TEXT_FORMAT(val) {\n        ChordSymbol.noFormat = val;\n    }\n    static get NO_TEXT_FORMAT() {\n        return ChordSymbol.noFormat;\n    }\n    // eslint-disable-next-line\n    static getMetricForGlyph(glyphCode) {\n        if (ChordSymbol.metrics[glyphCode]) {\n            return ChordSymbol.metrics[glyphCode];\n        }\n        return undefined;\n    }\n    static get engravingFontResolution() {\n        return Tables.currentMusicFont().getResolution();\n    }\n    static get spacingBetweenBlocks() {\n        return ChordSymbol.metrics.global.spacing / ChordSymbol.engravingFontResolution;\n    }\n    static getWidthForGlyph(glyph) {\n        const metric = ChordSymbol.getMetricForGlyph(glyph.code);\n        if (!metric) {\n            return 0.65; // probably should do something here.\n        }\n        return metric.advanceWidth / ChordSymbol.engravingFontResolution;\n    }\n    static getYShiftForGlyph(glyph) {\n        const metric = ChordSymbol.getMetricForGlyph(glyph.code);\n        if (!metric) {\n            return 0;\n        }\n        return metric.yOffset / ChordSymbol.engravingFontResolution;\n    }\n    static getXShiftForGlyph(glyph) {\n        const metric = ChordSymbol.getMetricForGlyph(glyph.code);\n        if (!metric) {\n            return 0;\n        }\n        return (-1 * metric.leftSideBearing) / ChordSymbol.engravingFontResolution;\n    }\n    static get superscriptOffset() {\n        return ChordSymbol.metrics.global.superscriptOffset / ChordSymbol.engravingFontResolution;\n    }\n    static get subscriptOffset() {\n        return ChordSymbol.metrics.global.subscriptOffset / ChordSymbol.engravingFontResolution;\n    }\n    static get kerningOffset() {\n        return ChordSymbol.metrics.global.kerningOffset / ChordSymbol.engravingFontResolution;\n    }\n    // eslint-disable-next-line\n    static get metrics() {\n        return Tables.currentMusicFont().getMetrics().glyphs.chordSymbol;\n    }\n    static get lowerKerningText() {\n        // For example, see: `bravura_metrics.ts`\n        // BravuraMetrics.glyphs.chordSymbol.global.lowerKerningText, which returns an array of letters.\n        // ['D', 'F', 'P', 'T', 'V', 'Y']\n        return ChordSymbol.metrics.global.lowerKerningText;\n    }\n    static get upperKerningText() {\n        return ChordSymbol.metrics.global.upperKerningText;\n    }\n    static isSuperscript(block) {\n        return block.symbolModifier !== undefined && block.symbolModifier === SymbolModifiers.SUPERSCRIPT;\n    }\n    static isSubscript(block) {\n        return block.symbolModifier !== undefined && block.symbolModifier === SymbolModifiers.SUBSCRIPT;\n    }\n    /**\n     * Estimate the width of the whole chord symbol, based on the sum of the widths of the individual blocks.\n     * Estimate how many lines above/below the staff we need.\n     */\n    static format(symbols, state) {\n        var _a;\n        if (!symbols || symbols.length === 0)\n            return false;\n        let width = 0;\n        let nonSuperWidth = 0;\n        const reportedWidths = [];\n        for (const symbol of symbols) {\n            const fontSize = Font.convertSizeToPointValue((_a = symbol.textFont) === null || _a === void 0 ? void 0 : _a.size);\n            const fontAdj = Font.scaleSize(fontSize, 0.05);\n            const glyphAdj = fontAdj * 2;\n            let lineSpaces = 1;\n            let vAlign = false;\n            for (let j = 0; j < symbol.symbolBlocks.length; ++j) {\n                const block = symbol.symbolBlocks[j];\n                const sup = ChordSymbol.isSuperscript(block);\n                const sub = ChordSymbol.isSubscript(block);\n                const superSubScale = sup || sub ? ChordSymbol.superSubRatio : 1;\n                const adj = block.symbolType === SymbolTypes.GLYPH ? glyphAdj * superSubScale : fontAdj * superSubScale;\n                // If there are super/subscripts, they extend beyond the line so\n                // assume they take up 2 lines\n                if (sup || sub) {\n                    lineSpaces = 2;\n                }\n                // If there is a symbol-specific offset, add it but consider font\n                // size since font and glyphs will be interspersed.\n                const fontSize = symbol.textFormatter.fontSizeInPixels;\n                const superSubFontSize = fontSize * superSubScale;\n                if (block.symbolType === SymbolTypes.GLYPH && block.glyph !== undefined) {\n                    block.width = ChordSymbol.getWidthForGlyph(block.glyph) * superSubFontSize;\n                    block.yShift += ChordSymbol.getYShiftForGlyph(block.glyph) * superSubFontSize;\n                    block.xShift += ChordSymbol.getXShiftForGlyph(block.glyph) * superSubFontSize;\n                    block.glyph.scale = block.glyph.scale * adj;\n                }\n                else if (block.symbolType === SymbolTypes.TEXT) {\n                    block.width = block.width * superSubFontSize;\n                    block.yShift += symbol.getYOffsetForText(block.text) * adj;\n                }\n                if (block.symbolType === SymbolTypes.GLYPH &&\n                    block.glyph !== undefined &&\n                    block.glyph.code === ChordSymbol.glyphs.over.code) {\n                    lineSpaces = 2;\n                }\n                block.width += ChordSymbol.spacingBetweenBlocks * fontSize * superSubScale;\n                // If a subscript immediately  follows a superscript block, try to\n                // overlay them.\n                if (sup && j > 0) {\n                    const prev = symbol.symbolBlocks[j - 1];\n                    if (!ChordSymbol.isSuperscript(prev)) {\n                        nonSuperWidth = width;\n                    }\n                }\n                if (sub && nonSuperWidth > 0) {\n                    vAlign = true;\n                    // slide the symbol over so it lines up with superscript\n                    block.xShift = block.xShift + (nonSuperWidth - width);\n                    width = nonSuperWidth;\n                    nonSuperWidth = 0;\n                    // If we have vertically lined up, turn kerning off.\n                    symbol.setEnableKerning(false);\n                }\n                if (!sup && !sub) {\n                    nonSuperWidth = 0;\n                }\n                block.vAlign = vAlign;\n                width += block.width;\n            }\n            // make kerning adjustments after computing super/subscripts\n            symbol.updateKerningAdjustments();\n            symbol.updateOverBarAdjustments();\n            if (symbol.getVertical() === ChordSymbolVerticalJustify.TOP) {\n                symbol.setTextLine(state.top_text_line);\n                state.top_text_line += lineSpaces;\n            }\n            else {\n                symbol.setTextLine(state.text_line + 1);\n                state.text_line += lineSpaces + 1;\n            }\n            if (symbol.getReportWidth()) {\n                reportedWidths.push(width);\n            }\n            else {\n                reportedWidths.push(0);\n            }\n        }\n        width = reportedWidths.reduce((a, b) => a + b, 0);\n        state.left_shift += width / 2;\n        state.right_shift += width / 2;\n        return true;\n    }\n    /**\n     * Default text font.\n     * Choose a font family that works well with the current music engraving font.\n     * @override `Element.TEXT_FONT`.\n     */\n    static get TEXT_FONT() {\n        let family = 'Roboto Slab, Times, serif';\n        if (Tables.currentMusicFont().getName() === 'Petaluma') {\n            // Fixes Issue #1180\n            family = 'PetalumaScript, Arial, sans-serif';\n        }\n        return {\n            family,\n            size: 12,\n            weight: FontWeight.NORMAL,\n            style: FontStyle.NORMAL,\n        };\n    }\n    /**\n     * The offset is specified in `em`. Scale this value by the font size in pixels.\n     */\n    get superscriptOffset() {\n        return ChordSymbol.superscriptOffset * this.textFormatter.fontSizeInPixels;\n    }\n    get subscriptOffset() {\n        return ChordSymbol.subscriptOffset * this.textFormatter.fontSizeInPixels;\n    }\n    setReportWidth(value) {\n        this.reportWidth = value;\n        return this;\n    }\n    getReportWidth() {\n        return this.reportWidth;\n    }\n    updateOverBarAdjustments() {\n        const barIndex = this.symbolBlocks.findIndex(({ symbolType, glyph }) => symbolType === SymbolTypes.GLYPH && glyph !== undefined && glyph.code === 'csymDiagonalArrangementSlash');\n        if (barIndex < 0) {\n            return;\n        }\n        const bar = this.symbolBlocks[barIndex];\n        const xoff = bar.width / 4;\n        const yoff = 0.25 * this.textFormatter.fontSizeInPixels;\n        let symIndex = 0;\n        for (symIndex === 0; symIndex < barIndex; ++symIndex) {\n            const symbol = this.symbolBlocks[symIndex];\n            symbol.xShift = symbol.xShift + xoff;\n            symbol.yShift = symbol.yShift - yoff;\n        }\n        for (symIndex = barIndex + 1; symIndex < this.symbolBlocks.length; ++symIndex) {\n            const symbol = this.symbolBlocks[symIndex];\n            symbol.xShift = symbol.xShift - xoff;\n            symbol.yShift = symbol.yShift + yoff;\n        }\n    }\n    updateKerningAdjustments() {\n        let accum = 0;\n        for (let j = 0; j < this.symbolBlocks.length; ++j) {\n            const symbol = this.symbolBlocks[j];\n            accum += this.getKerningAdjustment(j);\n            symbol.xShift += accum;\n        }\n    }\n    /** Do some basic kerning so that letter chords like 'A' don't have the extensions hanging off to the right. */\n    getKerningAdjustment(j) {\n        if (!this.useKerning) {\n            return 0;\n        }\n        const currSymbol = this.symbolBlocks[j];\n        const prevSymbol = j > 0 ? this.symbolBlocks[j - 1] : undefined;\n        let adjustment = 0;\n        // Move things into the '/' over bar\n        if (currSymbol.symbolType === SymbolTypes.GLYPH &&\n            currSymbol.glyph !== undefined &&\n            currSymbol.glyph.code === ChordSymbol.glyphs.over.code) {\n            adjustment += currSymbol.glyph.metrics.x_shift;\n        }\n        if (prevSymbol !== undefined &&\n            prevSymbol.symbolType === SymbolTypes.GLYPH &&\n            prevSymbol.glyph !== undefined &&\n            prevSymbol.glyph.code === ChordSymbol.glyphs.over.code) {\n            adjustment += prevSymbol.glyph.metrics.x_shift;\n        }\n        // For superscripts that follow a letter without much top part, move it to the left slightly\n        let preKernUpper = false;\n        let preKernLower = false;\n        if (prevSymbol !== undefined && prevSymbol.symbolType === SymbolTypes.TEXT) {\n            preKernUpper = ChordSymbol.upperKerningText.some((xx) => xx === prevSymbol.text[prevSymbol.text.length - 1]);\n            preKernLower = ChordSymbol.lowerKerningText.some((xx) => xx === prevSymbol.text[prevSymbol.text.length - 1]);\n        }\n        const kerningOffsetPixels = ChordSymbol.kerningOffset * this.textFormatter.fontSizeInPixels;\n        // TODO: adjust kern for font size.\n        // Where should this constant live?\n        if (preKernUpper && currSymbol.symbolModifier === SymbolModifiers.SUPERSCRIPT) {\n            adjustment += kerningOffsetPixels;\n        }\n        if (preKernLower && currSymbol.symbolType === SymbolTypes.TEXT) {\n            if (currSymbol.text[0] >= 'a' && currSymbol.text[0] <= 'z') {\n                adjustment += kerningOffsetPixels / 2;\n            }\n            if (ChordSymbol.upperKerningText.some((xx) => xx === (prevSymbol === null || prevSymbol === void 0 ? void 0 : prevSymbol.text[prevSymbol.text.length - 1]))) {\n                adjustment += kerningOffsetPixels / 2;\n            }\n        }\n        return adjustment;\n    }\n    /**\n     * ChordSymbol allows multiple blocks so we can mix glyphs and font text.\n     * Each block can have its own vertical orientation.\n     */\n    // eslint-disable-next-line\n    getSymbolBlock(params = {}) {\n        var _a, _b, _c;\n        const symbolType = (_a = params.symbolType) !== null && _a !== void 0 ? _a : SymbolTypes.TEXT;\n        const symbolBlock = {\n            text: (_b = params.text) !== null && _b !== void 0 ? _b : '',\n            symbolType,\n            symbolModifier: (_c = params.symbolModifier) !== null && _c !== void 0 ? _c : SymbolModifiers.NONE,\n            xShift: 0,\n            yShift: 0,\n            vAlign: false,\n            width: 0,\n        };\n        // Note: symbol widths are resolution and font-independent.\n        // We convert to pixel values when we know what the font is.\n        if (symbolType === SymbolTypes.GLYPH && typeof params.glyph === 'string') {\n            const glyphArgs = ChordSymbol.glyphs[params.glyph];\n            const glyphPoints = 20;\n            symbolBlock.glyph = new Glyph(glyphArgs.code, glyphPoints, { category: 'chordSymbol' });\n            // Beware: glyph.metrics is not the same as glyph.getMetrics() !\n            // rv.glyph.point = rv.glyph.point * rv.glyph.metrics.scale;\n            // rv.width = rv.glyph.getMetrics().width;\n            // don't set yShift here, b/c we need to do it at formatting time after the font is set.\n        }\n        else if (symbolType === SymbolTypes.TEXT) {\n            symbolBlock.width = this.textFormatter.getWidthForTextInEm(symbolBlock.text);\n        }\n        else if (symbolType === SymbolTypes.LINE) {\n            symbolBlock.width = params.width;\n        }\n        return symbolBlock;\n    }\n    /** Add a symbol to this chord, could be text, glyph or line. */\n    // eslint-disable-next-line\n    addSymbolBlock(parameters) {\n        this.symbolBlocks.push(this.getSymbolBlock(parameters));\n        return this;\n    }\n    // ### Convenience functions for creating different types of chord symbol parts.\n    /** Add a text block. */\n    // eslint-disable-next-line\n    addText(text, parameters = {}) {\n        const symbolType = SymbolTypes.TEXT;\n        return this.addSymbolBlock(Object.assign(Object.assign({}, parameters), { text, symbolType }));\n    }\n    /** Add a text block with superscript modifier. */\n    addTextSuperscript(text) {\n        const symbolType = SymbolTypes.TEXT;\n        const symbolModifier = SymbolModifiers.SUPERSCRIPT;\n        return this.addSymbolBlock({ text, symbolType, symbolModifier });\n    }\n    /** Add a text block with subscript modifier. */\n    addTextSubscript(text) {\n        const symbolType = SymbolTypes.TEXT;\n        const symbolModifier = SymbolModifiers.SUBSCRIPT;\n        return this.addSymbolBlock({ text, symbolType, symbolModifier });\n    }\n    /** Add a glyph block with superscript modifier. */\n    addGlyphSuperscript(glyph) {\n        const symbolType = SymbolTypes.GLYPH;\n        const symbolModifier = SymbolModifiers.SUPERSCRIPT;\n        return this.addSymbolBlock({ glyph, symbolType, symbolModifier });\n    }\n    /** Add a glyph block. */\n    // eslint-disable-next-line\n    addGlyph(glyph, params = {}) {\n        const symbolType = SymbolTypes.GLYPH;\n        return this.addSymbolBlock(Object.assign(Object.assign({}, params), { glyph, symbolType }));\n    }\n    /**\n     * Add a glyph for each character in 'text'. If the glyph is not available, use text from the font.\n     * e.g. `addGlyphOrText('(+5#11)')` will use text for the '5' and '11', and glyphs for everything else.\n     */\n    // eslint-disable-next-line\n    addGlyphOrText(text, params = {}) {\n        let str = '';\n        for (let i = 0; i < text.length; ++i) {\n            const char = text[i];\n            if (ChordSymbol.glyphs[char]) {\n                if (str.length > 0) {\n                    this.addText(str, params);\n                    str = '';\n                }\n                this.addGlyph(char, params);\n            }\n            else {\n                // Collect consecutive characters with no glyphs.\n                str += char;\n            }\n        }\n        if (str.length > 0) {\n            this.addText(str, params);\n        }\n        return this;\n    }\n    /** Add a line of the given width, used as a continuation of the previous symbol in analysis, or lyrics, etc. */\n    // eslint-disable-next-line\n    addLine(width, params = {}) {\n        const symbolType = SymbolTypes.LINE;\n        return this.addSymbolBlock(Object.assign(Object.assign({}, params), { symbolType, width }));\n    }\n    /**\n     * Set the chord symbol's font family, size, weight, style (e.g., `Arial`, `10pt`, `bold`, `italic`).\n     *\n     * @param f is 1) a `FontInfo` object or\n     *             2) a string formatted as CSS font shorthand (e.g., 'bold 10pt Arial') or\n     *             3) a string representing the font family (one of `size`, `weight`, or `style` must also be provided).\n     * @param size a string specifying the font size and unit (e.g., '16pt'), or a number (the unit is assumed to be 'pt').\n     * @param weight is a string (e.g., 'bold', 'normal') or a number (100, 200, ... 900).\n     * @param style is a string (e.g., 'italic', 'normal').\n     *\n     * @override See: Element.\n     */\n    setFont(f, size, weight, style) {\n        super.setFont(f, size, weight, style);\n        this.textFormatter = TextFormatter.create(this.textFont);\n        return this;\n    }\n    setEnableKerning(val) {\n        this.useKerning = val;\n        return this;\n    }\n    /** Set vertical position of text (above or below stave). */\n    setVertical(vj) {\n        this.vertical = typeof vj === 'string' ? ChordSymbol.VerticalJustifyString[vj] : vj;\n        return this;\n    }\n    getVertical() {\n        return this.vertical;\n    }\n    /** Set horizontal justification. */\n    setHorizontal(hj) {\n        this.horizontal = typeof hj === 'string' ? ChordSymbol.HorizontalJustifyString[hj] : hj;\n        return this;\n    }\n    getHorizontal() {\n        return this.horizontal;\n    }\n    getWidth() {\n        let width = 0;\n        this.symbolBlocks.forEach((symbol) => {\n            width += symbol.vAlign ? 0 : symbol.width;\n        });\n        return width;\n    }\n    getYOffsetForText(text) {\n        var _a;\n        let acc = 0;\n        let i = 0;\n        for (i = 0; i < text.length; ++i) {\n            const metrics = this.textFormatter.getGlyphMetrics(text[i]);\n            if (metrics) {\n                const yMax = (_a = metrics.y_max) !== null && _a !== void 0 ? _a : 0;\n                acc = yMax < acc ? yMax : acc;\n            }\n        }\n        const resolution = this.textFormatter.getResolution();\n        return i > 0 ? -1 * (acc / resolution) : 0;\n    }\n    /** Render text and glyphs above/below the note. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        // We're changing context parameters. Save current state.\n        ctx.save();\n        const classString = Object.keys(this.getAttribute('classes')).join(' ');\n        ctx.openGroup(classString, this.getAttribute('id'));\n        const start = note.getModifierStartXY(Modifier.Position.ABOVE, this.index);\n        ctx.setFont(this.textFont);\n        let y;\n        // The position of the text varies based on whether or not the note\n        // has a stem.\n        const hasStem = note.hasStem();\n        const stave = note.checkStave();\n        if (this.vertical === ChordSymbolVerticalJustify.BOTTOM) {\n            // HACK: We need to compensate for the text's height since its origin is bottom-right.\n            y = stave.getYForBottomText(this.text_line + Tables.TEXT_HEIGHT_OFFSET_HACK);\n            if (hasStem) {\n                const stem_ext = note.checkStem().getExtents();\n                const spacing = stave.getSpacingBetweenLines();\n                const stem_base = note.getStemDirection() === 1 ? stem_ext.baseY : stem_ext.topY;\n                y = Math.max(y, stem_base + spacing * (this.text_line + 2));\n            }\n        }\n        else {\n            // (this.vertical === VerticalJustify.TOP)\n            y = Math.min(stave.getYForTopText(this.text_line), note.getYs()[0] - 10);\n            if (hasStem) {\n                const stem_ext = note.checkStem().getExtents();\n                const spacing = stave.getSpacingBetweenLines();\n                y = Math.min(y, stem_ext.topY - 5 - spacing * this.text_line);\n            }\n        }\n        let x = start.x;\n        if (this.horizontal === ChordSymbolHorizontalJustify.LEFT) {\n            x = start.x;\n        }\n        else if (this.horizontal === ChordSymbolHorizontalJustify.RIGHT) {\n            x = start.x + this.getWidth();\n        }\n        else if (this.horizontal === ChordSymbolHorizontalJustify.CENTER) {\n            x = start.x - this.getWidth() / 2;\n        }\n        else {\n            // HorizontalJustify.CENTER_STEM\n            x = note.getStemX() - this.getWidth() / 2;\n        }\n        L('Rendering ChordSymbol: ', this.textFormatter, x, y);\n        this.symbolBlocks.forEach((symbol) => {\n            const isSuper = ChordSymbol.isSuperscript(symbol);\n            const isSub = ChordSymbol.isSubscript(symbol);\n            let curY = y;\n            L('shift was ', symbol.xShift, symbol.yShift);\n            L('curY pre sub ', curY);\n            if (isSuper) {\n                curY += this.superscriptOffset;\n            }\n            if (isSub) {\n                curY += this.subscriptOffset;\n            }\n            L('curY sup/sub ', curY);\n            if (symbol.symbolType === SymbolTypes.TEXT) {\n                if (isSuper || isSub) {\n                    ctx.save();\n                    if (this.textFont) {\n                        const { family, size, weight, style } = this.textFont;\n                        const smallerFontSize = Font.scaleSize(size, ChordSymbol.superSubRatio);\n                        ctx.setFont(family, smallerFontSize, weight, style);\n                    }\n                }\n                // TODO???\n                // We estimate the text width, fill it in with the empirical value so the formatting is even.\n                // const textDim = ctx.measureText(symbol.text);\n                // symbol.width = textDim.width;\n                L('Rendering Text: ', symbol.text, x + symbol.xShift, curY + symbol.yShift);\n                ctx.fillText(symbol.text, x + symbol.xShift, curY + symbol.yShift);\n                if (isSuper || isSub) {\n                    ctx.restore();\n                }\n            }\n            else if (symbol.symbolType === SymbolTypes.GLYPH && symbol.glyph) {\n                curY += symbol.yShift;\n                L('Rendering Glyph: ', symbol.glyph.code, x + symbol.xShift, curY);\n                symbol.glyph.render(ctx, x + symbol.xShift, curY);\n            }\n            else if (symbol.symbolType === SymbolTypes.LINE) {\n                L('Rendering Line : ', symbol.width, x, curY);\n                ctx.beginPath();\n                ctx.setLineWidth(1); // ?\n                ctx.moveTo(x, y);\n                ctx.lineTo(x + symbol.width, curY);\n                ctx.stroke();\n            }\n            x += symbol.width;\n            if (symbol.vAlign) {\n                x += symbol.xShift;\n            }\n        });\n        ctx.closeGroup();\n        ctx.restore();\n    }\n}\nChordSymbol.DEBUG = false;\n// Chord symbols can be positioned and justified relative to the note.\nChordSymbol.HorizontalJustify = ChordSymbolHorizontalJustify;\nChordSymbol.HorizontalJustifyString = {\n    left: ChordSymbolHorizontalJustify.LEFT,\n    right: ChordSymbolHorizontalJustify.RIGHT,\n    center: ChordSymbolHorizontalJustify.CENTER,\n    centerStem: ChordSymbolHorizontalJustify.CENTER_STEM,\n};\nChordSymbol.VerticalJustify = ChordSymbolVerticalJustify;\nChordSymbol.VerticalJustifyString = {\n    top: ChordSymbolVerticalJustify.TOP,\n    above: ChordSymbolVerticalJustify.TOP,\n    below: ChordSymbolVerticalJustify.BOTTOM,\n    bottom: ChordSymbolVerticalJustify.BOTTOM,\n};\n// Glyph data\nChordSymbol.glyphs = {\n    diminished: {\n        code: 'csymDiminished',\n    },\n    dim: {\n        code: 'csymDiminished',\n    },\n    halfDiminished: {\n        code: 'csymHalfDiminished',\n    },\n    '+': {\n        code: 'csymAugmented',\n    },\n    augmented: {\n        code: 'csymAugmented',\n    },\n    majorSeventh: {\n        code: 'csymMajorSeventh',\n    },\n    minor: {\n        code: 'csymMinor',\n    },\n    '-': {\n        code: 'csymMinor',\n    },\n    '(': {\n        code: 'csymParensLeftTall',\n    },\n    leftParen: {\n        code: 'csymParensLeftTall',\n    },\n    ')': {\n        code: 'csymParensRightTall',\n    },\n    rightParen: {\n        code: 'csymParensRightTall',\n    },\n    leftBracket: {\n        code: 'csymBracketLeftTall',\n    },\n    rightBracket: {\n        code: 'csymBracketRightTall',\n    },\n    leftParenTall: {\n        code: 'csymParensLeftVeryTall',\n    },\n    rightParenTall: {\n        code: 'csymParensRightVeryTall',\n    },\n    '/': {\n        code: 'csymDiagonalArrangementSlash',\n    },\n    over: {\n        code: 'csymDiagonalArrangementSlash',\n    },\n    '#': {\n        code: 'accidentalSharp',\n    },\n    b: {\n        code: 'accidentalFlat',\n    },\n};\nChordSymbol.symbolTypes = SymbolTypes;\nChordSymbol.symbolModifiers = SymbolModifiers;\n/** Currently unused. */\nChordSymbol.noFormat = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\nexport var VoiceMode;\n(function (VoiceMode) {\n    VoiceMode[VoiceMode[\"STRICT\"] = 1] = \"STRICT\";\n    VoiceMode[VoiceMode[\"SOFT\"] = 2] = \"SOFT\";\n    VoiceMode[VoiceMode[\"FULL\"] = 3] = \"FULL\";\n})(VoiceMode || (VoiceMode = {}));\n/**\n * `Voice` is mainly a container object to group `Tickables` for formatting.\n */\nexport class Voice extends Element {\n    constructor(time, options) {\n        super();\n        this.resolutionMultiplier = 1;\n        this.mode = VoiceMode.STRICT;\n        this.preFormatted = false;\n        this.ticksUsed = new Fraction(0, 1);\n        this.largestTickWidth = 0;\n        this.tickables = [];\n        this.options = Object.assign({ softmaxFactor: 100 }, options);\n        // Convert the `time` string into a VoiceTime object if necessary.\n        let voiceTime;\n        if (typeof time === 'string') {\n            // Time signature shortcut: \"4/4\", \"3/8\", etc.\n            const match = time.match(/(\\d+)\\/(\\d+)/);\n            if (match) {\n                voiceTime = {\n                    num_beats: parseInt(match[1]),\n                    beat_value: parseInt(match[2]),\n                };\n            }\n        }\n        else {\n            voiceTime = time;\n        }\n        // Default time signature is 4/4.\n        this.time = Object.assign({ num_beats: 4, beat_value: 4, resolution: Tables.RESOLUTION }, voiceTime);\n        // Recalculate total ticks.\n        this.totalTicks = new Fraction(this.time.num_beats * (this.time.resolution / this.time.beat_value), 1);\n        this.smallestTickCount = this.totalTicks.clone();\n    }\n    static get CATEGORY() {\n        return Category.Voice;\n    }\n    /**\n     * Modes allow the addition of ticks in three different ways:\n     * - STRICT: This is the default. Ticks must fill the voice.\n     * - SOFT: Ticks can be added without restrictions.\n     * - FULL: Ticks do not need to fill the voice, but can't exceed the maximum tick length.\n     */\n    static get Mode() {\n        return VoiceMode;\n    }\n    /** Get the total ticks in the voice. */\n    getTotalTicks() {\n        return this.totalTicks;\n    }\n    /** Get the total ticks used in the voice by all the tickables. */\n    getTicksUsed() {\n        return this.ticksUsed;\n    }\n    /** Get the largest width of all the tickables. */\n    getLargestTickWidth() {\n        return this.largestTickWidth;\n    }\n    /** Get the tick count for the shortest tickable */\n    getSmallestTickCount() {\n        return this.smallestTickCount;\n    }\n    /** Get the tickables in the voice. */\n    getTickables() {\n        return this.tickables;\n    }\n    /** Get the voice mode. */\n    getMode() {\n        return this.mode;\n    }\n    /**\n     * Set the voice mode.\n     * @param mode value from `VoiceMode`\n     */\n    setMode(mode) {\n        this.mode = mode;\n        return this;\n    }\n    /** Get the resolution multiplier for the voice. */\n    getResolutionMultiplier() {\n        return this.resolutionMultiplier;\n    }\n    /** Get the actual tick resolution for the voice. */\n    getActualResolution() {\n        return this.resolutionMultiplier * this.time.resolution;\n    }\n    /** Set the voice's stave. */\n    setStave(stave) {\n        this.stave = stave;\n        // Reset the bounding box so we can reformat.\n        this.boundingBox = undefined;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    /** Get the bounding box for the voice. */\n    getBoundingBox() {\n        if (!this.boundingBox) {\n            const stave = this.checkStave();\n            let boundingBox = undefined;\n            for (let i = 0; i < this.tickables.length; ++i) {\n                const tickable = this.tickables[i];\n                tickable.setStave(stave);\n                const bb = tickable.getBoundingBox();\n                if (bb) {\n                    boundingBox = boundingBox ? boundingBox.mergeWith(bb) : bb;\n                }\n            }\n            this.boundingBox = boundingBox;\n        }\n        return this.boundingBox;\n    }\n    /** Set the voice mode to strict or soft. */\n    setStrict(strict) {\n        this.mode = strict ? VoiceMode.STRICT : VoiceMode.SOFT;\n        return this;\n    }\n    /** Determine if the voice is complete according to the voice mode. */\n    isComplete() {\n        if (this.mode === VoiceMode.STRICT || this.mode === VoiceMode.FULL) {\n            return this.ticksUsed.equals(this.totalTicks);\n        }\n        else {\n            return true;\n        }\n    }\n    /**\n     * We use softmax to layout the tickables proportional to the exponent of\n     * their duration. The softmax factor is used to determine the 'linearness' of\n     * the layout.\n     *\n     * The softmax of all the tickables in this voice should sum to 1.\n     */\n    setSoftmaxFactor(factor) {\n        this.options.softmaxFactor = factor;\n        return this;\n    }\n    /**\n     * Calculate the sum of the exponents of all the ticks in this voice to use\n     * as the denominator of softmax.\n     */\n    reCalculateExpTicksUsed() {\n        const totalTicks = this.ticksUsed.value();\n        const exp = (tickable) => Math.pow(this.options.softmaxFactor, tickable.getTicks().value() / totalTicks);\n        this.expTicksUsed = this.tickables.map(exp).reduce((a, b) => a + b, 0);\n        return this.expTicksUsed;\n    }\n    /** Get the softmax-scaled value of a tick duration. 'tickValue' is a number. */\n    softmax(tickValue) {\n        if (!this.expTicksUsed) {\n            this.expTicksUsed = this.reCalculateExpTicksUsed();\n        }\n        const totalTicks = this.ticksUsed.value();\n        const exp = (v) => Math.pow(this.options.softmaxFactor, v / totalTicks);\n        const sm = exp(tickValue) / this.expTicksUsed;\n        return sm;\n    }\n    /** Add a tickable to the voice. */\n    addTickable(tickable) {\n        if (!tickable.shouldIgnoreTicks()) {\n            const ticks = tickable.getTicks();\n            // Update the total ticks for this line.\n            this.ticksUsed.add(ticks);\n            this.expTicksUsed = 0; // reset\n            if ((this.mode === VoiceMode.STRICT || this.mode === VoiceMode.FULL) &&\n                this.ticksUsed.greaterThan(this.totalTicks)) {\n                this.ticksUsed.subtract(ticks);\n                throw new RuntimeError('BadArgument', 'Too many ticks.');\n            }\n            // Track the smallest tickable for formatting.\n            if (ticks.lessThan(this.smallestTickCount)) {\n                this.smallestTickCount = ticks.clone();\n            }\n            this.resolutionMultiplier = this.ticksUsed.denominator;\n            // Expand total ticks using denominator from ticks used.\n            this.totalTicks.add(0, this.ticksUsed.denominator);\n        }\n        // Add the tickable to the line.\n        this.tickables.push(tickable);\n        tickable.setVoice(this);\n        return this;\n    }\n    /** Add an array of tickables to the voice. */\n    addTickables(tickables) {\n        for (let i = 0; i < tickables.length; ++i) {\n            this.addTickable(tickables[i]);\n        }\n        return this;\n    }\n    /** Preformat the voice by applying the voice's stave to each note. */\n    preFormat() {\n        if (this.preFormatted)\n            return this;\n        const stave = this.checkStave();\n        this.tickables.forEach((tickable) => {\n            if (!tickable.getStave()) {\n                tickable.setStave(stave);\n            }\n        });\n        this.preFormatted = true;\n        return this;\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    /**\n     * Render the voice onto the canvas `context` and an optional `stave`.\n     * If `stave` is omitted, it is expected that the notes have staves\n     * already set.\n     *\n     * This method also calculates the voice's boundingBox while drawing\n     * the notes. Note the similarities with this.getBoundingBox().\n     */\n    draw(context = this.checkContext(), stave) {\n        stave = stave !== null && stave !== void 0 ? stave : this.stave;\n        this.setRendered();\n        let boundingBox = undefined;\n        for (let i = 0; i < this.tickables.length; ++i) {\n            const tickable = this.tickables[i];\n            // Set the stave if provided.\n            if (stave) {\n                tickable.setStave(stave);\n            }\n            defined(tickable.getStave(), 'MissingStave', 'The voice cannot draw tickables without staves.');\n            const bb = tickable.getBoundingBox();\n            if (bb) {\n                boundingBox = boundingBox ? boundingBox.mergeWith(bb) : bb;\n            }\n            tickable.setContext(context);\n            tickable.drawWithStyle();\n        }\n        this.boundingBox = boundingBox;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Note } from './note';\nimport { Barline, BarlineType } from './stavebarline';\nimport { Category } from './typeguard';\nimport { log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (BarNote.DEBUG)\n        log('Vex.Flow.BarNote', args);\n}\n/**\n * A `BarNote` is used to render bar lines (from `barline.ts`). `BarNote`s can\n * be added to a voice and rendered in the middle of a stave. Since it has no\n * duration, it consumes no `tick`s, and is dealt with appropriately by the formatter.\n *\n * See `tests/barnote_tests.ts` for usage examples.\n */\nexport class BarNote extends Note {\n    constructor(type = BarlineType.SINGLE) {\n        super({ duration: 'b' });\n        this.metrics = {\n            widths: {},\n        };\n        const TYPE = BarlineType;\n        this.metrics.widths = {\n            [TYPE.SINGLE]: 8,\n            [TYPE.DOUBLE]: 12,\n            [TYPE.END]: 15,\n            [TYPE.REPEAT_BEGIN]: 14,\n            [TYPE.REPEAT_END]: 14,\n            [TYPE.REPEAT_BOTH]: 18,\n            [TYPE.NONE]: 0,\n        };\n        // Tell the formatter that bar notes have no duration.\n        this.ignore_ticks = true;\n        this.setType(type);\n    }\n    static get CATEGORY() {\n        return Category.BarNote;\n    }\n    /** Get the type of bar note.*/\n    getType() {\n        return this.type;\n    }\n    /** Set the type of bar note. */\n    setType(type) {\n        this.type = typeof type === 'string' ? Barline.typeString[type] : type;\n        // Set width to width of relevant `Barline`.\n        this.setWidth(this.metrics.widths[this.type]);\n        return this;\n    }\n    /* Overridden to ignore */\n    // eslint-disable-next-line\n    addToModifierContext(mc) {\n        // DO NOTHING.\n        return this;\n    }\n    /** Overridden to ignore. */\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    /** Render note to stave. */\n    draw() {\n        const ctx = this.checkContext();\n        L('Rendering bar line at: ', this.getAbsoluteX());\n        if (this.style)\n            this.applyStyle(ctx);\n        const barline = new Barline(this.type);\n        barline.setX(this.getAbsoluteX());\n        barline.draw(this.checkStave());\n        if (this.style)\n            this.restoreStyle(ctx);\n        this.setRendered();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.BarNote.DEBUG` to `true`. */\nBarNote.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Modifier } from './modifier';\nimport { TextFormatter } from './textformatter';\nimport { Category, isTabNote } from './typeguard';\nimport { RuntimeError } from './util';\n/** Bend implements tablature bends. */\nexport class Bend extends Modifier {\n    /**\n     * Example of a phrase:\n     * ```\n     *    [{\n     *     type: UP,\n     *     text: \"whole\"\n     *     width: 8;\n     *   },\n     *   {\n     *     type: DOWN,\n     *     text: \"whole\"\n     *     width: 8;\n     *   },\n     *   {\n     *     type: UP,\n     *     text: \"half\"\n     *     width: 8;\n     *   },\n     *   {\n     *     type: UP,\n     *     text: \"whole\"\n     *     width: 8;\n     *   },\n     *   {\n     *     type: DOWN,\n     *     text: \"1 1/2\"\n     *     width: 8;\n     *   }]\n     * ```\n     * @param text text for bend (\"Full\", \"Half\", etc.) (DEPRECATED)\n     * @param release if true, render a release. (DEPRECATED)\n     * @param phrase if set, ignore \"text\" and \"release\", and use the more sophisticated phrase specified\n     */\n    constructor(text, release = false, phrase) {\n        super();\n        this.text = text;\n        this.x_shift = 0;\n        this.release = release;\n        this.tap = '';\n        this.resetFont();\n        this.render_options = {\n            line_width: 1.5,\n            line_style: '#777777',\n            bend_width: 8,\n            release_width: 8,\n        };\n        if (phrase) {\n            this.phrase = phrase;\n        }\n        else {\n            // Backward compatibility\n            this.phrase = [{ type: Bend.UP, text: this.text }];\n            if (this.release)\n                this.phrase.push({ type: Bend.DOWN, text: '' });\n        }\n        this.updateWidth();\n    }\n    static get CATEGORY() {\n        return Category.Bend;\n    }\n    static get UP() {\n        return 0;\n    }\n    static get DOWN() {\n        return 1;\n    }\n    // Arrange bends in `ModifierContext`\n    static format(bends, state) {\n        if (!bends || bends.length === 0)\n            return false;\n        let last_width = 0;\n        // Format Bends\n        for (let i = 0; i < bends.length; ++i) {\n            const bend = bends[i];\n            const note = bend.checkAttachedNote();\n            if (isTabNote(note)) {\n                const stringPos = note.leastString() - 1;\n                if (state.top_text_line < stringPos) {\n                    state.top_text_line = stringPos;\n                }\n            }\n            bend.setXShift(last_width);\n            last_width = bend.getWidth();\n            bend.setTextLine(state.top_text_line);\n        }\n        state.right_shift += last_width;\n        state.top_text_line += 1;\n        return true;\n    }\n    /** Set horizontal shift in pixels. */\n    setXShift(value) {\n        this.x_shift = value;\n        this.updateWidth();\n        return this;\n    }\n    setTap(value) {\n        this.tap = value;\n        return this;\n    }\n    /** Get text provided in the constructor. */\n    getText() {\n        return this.text;\n    }\n    getTextHeight() {\n        const textFormatter = TextFormatter.create(this.textFont);\n        return textFormatter.maxHeight;\n    }\n    /** Recalculate width. */\n    updateWidth() {\n        const textFormatter = TextFormatter.create(this.textFont);\n        const measureText = (text) => {\n            return textFormatter.getWidthForTextInPx(text);\n        };\n        let totalWidth = 0;\n        for (let i = 0; i < this.phrase.length; ++i) {\n            const bend = this.phrase[i];\n            if (bend.width !== undefined) {\n                totalWidth += bend.width;\n            }\n            else {\n                const additional_width = bend.type === Bend.UP ? this.render_options.bend_width : this.render_options.release_width;\n                bend.width = Math.max(additional_width, measureText(bend.text)) + 3;\n                bend.draw_width = bend.width / 2;\n                totalWidth += bend.width;\n            }\n        }\n        this.setWidth(totalWidth + this.x_shift);\n        return this;\n    }\n    /** Draw the bend on the rendering context. */\n    draw() {\n        var _a;\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(Modifier.Position.RIGHT, this.index);\n        start.x += 3;\n        start.y += 0.5;\n        const x_shift = this.x_shift;\n        const stave = note.checkStave();\n        const spacing = stave.getSpacingBetweenLines();\n        const lowestY = note.getYs().reduce((a, b) => (a < b ? a : b));\n        // this.text_line is relative to top string in the group.\n        const bend_height = start.y - ((this.text_line + 1) * spacing + start.y - lowestY) + 3;\n        const annotation_y = start.y - ((this.text_line + 1) * spacing + start.y - lowestY) - 1;\n        const renderBend = (x, y, width, height) => {\n            const cp_x = x + width;\n            const cp_y = y;\n            ctx.save();\n            ctx.beginPath();\n            ctx.setLineWidth(this.render_options.line_width);\n            ctx.setStrokeStyle(this.render_options.line_style);\n            ctx.setFillStyle(this.render_options.line_style);\n            ctx.moveTo(x, y);\n            ctx.quadraticCurveTo(cp_x, cp_y, x + width, height);\n            ctx.stroke();\n            ctx.restore();\n        };\n        const renderRelease = (x, y, width, height) => {\n            ctx.save();\n            ctx.beginPath();\n            ctx.setLineWidth(this.render_options.line_width);\n            ctx.setStrokeStyle(this.render_options.line_style);\n            ctx.setFillStyle(this.render_options.line_style);\n            ctx.moveTo(x, height);\n            ctx.quadraticCurveTo(x + width, height, x + width, y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        const renderArrowHead = (x, y, direction) => {\n            const width = 4;\n            const yBase = y + width * direction;\n            ctx.beginPath();\n            ctx.moveTo(x, y); // tip of the arrow\n            ctx.lineTo(x - width, yBase);\n            ctx.lineTo(x + width, yBase);\n            ctx.closePath();\n            ctx.fill();\n        };\n        const renderText = (x, text) => {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            const render_x = x - ctx.measureText(text).width / 2;\n            ctx.fillText(text, render_x, annotation_y);\n            ctx.restore();\n        };\n        let last_bend = undefined;\n        let last_bend_draw_width = 0;\n        let last_drawn_width = 0;\n        if ((_a = this.tap) === null || _a === void 0 ? void 0 : _a.length) {\n            const tapStart = note.getModifierStartXY(Modifier.Position.CENTER, this.index);\n            renderText(tapStart.x, this.tap);\n        }\n        for (let i = 0; i < this.phrase.length; ++i) {\n            const bend = this.phrase[i];\n            if (!bend.draw_width)\n                bend.draw_width = 0;\n            if (i === 0)\n                bend.draw_width += x_shift;\n            last_drawn_width = bend.draw_width + last_bend_draw_width - (i === 1 ? x_shift : 0);\n            if (bend.type === Bend.UP) {\n                if (last_bend && last_bend.type === Bend.UP) {\n                    renderArrowHead(start.x, bend_height, +1);\n                }\n                renderBend(start.x, start.y, last_drawn_width, bend_height);\n            }\n            if (bend.type === Bend.DOWN) {\n                if (last_bend && last_bend.type === Bend.UP) {\n                    renderRelease(start.x, start.y, last_drawn_width, bend_height);\n                }\n                if (last_bend && last_bend.type === Bend.DOWN) {\n                    renderArrowHead(start.x, start.y, -1);\n                    renderRelease(start.x, start.y, last_drawn_width, bend_height);\n                }\n                if (!last_bend) {\n                    last_drawn_width = bend.draw_width;\n                    renderRelease(start.x, start.y, last_drawn_width, bend_height);\n                }\n            }\n            renderText(start.x + last_drawn_width, bend.text);\n            last_bend = bend;\n            last_bend_draw_width = bend.draw_width;\n            last_bend.x = start.x;\n            start.x += last_drawn_width;\n        }\n        if (!last_bend || last_bend.x == undefined) {\n            throw new RuntimeError('NoLastBendForBend', 'Internal error.');\n        }\n        // Final arrowhead and text\n        if (last_bend.type === Bend.UP) {\n            renderArrowHead(last_bend.x + last_drawn_width, bend_height, +1);\n        }\n        else if (last_bend.type === Bend.DOWN) {\n            renderArrowHead(last_bend.x + last_drawn_width, start.y, -1);\n        }\n    }\n}\n/** Default text font. */\nBend.TEXT_FONT = Object.assign({}, Element.TEXT_FONT);\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements dot modifiers for notes.\nimport { Modifier } from './modifier';\nimport { Category, isGraceNote, isStaveNote, isTabNote } from './typeguard';\nimport { RuntimeError } from './util';\nexport class Dot extends Modifier {\n    constructor() {\n        super();\n        this.position = Modifier.Position.RIGHT;\n        this.radius = 2;\n        this.setWidth(5);\n        this.dot_shiftY = 0;\n    }\n    static get CATEGORY() {\n        return Category.Dot;\n    }\n    /** Returns the dots associated to a Note. */\n    static getDots(note) {\n        return note.getModifiersByType(Dot.CATEGORY);\n    }\n    /** Add a dot on the specified keys to the notes. */\n    static buildAndAttach(notes, options) {\n        for (const note of notes) {\n            if (options === null || options === void 0 ? void 0 : options.all) {\n                for (let i = 0; i < note.keys.length; i++) {\n                    const dot = new Dot();\n                    dot.setDotShiftY(note.glyph.dot_shiftY);\n                    note.addModifier(dot, i);\n                }\n            }\n            else if ((options === null || options === void 0 ? void 0 : options.index) != undefined) {\n                const dot = new Dot();\n                dot.setDotShiftY(note.glyph.dot_shiftY);\n                note.addModifier(dot, options === null || options === void 0 ? void 0 : options.index);\n            }\n            else {\n                const dot = new Dot();\n                dot.setDotShiftY(note.glyph.dot_shiftY);\n                note.addModifier(dot, 0);\n            }\n        }\n    }\n    // Arrange dots inside a ModifierContext.\n    static format(dots, state) {\n        const right_shift = state.right_shift;\n        const dot_spacing = 1;\n        if (!dots || dots.length === 0)\n            return false;\n        const dot_list = [];\n        const max_shift_map = {};\n        for (let i = 0; i < dots.length; ++i) {\n            const dot = dots[i];\n            const note = dot.getNote();\n            let props;\n            let shift;\n            if (isStaveNote(note)) {\n                const index = dot.checkIndex();\n                props = note.getKeyProps()[index];\n                // consider right displaced head with no previous modifier\n                shift = note.getFirstDotPx();\n            }\n            else if (isTabNote(note)) {\n                props = { line: 0.5 }; // Shim key props for dot placement\n                shift = right_shift;\n            }\n            else {\n                // note object is not StaveNote or TabNote.\n                throw new RuntimeError('Internal', 'Unexpected instance.');\n            }\n            const note_id = note.getAttribute('id');\n            dot_list.push({ line: props.line, note, note_id, dot });\n            max_shift_map[note_id] = Math.max(max_shift_map[note_id] || shift, shift);\n        }\n        // Sort dots by line number.\n        dot_list.sort((a, b) => b.line - a.line);\n        let dot_shift = right_shift;\n        let x_width = 0;\n        let last_line = null;\n        let last_note = null;\n        let prev_dotted_space = null;\n        let half_shiftY = 0;\n        for (let i = 0; i < dot_list.length; ++i) {\n            const { dot, note, note_id, line } = dot_list[i];\n            // Reset the position of the dot every line.\n            if (line !== last_line || note !== last_note) {\n                dot_shift = max_shift_map[note_id];\n            }\n            if (!note.isRest() && line !== last_line) {\n                if (Math.abs(line % 1) === 0.5) {\n                    // note is on a space, so no dot shift\n                    half_shiftY = 0;\n                }\n                else {\n                    // note is on a line, so shift dot to space above the line\n                    half_shiftY = 0.5;\n                    if (last_note != null && !last_note.isRest() && last_line != null && last_line - line === 0.5) {\n                        // previous note on a space, so shift dot to space below the line\n                        half_shiftY = -0.5;\n                    }\n                    else if (line + half_shiftY === prev_dotted_space) {\n                        // previous space is dotted, so shift dot to space below the line\n                        half_shiftY = -0.5;\n                    }\n                }\n            }\n            // convert half_shiftY to a multiplier for dots.draw()\n            if (note.isRest()) {\n                dot.dot_shiftY += -half_shiftY;\n            }\n            else {\n                dot.dot_shiftY = -half_shiftY;\n            }\n            prev_dotted_space = line + half_shiftY;\n            dot.setXShift(dot_shift);\n            dot_shift += dot.getWidth() + dot_spacing; // spacing\n            x_width = dot_shift > x_width ? dot_shift : x_width;\n            last_line = line;\n            last_note = note;\n        }\n        // Update state.\n        state.right_shift += x_width;\n        return true;\n    }\n    setNote(note) {\n        this.note = note;\n        if (isGraceNote(note)) {\n            this.radius *= 0.5;\n            this.setWidth(3);\n        }\n        return this;\n    }\n    setDotShiftY(y) {\n        this.dot_shiftY = y;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const stave = note.checkStave();\n        const lineSpace = stave.getSpacingBetweenLines();\n        const start = note.getModifierStartXY(this.position, this.index, { forceFlagRight: true });\n        // Set the starting y coordinate to the base of the stem for TabNotes.\n        if (isTabNote(note)) {\n            start.y = note.getStemExtents().baseY;\n        }\n        const x = start.x + this.x_shift + this.width - this.radius;\n        const y = start.y + this.y_shift + this.dot_shiftY * lineSpace;\n        ctx.beginPath();\n        ctx.arc(x, y, this.radius, 0, Math.PI * 2, false);\n        ctx.fill();\n    }\n}\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n// Author Larry Kuhns 2013\n// Class to draws string numbers into the notation.\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { Tables } from './tables';\nimport { TextFormatter } from './textformatter';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class FretHandFinger extends Modifier {\n    constructor(finger) {\n        super();\n        this.finger = finger;\n        this.width = 7;\n        this.position = Modifier.Position.LEFT; // Default position above stem or note head\n        this.x_shift = 0;\n        this.y_shift = 0;\n        this.x_offset = 0; // Horizontal offset from default\n        this.y_offset = 0; // Vertical offset from default\n        this.resetFont();\n    }\n    static get CATEGORY() {\n        return Category.FretHandFinger;\n    }\n    // Arrange fingerings inside a ModifierContext.\n    static format(nums, state) {\n        const { left_shift, right_shift } = state;\n        const num_spacing = 1;\n        if (!nums || nums.length === 0)\n            return false;\n        const nums_list = [];\n        let prev_note = null;\n        let shiftLeft = 0;\n        let shiftRight = 0;\n        for (let i = 0; i < nums.length; ++i) {\n            const num = nums[i];\n            const note = num.getNote();\n            const pos = num.getPosition();\n            const index = num.checkIndex();\n            const props = note.getKeyProps()[index];\n            const textFormatter = TextFormatter.create(num.textFont);\n            const textHeight = textFormatter.maxHeight;\n            if (num.position === ModifierPosition.ABOVE) {\n                state.top_text_line += textHeight / Tables.STAVE_LINE_DISTANCE + 0.5;\n            }\n            if (num.position === ModifierPosition.BELOW) {\n                state.text_line += textHeight / Tables.STAVE_LINE_DISTANCE + 0.5;\n            }\n            if (note !== prev_note) {\n                for (let n = 0; n < note.keys.length; ++n) {\n                    if (left_shift === 0) {\n                        shiftLeft = Math.max(note.getLeftDisplacedHeadPx(), shiftLeft);\n                    }\n                    if (right_shift === 0) {\n                        shiftRight = Math.max(note.getRightDisplacedHeadPx(), shiftRight);\n                    }\n                }\n                prev_note = note;\n            }\n            nums_list.push({\n                note,\n                num,\n                pos,\n                line: props.line,\n                shiftL: shiftLeft,\n                shiftR: shiftRight,\n            });\n        }\n        // Sort fingernumbers by line number.\n        nums_list.sort((a, b) => b.line - a.line);\n        let numShiftL = 0;\n        let numShiftR = 0;\n        let xWidthL = 0;\n        let xWidthR = 0;\n        let lastLine = null;\n        let lastNote = null;\n        for (let i = 0; i < nums_list.length; ++i) {\n            let num_shift = 0;\n            const { note, pos, num, line, shiftL, shiftR } = nums_list[i];\n            // Reset the position of the string number every line.\n            if (line !== lastLine || note !== lastNote) {\n                numShiftL = left_shift + shiftL;\n                numShiftR = right_shift + shiftR;\n            }\n            const numWidth = num.getWidth() + num_spacing;\n            if (pos === Modifier.Position.LEFT) {\n                num.setXShift(left_shift + numShiftL);\n                num_shift = left_shift + numWidth; // spacing\n                xWidthL = num_shift > xWidthL ? num_shift : xWidthL;\n            }\n            else if (pos === Modifier.Position.RIGHT) {\n                num.setXShift(numShiftR);\n                num_shift = shiftRight + numWidth; // spacing\n                xWidthR = num_shift > xWidthR ? num_shift : xWidthR;\n            }\n            lastLine = line;\n            lastNote = note;\n        }\n        state.left_shift += xWidthL;\n        state.right_shift += xWidthR;\n        return true;\n    }\n    static easyScoreHook({ fingerings } = {}, note, builder) {\n        fingerings === null || fingerings === void 0 ? void 0 : fingerings.split(',').map((fingeringString) => {\n            const split = fingeringString.trim().split('.');\n            const params = { number: split[0] };\n            if (split[1])\n                params.position = split[1];\n            return builder.getFactory().Fingering(params);\n        }).map((fingering, index) => note.addModifier(fingering, index));\n    }\n    setFretHandFinger(finger) {\n        this.finger = finger;\n        return this;\n    }\n    getFretHandFinger() {\n        return this.finger;\n    }\n    setOffsetX(x) {\n        this.x_offset = x;\n        return this;\n    }\n    setOffsetY(y) {\n        this.y_offset = y;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index);\n        let dot_x = start.x + this.x_shift + this.x_offset;\n        let dot_y = start.y + this.y_shift + this.y_offset + 5;\n        switch (this.position) {\n            case Modifier.Position.ABOVE:\n                dot_x -= 4;\n                dot_y -= 12;\n                break;\n            case Modifier.Position.BELOW:\n                dot_x -= 2;\n                dot_y += 10;\n                break;\n            case Modifier.Position.LEFT:\n                dot_x -= this.width;\n                break;\n            case Modifier.Position.RIGHT:\n                dot_x += 1;\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', `The position ${this.position} does not exist`);\n        }\n        ctx.save();\n        ctx.setFont(this.textFont);\n        ctx.fillText('' + this.finger, dot_x, dot_y);\n        ctx.restore();\n    }\n}\nFretHandFinger.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: 9,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class StaveTie extends Element {\n    /**\n     * @param notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     * @param text\n     */\n    constructor(notes, text) {\n        super();\n        this.setNotes(notes);\n        this.text = text;\n        this.render_options = {\n            cp1: 8,\n            cp2: 12,\n            text_shift_x: 0,\n            first_x_shift: 0,\n            last_x_shift: 0,\n            y_shift: 7,\n            tie_spacing: 0,\n        };\n        this.resetFont();\n    }\n    static get CATEGORY() {\n        return Category.StaveTie;\n    }\n    setDirection(direction) {\n        this.direction = direction;\n        return this;\n    }\n    /**\n     * Set the notes to attach this tie to.\n     *\n     * @param {!Object} notes The notes to tie up.\n     */\n    setNotes(notes) {\n        if (!notes.first_note && !notes.last_note) {\n            throw new RuntimeError('BadArguments', 'Tie needs to have either first_note or last_note set.');\n        }\n        if (!notes.first_indices) {\n            notes.first_indices = [0];\n        }\n        if (!notes.last_indices) {\n            notes.last_indices = [0];\n        }\n        if (notes.first_indices.length !== notes.last_indices.length) {\n            throw new RuntimeError('BadArguments', 'Tied notes must have same number of indices.');\n        }\n        this.notes = notes;\n        return this;\n    }\n    /**\n     * @return {boolean} Returns true if this is a partial bar.\n     */\n    isPartial() {\n        return !this.notes.first_note || !this.notes.last_note;\n    }\n    renderTie(params) {\n        if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n            throw new RuntimeError('BadArguments', 'No Y-values to render');\n        }\n        const ctx = this.checkContext();\n        let cp1 = this.render_options.cp1;\n        let cp2 = this.render_options.cp2;\n        if (Math.abs(params.last_x_px - params.first_x_px) < 10) {\n            cp1 = 2;\n            cp2 = 8;\n        }\n        const first_x_shift = this.render_options.first_x_shift;\n        const last_x_shift = this.render_options.last_x_shift;\n        const y_shift = this.render_options.y_shift * params.direction;\n        // setNotes(...) verified that first_indices and last_indices are not undefined.\n        // As a result, we use the ! non-null assertion operator here.\n        // eslint-disable-next-line\n        const first_indices = this.notes.first_indices;\n        // eslint-disable-next-line\n        const last_indices = this.notes.last_indices;\n        for (let i = 0; i < first_indices.length; ++i) {\n            const cp_x = (params.last_x_px + last_x_shift + (params.first_x_px + first_x_shift)) / 2;\n            const first_y_px = params.first_ys[first_indices[i]] + y_shift;\n            const last_y_px = params.last_ys[last_indices[i]] + y_shift;\n            if (isNaN(first_y_px) || isNaN(last_y_px)) {\n                throw new RuntimeError('BadArguments', 'Bad indices for tie rendering.');\n            }\n            const top_cp_y = (first_y_px + last_y_px) / 2 + cp1 * params.direction;\n            const bottom_cp_y = (first_y_px + last_y_px) / 2 + cp2 * params.direction;\n            // id probably unnecessary if we save the group to 'el' via setAttribute\n            // let id: string = \"\";\n            // if (this.notes.first_note) {\n            //   id = this.notes.first_note.getAttribute('id') + '-tie';\n            // }\n            // this.setAttribute('el', ctx.openGroup('stavetie', id));\n            this.setAttribute('el', ctx.openGroup('stavetie'));\n            ctx.beginPath();\n            ctx.moveTo(params.first_x_px + first_x_shift, first_y_px);\n            ctx.quadraticCurveTo(cp_x, top_cp_y, params.last_x_px + last_x_shift, last_y_px);\n            ctx.quadraticCurveTo(cp_x, bottom_cp_y, params.first_x_px + first_x_shift, first_y_px);\n            ctx.closePath();\n            ctx.fill();\n            ctx.closeGroup();\n        }\n    }\n    renderText(first_x_px, last_x_px) {\n        var _a, _b, _c;\n        if (!this.text)\n            return;\n        const ctx = this.checkContext();\n        let center_x = (first_x_px + last_x_px) / 2;\n        center_x -= ctx.measureText(this.text).width / 2;\n        const stave = (_b = (_a = this.notes.first_note) === null || _a === void 0 ? void 0 : _a.checkStave()) !== null && _b !== void 0 ? _b : (_c = this.notes.last_note) === null || _c === void 0 ? void 0 : _c.checkStave();\n        if (stave) {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            ctx.fillText(this.text, center_x + this.render_options.text_shift_x, stave.getYForTopText() - 1);\n            ctx.restore();\n        }\n    }\n    draw() {\n        this.checkContext();\n        this.setRendered();\n        const first_note = this.notes.first_note;\n        const last_note = this.notes.last_note;\n        // Provide some default values so the compiler doesn't complain.\n        let first_x_px = 0;\n        let last_x_px = 0;\n        let first_ys = [0];\n        let last_ys = [0];\n        let stem_direction = 0;\n        if (first_note) {\n            first_x_px = first_note.getTieRightX() + this.render_options.tie_spacing;\n            stem_direction = first_note.getStemDirection();\n            first_ys = first_note.getYs();\n        }\n        else if (last_note) {\n            const stave = last_note.checkStave();\n            first_x_px = stave.getTieStartX();\n            first_ys = last_note.getYs();\n            this.notes.first_indices = this.notes.last_indices;\n        }\n        if (last_note) {\n            last_x_px = last_note.getTieLeftX() + this.render_options.tie_spacing;\n            stem_direction = last_note.getStemDirection();\n            last_ys = last_note.getYs();\n        }\n        else if (first_note) {\n            const stave = first_note.checkStave();\n            last_x_px = stave.getTieEndX();\n            last_ys = first_note.getYs();\n            this.notes.last_indices = this.notes.first_indices;\n        }\n        if (this.direction) {\n            stem_direction = this.direction;\n        }\n        this.renderTie({\n            first_x_px,\n            last_x_px,\n            first_ys,\n            last_ys,\n            direction: stem_direction,\n        });\n        this.renderText(first_x_px, last_x_px);\n        return true;\n    }\n}\n/** Default text font. */\nStaveTie.TEXT_FONT = Object.assign({}, Element.TEXT_FONT);\n","// / [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\nimport { StaveTie } from './stavetie';\nimport { Category } from './typeguard';\nexport class TabTie extends StaveTie {\n    static get CATEGORY() {\n        return Category.TabTie;\n    }\n    static createHammeron(notes) {\n        return new TabTie(notes, 'H');\n    }\n    static createPulloff(notes) {\n        return new TabTie(notes, 'P');\n    }\n    /**\n     * @param notes is a struct that has:\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     * @param text\n     */\n    constructor(notes, text) {\n        super(notes, text);\n        this.render_options.cp1 = 9;\n        this.render_options.cp2 = 11;\n        this.render_options.y_shift = 3;\n        this.direction = -1; // Tab tie's are always face up.\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `GraceNoteGroup` which is used to format and\n// render grace notes.\nimport { Beam } from './beam';\nimport { Formatter } from './formatter';\nimport { Modifier } from './modifier';\nimport { StaveTie } from './stavetie';\nimport { Tables } from './tables';\nimport { TabTie } from './tabtie';\nimport { Category, isStaveNote } from './typeguard';\nimport { log } from './util';\nimport { Voice } from './voice';\n// To enable logging for this class. Set `GraceNoteGroup.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (GraceNoteGroup.DEBUG)\n        log('Vex.Flow.GraceNoteGroup', args);\n}\n/** GraceNoteGroup is used to format and render grace notes. */\nexport class GraceNoteGroup extends Modifier {\n    //** `GraceNoteGroup` inherits from `Modifier` and is placed inside a `ModifierContext`. */\n    constructor(grace_notes, show_slur) {\n        super();\n        this.preFormatted = false;\n        this.position = Modifier.Position.LEFT;\n        this.grace_notes = grace_notes;\n        this.width = 0;\n        this.show_slur = show_slur;\n        this.slur = undefined;\n        this.voice = new Voice({\n            num_beats: 4,\n            beat_value: 4,\n            resolution: Tables.RESOLUTION,\n        }).setStrict(false);\n        this.render_options = {\n            slur_y_shift: 0,\n        };\n        this.beams = [];\n        this.voice.addTickables(this.grace_notes);\n        return this;\n    }\n    static get CATEGORY() {\n        return Category.GraceNoteGroup;\n    }\n    /** Arranges groups inside a `ModifierContext`. */\n    static format(gracenote_groups, state) {\n        const group_spacing_stave = 4;\n        const group_spacing_tab = 0;\n        if (!gracenote_groups || gracenote_groups.length === 0)\n            return false;\n        const group_list = [];\n        let prev_note = null;\n        let shiftL = 0;\n        for (let i = 0; i < gracenote_groups.length; ++i) {\n            const gracenote_group = gracenote_groups[i];\n            const note = gracenote_group.getNote();\n            const is_stavenote = isStaveNote(note);\n            const spacing = is_stavenote ? group_spacing_stave : group_spacing_tab;\n            if (is_stavenote && note !== prev_note) {\n                // Iterate through all notes to get the displaced pixels\n                for (let n = 0; n < note.keys.length; ++n) {\n                    shiftL = Math.max(note.getLeftDisplacedHeadPx(), shiftL);\n                }\n                prev_note = note;\n            }\n            group_list.push({ shift: shiftL, gracenote_group, spacing });\n        }\n        // If first note left shift in case it is displaced\n        let group_shift = group_list[0].shift;\n        let formatWidth;\n        for (let i = 0; i < group_list.length; ++i) {\n            const gracenote_group = group_list[i].gracenote_group;\n            gracenote_group.preFormat();\n            formatWidth = gracenote_group.getWidth() + group_list[i].spacing;\n            group_shift = Math.max(formatWidth, group_shift);\n        }\n        for (let i = 0; i < group_list.length; ++i) {\n            const gracenote_group = group_list[i].gracenote_group;\n            formatWidth = gracenote_group.getWidth() + group_list[i].spacing;\n            gracenote_group.setSpacingFromNextModifier(group_shift - Math.min(formatWidth, group_shift));\n        }\n        state.left_shift += group_shift;\n        return true;\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        if (!this.formatter) {\n            this.formatter = new Formatter();\n        }\n        this.formatter.joinVoices([this.voice]).format([this.voice], 0, {});\n        this.setWidth(this.formatter.getMinTotalWidth());\n        this.preFormatted = true;\n    }\n    beamNotes(grace_notes) {\n        grace_notes = grace_notes || this.grace_notes;\n        if (grace_notes.length > 1) {\n            const beam = new Beam(grace_notes);\n            beam.render_options.beam_width = 3;\n            beam.render_options.partial_beam_length = 4;\n            this.beams.push(beam);\n        }\n        return this;\n    }\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    getWidth() {\n        return this.width;\n    }\n    getGraceNotes() {\n        return this.grace_notes;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        L('Drawing grace note group for:', note);\n        this.alignSubNotesWithNote(this.getGraceNotes(), note); // Modifier function\n        // Draw grace notes.\n        this.grace_notes.forEach((graceNote) => graceNote.setContext(ctx).draw());\n        // Draw beams.\n        this.beams.forEach((beam) => beam.setContext(ctx).draw());\n        if (this.show_slur) {\n            // Create and draw slur.\n            const is_stavenote = isStaveNote(note);\n            const TieClass = is_stavenote ? StaveTie : TabTie;\n            this.slur = new TieClass({\n                last_note: this.grace_notes[0],\n                first_note: note,\n                first_indices: [0],\n                last_indices: [0],\n            });\n            this.slur.render_options.cp2 = 12;\n            this.slur.render_options.y_shift = (is_stavenote ? 7 : 5) + this.render_options.slur_y_shift;\n            this.slur.setContext(ctx).draw();\n        }\n    }\n}\nGraceNoteGroup.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2016\n//\n// ## Description\n//\n// This file implements `NoteSubGroup` which is used to format and\n// render notes as a `Modifier`\n// ex) ClefNote, TimeSigNote and BarNote.\nimport { Formatter } from './formatter';\nimport { Modifier } from './modifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { Voice } from './voice';\nexport class NoteSubGroup extends Modifier {\n    constructor(subNotes) {\n        super();\n        this.preFormatted = false;\n        this.position = Modifier.Position.LEFT;\n        this.subNotes = subNotes;\n        this.subNotes.forEach((subNote) => {\n            subNote.setIgnoreTicks(false);\n        });\n        this.width = 0;\n        this.formatter = new Formatter();\n        this.voice = new Voice({\n            num_beats: 4,\n            beat_value: 4,\n            resolution: Tables.RESOLUTION,\n        }).setStrict(false);\n        this.voice.addTickables(this.subNotes);\n    }\n    static get CATEGORY() {\n        return Category.NoteSubGroup;\n    }\n    // Arrange groups inside a `ModifierContext`\n    static format(groups, state) {\n        if (!groups || groups.length === 0)\n            return false;\n        let width = 0;\n        for (let i = 0; i < groups.length; ++i) {\n            const group = groups[i];\n            group.preFormat();\n            width += group.getWidth();\n        }\n        state.left_shift += width;\n        return true;\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        this.formatter.joinVoices([this.voice]).format([this.voice], 0);\n        this.setWidth(this.formatter.getMinTotalWidth());\n        this.preFormatted = true;\n    }\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    getWidth() {\n        return this.width;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        this.alignSubNotesWithNote(this.subNotes, note); // Modifier function\n        this.subNotes.forEach((subNote) => subNote.setContext(ctx).drawWithStyle());\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A formatter for abstract tickable objects, such as notes, chords,\n// tabs, etc.\nimport { Fraction } from './fraction';\nimport { RuntimeError } from './util';\n/**\n * TickContext formats abstract tickable objects, such as notes, chords, tabs, etc.\n */\nexport class TickContext {\n    constructor(options) {\n        this.preFormatted = false;\n        this.postFormatted = false;\n        this.tickID = options && options.tickID ? options.tickID : 0;\n        this.currentTick = new Fraction(0, 1);\n        this.maxTicks = new Fraction(0, 1);\n        this.maxTickable = undefined; // Biggest tickable\n        this.minTicks = undefined; // this can remian null if all tickables have ignore_ticks\n        this.minTickable = undefined;\n        this.padding = 1; // padding on each side (width += padding * 2)\n        this.x = 0;\n        this.xBase = 0; // base x position without xOffset\n        this.xOffset = 0; // xBase and xOffset are an alternative way to describe x (x = xB + xO)\n        this.tickables = []; // Notes, tabs, chords, lyrics.\n        this.tickablesByVoice = {}; // Tickables indexed by voice number\n        // Formatting metrics\n        this.notePx = 0; // width of widest note in this context\n        this.glyphPx = 0; // width of glyph (note head)\n        this.leftDisplacedHeadPx = 0; // Extra left pixels for displaced notes\n        this.rightDisplacedHeadPx = 0; // Extra right pixels for displaced notes\n        this.modLeftPx = 0; // Left modifier pixels\n        this.modRightPx = 0; // Right modifier pixels\n        this.totalLeftPx = 0; // Total left pixels\n        this.totalRightPx = 0; // Total right pixels\n        this.tContexts = []; // Parent array of tick contexts\n        this.width = 0;\n        this.formatterMetrics = {\n            // The freedom of a tickcontext is the distance it can move without colliding\n            // with neighboring elements. A formatter can set these values during its\n            // formatting pass, which a different formatter can then use to fine tune.\n            freedom: { left: 0, right: 0 },\n        };\n    }\n    static getNextContext(tContext) {\n        const contexts = tContext.tContexts;\n        const index = contexts.indexOf(tContext);\n        if (index + 1 < contexts.length)\n            return contexts[index + 1];\n    }\n    getTickID() {\n        return this.tickID;\n    }\n    getX() {\n        return this.x;\n    }\n    setX(x) {\n        this.x = x;\n        this.xBase = x;\n        this.xOffset = 0;\n        return this;\n    }\n    getXBase() {\n        return this.xBase;\n    } // use of xBase and xOffset is optional, avoids offset creep\n    setXBase(xBase) {\n        this.xBase = xBase;\n        this.x = xBase + this.xOffset;\n    }\n    getXOffset() {\n        return this.xOffset;\n    }\n    setXOffset(xOffset) {\n        this.xOffset = xOffset;\n        this.x = this.xBase + xOffset;\n    }\n    getWidth() {\n        return this.width + this.padding * 2;\n    }\n    setPadding(padding) {\n        this.padding = padding;\n        return this;\n    }\n    getMaxTicks() {\n        return this.maxTicks;\n    }\n    getMinTicks() {\n        return this.minTicks;\n    }\n    getMaxTickable() {\n        return this.maxTickable;\n    }\n    getMinTickable() {\n        return this.minTickable;\n    }\n    getTickables() {\n        return this.tickables;\n    }\n    /**\n     * Introduced on 2020-04-17 as getTickablesForVoice(voiceIndex).\n     *   https://github.com/0xfe/vexflow/blame/dc97b0cc5bb93171c0038638c34362dc958222ca/src/tickcontext.js#L63\n     * Renamed on 2021-08-05 to getTickableForVoice(voiceIndex). Method renamed to singular, since it returns one Tickable.\n     */\n    getTickableForVoice(voiceIndex) {\n        return this.tickablesByVoice[voiceIndex];\n    }\n    getTickablesByVoice() {\n        return this.tickablesByVoice;\n    }\n    getCenterAlignedTickables() {\n        return this.tickables.filter((tickable) => tickable.isCenterAligned());\n    }\n    /** Gets widths context, note and left/right modifiers for formatting. */\n    getMetrics() {\n        const { width, glyphPx, notePx, leftDisplacedHeadPx, rightDisplacedHeadPx, modLeftPx, modRightPx, totalLeftPx, totalRightPx, } = this;\n        return {\n            width,\n            glyphPx,\n            notePx,\n            leftDisplacedHeadPx,\n            rightDisplacedHeadPx,\n            modLeftPx,\n            modRightPx,\n            totalLeftPx,\n            totalRightPx,\n        };\n    }\n    getCurrentTick() {\n        return this.currentTick;\n    }\n    setCurrentTick(tick) {\n        this.currentTick = tick;\n        this.preFormatted = false;\n    }\n    addTickable(tickable, voiceIndex) {\n        if (!tickable) {\n            throw new RuntimeError('BadArgument', 'Invalid tickable added.');\n        }\n        if (!tickable.shouldIgnoreTicks()) {\n            const ticks = tickable.getTicks();\n            if (ticks.greaterThan(this.maxTicks)) {\n                this.maxTicks = ticks.clone();\n                this.maxTickable = tickable;\n            }\n            if (this.minTicks == null) {\n                this.minTicks = ticks.clone();\n                this.minTickable = tickable;\n            }\n            else if (ticks.lessThan(this.minTicks)) {\n                this.minTicks = ticks.clone();\n                this.minTickable = tickable;\n            }\n        }\n        tickable.setTickContext(this);\n        this.tickables.push(tickable);\n        this.tickablesByVoice[voiceIndex || 0] = tickable;\n        this.preFormatted = false;\n        return this;\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return this;\n        for (let i = 0; i < this.tickables.length; ++i) {\n            const tickable = this.tickables[i];\n            tickable.preFormat();\n            const metrics = tickable.getMetrics();\n            // Maintain max displaced head pixels from all tickables in the context\n            this.leftDisplacedHeadPx = Math.max(this.leftDisplacedHeadPx, metrics.leftDisplacedHeadPx);\n            this.rightDisplacedHeadPx = Math.max(this.rightDisplacedHeadPx, metrics.rightDisplacedHeadPx);\n            // Maintain the widest note for all tickables in the context\n            this.notePx = Math.max(this.notePx, metrics.notePx);\n            // Maintain the widest note head\n            this.glyphPx = Math.max(this.glyphPx, metrics.glyphWidth || 0);\n            // Total modifier shift\n            this.modLeftPx = Math.max(this.modLeftPx, metrics.modLeftPx);\n            this.modRightPx = Math.max(this.modRightPx, metrics.modRightPx);\n            // Total shift\n            this.totalLeftPx = Math.max(this.totalLeftPx, metrics.modLeftPx + metrics.leftDisplacedHeadPx);\n            this.totalRightPx = Math.max(this.totalRightPx, metrics.modRightPx + metrics.rightDisplacedHeadPx);\n            // Recalculate the tick context total width\n            this.width = this.notePx + this.totalLeftPx + this.totalRightPx;\n        }\n        return this;\n    }\n    postFormat() {\n        if (this.postFormatted)\n            return this;\n        this.postFormatted = true;\n        return this;\n    }\n    getFormatterMetrics() {\n        return this.formatterMetrics;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n// MIT License\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { TickContext } from './tickcontext';\nimport { Category, isTabNote } from './typeguard';\nimport { defined, log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Ornament.DEBUG)\n        log('Vex.Flow.Ornament', args);\n}\n/**\n * Ornament implements ornaments as modifiers that can be\n * attached to notes. The complete list of ornaments is available in\n * `tables.ts` under `Vex.Flow.ornamentCodes`.\n *\n * See `tests/ornament_tests.ts` for usage examples.\n */\nexport class Ornament extends Modifier {\n    /**\n     * Create a new ornament of type `type`, which is an entry in\n     * `Vex.Flow.ornamentCodes` in `tables.ts`.\n     */\n    constructor(type) {\n        super();\n        this.type = type;\n        this.delayed = false;\n        this.render_options = {\n            font_scale: 38,\n            accidentalLowerPadding: 3,\n            accidentalUpperPadding: 3,\n        };\n        this.ornament = Tables.ornamentCodes(this.type);\n        // new ornaments have their origin at the origin, and have more specific\n        // metrics.  Legacy ornaments do some\n        // x scaling, and have hard-coded metrics\n        const metrics = this.getMetrics();\n        // some jazz ornaments are above or below depending on stem direction.\n        this.adjustForStemDirection = false;\n        // some jazz ornaments like falls are supposed to overlap with future bars\n        // and so we report a different width than they actually take up.\n        this.reportedWidth = metrics && metrics.reportedWidth ? metrics.reportedWidth : 0;\n        this.stemUpYOffset = metrics && metrics.stemUpYOffset ? metrics.stemUpYOffset : 0;\n        this.ornamentAlignWithNoteHead = Ornament.ornamentAlignWithNoteHead.indexOf(this.type) >= 0;\n        if (!this.ornament) {\n            throw new RuntimeError('ArgumentError', `Ornament not found: '${this.type}'`);\n        }\n        this.x_shift = metrics ? metrics.xOffset : 0;\n        this.y_shift = metrics ? metrics.yOffset : 0;\n        this.glyph = new Glyph(this.ornament.code, this.render_options.font_scale, {\n            category: `ornament.${this.ornament.code}`,\n        });\n        // Is this a jazz ornament that goes between this note and the next note.\n        if (Ornament.ornamentNoteTransition.indexOf(this.type) >= 0) {\n            this.delayed = true;\n        }\n        // Legacy ornaments need this.  I don't know why, but horizontal spacing issues\n        // happen if I don't set it.\n        if (!metrics) {\n            this.glyph.setOrigin(0.5, 1.0); // FIXME: SMuFL won't require a vertical origin shift\n        }\n    }\n    /** Ornaments category string. */\n    static get CATEGORY() {\n        return Category.Ornament;\n    }\n    /** Arrange ornaments inside `ModifierContext` */\n    static format(ornaments, state) {\n        if (!ornaments || ornaments.length === 0)\n            return false;\n        let width = 0; // width is used by ornaments, which are always centered on the note head\n        let right_shift = state.right_shift; // jazz ornaments calculate r/l shift separately\n        let left_shift = state.left_shift;\n        let yOffset = 0;\n        for (let i = 0; i < ornaments.length; ++i) {\n            const ornament = ornaments[i];\n            const increment = 2;\n            if (Ornament.ornamentRelease.indexOf(ornament.type) >= 0) {\n                ornament.x_shift += right_shift + 2;\n            }\n            if (Ornament.ornamentAttack.indexOf(ornament.type) >= 0) {\n                ornament.x_shift -= left_shift + 2;\n            }\n            if (ornament.reportedWidth && ornament.x_shift < 0) {\n                left_shift += ornament.reportedWidth;\n            }\n            else if (ornament.reportedWidth && ornament.x_shift > 0) {\n                right_shift += ornament.reportedWidth;\n            }\n            else {\n                width = Math.max(ornament.getWidth(), width);\n            }\n            // articulations above/below the line can be stacked.\n            if (Ornament.ornamentArticulation.indexOf(ornament.type) >= 0) {\n                // Unfortunately we don't know the stem direction.  So we base it\n                // on the line number, but also allow it to be overridden.\n                const ornamentNote = defined(ornament.note, 'NoAttachedNote');\n                if (ornamentNote.getLineNumber() >= 3 || ornament.getPosition() === Modifier.Position.ABOVE) {\n                    state.top_text_line += increment;\n                    ornament.y_shift += yOffset;\n                    yOffset -= ornament.glyph.bbox.getH();\n                }\n                else {\n                    state.text_line += increment;\n                    ornament.y_shift += yOffset;\n                    yOffset += ornament.glyph.bbox.getH();\n                }\n            }\n            else {\n                if (ornament.getPosition() === Modifier.Position.ABOVE) {\n                    ornament.setTextLine(state.top_text_line);\n                    state.top_text_line += increment;\n                }\n                else {\n                    ornament.setTextLine(state.text_line);\n                    state.text_line += increment;\n                }\n            }\n        }\n        // Note: 'legit' ornaments don't consider other modifiers when calculating their\n        // X position, but jazz ornaments sometimes need to.\n        state.left_shift = left_shift + width / 2;\n        state.right_shift = right_shift + width / 2;\n        return true;\n    }\n    /**\n     * ornamentNoteTransition means the jazz ornament represents an effect from one note to another,\n     * these are generally on the top of the staff.\n     */\n    static get ornamentNoteTransition() {\n        return ['flip', 'jazzTurn', 'smear'];\n    }\n    /**\n     * ornamentAttack indicates something that happens in the attach, placed before the note and\n     * any accidentals\n     */\n    static get ornamentAttack() {\n        return ['scoop'];\n    }\n    /**\n     * The ornament is aligned based on the note head, but without regard to whether the\n     * stem goes up or down.\n     */\n    static get ornamentAlignWithNoteHead() {\n        return ['doit', 'fall', 'fallLong', 'doitLong', 'bend', 'plungerClosed', 'plungerOpen', 'scoop'];\n    }\n    /**\n     * An ornament that happens on the release of the note, generally placed after the\n     * note and overlapping the next beat/measure..\n     */\n    static get ornamentRelease() {\n        return ['doit', 'fall', 'fallLong', 'doitLong', 'jazzTurn', 'smear', 'flip'];\n    }\n    /** ornamentArticulation goes above/below the note based on space availablity */\n    static get ornamentArticulation() {\n        return ['bend', 'plungerClosed', 'plungerOpen'];\n    }\n    /**\n     * Legacy ornaments have hard-coded metrics.  If additional ornament types are\n     * added, get their metrics here.\n     */\n    // eslint-disable-next-line\n    getMetrics() {\n        return Tables.currentMusicFont().getMetrics().glyphs.jazzOrnaments[this.ornament.code];\n    }\n    /** Set whether the ornament is to be delayed. */\n    setDelayed(delayed) {\n        this.delayed = delayed;\n        return this;\n    }\n    /** Set the upper accidental for the ornament. */\n    setUpperAccidental(accid) {\n        const scale = this.render_options.font_scale / 1.3;\n        this.accidentalUpper = new Glyph(Tables.accidentalCodes(accid).code, scale);\n        this.accidentalUpper.setOrigin(0.5, 1.0);\n        return this;\n    }\n    /** Set the lower accidental for the ornament. */\n    setLowerAccidental(accid) {\n        const scale = this.render_options.font_scale / 1.3;\n        this.accidentalLower = new Glyph(Tables.accidentalCodes(accid).code, scale);\n        this.accidentalLower.setOrigin(0.5, 1.0);\n        return this;\n    }\n    /** Render ornament in position next to note. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const stemDir = note.getStemDirection();\n        const stave = note.checkStave();\n        const classString = Object.keys(this.getAttribute('classes')).join(' ');\n        ctx.openGroup(classString, this.getAttribute('id'));\n        // Get stem extents\n        const stemExtents = note.checkStem().getExtents();\n        let y = stemDir === Stem.DOWN ? stemExtents.baseY : stemExtents.topY;\n        // TabNotes don't have stems attached to them. Tab stems are rendered outside the stave.\n        if (isTabNote(note)) {\n            if (note.hasStem()) {\n                if (stemDir === Stem.DOWN) {\n                    y = stave.getYForTopText(this.text_line);\n                }\n            }\n            else {\n                // Without a stem\n                y = stave.getYForTopText(this.text_line);\n            }\n        }\n        const isPlacedOnNoteheadSide = stemDir === Stem.DOWN;\n        const spacing = stave.getSpacingBetweenLines();\n        let lineSpacing = 1;\n        // Beamed stems are longer than quarter note stems, adjust accordingly\n        if (!isPlacedOnNoteheadSide && note.hasBeam()) {\n            lineSpacing += 0.5;\n        }\n        const totalSpacing = spacing * (this.text_line + lineSpacing);\n        const glyphYBetweenLines = y - totalSpacing;\n        // Get initial coordinates for the modifier position\n        const start = note.getModifierStartXY(this.position, this.index);\n        let glyphX = start.x;\n        // If the ornament is aligned with the note head, don't consider the stave y\n        // but use the 'natural' modifier y\n        let glyphY = this.ornamentAlignWithNoteHead\n            ? start.y\n            : Math.min(stave.getYForTopText(this.text_line), glyphYBetweenLines);\n        glyphY += this.y_shift;\n        // Ajdust x position if ornament is delayed\n        if (this.delayed) {\n            let delayXShift = 0;\n            const startX = glyphX - (stave.getX() - 10);\n            if (this.delayXShift !== undefined) {\n                delayXShift = this.delayXShift;\n            }\n            else {\n                delayXShift += this.glyph.getMetrics().width / 2;\n                const nextContext = TickContext.getNextContext(note.getTickContext());\n                if (nextContext) {\n                    delayXShift += (nextContext.getX() - startX) * 0.5;\n                }\n                else {\n                    delayXShift += (stave.getX() + stave.getWidth() - startX) * 0.5;\n                }\n                this.delayXShift = delayXShift;\n            }\n            glyphX += delayXShift;\n        }\n        L('Rendering ornament: ', this.ornament, glyphX, glyphY);\n        if (this.accidentalLower) {\n            this.accidentalLower.render(ctx, glyphX, glyphY);\n            glyphY -= this.accidentalLower.getMetrics().height;\n            glyphY -= this.render_options.accidentalLowerPadding;\n        }\n        if (this.stemUpYOffset && note.hasStem() && note.getStemDirection() === 1) {\n            glyphY += this.stemUpYOffset;\n        }\n        if (note.getLineNumber() < 5 && Ornament.ornamentNoteTransition.indexOf(this.type) >= 0) {\n            glyphY = note.checkStave().getBoundingBox().getY() + 40;\n        }\n        this.glyph.render(ctx, glyphX + this.x_shift, glyphY);\n        if (this.accidentalUpper) {\n            glyphY -= this.glyph.getMetrics().height + this.render_options.accidentalUpperPadding;\n            this.accidentalUpper.render(ctx, glyphX, glyphY);\n        }\n        ctx.closeGroup();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Ornament.DEBUG` to `true`. */\nOrnament.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Rodrigo Vilar\n// MIT License\nimport { Glyph } from './glyph';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { Tables } from './tables';\nimport { Category, isGraceNote } from './typeguard';\n/** Parenthesis implements parenthesis modifiers for notes. */\nexport class Parenthesis extends Modifier {\n    /**\n     * Constructor\n     *\n     * @param position Modifier.Position.LEFT (default) or Modifier.Position.RIGHT\n     */\n    constructor(position) {\n        super();\n        this.position = position !== null && position !== void 0 ? position : Modifier.Position.LEFT;\n        this.point = Tables.currentMusicFont().lookupMetric('parenthesis.default.point');\n        this.setWidth(Tables.currentMusicFont().lookupMetric('parenthesis.default.width'));\n    }\n    static get CATEGORY() {\n        return Category.Parenthesis;\n    }\n    /** Add parentheses to the notes. */\n    static buildAndAttach(notes) {\n        for (const note of notes) {\n            for (let i = 0; i < note.keys.length; i++) {\n                note.addModifier(new Parenthesis(ModifierPosition.LEFT), i);\n                note.addModifier(new Parenthesis(ModifierPosition.RIGHT), i);\n            }\n        }\n    }\n    /** Arrange parentheses inside a ModifierContext. */\n    static format(parentheses, state) {\n        if (!parentheses || parentheses.length === 0)\n            return false;\n        let x_widthL = 0;\n        let x_widthR = 0;\n        for (let i = 0; i < parentheses.length; ++i) {\n            const parenthesis = parentheses[i];\n            const note = parenthesis.getNote();\n            const pos = parenthesis.getPosition();\n            const index = parenthesis.checkIndex();\n            let shift = 0;\n            if (pos === ModifierPosition.RIGHT) {\n                shift = note.getRightParenthesisPx(index);\n                x_widthR = x_widthR > shift + parenthesis.width ? x_widthR : shift + parenthesis.width;\n            }\n            if (pos === ModifierPosition.LEFT) {\n                shift = note.getLeftParenthesisPx(index);\n                x_widthL = x_widthL > shift + parenthesis.width ? x_widthL : shift + parenthesis.width;\n            }\n            parenthesis.setXShift(shift);\n        }\n        state.left_shift += x_widthL;\n        state.right_shift += x_widthR;\n        return true;\n    }\n    /** Set the associated note. */\n    setNote(note) {\n        this.note = note;\n        this.point = Tables.currentMusicFont().lookupMetric('parenthesis.default.point');\n        this.setWidth(Tables.currentMusicFont().lookupMetric('parenthesis.default.width'));\n        if (isGraceNote(note)) {\n            this.point = Tables.currentMusicFont().lookupMetric('parenthesis.gracenote.point');\n            this.setWidth(Tables.currentMusicFont().lookupMetric('parenthesis.gracenote.width'));\n        }\n        return this;\n    }\n    /** Render the parenthesis. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index, { forceFlagRight: true });\n        const x = start.x + this.x_shift;\n        const y = start.y + this.y_shift;\n        if (this.position == Modifier.Position.RIGHT) {\n            Glyph.renderGlyph(ctx, x + 1, y, this.point, 'noteheadParenthesisRight', {\n                category: `noteHead.standard.noteheadParenthesisRight`,\n            });\n        }\n        else if (this.position == Modifier.Position.LEFT) {\n            Glyph.renderGlyph(ctx, x - 2, y, this.point, 'noteheadParenthesisLeft', {\n                category: `noteHead.standard.noteheadParenthesisLeft`,\n            });\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { BoundingBox } from './boundingbox';\nimport { Glyph } from './glyph';\nimport { Note } from './note';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (NoteHead.DEBUG)\n        log('Vex.Flow.NoteHead', args);\n}\n/**\n * Draw slashnote head manually. No glyph exists for this.\n * @param ctx the Canvas context\n * @param duration the duration of the note. ex: \"4\"\n * @param x the x coordinate to draw at\n * @param y the y coordinate to draw at\n * @param stem_direction the direction of the stem\n */\nfunction drawSlashNoteHead(ctx, duration, x, y, stem_direction, staveSpace) {\n    const width = Tables.SLASH_NOTEHEAD_WIDTH;\n    ctx.save();\n    ctx.setLineWidth(Tables.STEM_WIDTH);\n    let fill = false;\n    if (Tables.durationToNumber(duration) > 2) {\n        fill = true;\n    }\n    if (!fill)\n        x -= (Tables.STEM_WIDTH / 2) * stem_direction;\n    ctx.beginPath();\n    ctx.moveTo(x, y + staveSpace);\n    ctx.lineTo(x, y + 1);\n    ctx.lineTo(x + width, y - staveSpace);\n    ctx.lineTo(x + width, y);\n    ctx.lineTo(x, y + staveSpace);\n    ctx.closePath();\n    if (fill) {\n        ctx.fill();\n    }\n    else {\n        ctx.stroke();\n    }\n    if (Tables.durationToFraction(duration).equals(0.5)) {\n        const breve_lines = [-3, -1, width + 1, width + 3];\n        for (let i = 0; i < breve_lines.length; i++) {\n            ctx.beginPath();\n            ctx.moveTo(x + breve_lines[i], y - 10);\n            ctx.lineTo(x + breve_lines[i], y + 11);\n            ctx.stroke();\n        }\n    }\n    ctx.restore();\n}\n/**\n * `NoteHeads` are typically not manipulated\n * directly, but used internally in `StaveNote`.\n *\n * See `tests/notehead_tests.ts` for usage examples.\n */\nexport class NoteHead extends Note {\n    constructor(noteStruct) {\n        super(noteStruct);\n        this.custom_glyph = false;\n        this.stem_up_x_offset = 0;\n        this.stem_down_x_offset = 0;\n        this.index = noteStruct.index;\n        this.x = noteStruct.x || 0;\n        this.y = noteStruct.y || 0;\n        if (noteStruct.note_type)\n            this.noteType = noteStruct.note_type;\n        this.displaced = noteStruct.displaced || false;\n        this.stem_direction = noteStruct.stem_direction || Stem.UP;\n        this.line = noteStruct.line || 0;\n        // Get glyph code based on duration and note type. This could be\n        // regular notes, rests, or other custom codes.\n        this.glyph = Tables.getGlyphProps(this.duration, this.noteType);\n        defined(this.glyph, 'BadArguments', `No glyph found for duration '${this.duration}' and type '${this.noteType}'`);\n        this.glyph_code = this.glyph.code_head;\n        this.x_shift = noteStruct.x_shift || 0;\n        if (noteStruct.custom_glyph_code) {\n            this.custom_glyph = true;\n            this.glyph_code = noteStruct.custom_glyph_code;\n            this.stem_up_x_offset = noteStruct.stem_up_x_offset || 0;\n            this.stem_down_x_offset = noteStruct.stem_down_x_offset || 0;\n        }\n        this.style = noteStruct.style;\n        this.slashed = noteStruct.slashed || false;\n        this.render_options = Object.assign(Object.assign({}, this.render_options), { \n            // font size for note heads\n            glyph_font_scale: noteStruct.glyph_font_scale || Tables.NOTATION_FONT_SCALE });\n        this.setWidth(this.glyph.getWidth(this.render_options.glyph_font_scale));\n    }\n    static get CATEGORY() {\n        return Category.NoteHead;\n    }\n    /** Get the width of the notehead. */\n    getWidth() {\n        return this.width;\n    }\n    /** Determine if the notehead is displaced. */\n    isDisplaced() {\n        return this.displaced === true;\n    }\n    /** Get the glyph data. */\n    getGlyph() {\n        return this.glyph;\n    }\n    /** Set the X coordinate. */\n    setX(x) {\n        this.x = x;\n        return this;\n    }\n    /** Get the Y coordinate. */\n    getY() {\n        return this.y;\n    }\n    /** Set the Y coordinate. */\n    setY(y) {\n        this.y = y;\n        return this;\n    }\n    /** Get the stave line the notehead is placed on. */\n    getLine() {\n        return this.line;\n    }\n    /** Set the stave line the notehead is placed on. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Get the canvas `x` coordinate position of the notehead. */\n    getAbsoluteX() {\n        // If the note has not been preformatted, then get the static x value\n        // Otherwise, it's been formatted and we should use it's x value relative\n        // to its tick context\n        const x = !this.preFormatted ? this.x : super.getAbsoluteX();\n        // For a more natural displaced notehead, we adjust the displacement amount\n        // by half the stem width in order to maintain a slight overlap with the stem\n        const displacementStemAdjustment = Stem.WIDTH / 2;\n        const musicFont = Tables.currentMusicFont();\n        const fontShift = musicFont.lookupMetric('notehead.shiftX', 0) * this.stem_direction;\n        const displacedFontShift = musicFont.lookupMetric('noteHead.displaced.shiftX', 0) * this.stem_direction;\n        return (x +\n            fontShift +\n            (this.displaced ? (this.width - displacementStemAdjustment) * this.stem_direction + displacedFontShift : 0));\n    }\n    /** Get the `BoundingBox` for the `NoteHead`. */\n    getBoundingBox() {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call getBoundingBox on an unformatted note.\");\n        }\n        const spacing = this.checkStave().getSpacingBetweenLines();\n        const half_spacing = spacing / 2;\n        const min_y = this.y - half_spacing;\n        return new BoundingBox(this.getAbsoluteX(), min_y, this.width, spacing);\n    }\n    /** Set notehead to a provided `stave`. */\n    setStave(stave) {\n        const line = this.getLine();\n        this.stave = stave;\n        if (this.stave) {\n            this.setY(this.stave.getYForNote(line));\n            this.setContext(this.stave.getContext());\n        }\n        return this;\n    }\n    /** Pre-render formatting. */\n    preFormat() {\n        if (this.preFormatted)\n            return this;\n        const width = this.getWidth() + this.leftDisplacedHeadPx + this.rightDisplacedHeadPx;\n        this.setWidth(width);\n        this.preFormatted = true;\n        return this;\n    }\n    /** Draw the notehead. */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        let head_x = this.getAbsoluteX();\n        if (this.custom_glyph) {\n            // head_x += this.x_shift;\n            head_x += this.stem_direction === Stem.UP ? this.stem_up_x_offset : this.stem_down_x_offset;\n        }\n        const y = this.y;\n        L(\"Drawing note head '\", this.noteType, this.duration, \"' at\", head_x, y);\n        // Begin and end positions for head.\n        const stem_direction = this.stem_direction;\n        const glyph_font_scale = this.render_options.glyph_font_scale;\n        if (this.style) {\n            this.applyStyle(ctx);\n        }\n        const categorySuffix = `${this.glyph_code}Stem${stem_direction === Stem.UP ? 'Up' : 'Down'}`;\n        if (this.noteType === 's') {\n            const staveSpace = this.checkStave().getSpacingBetweenLines();\n            drawSlashNoteHead(ctx, this.duration, head_x, y, stem_direction, staveSpace);\n        }\n        else {\n            Glyph.renderGlyph(ctx, head_x, y, glyph_font_scale, this.glyph_code, {\n                category: this.custom_glyph ? `noteHead.custom.${categorySuffix}` : `noteHead.standard.${categorySuffix}`,\n            });\n        }\n        if (this.style) {\n            this.restoreStyle(ctx);\n        }\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.NoteHead.DEBUG` to `true`. */\nNoteHead.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// `StemmableNote` is an abstract interface for notes with optional stems.\n// Examples of stemmable notes are `StaveNote` and `TabNote`\nimport { Glyph } from './glyph';\nimport { Note } from './note';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class StemmableNote extends Note {\n    constructor(noteStruct) {\n        super(noteStruct);\n    }\n    static get CATEGORY() {\n        return Category.StemmableNote;\n    }\n    // Get and set the note's `Stem`\n    getStem() {\n        return this.stem;\n    }\n    checkStem() {\n        if (!this.stem) {\n            throw new RuntimeError('NoStem', 'No stem attached to instance');\n        }\n        return this.stem;\n    }\n    setStem(stem) {\n        this.stem = stem;\n        return this;\n    }\n    // Builds and sets a new stem\n    buildStem() {\n        const stem = new Stem();\n        this.setStem(stem);\n        return this;\n    }\n    buildFlag(category = 'flag') {\n        const { glyph } = this;\n        if (this.hasFlag()) {\n            const flagCode = this.getStemDirection() === Stem.DOWN ? glyph.code_flag_downstem : glyph.code_flag_upstem;\n            this.flag = new Glyph(flagCode, this.render_options.glyph_font_scale, { category });\n        }\n    }\n    // Get the custom glyph associated with the outer note head on the base of the stem.\n    getBaseCustomNoteHeadGlyph() {\n        if (this.getStemDirection() === Stem.DOWN) {\n            return this.customGlyphs[this.customGlyphs.length - 1];\n        }\n        else {\n            return this.customGlyphs[0];\n        }\n    }\n    // Get the full length of stem\n    getStemLength() {\n        return Stem.HEIGHT + this.getStemExtension();\n    }\n    // Get the number of beams for this duration\n    getBeamCount() {\n        const glyph = this.getGlyph();\n        if (glyph) {\n            return glyph.beam_count;\n        }\n        else {\n            return 0;\n        }\n    }\n    // Get the minimum length of stem\n    getStemMinimumLength() {\n        const frac = Tables.durationToFraction(this.duration);\n        let length = frac.value() <= 1 ? 0 : 20;\n        // if note is flagged, cannot shorten beam\n        switch (this.duration) {\n            case '8':\n                if (this.beam == undefined)\n                    length = 35;\n                break;\n            case '16':\n                length = this.beam == undefined ? 35 : 25;\n                break;\n            case '32':\n                length = this.beam == undefined ? 45 : 35;\n                break;\n            case '64':\n                length = this.beam == undefined ? 50 : 40;\n                break;\n            case '128':\n                length = this.beam == undefined ? 55 : 45;\n                break;\n            default:\n                break;\n        }\n        return length;\n    }\n    // Get/set the direction of the stem\n    getStemDirection() {\n        if (!this.stem_direction)\n            throw new RuntimeError('NoStem', 'No stem attached to this note.');\n        return this.stem_direction;\n    }\n    setStemDirection(direction) {\n        if (!direction)\n            direction = Stem.UP;\n        if (direction !== Stem.UP && direction !== Stem.DOWN) {\n            throw new RuntimeError('BadArgument', `Invalid stem direction: ${direction}`);\n        }\n        this.stem_direction = direction;\n        // Reset and reformat everything. Flag has to be built before calling getStemExtension.\n        this.reset();\n        if (this.hasFlag()) {\n            this.buildFlag();\n        }\n        this.beam = undefined;\n        if (this.stem) {\n            this.stem.setDirection(direction);\n            this.stem.setExtension(this.getStemExtension());\n            // Lookup the base custom notehead (closest to the base of the stem) to extend or shorten\n            // the stem appropriately. If there's no custom note head, lookup the standard notehead.\n            const glyph = this.getBaseCustomNoteHeadGlyph() || this.getGlyph();\n            // Get the font-specific customizations for the note heads.\n            const offsets = Tables.currentMusicFont().lookupMetric(`stem.noteHead.${glyph.code_head}`, {\n                offsetYBaseStemUp: 0,\n                offsetYTopStemUp: 0,\n                offsetYBaseStemDown: 0,\n                offsetYTopStemDown: 0,\n            });\n            // Configure the stem to use these offsets.\n            this.stem.setOptions({\n                stem_up_y_offset: offsets.offsetYTopStemUp,\n                stem_down_y_offset: offsets.offsetYTopStemDown,\n                stem_up_y_base_offset: offsets.offsetYBaseStemUp,\n                stem_down_y_base_offset: offsets.offsetYBaseStemDown, // glyph.stem_down_y_base_offset,\n            });\n        }\n        if (this.preFormatted) {\n            this.preFormat();\n        }\n        return this;\n    }\n    // Get the `x` coordinate of the stem\n    getStemX() {\n        const x_begin = this.getAbsoluteX() + this.x_shift;\n        const x_end = this.getAbsoluteX() + this.x_shift + this.getGlyphWidth();\n        const stem_x = this.stem_direction === Stem.DOWN ? x_begin : x_end;\n        return stem_x;\n    }\n    // Get the `x` coordinate for the center of the glyph.\n    // Used for `TabNote` stems and stemlets over rests\n    getCenterGlyphX() {\n        return this.getAbsoluteX() + this.x_shift + this.getGlyphWidth() / 2;\n    }\n    // Get the stem extension for the current duration\n    getStemExtension() {\n        const glyph = this.getGlyph();\n        if (this.stem_extension_override != undefined) {\n            return this.stem_extension_override;\n        }\n        // Use stem_beam_extension with beams\n        if (this.beam) {\n            return glyph.stem_beam_extension;\n        }\n        if (glyph) {\n            return this.getStemDirection() === Stem.UP ? glyph.stem_up_extension : glyph.stem_down_extension;\n        }\n        return 0;\n    }\n    // Set the stem length to a specific. Will override the default length.\n    setStemLength(height) {\n        this.stem_extension_override = height - Stem.HEIGHT;\n        return this;\n    }\n    // Get the top and bottom `y` values of the stem.\n    getStemExtents() {\n        if (!this.stem)\n            throw new RuntimeError('NoStem', 'No stem attached to this note.');\n        return this.stem.getExtents();\n    }\n    /** Gets the `y` value for the top modifiers at a specific `textLine`. */\n    getYForTopText(textLine) {\n        const stave = this.checkStave();\n        if (this.hasStem()) {\n            const extents = this.getStemExtents();\n            if (!extents)\n                throw new RuntimeError('InvalidState', 'Stem does not have extents.');\n            return Math.min(stave.getYForTopText(textLine), extents.topY - this.render_options.annotation_spacing * (textLine + 1));\n        }\n        else {\n            return stave.getYForTopText(textLine);\n        }\n    }\n    /** Gets the `y` value for the bottom modifiers at a specific `textLine`. */\n    getYForBottomText(textLine) {\n        const stave = this.checkStave();\n        if (this.hasStem()) {\n            const extents = this.getStemExtents();\n            if (!extents)\n                throw new RuntimeError('InvalidState', 'Stem does not have extents.');\n            return Math.max(stave.getYForTopText(textLine), extents.baseY + this.render_options.annotation_spacing * textLine);\n        }\n        else {\n            return stave.getYForBottomText(textLine);\n        }\n    }\n    hasFlag() {\n        return Tables.getGlyphProps(this.duration).flag && !this.beam;\n    }\n    /** Post formats the note. */\n    postFormat() {\n        var _a;\n        (_a = this.beam) === null || _a === void 0 ? void 0 : _a.postFormat();\n        this.postFormatted = true;\n        return this;\n    }\n    /** Renders the stem onto the canvas. */\n    drawStem(stemOptions) {\n        var _a;\n        this.checkContext();\n        this.setRendered();\n        this.setStem(new Stem(stemOptions));\n        (_a = this.stem) === null || _a === void 0 ? void 0 : _a.setContext(this.getContext()).draw();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This file implements notes for standard notation. This consists of one or\n// more `NoteHeads`, an optional stem, and an optional flag.\n//\n// Throughout these comments, a \"note\" refers to the entire `StaveNote`,\n// and a \"key\" refers to a specific pitch/notehead within a note.\n//\n// See `tests/stavenote_tests.ts` for usage examples.\nimport { BoundingBox } from './boundingbox';\nimport { Modifier } from './modifier';\nimport { NoteHead } from './notehead';\nimport { Stem } from './stem';\nimport { StemmableNote } from './stemmablenote';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, log, midLine, RuntimeError, warn } from './util';\nfunction showDeprecationWarningForNoteHeads() {\n    // eslint-disable-next-line\n    console.warn('StaveNote.note_heads is deprecated. Use StaveNote.noteHeads instead.', 'This accessor will be removed in VexFlow 5.0.');\n}\n// To enable logging for this class. Set `Vex.Flow.StaveNote.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (StaveNote.DEBUG)\n        log('Vex.Flow.StaveNote', args);\n}\nconst isInnerNoteIndex = (note, index) => index === (note.getStemDirection() === Stem.UP ? note.keyProps.length - 1 : 0);\n// Helper methods for rest positioning in ModifierContext.\nfunction shiftRestVertical(rest, note, dir) {\n    const delta = dir;\n    rest.line += delta;\n    rest.maxLine += delta;\n    rest.minLine += delta;\n    rest.note.setKeyLine(0, rest.note.getKeyLine(0) + delta);\n}\n// Called from formatNotes :: center a rest between two notes\nfunction centerRest(rest, noteU, noteL) {\n    const delta = rest.line - midLine(noteU.minLine, noteL.maxLine);\n    rest.note.setKeyLine(0, rest.note.getKeyLine(0) - delta);\n    rest.line -= delta;\n    rest.maxLine -= delta;\n    rest.minLine -= delta;\n}\nexport class StaveNote extends StemmableNote {\n    constructor(noteStruct) {\n        var _a, _b, _c;\n        super(noteStruct);\n        //////////////////////////////////////////////////////////////////////////////////////////////////\n        // INSTANCE MEMBERS\n        this.minLine = 0;\n        this.maxLine = 0;\n        this.ledgerLineStyle = {};\n        this.clef = (_a = noteStruct.clef) !== null && _a !== void 0 ? _a : 'treble';\n        this.octave_shift = (_b = noteStruct.octave_shift) !== null && _b !== void 0 ? _b : 0;\n        // Pull note rendering properties.\n        this.glyph = Tables.getGlyphProps(this.duration, this.noteType);\n        defined(this.glyph, 'BadArguments', `No glyph found for duration '${this.duration}' and type '${this.noteType}'`);\n        // if true, displace note to right\n        this.displaced = false;\n        this.dot_shiftY = 0;\n        // for displaced ledger lines\n        this.use_default_head_x = false;\n        // Drawing\n        this._noteHeads = [];\n        this.modifiers = [];\n        this.render_options = Object.assign(Object.assign({}, this.render_options), { \n            // font size for note heads and rests\n            glyph_font_scale: noteStruct.glyph_font_scale || Tables.NOTATION_FONT_SCALE, \n            // number of stroke px to the left and right of head\n            stroke_px: noteStruct.stroke_px || StaveNote.LEDGER_LINE_OFFSET });\n        this.calculateKeyProps();\n        this.buildStem();\n        // Set the stem direction\n        if (noteStruct.auto_stem) {\n            this.autoStem();\n        }\n        else {\n            this.setStemDirection((_c = noteStruct.stem_direction) !== null && _c !== void 0 ? _c : Stem.UP);\n        }\n        this.reset();\n        this.buildFlag();\n    }\n    static get CATEGORY() {\n        return Category.StaveNote;\n    }\n    /**\n     * @deprecated Use Stem.UP.\n     */\n    static get STEM_UP() {\n        return Stem.UP;\n    }\n    /**\n     * @deprecated Use Stem.DOWN.\n     */\n    static get STEM_DOWN() {\n        return Stem.DOWN;\n    }\n    static get LEDGER_LINE_OFFSET() {\n        return 3;\n    }\n    static get minNoteheadPadding() {\n        const musicFont = Tables.currentMusicFont();\n        return musicFont.lookupMetric('glyphs.noteHead.minPadding');\n    }\n    /** Format notes inside a ModifierContext. */\n    static format(notes, state) {\n        if (!notes || notes.length < 2)\n            return false;\n        const notesList = [];\n        for (let i = 0; i < notes.length; i++) {\n            const props = notes[i].getKeyProps();\n            const line = props[0].line;\n            let minL = props[props.length - 1].line;\n            const stemDirection = notes[i].getStemDirection();\n            const stemMax = notes[i].getStemLength() / 10;\n            const stemMin = notes[i].getStemMinimumLength() / 10;\n            let maxL;\n            if (notes[i].isRest()) {\n                maxL = line + notes[i].glyph.line_above;\n                minL = line - notes[i].glyph.line_below;\n            }\n            else {\n                maxL = stemDirection === 1 ? props[props.length - 1].line + stemMax : props[props.length - 1].line;\n                minL = stemDirection === 1 ? props[0].line : props[0].line - stemMax;\n            }\n            notesList.push({\n                line: props[0].line,\n                maxLine: maxL,\n                minLine: minL,\n                isrest: notes[i].isRest(),\n                stemDirection: stemDirection,\n                stemMax,\n                stemMin,\n                voice_shift: notes[i].getVoiceShiftWidth(),\n                is_displaced: notes[i].isDisplaced(),\n                note: notes[i],\n            });\n        }\n        const voices = notesList.length;\n        let noteU = notesList[0];\n        const noteM = voices > 2 ? notesList[1] : undefined;\n        let noteL = voices > 2 ? notesList[2] : notesList[1];\n        // for two voice backward compatibility, ensure upper voice is stems up\n        // for three voices, the voices must be in order (upper, middle, lower)\n        if (voices === 2 && noteU.stemDirection === -1 && noteL.stemDirection === 1) {\n            noteU = notesList[1];\n            noteL = notesList[0];\n        }\n        const voiceXShift = Math.max(noteU.voice_shift, noteL.voice_shift);\n        let xShift = 0;\n        // Test for two voice note intersection\n        if (voices === 2) {\n            const lineSpacing = noteU.note.hasStem() && noteL.note.hasStem() && noteU.stemDirection === noteL.stemDirection ? 0.0 : 0.5;\n            if (noteL.isrest && noteU.isrest && noteU.note.duration === noteL.note.duration) {\n                noteL.note.render_options.draw = false;\n            }\n            else if (noteU.minLine <= noteL.maxLine + lineSpacing) {\n                if (noteU.isrest) {\n                    // shift rest up\n                    shiftRestVertical(noteU, noteL, 1);\n                }\n                else if (noteL.isrest) {\n                    // shift rest down\n                    shiftRestVertical(noteL, noteU, -1);\n                }\n                else {\n                    //Instead of shifting notes, remove the appropriate flag\n                    //If we are sharing a line, switch one notes stem direction.\n                    //If we are sharing a line and in the same voice, only then offset one note\n                    const lineDiff = Math.abs(noteU.line - noteL.line);\n                    if (noteU.note.hasStem() && noteL.note.hasStem()) {\n                        //If we have different dot values, must offset\n                        //Or If we have a white mixed with a black notehead, must offset\n                        let whiteNoteHeadCount = 0;\n                        let blackNoteHeadCount = 0;\n                        if (Tables.durationToNumber(noteU.note.duration) === 2) {\n                            whiteNoteHeadCount++;\n                        }\n                        else if (Tables.durationToNumber(noteU.note.duration) > 2) {\n                            blackNoteHeadCount++;\n                        }\n                        if (Tables.durationToNumber(noteL.note.duration) === 2) {\n                            whiteNoteHeadCount++;\n                        }\n                        else if (Tables.durationToNumber(noteL.note.duration) > 2) {\n                            blackNoteHeadCount++;\n                        }\n                        if ((whiteNoteHeadCount !== 2 && blackNoteHeadCount !== 2) ||\n                            noteU.note.getModifiersByType(Category.Dot).length !== noteL.note.getModifiersByType(Category.Dot).length) {\n                            xShift = voiceXShift + 2;\n                            if (noteU.stemDirection === noteL.stemDirection) {\n                                // upper voice is middle voice, so shift it right\n                                noteU.note.setXShift(xShift);\n                            }\n                            else {\n                                // shift lower voice right\n                                noteL.note.setXShift(xShift);\n                            }\n                        }\n                        else if (lineDiff < 1 && lineDiff > 0) {\n                            //if the notes are quite close but not on the same line, shift\n                            xShift = voiceXShift + 2;\n                            if (noteU.stemDirection === noteL.stemDirection) {\n                                // upper voice is middle voice, so shift it right\n                                noteU.note.setXShift(xShift);\n                            }\n                            else {\n                                // shift lower voice right\n                                noteL.note.setXShift(xShift);\n                            }\n                        }\n                        else if (noteU.note.voice !== noteL.note.voice) {\n                            //If we are not in the same voice\n                            if (noteU.stemDirection === noteL.stemDirection) {\n                                if (noteU.line != noteL.line) {\n                                    xShift = voiceXShift + 2;\n                                    noteU.note.setXShift(xShift);\n                                }\n                                else {\n                                    //same line, swap stem direction for one note\n                                    if (noteL.stemDirection === 1) {\n                                        noteL.stemDirection = -1;\n                                        noteL.note.setStemDirection(-1);\n                                    }\n                                }\n                            }\n                        } //Very close whole notes\n                    }\n                    else {\n                        xShift = voiceXShift + 2;\n                        if (noteU.stemDirection === noteL.stemDirection) {\n                            // upper voice is middle voice, so shift it right\n                            noteU.note.setXShift(xShift);\n                        }\n                        else {\n                            // shift lower voice right\n                            noteL.note.setXShift(xShift);\n                        }\n                    }\n                }\n            }\n            // format complete\n            state.right_shift += xShift;\n            return true;\n        }\n        if (!noteM)\n            throw new RuntimeError('InvalidState', 'noteM not defined.');\n        // For three voices, test if rests can be repositioned\n        //\n        // Special case 1 :: middle voice rest between two notes\n        //\n        if (noteM.isrest && !noteU.isrest && !noteL.isrest) {\n            if (noteU.minLine <= noteM.maxLine || noteM.minLine <= noteL.maxLine) {\n                const restHeight = noteM.maxLine - noteM.minLine;\n                const space = noteU.minLine - noteL.maxLine;\n                if (restHeight < space) {\n                    // center middle voice rest between the upper and lower voices\n                    centerRest(noteM, noteU, noteL);\n                }\n                else {\n                    xShift = voiceXShift + 2; // shift middle rest right\n                    noteM.note.setXShift(xShift);\n                    if (noteL.note.hasBeam() === false) {\n                        noteL.stemDirection = -1;\n                        noteL.note.setStemDirection(-1);\n                    }\n                    if (noteU.minLine <= noteL.maxLine && noteU.note.hasBeam() === false) {\n                        noteU.stemDirection = 1;\n                        noteU.note.setStemDirection(1);\n                    }\n                }\n                // format complete\n                state.right_shift += xShift;\n                return true;\n            }\n        }\n        // Special case 2 :: all voices are rests\n        if (noteU.isrest && noteM.isrest && noteL.isrest) {\n            // Hide upper voice rest\n            noteU.note.render_options.draw = false;\n            // Hide lower voice rest\n            noteL.note.render_options.draw = false;\n            // format complete\n            state.right_shift += xShift;\n            return true;\n        }\n        // Test if any other rests can be repositioned\n        if (noteM.isrest && noteU.isrest && noteM.minLine <= noteL.maxLine) {\n            // Hide middle voice rest\n            noteM.note.render_options.draw = false;\n        }\n        if (noteM.isrest && noteL.isrest && noteU.minLine <= noteM.maxLine) {\n            // Hide middle voice rest\n            noteM.note.render_options.draw = false;\n        }\n        if (noteU.isrest && noteU.minLine <= noteM.maxLine) {\n            // shift upper voice rest up;\n            shiftRestVertical(noteU, noteM, 1);\n        }\n        if (noteL.isrest && noteM.minLine <= noteL.maxLine) {\n            // shift lower voice rest down\n            shiftRestVertical(noteL, noteM, -1);\n        }\n        // If middle voice intersects upper or lower voice\n        if (noteU.minLine <= noteM.maxLine + 0.5 || noteM.minLine <= noteL.maxLine) {\n            // shift middle note right\n            xShift = voiceXShift + 2;\n            noteM.note.setXShift(xShift);\n            if (noteL.note.hasBeam() === false) {\n                noteL.stemDirection = -1;\n                noteL.note.setStemDirection(-1);\n            }\n            if (noteU.minLine <= noteL.maxLine && noteU.note.hasBeam() === false) {\n                noteU.stemDirection = 1;\n                noteU.note.setStemDirection(1);\n            }\n        }\n        state.right_shift += xShift;\n        return true;\n    }\n    static postFormat(notes) {\n        if (!notes)\n            return false;\n        notes.forEach((note) => note.postFormat());\n        return true;\n    }\n    reset() {\n        super.reset();\n        // Save prior noteHead styles & reapply them after making new noteheads.\n        const noteHeadStyles = this._noteHeads.map((noteHead) => noteHead.getStyle());\n        this.buildNoteHeads();\n        this._noteHeads.forEach((noteHead, index) => {\n            const noteHeadStyle = noteHeadStyles[index];\n            if (noteHeadStyle)\n                noteHead.setStyle(noteHeadStyle);\n        });\n        const stave = this.stave;\n        if (stave) {\n            this._noteHeads.forEach((head) => head.setStave(stave));\n        }\n        this.calcNoteDisplacements();\n        return this;\n    }\n    setBeam(beam) {\n        this.beam = beam;\n        this.calcNoteDisplacements();\n        // Update stem extension if a beam is assigned.\n        if (this.stem) {\n            this.stem.setExtension(this.getStemExtension());\n        }\n        return this;\n    }\n    // Builds a `Stem` for the note\n    buildStem() {\n        this.setStem(new Stem({ hide: !!this.isRest() }));\n        return this;\n    }\n    // Builds a `NoteHead` for each key in the note\n    buildNoteHeads() {\n        this._noteHeads = [];\n        const stemDirection = this.getStemDirection();\n        const keys = this.getKeys();\n        let lastLine = undefined;\n        let lineDiff = undefined;\n        let displaced = false;\n        // Draw notes from bottom to top.\n        // For down-stem notes, we draw from top to bottom.\n        let start;\n        let end;\n        let step;\n        if (stemDirection === Stem.UP) {\n            start = 0;\n            end = keys.length;\n            step = 1;\n        }\n        else {\n            start = keys.length - 1;\n            end = -1;\n            step = -1;\n        }\n        for (let i = start; i !== end; i += step) {\n            const noteProps = this.keyProps[i];\n            const line = noteProps.line;\n            // Keep track of last line with a note head, so that consecutive heads\n            // are correctly displaced.\n            if (lastLine === undefined) {\n                lastLine = line;\n            }\n            else {\n                lineDiff = Math.abs(lastLine - line);\n                if (lineDiff === 0 || lineDiff === 0.5) {\n                    displaced = !displaced;\n                }\n                else {\n                    displaced = false;\n                    this.use_default_head_x = true;\n                }\n            }\n            lastLine = line;\n            const notehead = new NoteHead({\n                duration: this.duration,\n                note_type: this.noteType,\n                displaced,\n                stem_direction: stemDirection,\n                custom_glyph_code: noteProps.code,\n                glyph_font_scale: this.render_options.glyph_font_scale,\n                x_shift: noteProps.shift_right,\n                stem_up_x_offset: noteProps.stem_up_x_offset,\n                stem_down_x_offset: noteProps.stem_down_x_offset,\n                line: noteProps.line,\n            });\n            this._noteHeads[i] = notehead;\n        }\n    }\n    // Automatically sets the stem direction based on the keys in the note\n    autoStem() {\n        this.setStemDirection(this.calculateOptimalStemDirection());\n    }\n    calculateOptimalStemDirection() {\n        // Figure out optimal stem direction based on given notes\n        this.minLine = this.keyProps[0].line;\n        this.maxLine = this.keyProps[this.keyProps.length - 1].line;\n        const MIDDLE_LINE = 3;\n        const decider = (this.minLine + this.maxLine) / 2;\n        const stemDirection = decider < MIDDLE_LINE ? Stem.UP : Stem.DOWN;\n        return stemDirection;\n    }\n    // Calculates and stores the properties for each key in the note\n    calculateKeyProps() {\n        let lastLine;\n        for (let i = 0; i < this.keys.length; ++i) {\n            const key = this.keys[i];\n            // All rests use the same position on the line.\n            // if (this.glyph.rest) key = this.glyph.position;\n            if (this.glyph.rest)\n                this.glyph.position = key;\n            const options = { octave_shift: this.octave_shift || 0 };\n            const props = Tables.keyProperties(key, this.clef, options);\n            if (!props) {\n                throw new RuntimeError('BadArguments', `Invalid key for note properties: ${key}`);\n            }\n            // Override line placement for default rests\n            if (props.key === 'R') {\n                if (this.duration === '1' || this.duration === 'w') {\n                    props.line = 4;\n                }\n                else {\n                    props.line = 3;\n                }\n            }\n            // Calculate displacement of this note\n            const line = props.line;\n            if (lastLine == undefined) {\n                lastLine = line;\n            }\n            else {\n                if (Math.abs(lastLine - line) === 0.5) {\n                    this.displaced = true;\n                    props.displaced = true;\n                    // Have to mark the previous note as\n                    // displaced as well, for modifier placement\n                    if (this.keyProps.length > 0) {\n                        this.keyProps[i - 1].displaced = true;\n                    }\n                }\n            }\n            lastLine = line;\n            this.keyProps.push(props);\n        }\n        // Sort the notes from lowest line to highest line\n        lastLine = undefined;\n        this.keyProps.forEach((key) => {\n            if (lastLine && key.line < lastLine) {\n                warn('Unsorted keys in note will be sorted. ' + 'See https://github.com/0xfe/vexflow/issues/104 for details.');\n            }\n            lastLine = key.line;\n        });\n        this.keyProps.sort((a, b) => a.line - b.line);\n    }\n    // Get the `BoundingBox` for the entire note\n    getBoundingBox() {\n        var _a, _b;\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call getBoundingBox on an unformatted note.\");\n        }\n        const { width: w, modLeftPx, leftDisplacedHeadPx } = this.getMetrics();\n        const x = this.getAbsoluteX() - modLeftPx - leftDisplacedHeadPx;\n        let minY = 0;\n        let maxY = 0;\n        const halfLineSpacing = ((_b = (_a = this.getStave()) === null || _a === void 0 ? void 0 : _a.getSpacingBetweenLines()) !== null && _b !== void 0 ? _b : 0) / 2;\n        const lineSpacing = halfLineSpacing * 2;\n        if (this.isRest()) {\n            const y = this.ys[0];\n            const frac = Tables.durationToFraction(this.duration);\n            if (frac.equals(1) || frac.equals(2)) {\n                minY = y - halfLineSpacing;\n                maxY = y + halfLineSpacing;\n            }\n            else {\n                minY = y - this.glyph.line_above * lineSpacing;\n                maxY = y + this.glyph.line_below * lineSpacing;\n            }\n        }\n        else if (this.glyph.stem) {\n            const ys = this.getStemExtents();\n            ys.baseY += halfLineSpacing * this.getStemDirection();\n            minY = Math.min(ys.topY, ys.baseY);\n            maxY = Math.max(ys.topY, ys.baseY);\n        }\n        else {\n            minY = 0;\n            maxY = 0;\n            for (let i = 0; i < this.ys.length; ++i) {\n                const yy = this.ys[i];\n                if (i === 0) {\n                    minY = yy;\n                    maxY = yy;\n                }\n                else {\n                    minY = Math.min(yy, minY);\n                    maxY = Math.max(yy, maxY);\n                }\n            }\n            minY -= halfLineSpacing;\n            maxY += halfLineSpacing;\n        }\n        return new BoundingBox(x, minY, w, maxY - minY);\n    }\n    // Gets the line number of the bottom note in the chord.\n    // If `isTopNote` is `true` then get the top note's line number instead\n    getLineNumber(isTopNote) {\n        if (!this.keyProps.length) {\n            throw new RuntimeError('NoKeyProps', \"Can't get bottom note line, because note is not initialized properly.\");\n        }\n        let resultLine = this.keyProps[0].line;\n        // No precondition assumed for sortedness of keyProps array\n        for (let i = 0; i < this.keyProps.length; i++) {\n            const thisLine = this.keyProps[i].line;\n            if (isTopNote) {\n                if (thisLine > resultLine)\n                    resultLine = thisLine;\n            }\n            else {\n                if (thisLine < resultLine)\n                    resultLine = thisLine;\n            }\n        }\n        return resultLine;\n    }\n    /**\n     * @returns true if this note is a type of rest. Rests don't have pitches, but take up space in the score.\n     */\n    isRest() {\n        return this.glyph.rest;\n    }\n    // Determine if the current note is a chord\n    isChord() {\n        return !this.isRest() && this.keys.length > 1;\n    }\n    // Determine if the `StaveNote` has a stem\n    hasStem() {\n        return this.glyph.stem;\n    }\n    hasFlag() {\n        return super.hasFlag() && !this.isRest();\n    }\n    getStemX() {\n        if (this.noteType === 'r') {\n            return this.getCenterGlyphX();\n        }\n        else {\n            // We adjust the origin of the stem because we want the stem left-aligned\n            // with the notehead if stemmed-down, and right-aligned if stemmed-up\n            return super.getStemX() + (this.stem_direction ? Stem.WIDTH / (2 * -this.stem_direction) : 0);\n        }\n    }\n    // Get the `y` coordinate for text placed on the top/bottom of a\n    // note at a desired `text_line`\n    getYForTopText(textLine) {\n        const extents = this.getStemExtents();\n        return Math.min(this.checkStave().getYForTopText(textLine), extents.topY - this.render_options.annotation_spacing * (textLine + 1));\n    }\n    getYForBottomText(textLine) {\n        const extents = this.getStemExtents();\n        return Math.max(this.checkStave().getYForTopText(textLine), extents.baseY + this.render_options.annotation_spacing * textLine);\n    }\n    // Sets the current note to the provided `stave`. This applies\n    // `y` values to the `NoteHeads`.\n    setStave(stave) {\n        super.setStave(stave);\n        const ys = this._noteHeads.map((notehead) => {\n            notehead.setStave(stave);\n            return notehead.getY();\n        });\n        this.setYs(ys);\n        if (this.stem) {\n            const { y_top, y_bottom } = this.getNoteHeadBounds();\n            this.stem.setYBounds(y_top, y_bottom);\n        }\n        return this;\n    }\n    // Check if note is shifted to the right\n    isDisplaced() {\n        return this.displaced;\n    }\n    // Sets whether shift note to the right. `displaced` is a `boolean`\n    setNoteDisplaced(displaced) {\n        this.displaced = displaced;\n        return this;\n    }\n    // Get the starting `x` coordinate for a `StaveTie`\n    getTieRightX() {\n        let tieStartX = this.getAbsoluteX();\n        tieStartX += this.getGlyphWidth() + this.x_shift + this.rightDisplacedHeadPx;\n        if (this.modifierContext)\n            tieStartX += this.modifierContext.getRightShift();\n        return tieStartX;\n    }\n    // Get the ending `x` coordinate for a `StaveTie`\n    getTieLeftX() {\n        let tieEndX = this.getAbsoluteX();\n        tieEndX += this.x_shift - this.leftDisplacedHeadPx;\n        return tieEndX;\n    }\n    // Get the stave line on which to place a rest\n    getLineForRest() {\n        let restLine = this.keyProps[0].line;\n        if (this.keyProps.length > 1) {\n            const lastLine = this.keyProps[this.keyProps.length - 1].line;\n            const top = Math.max(restLine, lastLine);\n            const bot = Math.min(restLine, lastLine);\n            restLine = midLine(top, bot);\n        }\n        return restLine;\n    }\n    // Get the default `x` and `y` coordinates for the provided `position`\n    // and key `index`\n    getModifierStartXY(position, index, options = {}) {\n        var _a, _b;\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n        }\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', 'No Y-Values calculated for this note.');\n        }\n        const { ABOVE, BELOW, LEFT, RIGHT } = Modifier.Position;\n        let x = 0;\n        if (position === LEFT) {\n            // FIXME: Left modifier padding, move to font file\n            x = -1 * 2;\n        }\n        else if (position === RIGHT) {\n            // FIXME: Right modifier padding, move to font file\n            x = this.getGlyphWidth() + this.x_shift + 2;\n            if (this.stem_direction === Stem.UP &&\n                this.hasFlag() &&\n                (options.forceFlagRight || isInnerNoteIndex(this, index))) {\n                x += (_b = (_a = this === null || this === void 0 ? void 0 : this.flag) === null || _a === void 0 ? void 0 : _a.getMetrics().width) !== null && _b !== void 0 ? _b : 0;\n            }\n        }\n        else if (position === BELOW || position === ABOVE) {\n            x = this.getGlyphWidth() / 2;\n        }\n        return {\n            x: this.getAbsoluteX() + x,\n            y: this.ys[index],\n        };\n    }\n    // Sets the style of the complete StaveNote, including all keys\n    // and the stem.\n    setStyle(style) {\n        super.setStyle(style);\n        this._noteHeads.forEach((notehead) => notehead.setStyle(style));\n        if (this.stem)\n            this.stem.setStyle(style);\n        return this;\n    }\n    setStemStyle(style) {\n        const stem = this.getStem();\n        if (stem)\n            stem.setStyle(style);\n        return this;\n    }\n    getStemStyle() {\n        var _a;\n        return (_a = this.stem) === null || _a === void 0 ? void 0 : _a.getStyle();\n    }\n    setLedgerLineStyle(style) {\n        this.ledgerLineStyle = style;\n    }\n    getLedgerLineStyle() {\n        return this.ledgerLineStyle;\n    }\n    setFlagStyle(style) {\n        this.flagStyle = style;\n    }\n    getFlagStyle() {\n        return this.flagStyle;\n    }\n    // Sets the notehead at `index` to the provided coloring `style`.\n    //\n    // `style` is an `object` with the following properties: `shadowColor`,\n    // `shadowBlur`, `fillStyle`, `strokeStyle`\n    setKeyStyle(index, style) {\n        this._noteHeads[index].setStyle(style);\n        return this;\n    }\n    setKeyLine(index, line) {\n        this.keyProps[index].line = line;\n        this.reset();\n        return this;\n    }\n    getKeyLine(index) {\n        return this.keyProps[index].line;\n    }\n    // Get the width of the note if it is displaced. Used for `Voice`\n    // formatting\n    getVoiceShiftWidth() {\n        // TODO: may need to accomodate for dot here.\n        return this.getGlyphWidth() * (this.displaced ? 2 : 1);\n    }\n    // Calculates and sets the extra pixels to the left or right\n    // if the note is displaced.\n    calcNoteDisplacements() {\n        this.setLeftDisplacedHeadPx(this.displaced && this.stem_direction === Stem.DOWN ? this.getGlyphWidth() : 0);\n        // For upstems with flags, the extra space is unnecessary, since it's taken\n        // up by the flag.\n        this.setRightDisplacedHeadPx(!this.hasFlag() && this.displaced && this.stem_direction === Stem.UP ? this.getGlyphWidth() : 0);\n    }\n    // Pre-render formatting\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        let noteHeadPadding = 0;\n        if (this.modifierContext) {\n            this.modifierContext.preFormat();\n            // If there are no modifiers on this note, make sure there is adequate padding\n            // between the notes.\n            if (this.modifierContext.getWidth() === 0) {\n                noteHeadPadding = StaveNote.minNoteheadPadding;\n            }\n        }\n        let width = this.getGlyphWidth() + this.leftDisplacedHeadPx + this.rightDisplacedHeadPx + noteHeadPadding;\n        // For upward flagged notes, the width of the flag needs to be added\n        if (this.shouldDrawFlag() && this.stem_direction === Stem.UP) {\n            width += this.getGlyphWidth();\n            // TODO: Add flag width as a separate metric\n        }\n        this.setWidth(width);\n        this.preFormatted = true;\n    }\n    /**\n     * @typedef {Object} noteHeadBounds\n     * @property {number} y_top the highest notehead bound\n     * @property {number} y_bottom the lowest notehead bound\n     * @property {number|Null} displaced_x the starting x for displaced noteheads\n     * @property {number|Null} non_displaced_x the starting x for non-displaced noteheads\n     * @property {number} highest_line the highest notehead line in traditional music line\n     *  numbering (bottom line = 1, top line = 5)\n     * @property {number} lowest_line the lowest notehead line\n     * @property {number|false} highest_displaced_line the highest staff line number\n     *   for a displaced notehead\n     * @property {number|false} lowest_displaced_line\n     * @property {number} highest_non_displaced_line\n     * @property {number} lowest_non_displaced_line\n     */\n    /**\n     * Get the staff line and y value for the highest & lowest noteheads\n     * @returns {noteHeadBounds}\n     */\n    getNoteHeadBounds() {\n        // Top and bottom Y values for stem.\n        let yTop = +Infinity;\n        let yBottom = -Infinity;\n        let nonDisplacedX;\n        let displacedX;\n        let highestLine = this.checkStave().getNumLines();\n        let lowestLine = 1;\n        let highestDisplacedLine;\n        let lowestDisplacedLine;\n        let highestNonDisplacedLine = highestLine;\n        let lowestNonDisplacedLine = lowestLine;\n        this._noteHeads.forEach((notehead) => {\n            const line = notehead.getLine();\n            const y = notehead.getY();\n            yTop = Math.min(y, yTop);\n            yBottom = Math.max(y, yBottom);\n            if (displacedX === undefined && notehead.isDisplaced()) {\n                displacedX = notehead.getAbsoluteX();\n            }\n            if (nonDisplacedX === undefined && !notehead.isDisplaced()) {\n                nonDisplacedX = notehead.getAbsoluteX();\n            }\n            highestLine = Math.max(line, highestLine);\n            lowestLine = Math.min(line, lowestLine);\n            if (notehead.isDisplaced()) {\n                highestDisplacedLine = highestDisplacedLine === undefined ? line : Math.max(line, highestDisplacedLine);\n                lowestDisplacedLine = lowestDisplacedLine === undefined ? line : Math.min(line, lowestDisplacedLine);\n            }\n            else {\n                highestNonDisplacedLine = Math.max(line, highestNonDisplacedLine);\n                lowestNonDisplacedLine = Math.min(line, lowestNonDisplacedLine);\n            }\n        }, this);\n        return {\n            y_top: yTop,\n            y_bottom: yBottom,\n            displaced_x: displacedX,\n            non_displaced_x: nonDisplacedX,\n            highest_line: highestLine,\n            lowest_line: lowestLine,\n            highest_displaced_line: highestDisplacedLine,\n            lowest_displaced_line: lowestDisplacedLine,\n            highest_non_displaced_line: highestNonDisplacedLine,\n            lowest_non_displaced_line: lowestNonDisplacedLine,\n        };\n    }\n    // Get the starting `x` coordinate for the noteheads\n    getNoteHeadBeginX() {\n        return this.getAbsoluteX() + this.x_shift;\n    }\n    // Get the ending `x` coordinate for the noteheads\n    getNoteHeadEndX() {\n        const xBegin = this.getNoteHeadBeginX();\n        return xBegin + this.getGlyphWidth();\n    }\n    get noteHeads() {\n        return this._noteHeads.slice();\n    }\n    /** @deprecated use StaveNote.noteHeads instead. */\n    get note_heads() {\n        showDeprecationWarningForNoteHeads();\n        return this.noteHeads;\n    }\n    // Draw the ledger lines between the stave and the highest/lowest keys\n    drawLedgerLines() {\n        const stave = this.checkStave();\n        const { glyph, render_options: { stroke_px }, } = this;\n        const ctx = this.checkContext();\n        const width = glyph.getWidth() + stroke_px * 2;\n        const doubleWidth = 2 * (glyph.getWidth() + stroke_px) - Stem.WIDTH / 2;\n        if (this.isRest())\n            return;\n        if (!ctx) {\n            throw new RuntimeError('NoCanvasContext', \"Can't draw without a canvas context.\");\n        }\n        const { highest_line, lowest_line, highest_displaced_line, highest_non_displaced_line, lowest_displaced_line, lowest_non_displaced_line, displaced_x, non_displaced_x, } = this.getNoteHeadBounds();\n        // Early out if there are no ledger lines to draw.\n        if (highest_line < 6 && lowest_line > 0)\n            return;\n        const min_x = Math.min(displaced_x !== null && displaced_x !== void 0 ? displaced_x : 0, non_displaced_x !== null && non_displaced_x !== void 0 ? non_displaced_x : 0);\n        const drawLedgerLine = (y, normal, displaced) => {\n            let x;\n            if (displaced && normal)\n                x = min_x - stroke_px;\n            else if (normal)\n                x = (non_displaced_x !== null && non_displaced_x !== void 0 ? non_displaced_x : 0) - stroke_px;\n            else\n                x = (displaced_x !== null && displaced_x !== void 0 ? displaced_x : 0) - stroke_px;\n            const ledgerWidth = normal && displaced ? doubleWidth : width;\n            ctx.beginPath();\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + ledgerWidth, y);\n            ctx.stroke();\n        };\n        const style = Object.assign(Object.assign({}, stave.getDefaultLedgerLineStyle()), this.getLedgerLineStyle());\n        this.applyStyle(ctx, style);\n        // Draw ledger lines below the staff:\n        for (let line = 6; line <= highest_line; ++line) {\n            const normal = non_displaced_x !== undefined && line <= highest_non_displaced_line;\n            const displaced = highest_displaced_line !== undefined && line <= highest_displaced_line;\n            drawLedgerLine(stave.getYForNote(line), normal, displaced);\n        }\n        // Draw ledger lines above the staff:\n        for (let line = 0; line >= lowest_line; --line) {\n            const normal = non_displaced_x !== undefined && line >= lowest_non_displaced_line;\n            const displaced = lowest_displaced_line !== undefined && line >= lowest_displaced_line;\n            drawLedgerLine(stave.getYForNote(line), normal, displaced);\n        }\n        this.restoreStyle(ctx, style);\n    }\n    // Draw all key modifiers\n    drawModifiers() {\n        const ctx = this.checkContext();\n        ctx.openGroup('modifiers');\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const modifier = this.modifiers[i];\n            const index = modifier.checkIndex();\n            const notehead = this._noteHeads[index];\n            const noteheadStyle = notehead.getStyle();\n            notehead.applyStyle(ctx, noteheadStyle);\n            modifier.setContext(ctx);\n            modifier.drawWithStyle();\n            notehead.restoreStyle(ctx, noteheadStyle);\n        }\n        ctx.closeGroup();\n    }\n    shouldDrawFlag() {\n        const hasStem = this.stem !== undefined;\n        const hasFlag = this.glyph.flag; // specified in tables.js\n        const hasNoBeam = this.beam === undefined;\n        return hasStem && hasFlag && hasNoBeam;\n    }\n    // Draw the flag for the note\n    drawFlag() {\n        var _a, _b, _c, _d, _e;\n        const ctx = this.checkContext();\n        if (!ctx) {\n            throw new RuntimeError('NoCanvasContext', \"Can't draw without a canvas context.\");\n        }\n        if (this.shouldDrawFlag()) {\n            const { y_top, y_bottom } = this.getNoteHeadBounds();\n            // eslint-disable-next-line\n            const noteStemHeight = this.stem.getHeight();\n            const flagX = this.getStemX();\n            // What's with the magic +/- 2\n            // ANSWER: a corner of the note stem pokes out beyond the tip of the flag.\n            // The extra +/- 2 pushes the flag glyph outward so it covers the stem entirely.\n            // Alternatively, we could shorten the stem.\n            const flagY = this.getStemDirection() === Stem.DOWN\n                ? // Down stems are below the note head and have flags on the right.\n                    y_top -\n                        noteStemHeight +\n                        2 -\n                        (this.glyph ? this.glyph.stem_down_extension : 0) * this.getStaveNoteScale() -\n                        ((_b = (_a = this.flag) === null || _a === void 0 ? void 0 : _a.getMetrics().y_shift) !== null && _b !== void 0 ? _b : 0) * (1 - this.getStaveNoteScale())\n                : // Up stems are above the note head and have flags on the right.\n                    y_bottom -\n                        noteStemHeight -\n                        2 +\n                        (this.glyph ? this.glyph.stem_up_extension : 0) * this.getStaveNoteScale() -\n                        ((_d = (_c = this.flag) === null || _c === void 0 ? void 0 : _c.getMetrics().y_shift) !== null && _d !== void 0 ? _d : 0) * (1 - this.getStaveNoteScale());\n            // Draw the Flag\n            ctx.openGroup('flag', undefined, { pointerBBox: true });\n            this.applyStyle(ctx, this.getFlagStyle());\n            (_e = this.flag) === null || _e === void 0 ? void 0 : _e.render(ctx, flagX, flagY);\n            this.restoreStyle(ctx, this.getFlagStyle());\n            ctx.closeGroup();\n        }\n    }\n    // Draw the NoteHeads\n    drawNoteHeads() {\n        const ctx = this.checkContext();\n        this._noteHeads.forEach((notehead) => {\n            ctx.openGroup('notehead', undefined, { pointerBBox: true });\n            notehead.setContext(ctx).draw();\n            ctx.closeGroup();\n        });\n    }\n    drawStem(stemOptions) {\n        // GCR TODO: I can't find any context in which this is called with the stemStruct\n        // argument in the codebase or tests. Nor can I find a case where super.drawStem\n        // is called at all. Perhaps these should be removed?\n        const ctx = this.checkContext();\n        if (stemOptions) {\n            this.setStem(new Stem(stemOptions));\n        }\n        // If we will render a flag, we shorten the stem so that the tip\n        // does not poke through the flag.\n        if (this.shouldDrawFlag() && this.stem) {\n            this.stem.adjustHeightForFlag();\n        }\n        if (this.stem) {\n            ctx.openGroup('stem', undefined, { pointerBBox: true });\n            this.stem.setContext(ctx).draw();\n            ctx.closeGroup();\n        }\n    }\n    /** Primarily used as the scaling factor for grace notes, GraceNote will return the required scale. */\n    getStaveNoteScale() {\n        return 1.0;\n    }\n    /**\n     * Override stemmablenote stem extension to adjust for distance from middle line.\n     */\n    getStemExtension() {\n        const super_stem_extension = super.getStemExtension();\n        if (!this.glyph.stem) {\n            return super_stem_extension;\n        }\n        const stem_direction = this.getStemDirection();\n        if (stem_direction !== this.calculateOptimalStemDirection()) {\n            return super_stem_extension; // no adjustment for manually set stem direction.\n        }\n        let mid_line_distance;\n        const MIDDLE_LINE = 3;\n        if (stem_direction === Stem.UP) {\n            // Note that the use of maxLine here instead of minLine might\n            // seem counterintuitive, but in the case of (say) treble clef\n            // chord(F2, E4) stem up, we do not want to extend the stem because\n            // of F2, when a normal octave-length stem above E4 is fine.\n            //\n            // maxLine and minLine are set in calculateOptimalStemDirection() so\n            // will be known.\n            mid_line_distance = MIDDLE_LINE - this.maxLine;\n        }\n        else {\n            mid_line_distance = this.minLine - MIDDLE_LINE;\n        }\n        // how many lines more than an octave is the relevant notehead?\n        const lines_over_octave_from_mid_line = mid_line_distance - 3.5;\n        if (lines_over_octave_from_mid_line <= 0) {\n            return super_stem_extension;\n        }\n        const stave = this.getStave();\n        let spacing_between_lines = 10;\n        if (stave != undefined) {\n            spacing_between_lines = stave.getSpacingBetweenLines();\n        }\n        return super_stem_extension + lines_over_octave_from_mid_line * spacing_between_lines;\n    }\n    // Draws all the `StaveNote` parts. This is the main drawing method.\n    draw() {\n        if (this.render_options.draw === false)\n            return;\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', \"Can't draw note without Y values.\");\n        }\n        const ctx = this.checkContext();\n        const xBegin = this.getNoteHeadBeginX();\n        const shouldRenderStem = this.hasStem() && !this.beam;\n        // Format note head x positions\n        this._noteHeads.forEach((notehead) => notehead.setX(xBegin));\n        if (this.stem) {\n            // Format stem x positions\n            const stemX = this.getStemX();\n            this.stem.setNoteHeadXBounds(stemX, stemX);\n        }\n        L('Rendering ', this.isChord() ? 'chord :' : 'note :', this.keys);\n        // Apply the overall style -- may be contradicted by local settings:\n        this.applyStyle();\n        this.setAttribute('el', ctx.openGroup('stavenote', this.getAttribute('id')));\n        this.drawLedgerLines();\n        ctx.openGroup('note', undefined, { pointerBBox: true });\n        if (shouldRenderStem)\n            this.drawStem();\n        this.drawNoteHeads();\n        this.drawFlag();\n        ctx.closeGroup();\n        this.drawModifiers();\n        ctx.closeGroup();\n        this.restoreStyle();\n        this.setRendered();\n    }\n}\nStaveNote.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Ron B. Yeh\n// MIT License\n//\n// Utilities for working with Web APIs.\n// See: https://developer.mozilla.org/en-US/docs/Web/API\nimport { globalObject } from './util';\n// eslint-disable-next-line\nexport function isHTMLCanvas(element) {\n    if (!element)\n        return false;\n    const global = globalObject();\n    return (\n    // It's either an instance of the HTMLCanvasElement class,\n    (typeof global.HTMLCanvasElement === 'function' && element instanceof global.HTMLCanvasElement) ||\n        // OR it's pretending to be a <canvas> element. Good enough!\n        // Do not rely on .tagName, because node-canvas doesn't provide a tagName.\n        (typeof element.getContext === 'function' && typeof element.toDataURL === 'function'));\n}\n// eslint-disable-next-line\nexport function isHTMLDiv(element) {\n    if (!element)\n        return false;\n    const global = globalObject();\n    return (\n    // It's either an instance of the HTMLDivElement class.\n    (typeof global.HTMLDivElement === 'function' && element instanceof global.HTMLDivElement) ||\n        // OR it's pretending to be a <div>. See: svgcontext.ts.\n        (typeof element.appendChild === 'function' && typeof element.style === 'object'));\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font } from './font';\nimport { RenderContext } from './rendercontext';\nimport { globalObject, warn } from './util';\nimport { isHTMLCanvas } from './web';\n/**\n * A rendering context for the Canvas backend. This class serves as a proxy for the\n * underlying CanvasRenderingContext2D object, part of the browser's API.\n */\nexport class CanvasContext extends RenderContext {\n    constructor(context) {\n        super();\n        /** Height of one line of text (in pixels). */\n        this.textHeight = 0;\n        this.context2D = context;\n        if (!context.canvas) {\n            this.canvas = {\n                width: CanvasContext.WIDTH,\n                height: CanvasContext.HEIGHT,\n            };\n        }\n        else {\n            this.canvas = context.canvas;\n        }\n    }\n    static get WIDTH() {\n        return 600;\n    }\n    static get HEIGHT() {\n        return 400;\n    }\n    static get CANVAS_BROWSER_SIZE_LIMIT() {\n        return 32767; // Chrome/Firefox. Could be determined more precisely by npm module canvas-size.\n    }\n    /**\n     * Ensure that width and height do not exceed the browser limit.\n     * @returns array of [width, height] clamped to the browser limit.\n     */\n    static sanitizeCanvasDims(width, height) {\n        const limit = this.CANVAS_BROWSER_SIZE_LIMIT;\n        if (Math.max(width, height) > limit) {\n            warn('Canvas dimensions exceed browser limit. Cropping to ' + limit);\n            if (width > limit) {\n                width = limit;\n            }\n            if (height > limit) {\n                height = limit;\n            }\n        }\n        return [width, height];\n    }\n    /**\n     * Set all pixels to transparent black rgba(0,0,0,0).\n     */\n    clear() {\n        this.context2D.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n    // eslint-disable-next-line\n    openGroup(cls, id, attrs) {\n        // Containers not implemented.\n    }\n    closeGroup() {\n        // Containers not implemented.\n    }\n    // eslint-disable-next-line\n    add(child) {\n        // Containers not implemented.\n    }\n    setFillStyle(style) {\n        this.context2D.fillStyle = style;\n        return this;\n    }\n    /** CanvasContext ignores `setBackgroundFillStyle()`. */\n    // eslint-disable-next-line\n    setBackgroundFillStyle(style) {\n        // DO NOTHING\n        return this;\n    }\n    setStrokeStyle(style) {\n        this.context2D.strokeStyle = style;\n        return this;\n    }\n    setShadowColor(color) {\n        this.context2D.shadowColor = color;\n        return this;\n    }\n    setShadowBlur(blur) {\n        // CanvasRenderingContext2D does not scale the shadow blur by the current\n        // transform, so we have to do it manually. We assume uniform scaling\n        // (though allow for rotation) because the blur can only be scaled\n        // uniformly anyway.\n        const t = this.context2D.getTransform();\n        const scale = Math.sqrt(t.a * t.a + t.b * t.b + t.c * t.c + t.d * t.d);\n        this.context2D.shadowBlur = scale * blur;\n        return this;\n    }\n    setLineWidth(width) {\n        this.context2D.lineWidth = width;\n        return this;\n    }\n    setLineCap(capType) {\n        this.context2D.lineCap = capType;\n        return this;\n    }\n    setLineDash(dash) {\n        this.context2D.setLineDash(dash);\n        return this;\n    }\n    scale(x, y) {\n        this.context2D.scale(x, y);\n        return this;\n    }\n    resize(width, height) {\n        const canvas = this.context2D.canvas;\n        const devicePixelRatio = globalObject().devicePixelRatio || 1;\n        // Scale the canvas size by the device pixel ratio clamping to the maximum supported size.\n        [width, height] = CanvasContext.sanitizeCanvasDims(width * devicePixelRatio, height * devicePixelRatio);\n        // Divide back down by the pixel ratio and convert to integers.\n        width = (width / devicePixelRatio) | 0;\n        height = (height / devicePixelRatio) | 0;\n        canvas.width = width * devicePixelRatio;\n        canvas.height = height * devicePixelRatio;\n        // The canvas could be an instance of either HTMLCanvasElement or an OffscreenCanvas.\n        // Only HTMLCanvasElement has a style attribute.\n        if (isHTMLCanvas(canvas)) {\n            canvas.style.width = width + 'px';\n            canvas.style.height = height + 'px';\n        }\n        return this.scale(devicePixelRatio, devicePixelRatio);\n    }\n    rect(x, y, width, height) {\n        this.context2D.rect(x, y, width, height);\n        return this;\n    }\n    fillRect(x, y, width, height) {\n        this.context2D.fillRect(x, y, width, height);\n        return this;\n    }\n    /**\n     * Set the pixels in a rectangular area to transparent black rgba(0,0,0,0).\n     */\n    clearRect(x, y, width, height) {\n        this.context2D.clearRect(x, y, width, height);\n        return this;\n    }\n    beginPath() {\n        this.context2D.beginPath();\n        return this;\n    }\n    moveTo(x, y) {\n        this.context2D.moveTo(x, y);\n        return this;\n    }\n    lineTo(x, y) {\n        this.context2D.lineTo(x, y);\n        return this;\n    }\n    bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n        this.context2D.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n        return this;\n    }\n    quadraticCurveTo(cpx, cpy, x, y) {\n        this.context2D.quadraticCurveTo(cpx, cpy, x, y);\n        return this;\n    }\n    arc(x, y, radius, startAngle, endAngle, counterclockwise) {\n        this.context2D.arc(x, y, radius, startAngle, endAngle, counterclockwise);\n        return this;\n    }\n    fill() {\n        this.context2D.fill();\n        return this;\n    }\n    stroke() {\n        this.context2D.stroke();\n        return this;\n    }\n    closePath() {\n        this.context2D.closePath();\n        return this;\n    }\n    measureText(text) {\n        const metrics = this.context2D.measureText(text);\n        let y = 0;\n        let height = 0;\n        if (metrics.fontBoundingBoxAscent) {\n            y = -metrics.fontBoundingBoxAscent;\n            height = metrics.fontBoundingBoxDescent + metrics.fontBoundingBoxAscent;\n        }\n        else {\n            y = -metrics.actualBoundingBoxAscent;\n            height = metrics.actualBoundingBoxDescent + metrics.actualBoundingBoxAscent;\n        }\n        // Return x, y, width & height in the same manner as svg getBBox\n        return {\n            x: 0,\n            y: y,\n            width: metrics.width,\n            height: height,\n        };\n    }\n    fillText(text, x, y) {\n        this.context2D.fillText(text, x, y);\n        return this;\n    }\n    save() {\n        this.context2D.save();\n        return this;\n    }\n    restore() {\n        this.context2D.restore();\n        return this;\n    }\n    set fillStyle(style) {\n        this.context2D.fillStyle = style;\n    }\n    get fillStyle() {\n        return this.context2D.fillStyle;\n    }\n    set strokeStyle(style) {\n        this.context2D.strokeStyle = style;\n    }\n    get strokeStyle() {\n        return this.context2D.strokeStyle;\n    }\n    /**\n     * @param f is 1) a `FontInfo` object or\n     *             2) a string formatted as CSS font shorthand (e.g., 'bold 10pt Arial') or\n     *             3) a string representing the font family (one of `size`, `weight`, or `style` must also be provided).\n     * @param size a string specifying the font size and unit (e.g., '16pt'), or a number (the unit is assumed to be 'pt').\n     * @param weight is a string (e.g., 'bold', 'normal') or a number (100, 200, ... 900).\n     * @param style is a string (e.g., 'italic', 'normal').\n     */\n    setFont(f, size, weight, style) {\n        const fontInfo = Font.validate(f, size, weight, style);\n        this.context2D.font = Font.toCSSString(fontInfo);\n        this.textHeight = Font.convertSizeToPixelValue(fontInfo.size);\n        return this;\n    }\n    /** Return a string of the form `'italic bold 15pt Arial'` */\n    getFont() {\n        return this.context2D.font;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n// @author Gregory Ristow (2015)\nimport { Font, FontStyle, FontWeight } from './font';\nimport { RenderContext } from './rendercontext';\nimport { normalizeAngle, prefix, RuntimeError } from './util';\n/** For a particular element type (e.g., rect), we will not apply certain presentation attributes. */\nconst ATTRIBUTES_TO_IGNORE = {\n    path: {\n        x: true,\n        y: true,\n        width: true,\n        height: true,\n        'font-family': true,\n        'font-weight': true,\n        'font-style': true,\n        'font-size': true,\n    },\n    rect: {\n        'font-family': true,\n        'font-weight': true,\n        'font-style': true,\n        'font-size': true,\n    },\n    text: {\n        width: true,\n        height: true,\n    },\n};\n/** Create the SVG in the SVG namespace. */\nconst SVG_NS = 'http://www.w3.org/2000/svg';\nconst TWO_PI = 2 * Math.PI;\nclass MeasureTextCache {\n    constructor() {\n        // The cache is keyed first by the text string, then by the font attributes\n        // joined together.\n        this.cache = {};\n    }\n    lookup(text, svg, attributes) {\n        let entries = this.cache[text];\n        if (entries === undefined) {\n            entries = {};\n            this.cache[text] = entries;\n        }\n        const family = attributes['font-family'];\n        const size = attributes['font-size'];\n        const weight = attributes['font-weight'];\n        const style = attributes['font-style'];\n        const key = `${family}%${size}%${weight}%${style}`;\n        let entry = entries[key];\n        if (entry === undefined) {\n            entry = this.measureImpl(text, svg, attributes);\n            entries[key] = entry;\n        }\n        return entry;\n    }\n    measureImpl(text, svg, attributes) {\n        let txt = this.txt;\n        if (!txt) {\n            // Create the SVG text element that will be used to measure text in the event\n            // of a cache miss.\n            txt = document.createElementNS(SVG_NS, 'text');\n            this.txt = txt;\n        }\n        txt.textContent = text;\n        txt.setAttributeNS(null, 'font-family', attributes['font-family']);\n        txt.setAttributeNS(null, 'font-size', attributes['font-size']);\n        txt.setAttributeNS(null, 'font-style', attributes['font-style']);\n        txt.setAttributeNS(null, 'font-weight', attributes['font-weight']);\n        svg.appendChild(txt);\n        const bbox = txt.getBBox();\n        svg.removeChild(txt);\n        return { x: bbox.x, y: bbox.y, width: bbox.width, height: bbox.height };\n    }\n}\n/**\n * SVG rendering context with an API similar to CanvasRenderingContext2D.\n */\nexport class SVGContext extends RenderContext {\n    constructor(element) {\n        super();\n        this.width = 0;\n        this.height = 0;\n        this.backgroundFillStyle = 'white';\n        /** Formatted as CSS font shorthand (e.g., 'italic bold 12pt Arial') */\n        this.fontCSSString = '';\n        this.element = element;\n        // Create a SVG element and add it to the container element.\n        const svg = this.create('svg');\n        this.element.appendChild(svg);\n        this.svg = svg;\n        this.parent = this.svg;\n        this.groups = [this.svg];\n        this.path = '';\n        this.pen = { x: NaN, y: NaN };\n        this.lineWidth = 1.0;\n        const defaultFontAttributes = {\n            'font-family': Font.SANS_SERIF,\n            'font-size': Font.SIZE + 'pt',\n            'font-weight': FontWeight.NORMAL,\n            'font-style': FontStyle.NORMAL,\n        };\n        this.state = Object.assign({ scale: { x: 1, y: 1 } }, defaultFontAttributes);\n        this.attributes = Object.assign({ 'stroke-width': 0.3, 'stroke-dasharray': 'none', fill: 'black', stroke: 'black' }, defaultFontAttributes);\n        this.shadow_attributes = {\n            width: 0,\n            color: 'black',\n        };\n        this.state_stack = [];\n    }\n    create(svgElementType) {\n        return document.createElementNS(SVG_NS, svgElementType);\n    }\n    // Allow grouping elements in containers for interactivity.\n    openGroup(cls, id, attrs) {\n        const group = this.create('g');\n        this.groups.push(group);\n        this.parent.appendChild(group);\n        this.parent = group;\n        if (cls)\n            group.setAttribute('class', prefix(cls));\n        if (id)\n            group.setAttribute('id', prefix(id));\n        if (attrs && attrs.pointerBBox) {\n            group.setAttribute('pointer-events', 'bounding-box');\n        }\n        return group;\n    }\n    closeGroup() {\n        this.groups.pop();\n        this.parent = this.groups[this.groups.length - 1];\n    }\n    add(elem) {\n        this.parent.appendChild(elem);\n    }\n    setFillStyle(style) {\n        this.attributes.fill = style;\n        return this;\n    }\n    /**\n     * Used to set the fill color for `clearRect()`. This allows us to simulate\n     * cutting a \"hole\" into the SVG drawing.\n     */\n    setBackgroundFillStyle(style) {\n        this.backgroundFillStyle = style;\n        return this;\n    }\n    setStrokeStyle(style) {\n        this.attributes.stroke = style;\n        return this;\n    }\n    setShadowColor(color) {\n        this.shadow_attributes.color = color;\n        return this;\n    }\n    /**\n     * @param blur A non-negative float specifying the level of shadow blur, where 0\n     *             represents no blur and larger numbers represent increasingly more blur.\n     * @returns this\n     */\n    setShadowBlur(blur) {\n        this.shadow_attributes.width = blur;\n        return this;\n    }\n    /**\n     * @param width\n     * @returns this\n     */\n    setLineWidth(width) {\n        this.attributes['stroke-width'] = width;\n        this.lineWidth = width;\n        return this;\n    }\n    /**\n     * @param lineDash an array of integers in the form of [dash, space, dash, space, etc...]\n     * @returns this\n     *\n     * See: [SVG `stroke-dasharray` attribute](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray)\n     */\n    setLineDash(lineDash) {\n        if (Object.prototype.toString.call(lineDash) === '[object Array]') {\n            this.attributes['stroke-dasharray'] = lineDash.join(',');\n            return this;\n        }\n        else {\n            throw new RuntimeError('ArgumentError', 'lineDash must be an array of integers.');\n        }\n    }\n    /**\n     * @param capType\n     * @returns this\n     */\n    setLineCap(capType) {\n        this.attributes['stroke-linecap'] = capType;\n        return this;\n    }\n    // ### Sizing & Scaling Methods:\n    // TODO (GCR): See note at scale() -- separate our internal\n    // conception of pixel-based width/height from the style.width\n    // and style.height properties eventually to allow users to\n    // apply responsive sizing attributes to the SVG.\n    resize(width, height) {\n        this.width = width;\n        this.height = height;\n        this.element.style.width = width.toString();\n        this.svg.style.width = width.toString();\n        this.svg.style.height = height.toString();\n        const attributes = {\n            width,\n            height,\n        };\n        this.applyAttributes(this.svg, attributes);\n        this.scale(this.state.scale.x, this.state.scale.y);\n        return this;\n    }\n    scale(x, y) {\n        // uses viewBox to scale\n        // TODO (GCR): we may at some point want to distinguish the\n        // style.width / style.height properties that are applied to\n        // the SVG object from our internal conception of the SVG\n        // width/height.  This would allow us to create automatically\n        // scaling SVG's that filled their containers, for instance.\n        //\n        // As this isn't implemented in Canvas contexts,\n        // I've left as is for now, but in using the viewBox to\n        // handle internal scaling, am trying to make it possible\n        // for us to eventually move in that direction.\n        this.state.scale = { x, y };\n        const visibleWidth = this.width / x;\n        const visibleHeight = this.height / y;\n        this.setViewBox(0, 0, visibleWidth, visibleHeight);\n        return this;\n    }\n    /**\n     * 1 arg: string in the \"x y w h\" format\n     * 4 args: x:number, y:number, w:number, h:number\n     */\n    setViewBox(viewBox_or_minX, minY, width, height) {\n        if (typeof viewBox_or_minX === 'string') {\n            this.svg.setAttribute('viewBox', viewBox_or_minX);\n        }\n        else {\n            const viewBoxString = viewBox_or_minX + ' ' + minY + ' ' + width + ' ' + height;\n            this.svg.setAttribute('viewBox', viewBoxString);\n        }\n    }\n    // ### Drawing helper methods:\n    applyAttributes(element, attributes) {\n        const attrNamesToIgnore = ATTRIBUTES_TO_IGNORE[element.nodeName];\n        for (const attrName in attributes) {\n            if (attrNamesToIgnore && attrNamesToIgnore[attrName]) {\n                continue;\n            }\n            element.setAttributeNS(null, attrName, attributes[attrName]);\n        }\n        return element;\n    }\n    // ### Shape & Path Methods:\n    clear() {\n        // Clear the SVG by removing all inner children.\n        // (This approach is usually slightly more efficient\n        // than removing the old SVG & adding a new one to\n        // the container element, since it does not cause the\n        // container to resize twice.  Also, the resize\n        // triggered by removing the entire SVG can trigger\n        // a touchcancel event when the element resizes away\n        // from a touch point.)\n        while (this.svg.lastChild) {\n            this.svg.removeChild(this.svg.lastChild);\n        }\n        // Replace the viewbox attribute we just removed.\n        this.scale(this.state.scale.x, this.state.scale.y);\n    }\n    // ## Rectangles:\n    rect(x, y, width, height, attributes) {\n        // Avoid invalid negative height attributes by flipping the rectangle on its head:\n        if (height < 0) {\n            y += height;\n            height *= -1;\n        }\n        const rectangle = this.create('rect');\n        attributes = attributes !== null && attributes !== void 0 ? attributes : { fill: 'none', 'stroke-width': this.lineWidth, stroke: 'black' };\n        this.applyAttributes(rectangle, Object.assign({ x, y, width, height }, attributes));\n        this.add(rectangle);\n        return this;\n    }\n    fillRect(x, y, width, height) {\n        const attributes = { fill: this.attributes.fill };\n        this.rect(x, y, width, height, attributes);\n        return this;\n    }\n    clearRect(x, y, width, height) {\n        // Currently this fills a rect with the backgroundFillStyle, rather\n        // than \"cut a hole\" into the existing shapes.\n        //\n        // Since tabNote seems to be the only module that makes use of this\n        // it may be worth creating a separate tabStave that would\n        // draw lines around locations of tablature fingering.\n        this.rect(x, y, width, height, { 'stroke-width': 0, fill: this.backgroundFillStyle });\n        return this;\n    }\n    // ## Paths:\n    beginPath() {\n        this.path = '';\n        this.pen.x = NaN;\n        this.pen.y = NaN;\n        return this;\n    }\n    moveTo(x, y) {\n        this.path += 'M' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    lineTo(x, y) {\n        this.path += 'L' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    bezierCurveTo(x1, y1, x2, y2, x, y) {\n        this.path += 'C' + x1 + ' ' + y1 + ',' + x2 + ' ' + y2 + ',' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    quadraticCurveTo(x1, y1, x, y) {\n        this.path += 'Q' + x1 + ' ' + y1 + ',' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    arc(x, y, radius, startAngle, endAngle, counterclockwise) {\n        const x0 = x + radius * Math.cos(startAngle);\n        const y0 = y + radius * Math.sin(startAngle);\n        // Handle the edge case where arc length is greater than or equal to\n        // the circle's circumference:\n        //   https://html.spec.whatwg.org/multipage/canvas.html#ellipse-method-steps\n        if ((!counterclockwise && endAngle - startAngle >= TWO_PI) ||\n            (counterclockwise && startAngle - endAngle >= TWO_PI)) {\n            const x1 = x + radius * Math.cos(startAngle + Math.PI);\n            const y1 = y + radius * Math.sin(startAngle + Math.PI);\n            // There's no way to specify a completely circular arc in SVG so we have to\n            // use two semi-circular arcs.\n            this.path += `M${x0} ${y0} A${radius} ${radius} 0 0 0 ${x1} ${y1} `;\n            this.path += `A${radius} ${radius} 0 0 0 ${x0} ${y0}`;\n            this.pen.x = x0;\n            this.pen.y = y0;\n        }\n        else {\n            const x1 = x + radius * Math.cos(endAngle);\n            const y1 = y + radius * Math.sin(endAngle);\n            startAngle = normalizeAngle(startAngle);\n            endAngle = normalizeAngle(endAngle);\n            let large;\n            if (Math.abs(endAngle - startAngle) < Math.PI) {\n                large = counterclockwise;\n            }\n            else {\n                large = !counterclockwise;\n            }\n            if (startAngle > endAngle) {\n                large = !large;\n            }\n            const sweep = !counterclockwise;\n            this.path += `M${x0} ${y0} A${radius} ${radius} 0 ${+large} ${+sweep} ${x1} ${y1}`;\n            this.pen.x = x1;\n            this.pen.y = y1;\n        }\n        return this;\n    }\n    closePath() {\n        this.path += 'Z';\n        return this;\n    }\n    getShadowStyle() {\n        const sa = this.shadow_attributes;\n        // A CSS drop-shadow filter blur looks different than a canvas shadowBlur\n        // of the same radius, so we scale the drop-shadow radius here to make it\n        // look close to the canvas shadow.\n        return `filter: drop-shadow(0 0 ${sa.width / 1.5}px ${sa.color})`;\n    }\n    fill(attributes) {\n        const path = this.create('path');\n        if (typeof attributes === 'undefined') {\n            attributes = Object.assign(Object.assign({}, this.attributes), { stroke: 'none' });\n        }\n        attributes.d = this.path;\n        if (this.shadow_attributes.width > 0) {\n            attributes.style = this.getShadowStyle();\n        }\n        this.applyAttributes(path, attributes);\n        this.add(path);\n        return this;\n    }\n    stroke() {\n        const path = this.create('path');\n        const attributes = Object.assign(Object.assign({}, this.attributes), { fill: 'none', 'stroke-width': this.lineWidth, d: this.path });\n        if (this.shadow_attributes.width > 0) {\n            attributes.style = this.getShadowStyle();\n        }\n        this.applyAttributes(path, attributes);\n        this.add(path);\n        return this;\n    }\n    // ## Text Methods:\n    measureText(text) {\n        return SVGContext.measureTextCache.lookup(text, this.svg, this.attributes);\n    }\n    fillText(text, x, y) {\n        if (!text || text.length <= 0) {\n            return this;\n        }\n        const attributes = Object.assign(Object.assign({}, this.attributes), { stroke: 'none', x,\n            y });\n        const txt = this.create('text');\n        txt.textContent = text;\n        this.applyAttributes(txt, attributes);\n        this.add(txt);\n        return this;\n    }\n    // TODO: State should be deep-copied.\n    save() {\n        this.state_stack.push({\n            state: {\n                'font-family': this.state['font-family'],\n                'font-weight': this.state['font-weight'],\n                'font-style': this.state['font-style'],\n                'font-size': this.state['font-size'],\n                scale: this.state.scale,\n            },\n            attributes: {\n                'font-family': this.attributes['font-family'],\n                'font-weight': this.attributes['font-weight'],\n                'font-style': this.attributes['font-style'],\n                'font-size': this.attributes['font-size'],\n                fill: this.attributes.fill,\n                stroke: this.attributes.stroke,\n                'stroke-width': this.attributes['stroke-width'],\n                'stroke-dasharray': this.attributes['stroke-dasharray'],\n            },\n            shadow_attributes: {\n                width: this.shadow_attributes.width,\n                color: this.shadow_attributes.color,\n            },\n            lineWidth: this.lineWidth,\n        });\n        return this;\n    }\n    // TODO: State should be deep-restored.\n    restore() {\n        const savedState = this.state_stack.pop();\n        if (savedState) {\n            const state = savedState;\n            this.state['font-family'] = state.state['font-family'];\n            this.state['font-weight'] = state.state['font-weight'];\n            this.state['font-style'] = state.state['font-style'];\n            this.state['font-size'] = state.state['font-size'];\n            this.state.scale = state.state.scale;\n            this.attributes['font-family'] = state.attributes['font-family'];\n            this.attributes['font-weight'] = state.attributes['font-weight'];\n            this.attributes['font-style'] = state.attributes['font-style'];\n            this.attributes['font-size'] = state.attributes['font-size'];\n            this.attributes.fill = state.attributes.fill;\n            this.attributes.stroke = state.attributes.stroke;\n            this.attributes['stroke-width'] = state.attributes['stroke-width'];\n            this.attributes['stroke-dasharray'] = state.attributes['stroke-dasharray'];\n            this.shadow_attributes.width = state.shadow_attributes.width;\n            this.shadow_attributes.color = state.shadow_attributes.color;\n            this.lineWidth = state.lineWidth;\n        }\n        return this;\n    }\n    set fillStyle(style) {\n        this.setFillStyle(style);\n    }\n    get fillStyle() {\n        return this.attributes.fill;\n    }\n    set strokeStyle(style) {\n        this.setStrokeStyle(style);\n    }\n    get strokeStyle() {\n        return this.attributes.stroke;\n    }\n    /**\n     * @param f is 1) a `FontInfo` object or\n     *             2) a string formatted as CSS font shorthand (e.g., 'bold 10pt Arial') or\n     *             3) a string representing the font family (one of `size`, `weight`, or `style` must also be provided).\n     * @param size a string specifying the font size and unit (e.g., '16pt'), or a number (the unit is assumed to be 'pt').\n     * @param weight is a string (e.g., 'bold', 'normal') or a number (100, 200, ... 900). It is inserted\n     *               into the font-weight attribute (e.g., font-weight=\"bold\")\n     * @param style is a string (e.g., 'italic', 'normal') that is inserted into the\n     *              font-style attribute (e.g., font-style=\"italic\")\n     */\n    setFont(f, size, weight, style) {\n        const fontInfo = Font.validate(f, size, weight, style);\n        this.fontCSSString = Font.toCSSString(fontInfo);\n        const fontAttributes = {\n            'font-family': fontInfo.family,\n            'font-size': fontInfo.size,\n            'font-weight': fontInfo.weight,\n            'font-style': fontInfo.style,\n        };\n        this.attributes = Object.assign(Object.assign({}, this.attributes), fontAttributes);\n        this.state = Object.assign(Object.assign({}, this.state), fontAttributes);\n        return this;\n    }\n    /** Return a string of the form `'italic bold 15pt Arial'` */\n    getFont() {\n        return this.fontCSSString;\n    }\n}\nSVGContext.measureTextCache = new MeasureTextCache();\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { CanvasContext } from './canvascontext';\nimport { SVGContext } from './svgcontext';\nimport { isRenderContext } from './typeguard';\nimport { RuntimeError } from './util';\nimport { isHTMLCanvas, isHTMLDiv } from './web';\nexport var RendererBackends;\n(function (RendererBackends) {\n    RendererBackends[RendererBackends[\"CANVAS\"] = 1] = \"CANVAS\";\n    RendererBackends[RendererBackends[\"SVG\"] = 2] = \"SVG\";\n})(RendererBackends || (RendererBackends = {}));\n// End of line types\nexport var RendererLineEndType;\n(function (RendererLineEndType) {\n    RendererLineEndType[RendererLineEndType[\"NONE\"] = 1] = \"NONE\";\n    RendererLineEndType[RendererLineEndType[\"UP\"] = 2] = \"UP\";\n    RendererLineEndType[RendererLineEndType[\"DOWN\"] = 3] = \"DOWN\";\n})(RendererLineEndType || (RendererLineEndType = {}));\n/**\n * Support Canvas & SVG rendering contexts.\n */\nexport class Renderer {\n    constructor(arg0, arg1) {\n        if (isRenderContext(arg0)) {\n            // The user has provided what looks like a RenderContext, let's just use it.\n            this.ctx = arg0;\n        }\n        else {\n            if (arg1 === undefined) {\n                // The backend must be specified if the render context isn't directly provided.\n                throw new RuntimeError('InvalidArgument', 'Missing backend argument');\n            }\n            const backend = arg1;\n            let element;\n            if (typeof arg0 == 'string') {\n                const maybeElement = document.getElementById(arg0);\n                if (!maybeElement) {\n                    throw new RuntimeError('BadElementId', `Can't find element with ID \"${maybeElement}\"`);\n                }\n                element = maybeElement;\n            }\n            else {\n                element = arg0;\n            }\n            // Verify backend and create context\n            if (backend === Renderer.Backends.CANVAS) {\n                if (!isHTMLCanvas(element)) {\n                    throw new RuntimeError('BadElement', 'CANVAS context requires an HTMLCanvasElement.');\n                }\n                const context = element.getContext('2d');\n                if (!context) {\n                    throw new RuntimeError('BadElement', \"Can't get canvas context\");\n                }\n                this.ctx = new CanvasContext(context);\n            }\n            else if (backend === Renderer.Backends.SVG) {\n                if (!isHTMLDiv(element)) {\n                    throw new RuntimeError('BadElement', 'SVG context requires an HTMLDivElement.');\n                }\n                this.ctx = new SVGContext(element);\n            }\n            else {\n                throw new RuntimeError('InvalidBackend', `No support for backend: ${backend}`);\n            }\n        }\n    }\n    static buildContext(elementId, backend, width, height, background = '#FFF') {\n        const renderer = new Renderer(elementId, backend);\n        if (width && height) {\n            renderer.resize(width, height);\n        }\n        const ctx = renderer.getContext();\n        ctx.setBackgroundFillStyle(background);\n        Renderer.lastContext = ctx;\n        return ctx;\n    }\n    static getCanvasContext(elementId, width, height, background) {\n        return Renderer.buildContext(elementId, Renderer.Backends.CANVAS, width, height, background);\n    }\n    static getSVGContext(elementId, width, height, background) {\n        return Renderer.buildContext(elementId, Renderer.Backends.SVG, width, height, background);\n    }\n    // Draw a dashed line (horizontal, vertical or diagonal\n    // dashPattern = [3,3] draws a 3 pixel dash followed by a three pixel space.\n    // setting the second number to 0 draws a solid line.\n    static drawDashedLine(context, fromX, fromY, toX, toY, dashPattern) {\n        context.beginPath();\n        const dx = toX - fromX;\n        const dy = toY - fromY;\n        const angle = Math.atan2(dy, dx);\n        let x = fromX;\n        let y = fromY;\n        context.moveTo(fromX, fromY);\n        let idx = 0;\n        let draw = true;\n        while (!((dx < 0 ? x <= toX : x >= toX) && (dy < 0 ? y <= toY : y >= toY))) {\n            const dashLength = dashPattern[idx++ % dashPattern.length];\n            const nx = x + Math.cos(angle) * dashLength;\n            x = dx < 0 ? Math.max(toX, nx) : Math.min(toX, nx);\n            const ny = y + Math.sin(angle) * dashLength;\n            y = dy < 0 ? Math.max(toY, ny) : Math.min(toY, ny);\n            if (draw) {\n                context.lineTo(x, y);\n            }\n            else {\n                context.moveTo(x, y);\n            }\n            draw = !draw;\n        }\n        context.closePath();\n        context.stroke();\n    }\n    resize(width, height) {\n        this.ctx.resize(width, height);\n        return this;\n    }\n    getContext() {\n        return this.ctx;\n    }\n}\nRenderer.Backends = RendererBackends;\nRenderer.LineEndType = RendererLineEndType;\n// Used by vexflow_test_helpers.ts\n// Should this be private?\n// Can we do this in a cleaner way?\nRenderer.lastContext = undefined;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Note } from './note';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport var TextJustification;\n(function (TextJustification) {\n    TextJustification[TextJustification[\"LEFT\"] = 1] = \"LEFT\";\n    TextJustification[TextJustification[\"CENTER\"] = 2] = \"CENTER\";\n    TextJustification[TextJustification[\"RIGHT\"] = 3] = \"RIGHT\";\n})(TextJustification || (TextJustification = {}));\n/**\n * `TextNote` is a notation element that is positioned in time. Generally\n * meant for objects that sit above/below the staff and inline with each other.\n * `TextNote` has to be assigned to a `Stave` before rendering by means of `setStave`.\n * Examples of this would be such as dynamics, lyrics, chord changes, etc.\n */\nexport class TextNote extends Note {\n    constructor(noteStruct) {\n        super(noteStruct);\n        this.text = noteStruct.text || '';\n        this.superscript = noteStruct.superscript;\n        this.subscript = noteStruct.subscript;\n        this.setFont(noteStruct.font);\n        this.line = noteStruct.line || 0;\n        this.smooth = noteStruct.smooth || false;\n        this.ignore_ticks = noteStruct.ignore_ticks || false;\n        this.justification = TextJustification.LEFT;\n        // Determine and set initial note width. Note that the text width is\n        // an approximation and isn't very accurate. The only way to accurately\n        // measure the length of text is with `CanvasRenderingContext2D.measureText()`.\n        if (noteStruct.glyph) {\n            const struct = TextNote.GLYPHS[noteStruct.glyph];\n            if (!struct)\n                throw new RuntimeError('Invalid glyph type: ' + noteStruct.glyph);\n            this.glyph = new Glyph(struct.code, 40, { category: 'textNote' });\n            this.setWidth(this.glyph.getMetrics().width);\n        }\n        else {\n            this.glyph = undefined;\n        }\n    }\n    static get CATEGORY() {\n        return Category.TextNote;\n    }\n    /** Glyph data. */\n    static get GLYPHS() {\n        return {\n            segno: {\n                code: 'segno',\n            },\n            tr: {\n                code: 'ornamentTrill',\n            },\n            mordent: {\n                code: 'ornamentMordent',\n            },\n            mordent_upper: {\n                code: 'ornamentShortTrill',\n            },\n            mordent_lower: {\n                code: 'ornamentMordent',\n            },\n            f: {\n                code: 'dynamicForte',\n            },\n            p: {\n                code: 'dynamicPiano',\n            },\n            m: {\n                code: 'dynamicMezzo',\n            },\n            s: {\n                code: 'dynamicSforzando',\n            },\n            z: {\n                code: 'dynamicZ',\n            },\n            coda: {\n                code: 'coda',\n            },\n            pedal_open: {\n                code: 'keyboardPedalPed',\n            },\n            pedal_close: {\n                code: 'keyboardPedalUp',\n            },\n            caesura_straight: {\n                code: 'caesura',\n            },\n            caesura_curved: {\n                code: 'caesuraCurved',\n            },\n            breath: {\n                code: 'breathMarkComma',\n            },\n            tick: {\n                code: 'breathMarkTick',\n            },\n            turn: {\n                code: 'ornamentTurn',\n            },\n            turn_inverted: {\n                code: 'ornamentTurnSlash',\n            },\n        };\n    }\n    /** Set the horizontal justification of the TextNote. */\n    setJustification(just) {\n        this.justification = just;\n        return this;\n    }\n    /** Set the Stave line on which the note should be placed. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Pre-render formatting. */\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        const tickContext = this.checkTickContext(`Can't preformat without a TickContext.`);\n        if (this.smooth) {\n            this.setWidth(0);\n        }\n        else {\n            if (this.glyph) {\n                // Width already set.\n            }\n            else {\n                const ctx = this.checkContext();\n                ctx.setFont(this.textFont);\n                this.setWidth(ctx.measureText(this.text).width);\n            }\n        }\n        if (this.justification === TextJustification.CENTER) {\n            this.leftDisplacedHeadPx = this.width / 2;\n        }\n        else if (this.justification === TextJustification.RIGHT) {\n            this.leftDisplacedHeadPx = this.width;\n        }\n        // We reposition to the center of the note head\n        this.rightDisplacedHeadPx = tickContext.getMetrics().glyphPx / 2;\n        this.preFormatted = true;\n    }\n    /**\n     * Renders the TextNote.\n     * `TextNote` has to be assigned to a `Stave` before rendering by means of `setStave`.\n     */\n    draw() {\n        const ctx = this.checkContext();\n        const stave = this.checkStave();\n        const tickContext = this.checkTickContext(`Can't draw without a TickContext.`);\n        this.setRendered();\n        // Reposition to center of note head\n        let x = this.getAbsoluteX() + tickContext.getMetrics().glyphPx / 2;\n        // Align based on tick-context width.\n        const width = this.getWidth();\n        if (this.justification === TextJustification.CENTER) {\n            x -= width / 2;\n        }\n        else if (this.justification === TextJustification.RIGHT) {\n            x -= width;\n        }\n        let y;\n        if (this.glyph) {\n            y = stave.getYForLine(this.line + -3);\n            this.glyph.render(ctx, x, y);\n        }\n        else {\n            y = stave.getYForLine(this.line + -3);\n            this.applyStyle(ctx);\n            ctx.setFont(this.textFont);\n            ctx.fillText(this.text, x, y);\n            const height = ctx.measureText(this.text).height;\n            // We called this.setFont(...) in the constructor, so we know this.textFont is available.\n            // eslint-disable-next-line\n            const { family, size, weight, style } = this.textFont;\n            // Scale the font size by 1/1.3.\n            const smallerFontSize = Font.scaleSize(size, 0.769231);\n            if (this.superscript) {\n                ctx.setFont(family, smallerFontSize, weight, style);\n                ctx.fillText(this.superscript, x + this.width + 2, y - height / 2.2);\n            }\n            if (this.subscript) {\n                ctx.setFont(family, smallerFontSize, weight, style);\n                ctx.fillText(this.subscript, x + this.width + 2, y + height / 2.2 - 1);\n            }\n            this.restoreStyle(ctx);\n        }\n    }\n}\nTextNote.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: 12,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n};\nTextNote.Justification = TextJustification;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\nimport { Font, FontStyle, FontWeight } from './font';\nimport { StaveModifier } from './stavemodifier';\nimport { Category } from './typeguard';\nexport var VoltaType;\n(function (VoltaType) {\n    VoltaType[VoltaType[\"NONE\"] = 1] = \"NONE\";\n    VoltaType[VoltaType[\"BEGIN\"] = 2] = \"BEGIN\";\n    VoltaType[VoltaType[\"MID\"] = 3] = \"MID\";\n    VoltaType[VoltaType[\"END\"] = 4] = \"END\";\n    VoltaType[VoltaType[\"BEGIN_END\"] = 5] = \"BEGIN_END\";\n})(VoltaType || (VoltaType = {}));\nexport class Volta extends StaveModifier {\n    constructor(type, number, x, y_shift) {\n        super();\n        this.volta = type;\n        this.x = x;\n        this.y_shift = y_shift;\n        this.number = number;\n        this.resetFont();\n    }\n    static get CATEGORY() {\n        return Category.Volta;\n    }\n    static get type() {\n        return VoltaType;\n    }\n    setShiftY(y) {\n        this.y_shift = y;\n        return this;\n    }\n    draw(stave, x) {\n        const ctx = stave.checkContext();\n        this.setRendered();\n        let width = stave.getWidth() - x; // don't include x (offset) for width\n        const top_y = stave.getYForTopText(stave.getNumLines()) + this.y_shift;\n        const vert_height = 1.5 * stave.getSpacingBetweenLines();\n        switch (this.volta) {\n            case VoltaType.BEGIN:\n                ctx.fillRect(this.x + x, top_y, 1, vert_height);\n                break;\n            case VoltaType.END:\n                width -= 5;\n                ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n                break;\n            case VoltaType.BEGIN_END:\n                width -= 3;\n                ctx.fillRect(this.x + x, top_y, 1, vert_height);\n                ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n                break;\n            default:\n                break;\n        }\n        // If the beginning of a volta, draw measure number\n        if (this.volta === VoltaType.BEGIN || this.volta === VoltaType.BEGIN_END) {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            ctx.fillText(this.number, this.x + x + 5, top_y + 15);\n            ctx.restore();\n        }\n        ctx.fillRect(this.x + x, top_y, width, 1);\n        return this;\n    }\n}\nVolta.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: 9,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns\n//\n// This file implements the `StringNumber` class which renders string\n// number annotations beside notes.\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { Renderer } from './renderer';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category, isStaveNote, isStemmableNote } from './typeguard';\nimport { RuntimeError } from './util';\nexport class StringNumber extends Modifier {\n    constructor(number) {\n        super();\n        this.string_number = number;\n        this.setWidth(20); // ???\n        this.position = Modifier.Position.ABOVE; // Default position above stem or note head\n        this.x_shift = 0;\n        this.y_shift = 0;\n        this.text_line = 0;\n        this.stem_offset = 0;\n        this.x_offset = 0; // Horizontal offset from default\n        this.y_offset = 0; // Vertical offset from default\n        this.dashed = true; // true - draw dashed extension  false - no extension\n        this.leg = Renderer.LineEndType.NONE; // draw upward/downward leg at the of extension line\n        this.radius = 8;\n        this.resetFont();\n    }\n    static get CATEGORY() {\n        return Category.StringNumber;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static get metrics() {\n        return Tables.currentMusicFont().getMetrics().glyphs.stringNumber;\n    }\n    // ## Static Methods\n    // Arrange string numbers inside a `ModifierContext`\n    static format(nums, state) {\n        const left_shift = state.left_shift;\n        const right_shift = state.right_shift;\n        const num_spacing = 1;\n        if (!nums || nums.length === 0)\n            return false;\n        const nums_list = [];\n        let prev_note = null;\n        let shift_left = 0;\n        let shift_right = 0;\n        const modLines = 0;\n        for (let i = 0; i < nums.length; ++i) {\n            const num = nums[i];\n            const note = num.getNote();\n            const pos = num.getPosition();\n            if (!isStaveNote(note)) {\n                throw new RuntimeError('NoStaveNote');\n            }\n            const index = num.checkIndex();\n            const props = note.getKeyProps()[index];\n            const mc = note.getModifierContext();\n            const verticalSpaceNeeded = (num.radius * 2) / Tables.STAVE_LINE_DISTANCE + 0.5;\n            if (mc) {\n                if (pos === ModifierPosition.ABOVE) {\n                    num.text_line = mc.getState().top_text_line;\n                    state.top_text_line += verticalSpaceNeeded;\n                }\n                else if (pos === ModifierPosition.BELOW) {\n                    num.text_line = mc.getState().text_line;\n                    state.text_line += verticalSpaceNeeded;\n                }\n            }\n            if (note !== prev_note) {\n                for (let n = 0; n < note.keys.length; ++n) {\n                    if (left_shift === 0) {\n                        shift_left = Math.max(note.getLeftDisplacedHeadPx(), shift_left);\n                    }\n                    if (right_shift === 0) {\n                        shift_right = Math.max(note.getRightDisplacedHeadPx(), shift_right);\n                    }\n                }\n                prev_note = note;\n            }\n            const glyphLine = modLines === 0 ? props.line : modLines;\n            nums_list.push({\n                pos,\n                note,\n                num,\n                line: glyphLine,\n                shiftL: shift_left,\n                shiftR: shift_right,\n            });\n        }\n        // Sort string numbers by line number.\n        nums_list.sort((a, b) => b.line - a.line);\n        let num_shiftR = 0;\n        let x_widthL = 0;\n        let x_widthR = 0;\n        let last_line = null;\n        let last_note = null;\n        for (let i = 0; i < nums_list.length; ++i) {\n            let num_shift = 0;\n            const note = nums_list[i].note;\n            const pos = nums_list[i].pos;\n            const num = nums_list[i].num;\n            const line = nums_list[i].line;\n            const shiftR = nums_list[i].shiftR;\n            // Reset the position of the string number every line.\n            if (line !== last_line || note !== last_note) {\n                num_shiftR = right_shift + shiftR;\n            }\n            const num_width = num.getWidth() + num_spacing;\n            if (pos === Modifier.Position.LEFT) {\n                num.setXShift(left_shift);\n                num_shift = shift_left + num_width; // spacing\n                x_widthL = num_shift > x_widthL ? num_shift : x_widthL;\n            }\n            else if (pos === Modifier.Position.RIGHT) {\n                num.setXShift(num_shiftR);\n                num_shift += num_width; // spacing\n                x_widthR = num_shift > x_widthR ? num_shift : x_widthR;\n            }\n            last_line = line;\n            last_note = note;\n        }\n        state.left_shift += x_widthL;\n        state.right_shift += x_widthR;\n        return true;\n    }\n    setLineEndType(leg) {\n        if (leg >= Renderer.LineEndType.NONE && leg <= Renderer.LineEndType.DOWN) {\n            this.leg = leg;\n        }\n        return this;\n    }\n    setStringNumber(number) {\n        this.string_number = number;\n        return this;\n    }\n    setOffsetX(x) {\n        this.x_offset = x;\n        return this;\n    }\n    setOffsetY(y) {\n        this.y_offset = y;\n        return this;\n    }\n    setLastNote(note) {\n        this.last_note = note;\n        return this;\n    }\n    setDashed(dashed) {\n        this.dashed = dashed;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index);\n        const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n        let dot_x = start.x + this.x_shift + this.x_offset;\n        let stem_ext = {};\n        if (note.hasStem()) {\n            stem_ext = note.checkStem().getExtents();\n        }\n        let dot_y = start.y + this.y_shift + this.y_offset;\n        switch (this.position) {\n            case Modifier.Position.ABOVE:\n                {\n                    const ys = note.getYs();\n                    dot_y = ys.reduce((a, b) => (a < b ? a : b));\n                    if (note.hasStem() && stemDirection == Stem.UP) {\n                        dot_y = stem_ext.topY + StringNumber.metrics.stemPadding;\n                    }\n                    dot_y -= this.radius + StringNumber.metrics.verticalPadding + this.text_line * Tables.STAVE_LINE_DISTANCE;\n                }\n                break;\n            case Modifier.Position.BELOW:\n                {\n                    const ys = note.getYs();\n                    dot_y = ys.reduce((a, b) => (a > b ? a : b));\n                    if (note.hasStem() && stemDirection == Stem.DOWN) {\n                        dot_y = stem_ext.topY - StringNumber.metrics.stemPadding;\n                    }\n                    dot_y += this.radius + StringNumber.metrics.verticalPadding + this.text_line * Tables.STAVE_LINE_DISTANCE;\n                }\n                break;\n            case Modifier.Position.LEFT:\n                dot_x -= this.radius / 2 + StringNumber.metrics.leftPadding;\n                break;\n            case Modifier.Position.RIGHT:\n                dot_x += this.radius / 2 + StringNumber.metrics.rightPadding;\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', `The position ${this.position} is invalid`);\n        }\n        ctx.save();\n        ctx.beginPath();\n        ctx.arc(dot_x, dot_y, this.radius, 0, Math.PI * 2, false);\n        ctx.setLineWidth(1.5);\n        ctx.stroke();\n        ctx.setFont(this.textFont);\n        const x = dot_x - ctx.measureText(this.string_number).width / 2;\n        ctx.fillText('' + this.string_number, x, dot_y + 4.5);\n        const lastNote = this.last_note;\n        if (isStemmableNote(lastNote)) {\n            // Only StemmableNote objects have getStemX().\n            const end = lastNote.getStemX() - note.getX() + 5;\n            ctx.setStrokeStyle('#000000');\n            ctx.setLineCap('round');\n            ctx.setLineWidth(0.6);\n            if (this.dashed) {\n                Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 3]);\n            }\n            else {\n                Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 0]);\n            }\n            let len;\n            let pattern;\n            switch (this.leg) {\n                case Renderer.LineEndType.UP:\n                    len = -10;\n                    pattern = this.dashed ? [3, 3] : [3, 0];\n                    Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\n                    break;\n                case Renderer.LineEndType.DOWN:\n                    len = 10;\n                    pattern = this.dashed ? [3, 3] : [3, 0];\n                    Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\n                    break;\n                default:\n                    break;\n            }\n        }\n        ctx.restore();\n    }\n}\nStringNumber.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: Font.SIZE,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns\n//\n// This file implements the `Stroke` class which renders chord strokes\n// that can be arpeggiated, brushed, rasquedo, etc.\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Category, isNote, isStaveNote, isTabNote } from './typeguard';\nimport { RuntimeError } from './util';\nexport class Stroke extends Modifier {\n    constructor(type, options) {\n        super();\n        this.options = Object.assign({ all_voices: true }, options);\n        // multi voice - span stroke across all voices if true\n        this.all_voices = this.options.all_voices;\n        // multi voice - end note of stroke, set in draw()\n        this.type = type;\n        this.position = Modifier.Position.LEFT;\n        this.render_options = {\n            font_scale: 38,\n        };\n        this.resetFont();\n        this.setXShift(0);\n        this.setWidth(10);\n    }\n    static get CATEGORY() {\n        return Category.Stroke;\n    }\n    // Arrange strokes inside `ModifierContext`\n    static format(strokes, state) {\n        const left_shift = state.left_shift;\n        const stroke_spacing = 0;\n        if (!strokes || strokes.length === 0)\n            return false;\n        const strokeList = strokes.map((stroke) => {\n            const note = stroke.getNote();\n            const index = stroke.checkIndex();\n            if (isStaveNote(note)) {\n                // Only StaveNote objects have getKeyProps().\n                const { line } = note.getKeyProps()[index];\n                const shift = note.getLeftDisplacedHeadPx();\n                return { line, shift, stroke };\n            }\n            else if (isTabNote(note)) {\n                // Only TabNote objects have getPositions().\n                const { str: string } = note.getPositions()[index];\n                return { line: string, shift: 0, stroke };\n            }\n            else {\n                throw new RuntimeError('Internal', 'Unexpected instance.');\n            }\n        });\n        const strokeShift = left_shift;\n        // There can only be one stroke .. if more than one, they overlay each other\n        const xShift = strokeList.reduce((xShift, { stroke, shift }) => {\n            stroke.setXShift(strokeShift + shift);\n            return Math.max(stroke.getWidth() + stroke_spacing, xShift);\n        }, 0);\n        state.left_shift += xShift;\n        return true;\n    }\n    getPosition() {\n        return this.position;\n    }\n    addEndNote(note) {\n        this.note_end = note;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index);\n        let ys = note.getYs();\n        let topY = start.y;\n        let botY = start.y;\n        const x = start.x - 5;\n        const line_space = note.checkStave().getSpacingBetweenLines();\n        const notes = this.checkModifierContext().getMembers(note.getCategory());\n        for (let i = 0; i < notes.length; i++) {\n            const note = notes[i];\n            if (isNote(note)) {\n                // Only Note objects have getYs().\n                // note is an instance of either StaveNote or TabNote.\n                ys = note.getYs();\n                for (let n = 0; n < ys.length; n++) {\n                    if (this.note === notes[i] || this.all_voices) {\n                        topY = Math.min(topY, ys[n]);\n                        botY = Math.max(botY, ys[n]);\n                    }\n                }\n            }\n        }\n        let arrow = '';\n        let arrow_shift_x = 0;\n        let arrow_y = 0;\n        let text_shift_x = 0;\n        let text_y = 0;\n        switch (this.type) {\n            case Stroke.Type.BRUSH_DOWN:\n                arrow = 'arrowheadBlackUp';\n                arrow_shift_x = -3;\n                arrow_y = topY - line_space / 2 + 10;\n                botY += line_space / 2;\n                break;\n            case Stroke.Type.BRUSH_UP:\n                arrow = 'arrowheadBlackDown';\n                arrow_shift_x = 0.5;\n                arrow_y = botY + line_space / 2;\n                topY -= line_space / 2;\n                break;\n            case Stroke.Type.ROLL_DOWN:\n            case Stroke.Type.RASQUEDO_DOWN:\n                arrow = 'arrowheadBlackUp';\n                arrow_shift_x = -3;\n                text_shift_x = this.x_shift + arrow_shift_x - 2;\n                if (isStaveNote(note)) {\n                    topY += 1.5 * line_space;\n                    if ((botY - topY) % 2 !== 0) {\n                        botY += 0.5 * line_space;\n                    }\n                    else {\n                        botY += line_space;\n                    }\n                    arrow_y = topY - line_space;\n                    text_y = botY + line_space + 2;\n                }\n                else {\n                    topY += 1.5 * line_space;\n                    botY += line_space;\n                    arrow_y = topY - 0.75 * line_space;\n                    text_y = botY + 0.25 * line_space;\n                }\n                break;\n            case Stroke.Type.ROLL_UP:\n            case Stroke.Type.RASQUEDO_UP:\n                arrow = 'arrowheadBlackDown';\n                arrow_shift_x = -4;\n                text_shift_x = this.x_shift + arrow_shift_x - 1;\n                if (isStaveNote(note)) {\n                    arrow_y = line_space / 2;\n                    topY += 0.5 * line_space;\n                    if ((botY - topY) % 2 === 0) {\n                        botY += line_space / 2;\n                    }\n                    arrow_y = botY + 0.5 * line_space;\n                    text_y = topY - 1.25 * line_space;\n                }\n                else {\n                    topY += 0.25 * line_space;\n                    botY += 0.5 * line_space;\n                    arrow_y = botY + 0.25 * line_space;\n                    text_y = topY - line_space;\n                }\n                break;\n            case Stroke.Type.ARPEGGIO_DIRECTIONLESS:\n                topY += 0.5 * line_space;\n                botY += line_space; // * 0.5 can lead to slight underlap instead of overlap sometimes\n                break;\n            default:\n                throw new RuntimeError('InvalidType', `The stroke type ${this.type} does not exist`);\n        }\n        let strokeLine = 'straight';\n        // Draw the stroke\n        if (this.type === Stroke.Type.BRUSH_DOWN || this.type === Stroke.Type.BRUSH_UP) {\n            ctx.fillRect(x + this.x_shift, topY, 1, botY - topY);\n        }\n        else {\n            strokeLine = 'wiggly';\n            if (isStaveNote(note)) {\n                for (let i = topY; i <= botY; i += line_space) {\n                    Glyph.renderGlyph(ctx, x + this.x_shift - 4, i, this.render_options.font_scale, 'vexWiggleArpeggioUp');\n                }\n            }\n            else {\n                let i;\n                for (i = topY; i <= botY; i += 10) {\n                    Glyph.renderGlyph(ctx, x + this.x_shift - 4, i, this.render_options.font_scale, 'vexWiggleArpeggioUp');\n                }\n                if (this.type === Stroke.Type.RASQUEDO_DOWN) {\n                    text_y = i + 0.25 * line_space;\n                }\n            }\n        }\n        if (this.type === Stroke.Type.ARPEGGIO_DIRECTIONLESS) {\n            return; // skip drawing arrow heads or text\n        }\n        // Draw the arrow head\n        Glyph.renderGlyph(ctx, x + this.x_shift + arrow_shift_x, arrow_y, this.render_options.font_scale, arrow, {\n            category: `stroke.${arrow}.${strokeLine}`,\n        });\n        // Draw the rasquedo \"R\"\n        if (this.type === Stroke.Type.RASQUEDO_DOWN || this.type === Stroke.Type.RASQUEDO_UP) {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            ctx.fillText('R', x + text_shift_x, text_y);\n            ctx.restore();\n        }\n    }\n}\nStroke.Type = {\n    BRUSH_DOWN: 1,\n    BRUSH_UP: 2,\n    ROLL_DOWN: 3,\n    ROLL_UP: 4,\n    RASQUEDO_DOWN: 5,\n    RASQUEDO_UP: 6,\n    ARPEGGIO_DIRECTIONLESS: 7, // Arpeggiated chord without upwards or downwards arrow\n};\nStroke.TEXT_FONT = {\n    family: Font.SERIF,\n    size: Font.SIZE,\n    weight: FontWeight.BOLD,\n    style: FontStyle.ITALIC,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Bend } from './bend';\nimport { Modifier } from './modifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\n/** `Vibrato` implements diverse vibratos. */\nexport class Vibrato extends Modifier {\n    constructor() {\n        super();\n        this.position = Modifier.Position.RIGHT;\n        this.render_options = {\n            harsh: false,\n            vibrato_width: 20,\n            wave_height: 6,\n            wave_width: 4,\n            wave_girth: 2,\n        };\n        this.setVibratoWidth(this.render_options.vibrato_width);\n    }\n    static get CATEGORY() {\n        return Category.Vibrato;\n    }\n    /** Arrange vibratos inside a `ModifierContext`. */\n    static format(vibratos, state, context) {\n        if (!vibratos || vibratos.length === 0)\n            return false;\n        // Vibratos are always on top.\n        let text_line = state.top_text_line;\n        let width = 0;\n        let shift = state.right_shift - 7;\n        // If there's a bend, drop the text line\n        const bends = context.getMembers(Bend.CATEGORY);\n        if (bends && bends.length > 0) {\n            const bendHeight = bends.map((bb) => bb.getTextHeight()).reduce((a, b) => (a > b ? a : b)) / Tables.STAVE_LINE_DISTANCE;\n            text_line = text_line - (bendHeight + 1);\n        }\n        else {\n            state.top_text_line += 1;\n        }\n        // Format Vibratos\n        for (let i = 0; i < vibratos.length; ++i) {\n            const vibrato = vibratos[i];\n            vibrato.setXShift(shift);\n            vibrato.setTextLine(text_line);\n            width += vibrato.getWidth();\n            shift += width;\n        }\n        state.right_shift += width;\n        return true;\n    }\n    /** Set harsh vibrato. */\n    setHarsh(harsh) {\n        this.render_options.harsh = harsh;\n        return this;\n    }\n    /** Set vibrato width in pixels. */\n    setVibratoWidth(width) {\n        this.render_options.vibrato_width = width;\n        this.setWidth(width);\n        return this;\n    }\n    /** Draw the vibrato on the rendering context. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(Modifier.Position.RIGHT, this.index);\n        const vx = start.x + this.x_shift;\n        const vy = note.getYForTopText(this.text_line) + 2;\n        Vibrato.renderVibrato(ctx, vx, vy, this.render_options);\n    }\n    /**\n     * Static rendering method that can be called from\n     * other classes (e.g. VibratoBracket).\n     */\n    static renderVibrato(ctx, x, y, opts) {\n        const { harsh, vibrato_width, wave_width, wave_girth, wave_height } = opts;\n        const num_waves = vibrato_width / wave_width;\n        ctx.beginPath();\n        let i;\n        if (harsh) {\n            ctx.moveTo(x, y + wave_girth + 1);\n            for (i = 0; i < num_waves / 2; ++i) {\n                ctx.lineTo(x + wave_width, y - wave_height / 2);\n                x += wave_width;\n                ctx.lineTo(x + wave_width, y + wave_height / 2);\n                x += wave_width;\n            }\n            for (i = 0; i < num_waves / 2; ++i) {\n                ctx.lineTo(x - wave_width, y - wave_height / 2 + wave_girth + 1);\n                x -= wave_width;\n                ctx.lineTo(x - wave_width, y + wave_height / 2 + wave_girth + 1);\n                x -= wave_width;\n            }\n            ctx.fill();\n        }\n        else {\n            ctx.moveTo(x, y + wave_girth);\n            for (i = 0; i < num_waves / 2; ++i) {\n                ctx.quadraticCurveTo(x + wave_width / 2, y - wave_height / 2, x + wave_width, y);\n                x += wave_width;\n                ctx.quadraticCurveTo(x + wave_width / 2, y + wave_height / 2, x + wave_width, y);\n                x += wave_width;\n            }\n            for (i = 0; i < num_waves / 2; ++i) {\n                ctx.quadraticCurveTo(x - wave_width / 2, y + wave_height / 2 + wave_girth, x - wave_width, y + wave_girth);\n                x -= wave_width;\n                ctx.quadraticCurveTo(x - wave_width / 2, y - wave_height / 2 + wave_girth, x - wave_width, y + wave_girth);\n                x -= wave_width;\n            }\n            ctx.fill();\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This class implements various types of members to notes (e.g. bends,\n// fingering positions etc.)\nimport { Accidental } from './accidental';\nimport { Annotation } from './annotation';\nimport { Articulation } from './articulation';\nimport { Bend } from './bend';\nimport { ChordSymbol } from './chordsymbol';\nimport { Dot } from './dot';\nimport { FretHandFinger } from './frethandfinger';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { NoteSubGroup } from './notesubgroup';\nimport { Ornament } from './ornament';\nimport { Parenthesis } from './parenthesis';\nimport { StaveNote } from './stavenote';\nimport { StringNumber } from './stringnumber';\nimport { Stroke } from './strokes';\nimport { Category } from './typeguard';\nimport { log, RuntimeError } from './util';\nimport { Vibrato } from './vibrato';\n// To enable logging for this class. Set `Vex.Flow.ModifierContext.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (ModifierContext.DEBUG)\n        log('Vex.Flow.ModifierContext', args);\n}\nexport class ModifierContext {\n    constructor() {\n        // Formatting data.\n        this.state = {\n            left_shift: 0,\n            right_shift: 0,\n            text_line: 0,\n            top_text_line: 0,\n        };\n        // Current members\n        this.members = {};\n        this.preFormatted = false;\n        this.postFormatted = false;\n        this.formatted = false;\n        this.width = 0;\n        this.spacing = 0;\n    }\n    addModifier(member) {\n        L('addModifier is deprecated, use addMember instead.');\n        return this.addMember(member);\n    }\n    /**\n     * this.members maps CATEGORY strings to arrays of Tickable | Modifier | StaveNote | TabNote.\n     * Here we add a new member to this.members, and create a new array if needed.\n     * @param member\n     * @returns this\n     */\n    addMember(member) {\n        const category = member.getCategory();\n        if (!this.members[category]) {\n            this.members[category] = [];\n        }\n        this.members[category].push(member);\n        member.setModifierContext(this);\n        this.preFormatted = false;\n        return this;\n    }\n    /**\n     * @deprecated\n     */\n    getModifiers(category) {\n        L('getModifiers is deprecated, use getMembers instead.');\n        return this.getMembers(category);\n    }\n    getMembers(category) {\n        var _a;\n        return (_a = this.members[category]) !== null && _a !== void 0 ? _a : [];\n    }\n    getWidth() {\n        return this.width;\n    }\n    getLeftShift() {\n        return this.state.left_shift;\n    }\n    getRightShift() {\n        return this.state.right_shift;\n    }\n    getState() {\n        return this.state;\n    }\n    getMetrics() {\n        if (!this.formatted) {\n            throw new RuntimeError('UnformattedMember', 'Unformatted member has no metrics.');\n        }\n        return {\n            width: this.state.left_shift + this.state.right_shift + this.spacing,\n            spacing: this.spacing,\n        };\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        L('Preformatting ModifierContext');\n        const state = this.state;\n        const members = this.members;\n        // The ordering below determines when different members are formatted and rendered.\n        StaveNote.format(members[Category.StaveNote], state);\n        Parenthesis.format(members[Category.Parenthesis], state);\n        Dot.format(members[Category.Dot], state);\n        FretHandFinger.format(members[Category.FretHandFinger], state);\n        Accidental.format(members[Category.Accidental], state);\n        Stroke.format(members[Category.Stroke], state);\n        GraceNoteGroup.format(members[Category.GraceNoteGroup], state);\n        NoteSubGroup.format(members[Category.NoteSubGroup], state);\n        StringNumber.format(members[Category.StringNumber], state);\n        Articulation.format(members[Category.Articulation], state);\n        Ornament.format(members[Category.Ornament], state);\n        Annotation.format(members[Category.Annotation], state);\n        ChordSymbol.format(members[Category.ChordSymbol], state);\n        Bend.format(members[Category.Bend], state);\n        Vibrato.format(members[Category.Vibrato], state, this);\n        // Update width of this member context\n        this.width = state.left_shift + state.right_shift;\n        this.preFormatted = true;\n    }\n    postFormat() {\n        if (this.postFormatted)\n            return;\n        L('Postformatting ModifierContext');\n        // If post-formatting is required for an element, add more lines below.\n        StaveNote.postFormat(this.getMembers(Category.StaveNote));\n    }\n}\nModifierContext.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna Cheppudira 2013.\n// Co-author: Benjamin W. Bohl\n// MIT License\nimport { Glyph } from './glyph';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Clef.DEBUG)\n        log('Vex.Flow.Clef', args);\n}\n/**\n * Clef implements various types of clefs that can be rendered on a stave.\n *\n * See `tests/clef_tests.ts` for usage examples.\n */\nexport class Clef extends StaveModifier {\n    /** Create a new clef. */\n    constructor(type, size, annotation) {\n        super();\n        /**\n         * The attribute `clef` must be a key from\n         * `Clef.types`\n         */\n        this.clef = Clef.types['treble'];\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.setType(type, size, annotation);\n        this.setWidth(Tables.currentMusicFont().lookupMetric(`clef.${this.size}.width`));\n        L('Creating clef:', type);\n    }\n    static get CATEGORY() {\n        return Category.Clef;\n    }\n    /**\n     * Every clef name is associated with a glyph code from the font file\n     * and a default stave line number.\n     */\n    static get types() {\n        return {\n            treble: {\n                code: 'gClef',\n                line: 3,\n                point: 0,\n            },\n            bass: {\n                code: 'fClef',\n                line: 1,\n                point: 0,\n            },\n            alto: {\n                code: 'cClef',\n                line: 2,\n                point: 0,\n            },\n            tenor: {\n                code: 'cClef',\n                line: 1,\n                point: 0,\n            },\n            percussion: {\n                code: 'restMaxima',\n                line: 2,\n                point: 0,\n            },\n            soprano: {\n                code: 'cClef',\n                line: 4,\n                point: 0,\n            },\n            'mezzo-soprano': {\n                code: 'cClef',\n                line: 3,\n                point: 0,\n            },\n            'baritone-c': {\n                code: 'cClef',\n                line: 0,\n                point: 0,\n            },\n            'baritone-f': {\n                code: 'fClef',\n                line: 2,\n                point: 0,\n            },\n            subbass: {\n                code: 'fClef',\n                line: 0,\n                point: 0,\n            },\n            french: {\n                code: 'gClef',\n                line: 4,\n                point: 0,\n            },\n            tab: {\n                code: '6stringTabClef',\n                point: 0,\n            },\n        };\n    }\n    /** Set clef type, size and annotation. */\n    setType(type, size, annotation) {\n        this.type = type;\n        this.clef = Clef.types[type];\n        if (size === undefined) {\n            this.size = 'default';\n        }\n        else {\n            this.size = size;\n        }\n        const musicFont = Tables.currentMusicFont();\n        this.clef.point = musicFont.lookupMetric(`clef.${this.size}.point`, 0);\n        this.glyph = new Glyph(this.clef.code, this.clef.point, {\n            category: `clef.${this.clef.code}.${this.size}`,\n        });\n        // If an annotation, such as 8va, is specified, add it to the Clef object.\n        if (annotation !== undefined) {\n            const code = musicFont.lookupMetric(`clef.annotations.${annotation}.smuflCode`);\n            const point = musicFont.lookupMetric(`clef.annotations.${annotation}.${this.size}.point`);\n            const line = musicFont.lookupMetric(`clef.annotations.${annotation}.${this.size}.${this.type}.line`);\n            const x_shift = musicFont.lookupMetric(`clef.annotations.${annotation}.${this.size}.${this.type}.shiftX`);\n            this.annotation = { code, point, line, x_shift };\n            this.attachment = new Glyph(this.annotation.code, this.annotation.point);\n            this.attachment.metrics.x_max = 0;\n            this.attachment.setXShift(this.annotation.x_shift);\n        }\n        else {\n            this.annotation = undefined;\n        }\n        return this;\n    }\n    /** Get clef width. */\n    getWidth() {\n        if (this.type === 'tab') {\n            defined(this.stave, 'ClefError', \"Can't get width without stave.\");\n        }\n        return this.width;\n    }\n    /** Set associated stave. */\n    setStave(stave) {\n        this.stave = stave;\n        if (this.type === 'tab') {\n            const glyph = defined(this.glyph, 'ClefError', \"Can't set stave without glyph.\");\n            const numLines = this.stave.getNumLines();\n            const musicFont = Tables.currentMusicFont();\n            const point = musicFont.lookupMetric(`clef.lineCount.${numLines}.point`);\n            const shiftY = musicFont.lookupMetric(`clef.lineCount.${numLines}.shiftY`);\n            glyph.setPoint(point);\n            glyph.setYShift(shiftY);\n        }\n        return this;\n    }\n    /** Render clef. */\n    draw() {\n        const glyph = defined(this.glyph, 'ClefError', \"Can't draw clef without glyph.\");\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        this.setRendered();\n        ctx.openGroup('clef', this.getAttribute('id'));\n        glyph.setStave(stave);\n        glyph.setContext(ctx);\n        if (this.clef.line !== undefined) {\n            this.placeGlyphOnLine(glyph, stave, this.clef.line);\n        }\n        glyph.renderToStave(this.x);\n        if (this.annotation !== undefined && this.attachment !== undefined) {\n            this.placeGlyphOnLine(this.attachment, stave, this.annotation.line);\n            this.attachment.setStave(stave);\n            this.attachment.setContext(ctx);\n            this.attachment.renderToStave(this.x);\n        }\n        ctx.closeGroup();\n    }\n}\n/** To enable logging for this class, set `Vex.Flow.Clef.DEBUG` to `true`. */\nClef.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// ## Description\n//\n// This file implements key signatures. A key signature sits on a stave\n// and indicates the notes with implicit accidentals.\nimport { Glyph } from './glyph';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined } from './util';\nexport class KeySignature extends StaveModifier {\n    // Create a new Key Signature based on a `key_spec`\n    constructor(keySpec, cancelKeySpec, alterKeySpec) {\n        super();\n        this.accList = [];\n        this.setKeySig(keySpec, cancelKeySpec, alterKeySpec);\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.glyphFontScale = 38; // TODO(0xFE): Should this match StaveNote?\n        this.glyphs = [];\n        this.xPositions = []; // relative to this.x\n        this.paddingForced = false;\n    }\n    static get CATEGORY() {\n        return Category.KeySignature;\n    }\n    // Add an accidental glyph to the `KeySignature` instance which represents\n    // the provided `acc`. If `nextAcc` is also provided, the appropriate\n    // spacing will be included in the glyph's position\n    convertToGlyph(acc, nextAcc) {\n        const accGlyphData = Tables.accidentalCodes(acc.type);\n        const glyph = new Glyph(accGlyphData.code, this.glyphFontScale);\n        // Determine spacing between current accidental and the next accidental\n        let extraWidth = 1;\n        if (acc.type === 'n' && nextAcc) {\n            const spacing = KeySignature.accidentalSpacing[nextAcc.type];\n            if (spacing) {\n                const isAbove = nextAcc.line >= acc.line;\n                extraWidth = isAbove ? spacing.above : spacing.below;\n            }\n        }\n        // Place the glyph on the stave\n        this.placeGlyphOnLine(glyph, this.checkStave(), acc.line);\n        this.glyphs.push(glyph);\n        const xPosition = this.xPositions[this.xPositions.length - 1];\n        const glyphWidth = glyph.getMetrics().width + extraWidth;\n        // Store the next accidental's x position\n        this.xPositions.push(xPosition + glyphWidth);\n        // Expand size of key signature\n        this.width += glyphWidth;\n    }\n    // Cancel out a key signature provided in the `spec` parameter. This will\n    // place appropriate natural accidentals before the key signature.\n    cancelKey(spec) {\n        this.formatted = false;\n        this.cancelKeySpec = spec;\n        return this;\n    }\n    convertToCancelAccList(spec) {\n        // Get the accidental list for the cancelled key signature\n        const cancel_accList = Tables.keySignature(spec);\n        // If the cancelled key has a different accidental type, ie: # vs b\n        const different_types = this.accList.length > 0 && cancel_accList.length > 0 && cancel_accList[0].type !== this.accList[0].type;\n        // Determine how many naturals needed to add\n        const naturals = different_types ? cancel_accList.length : cancel_accList.length - this.accList.length;\n        // Return if no naturals needed\n        if (naturals < 1)\n            return undefined;\n        // Get the line position for each natural\n        const cancelled = [];\n        for (let i = 0; i < naturals; i++) {\n            let index = i;\n            if (!different_types) {\n                index = cancel_accList.length - naturals + i;\n            }\n            const acc = cancel_accList[index];\n            cancelled.push({ type: 'n', line: acc.line });\n        }\n        // Combine naturals with main accidental list for the key signature\n        this.accList = cancelled.concat(this.accList);\n        return {\n            accList: cancelled,\n            type: cancel_accList[0].type,\n        };\n    }\n    // Deprecated\n    addToStave(stave) {\n        this.paddingForced = true;\n        stave.addModifier(this);\n        return this;\n    }\n    // Apply the accidental staff line placement based on the `clef` and\n    // the  accidental `type` for the key signature ('# or 'b').\n    convertAccLines(clef, type, accList = this.accList) {\n        let offset = 0.0; // if clef === \"treble\"\n        let customLines; // when clef doesn't follow treble key sig shape\n        switch (clef) {\n            // Treble & Subbass both have offsets of 0, so are not included.\n            case 'soprano':\n                if (type === '#')\n                    customLines = [2.5, 0.5, 2, 0, 1.5, -0.5, 1];\n                else\n                    offset = -1;\n                break;\n            case 'mezzo-soprano':\n                if (type === 'b')\n                    customLines = [0, 2, 0.5, 2.5, 1, 3, 1.5];\n                else\n                    offset = 1.5;\n                break;\n            case 'alto':\n                offset = 0.5;\n                break;\n            case 'tenor':\n                if (type === '#')\n                    customLines = [3, 1, 2.5, 0.5, 2, 0, 1.5];\n                else\n                    offset = -0.5;\n                break;\n            case 'baritone-f':\n            case 'baritone-c':\n                if (type === 'b')\n                    customLines = [0.5, 2.5, 1, 3, 1.5, 3.5, 2];\n                else\n                    offset = 2;\n                break;\n            case 'bass':\n            case 'french':\n                offset = 1;\n                break;\n            default:\n                break;\n        }\n        // If there's a special case, assign those lines/spaces:\n        let i;\n        if (typeof customLines !== 'undefined') {\n            for (i = 0; i < accList.length; ++i) {\n                accList[i].line = customLines[i];\n            }\n        }\n        else if (offset !== 0) {\n            for (i = 0; i < accList.length; ++i) {\n                accList[i].line += offset;\n            }\n        }\n    }\n    getPadding(index) {\n        if (!this.formatted)\n            this.format();\n        return this.glyphs.length === 0 || (!this.paddingForced && index < 2) ? 0 : this.padding;\n    }\n    getWidth() {\n        if (!this.formatted)\n            this.format();\n        return this.width;\n    }\n    setKeySig(keySpec, cancelKeySpec, alterKeySpec) {\n        this.formatted = false;\n        this.keySpec = keySpec;\n        this.cancelKeySpec = cancelKeySpec;\n        this.alterKeySpec = alterKeySpec;\n        return this;\n    }\n    // Alter the accidentals of a key spec one by one.\n    // Each alteration is a new accidental that replaces the\n    // original accidental (or the canceled one).\n    alterKey(alterKeySpec) {\n        this.formatted = false;\n        this.alterKeySpec = alterKeySpec;\n        return this;\n    }\n    convertToAlterAccList(alterKeySpec) {\n        const max = Math.min(alterKeySpec.length, this.accList.length);\n        for (let i = 0; i < max; ++i) {\n            if (alterKeySpec[i]) {\n                this.accList[i].type = alterKeySpec[i];\n            }\n        }\n    }\n    format() {\n        const stave = this.checkStave();\n        this.width = 0;\n        this.glyphs = [];\n        this.xPositions = [0]; // initialize with initial x position\n        this.accList = Tables.keySignature(defined(this.keySpec));\n        const accList = this.accList;\n        const firstAccidentalType = accList.length > 0 ? accList[0].type : undefined;\n        let cancelAccList;\n        if (this.cancelKeySpec) {\n            cancelAccList = this.convertToCancelAccList(this.cancelKeySpec);\n        }\n        if (this.alterKeySpec) {\n            this.convertToAlterAccList(this.alterKeySpec);\n        }\n        if (this.accList.length > 0) {\n            const clef = (this.position === StaveModifierPosition.END ? stave.getEndClef() : stave.getClef()) || stave.getClef();\n            if (cancelAccList) {\n                this.convertAccLines(clef, cancelAccList.type, cancelAccList.accList);\n            }\n            this.convertAccLines(clef, firstAccidentalType, accList);\n            for (let i = 0; i < this.accList.length; ++i) {\n                this.convertToGlyph(this.accList[i], this.accList[i + 1]);\n            }\n        }\n        this.formatted = true;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        if (!this.formatted)\n            this.format();\n        this.setRendered();\n        ctx.openGroup('keysignature', this.getAttribute('id'));\n        for (let i = 0; i < this.glyphs.length; i++) {\n            const glyph = this.glyphs[i];\n            const x = this.x + this.xPositions[i];\n            glyph.setStave(stave);\n            glyph.setContext(ctx);\n            glyph.renderToStave(x);\n        }\n        ctx.closeGroup();\n    }\n}\n// Space between natural and following accidental depending\n// on vertical position\nKeySignature.accidentalSpacing = {\n    '#': {\n        above: 6,\n        below: 4,\n    },\n    b: {\n        above: 4,\n        below: 7,\n    },\n    n: {\n        above: 4,\n        below: 1,\n    },\n    '##': {\n        above: 6,\n        below: 4,\n    },\n    bb: {\n        above: 4,\n        below: 7,\n    },\n    db: {\n        above: 4,\n        below: 7,\n    },\n    d: {\n        above: 4,\n        below: 7,\n    },\n    bbs: {\n        above: 4,\n        below: 7,\n    },\n    '++': {\n        above: 6,\n        below: 4,\n    },\n    '+': {\n        above: 6,\n        below: 4,\n    },\n    '+-': {\n        above: 6,\n        below: 4,\n    },\n    '++-': {\n        above: 6,\n        below: 4,\n    },\n    bs: {\n        above: 4,\n        below: 10,\n    },\n    bss: {\n        above: 4,\n        below: 10,\n    },\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { StaveModifier } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nexport class Repetition extends StaveModifier {\n    constructor(type, x, y_shift) {\n        super();\n        this.symbol_type = type;\n        this.x = x;\n        this.x_shift = 0;\n        this.y_shift = y_shift;\n        this.resetFont();\n    }\n    static get CATEGORY() {\n        return Category.Repetition;\n    }\n    setShiftX(x) {\n        this.x_shift = x;\n        return this;\n    }\n    setShiftY(y) {\n        this.y_shift = y;\n        return this;\n    }\n    draw(stave, x) {\n        this.setRendered();\n        switch (this.symbol_type) {\n            case Repetition.type.CODA_RIGHT:\n                this.drawCodaFixed(stave, x + stave.getWidth());\n                break;\n            case Repetition.type.CODA_LEFT:\n                this.drawSymbolText(stave, x, 'Coda', true);\n                break;\n            case Repetition.type.SEGNO_LEFT:\n                this.drawSignoFixed(stave, x);\n                break;\n            case Repetition.type.SEGNO_RIGHT:\n                this.drawSignoFixed(stave, x + stave.getWidth());\n                break;\n            case Repetition.type.DC:\n                this.drawSymbolText(stave, x, 'D.C.', false);\n                break;\n            case Repetition.type.DC_AL_CODA:\n                this.drawSymbolText(stave, x, 'D.C. al', true);\n                break;\n            case Repetition.type.DC_AL_FINE:\n                this.drawSymbolText(stave, x, 'D.C. al Fine', false);\n                break;\n            case Repetition.type.DS:\n                this.drawSymbolText(stave, x, 'D.S.', false);\n                break;\n            case Repetition.type.DS_AL_CODA:\n                this.drawSymbolText(stave, x, 'D.S. al', true);\n                break;\n            case Repetition.type.DS_AL_FINE:\n                this.drawSymbolText(stave, x, 'D.S. al Fine', false);\n                break;\n            case Repetition.type.FINE:\n                this.drawSymbolText(stave, x, 'Fine', false);\n                break;\n            case Repetition.type.TO_CODA:\n                this.drawSymbolText(stave, x, 'To', true);\n                break;\n            default:\n                break;\n        }\n        return this;\n    }\n    drawCodaFixed(stave, x) {\n        const y = stave.getYForTopText(stave.getNumLines()) + this.y_shift;\n        Glyph.renderGlyph(stave.checkContext(), this.x + x + this.x_shift, y + Tables.currentMusicFont().lookupMetric('staveRepetition.coda.offsetY'), 40, 'coda', { category: 'coda' });\n        return this;\n    }\n    drawSignoFixed(stave, x) {\n        const y = stave.getYForTopText(stave.getNumLines()) + this.y_shift;\n        Glyph.renderGlyph(stave.checkContext(), this.x + x + this.x_shift, y + Tables.currentMusicFont().lookupMetric('staveRepetition.segno.offsetY'), 30, 'segno', { category: 'segno' });\n        return this;\n    }\n    drawSymbolText(stave, x, text, draw_coda) {\n        const ctx = stave.checkContext();\n        ctx.save();\n        ctx.setFont(this.textFont);\n        let text_x = 0;\n        let symbol_x = 0;\n        const modifierWidth = stave.getNoteStartX() - this.x;\n        switch (this.symbol_type) {\n            // To the left with symbol\n            case Repetition.type.CODA_LEFT:\n                // Offset Coda text to right of stave beginning\n                text_x = this.x + stave.getVerticalBarWidth();\n                symbol_x =\n                    text_x +\n                        ctx.measureText(text).width +\n                        Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.offsetX');\n                break;\n            // To the right without symbol\n            case Repetition.type.DC:\n            case Repetition.type.DC_AL_FINE:\n            case Repetition.type.DS:\n            case Repetition.type.DS_AL_FINE:\n            case Repetition.type.FINE:\n                text_x =\n                    this.x +\n                        x +\n                        this.x_shift +\n                        stave.getWidth() -\n                        Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.spacing') -\n                        modifierWidth -\n                        ctx.measureText(text).width;\n                break;\n            // To the right with symbol\n            default:\n                text_x =\n                    this.x +\n                        x +\n                        this.x_shift +\n                        stave.getWidth() -\n                        Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.spacing') -\n                        modifierWidth -\n                        ctx.measureText(text).width -\n                        Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.offsetX');\n                symbol_x =\n                    text_x +\n                        ctx.measureText(text).width +\n                        Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.offsetX');\n                break;\n        }\n        const y = stave.getYForTopText(stave.getNumLines()) +\n            this.y_shift +\n            Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.offsetY');\n        if (draw_coda) {\n            Glyph.renderGlyph(ctx, symbol_x, y, 40, 'coda', { category: 'coda' });\n        }\n        ctx.fillText(text, text_x, y + 5);\n        ctx.restore();\n        return this;\n    }\n}\nRepetition.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 12,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\nRepetition.type = {\n    NONE: 1,\n    CODA_LEFT: 2,\n    CODA_RIGHT: 3,\n    SEGNO_LEFT: 4,\n    SEGNO_RIGHT: 5,\n    DC: 6,\n    DC_AL_CODA: 7,\n    DC_AL_FINE: 8,\n    DS: 9,\n    DS_AL_CODA: 10,\n    DS_AL_FINE: 11,\n    FINE: 12,\n    TO_CODA: 13, // To Coda at end of stave\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\nimport { Font, FontStyle, FontWeight } from './font';\nimport { StaveModifier } from './stavemodifier';\nimport { Category } from './typeguard';\nexport class StaveSection extends StaveModifier {\n    constructor(section, x, shift_y) {\n        super();\n        this.setWidth(16);\n        this.section = section;\n        this.x = x;\n        this.shift_x = 0;\n        this.shift_y = shift_y;\n        this.resetFont();\n    }\n    static get CATEGORY() {\n        return Category.StaveSection;\n    }\n    setStaveSection(section) {\n        this.section = section;\n        return this;\n    }\n    setShiftX(x) {\n        this.shift_x = x;\n        return this;\n    }\n    setShiftY(y) {\n        this.shift_y = y;\n        return this;\n    }\n    draw(stave, shift_x) {\n        const ctx = stave.checkContext();\n        this.setRendered();\n        ctx.save();\n        ctx.setLineWidth(2);\n        ctx.setFont(this.textFont);\n        const paddingX = 2;\n        const paddingY = 2;\n        const rectWidth = 2;\n        const textMeasurements = ctx.measureText(this.section);\n        const textWidth = textMeasurements.width;\n        const textHeight = textMeasurements.height;\n        const width = textWidth + 2 * paddingX; // add left & right padding\n        const height = textHeight + 2 * paddingY; // add top & bottom padding\n        //  Seems to be a good default y\n        const y = stave.getYForTopText(2) + this.shift_y;\n        const x = this.x + shift_x;\n        ctx.beginPath();\n        ctx.setLineWidth(rectWidth);\n        ctx.rect(x, y + textMeasurements.y - paddingY, width, height);\n        ctx.stroke();\n        ctx.fillText(this.section, x + paddingX, y);\n        ctx.restore();\n        return this;\n    }\n}\nStaveSection.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: 10,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Radosaw Eichler 2012\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nexport class StaveTempo extends StaveModifier {\n    constructor(tempo, x, shift_y) {\n        super();\n        /** Font size for note. */\n        this.render_options = { glyph_font_scale: 30 };\n        this.tempo = tempo;\n        this.position = StaveModifierPosition.ABOVE;\n        this.x = x;\n        this.shift_x = 10;\n        this.shift_y = shift_y;\n        this.resetFont();\n    }\n    static get CATEGORY() {\n        return Category.StaveTempo;\n    }\n    setTempo(tempo) {\n        this.tempo = tempo;\n        return this;\n    }\n    setShiftX(x) {\n        this.shift_x = x;\n        return this;\n    }\n    setShiftY(y) {\n        this.shift_y = y;\n        return this;\n    }\n    draw(stave, shift_x) {\n        const ctx = stave.checkContext();\n        this.setRendered();\n        const options = this.render_options;\n        // FIXME: What does the '38' mean? Why 38? Is that supposed to\n        // be the default font size for standard notation?\n        const scale = options.glyph_font_scale / 38;\n        const name = this.tempo.name;\n        const duration = this.tempo.duration;\n        const dots = this.tempo.dots || 0;\n        const bpm = this.tempo.bpm;\n        let x = this.x + this.shift_x + shift_x;\n        const y = stave.getYForTopText(1) + this.shift_y;\n        ctx.save();\n        if (name) {\n            ctx.setFont(this.textFont);\n            ctx.fillText(name, x, y);\n            x += ctx.measureText(name).width;\n        }\n        if (duration && bpm) {\n            // Override the weight and style.\n            ctx.setFont(Object.assign(Object.assign({}, this.textFont), { weight: 'normal', style: 'normal' }));\n            if (name) {\n                x += ctx.measureText(' ').width;\n                ctx.fillText('(', x, y);\n                x += ctx.measureText('(').width;\n            }\n            const code = Tables.getGlyphProps(duration);\n            x += 3 * scale;\n            Glyph.renderGlyph(ctx, x, y, options.glyph_font_scale, code.code_head);\n            x += code.getWidth() * scale;\n            // Draw stem and flags\n            if (code.stem) {\n                let stem_height = 30;\n                if (code.beam_count)\n                    stem_height += 3 * (code.beam_count - 1);\n                stem_height *= scale;\n                const y_top = y - stem_height;\n                ctx.fillRect(x - scale, y_top, scale, stem_height);\n                if (code.flag) {\n                    Glyph.renderGlyph(ctx, x, y_top, options.glyph_font_scale, code.code_flag_upstem, {\n                        category: 'flag.staveTempo',\n                    });\n                    if (!dots)\n                        x += 6 * scale;\n                }\n            }\n            // Draw dot\n            for (let i = 0; i < dots; i++) {\n                x += 6 * scale;\n                ctx.beginPath();\n                ctx.arc(x, y + 2 * scale, 2 * scale, 0, Math.PI * 2, false);\n                ctx.fill();\n            }\n            ctx.fillText(' = ' + bpm + (name ? ')' : ''), x + 3 * scale, y);\n        }\n        ctx.restore();\n        return this;\n    }\n}\nStaveTempo.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 14,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\nimport { Font, FontStyle, FontWeight } from './font';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { TextJustification, TextNote } from './textnote';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class StaveText extends StaveModifier {\n    constructor(text, position, options = {}) {\n        super();\n        this.setWidth(16);\n        this.text = text;\n        this.position = position;\n        this.options = Object.assign({ shift_x: 0, shift_y: 0, justification: TextNote.Justification.CENTER }, options);\n        this.resetFont();\n    }\n    static get CATEGORY() {\n        return Category.StaveText;\n    }\n    setStaveText(text) {\n        this.text = text;\n        return this;\n    }\n    setShiftX(x) {\n        this.shift_x = x;\n        return this;\n    }\n    setShiftY(y) {\n        this.shift_y = y;\n        return this;\n    }\n    setText(text) {\n        this.text = text;\n        return this;\n    }\n    draw(stave) {\n        const ctx = stave.checkContext();\n        this.setRendered();\n        ctx.save();\n        ctx.setLineWidth(2);\n        ctx.setFont(this.textFont);\n        const text_width = ctx.measureText('' + this.text).width;\n        let x;\n        let y;\n        switch (this.position) {\n            case StaveModifierPosition.LEFT:\n            case StaveModifierPosition.RIGHT:\n                y = (stave.getYForLine(0) + stave.getBottomLineY()) / 2 + this.options.shift_y;\n                if (this.position === StaveModifierPosition.LEFT) {\n                    x = stave.getX() - text_width - 24 + this.options.shift_x;\n                }\n                else {\n                    x = stave.getX() + stave.getWidth() + 24 + this.options.shift_x;\n                }\n                break;\n            case StaveModifierPosition.ABOVE:\n            case StaveModifierPosition.BELOW:\n                x = stave.getX() + this.options.shift_x;\n                if (this.options.justification === TextJustification.CENTER) {\n                    x += stave.getWidth() / 2 - text_width / 2;\n                }\n                else if (this.options.justification === TextJustification.RIGHT) {\n                    x += stave.getWidth() - text_width;\n                }\n                if (this.position === StaveModifierPosition.ABOVE) {\n                    y = stave.getYForTopText(2) + this.options.shift_y;\n                }\n                else {\n                    y = stave.getYForBottomText(2) + this.options.shift_y;\n                }\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', 'Value Must be in Modifier.Position.');\n        }\n        ctx.fillText('' + this.text, x, y + 4);\n        ctx.restore();\n        return this;\n    }\n}\nStaveText.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 16,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Renders time signatures glyphs for staffs\n// This class is used by TimeSignature to render the associated glyphs\nimport { Glyph } from './glyph';\nimport { defined } from './util';\nexport class TimeSignatureGlyph extends Glyph {\n    constructor(timeSignature, topDigits, botDigits, code, point, options) {\n        var _a;\n        super(code, point, options);\n        this.timeSignature = timeSignature;\n        this.topGlyphs = [];\n        this.botGlyphs = [];\n        let topWidth = 0;\n        for (let i = 0; i < topDigits.length; ++i) {\n            let timeSigType = topDigits[i];\n            switch (topDigits[i]) {\n                case '-':\n                    timeSigType = 'Minus';\n                    break;\n                case '+':\n                    timeSigType = botDigits.length > 0 ? 'PlusSmall' : 'Plus';\n                    break;\n                case '(':\n                    timeSigType = botDigits.length > 0 ? 'ParensLeftSmall' : 'ParensLeft';\n                    break;\n                case ')':\n                    timeSigType = botDigits.length > 0 ? 'ParensRightSmall' : 'ParensRight';\n                    break;\n            }\n            const topGlyph = new Glyph('timeSig' + timeSigType, this.timeSignature.point);\n            this.topGlyphs.push(topGlyph);\n            topWidth += (_a = topGlyph.getMetrics().width) !== null && _a !== void 0 ? _a : 0;\n        }\n        let botWidth = 0;\n        for (let i = 0; i < botDigits.length; ++i) {\n            let timeSigType = botDigits[i];\n            switch (botDigits[i]) {\n                case '+':\n                    timeSigType = 'PlusSmall';\n                    break;\n                case '(':\n                    timeSigType = 'ParensLeftSmall';\n                    break;\n                case ')':\n                    timeSigType = 'ParensRightSmall';\n                    break;\n            }\n            const botGlyph = new Glyph('timeSig' + timeSigType, this.timeSignature.point);\n            this.botGlyphs.push(botGlyph);\n            botWidth += defined(botGlyph.getMetrics().width);\n        }\n        this.width = Math.max(topWidth, botWidth);\n        this.xMin = this.getMetrics().x_min;\n        this.topStartX = (this.width - topWidth) / 2.0;\n        this.botStartX = (this.width - botWidth) / 2.0;\n        this.reset();\n    }\n    getMetrics() {\n        return {\n            x_min: this.xMin,\n            x_max: this.xMin + this.width,\n            width: this.width,\n        };\n    }\n    renderToStave(x) {\n        const stave = this.checkStave();\n        const ctx = this.checkContext();\n        let start_x = x + this.topStartX;\n        let y = 0;\n        if (this.botGlyphs.length > 0)\n            y = stave.getYForLine(this.timeSignature.topLine);\n        else\n            y = (stave.getYForLine(this.timeSignature.topLine) + stave.getYForLine(this.timeSignature.bottomLine)) / 2;\n        for (let i = 0; i < this.topGlyphs.length; ++i) {\n            const glyph = this.topGlyphs[i];\n            Glyph.renderOutline(ctx, glyph.getMetrics().outline, this.scale, start_x + this.x_shift, y);\n            start_x += defined(glyph.getMetrics().width);\n        }\n        start_x = x + this.botStartX;\n        y = stave.getYForLine(this.timeSignature.bottomLine);\n        for (let i = 0; i < this.botGlyphs.length; ++i) {\n            const glyph = this.botGlyphs[i];\n            this.timeSignature.placeGlyphOnLine(glyph, stave, 0);\n            Glyph.renderOutline(ctx, glyph.getMetrics().outline, this.scale, start_x + glyph.getMetrics().x_shift, y);\n            start_x += defined(glyph.getMetrics().width);\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Implements time signatures glyphs for staffs\n// See tables.js for the internal time signatures\n// representation\nimport { Glyph } from './glyph';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { TimeSignatureGlyph } from './timesigglyph';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\nconst assertIsValidTimeSig = (timeSpec) => {\n    const numbers = timeSpec.split('/');\n    if (numbers.length !== 2 && numbers[0] !== '+' && numbers[0] !== '-') {\n        throw new RuntimeError('BadTimeSignature', `Invalid time spec: ${timeSpec}. Must be in the form \"<numerator>/<denominator>\"`);\n    }\n    numbers.forEach((number) => {\n        // Characters consisting in number 0..9, '+', '-', '(' or ')'\n        if (/^[0-9+\\-()]+$/.test(number) == false) {\n            throw new RuntimeError('BadTimeSignature', `Invalid time spec: ${timeSpec}. Must contain valid signatures.`);\n        }\n    });\n};\nexport class TimeSignature extends StaveModifier {\n    constructor(timeSpec = '4/4', customPadding = 15, validate_args = true) {\n        super();\n        this.validate_args = validate_args;\n        const padding = customPadding;\n        const musicFont = Tables.currentMusicFont();\n        this.point = musicFont.lookupMetric('digits.point');\n        const fontLineShift = musicFont.lookupMetric('digits.shiftLine', 0);\n        this.topLine = 2 + fontLineShift;\n        this.bottomLine = 4 + fontLineShift;\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.info = this.parseTimeSpec(timeSpec);\n        this.setWidth(defined(this.info.glyph.getMetrics().width));\n        this.setPadding(padding);\n    }\n    static get CATEGORY() {\n        return Category.TimeSignature;\n    }\n    static get glyphs() {\n        return {\n            C: {\n                code: 'timeSigCommon',\n                point: 40,\n                line: 2,\n            },\n            'C|': {\n                code: 'timeSigCutCommon',\n                point: 40,\n                line: 2,\n            },\n        };\n    }\n    parseTimeSpec(timeSpec) {\n        var _a, _b;\n        if (timeSpec === 'C' || timeSpec === 'C|') {\n            const { line, code, point } = TimeSignature.glyphs[timeSpec];\n            return {\n                line,\n                num: false,\n                glyph: new Glyph(code, point),\n            };\n        }\n        if (this.validate_args) {\n            assertIsValidTimeSig(timeSpec);\n        }\n        const parts = timeSpec.split('/');\n        return {\n            num: true,\n            glyph: this.makeTimeSignatureGlyph((_a = parts[0]) !== null && _a !== void 0 ? _a : '', (_b = parts[1]) !== null && _b !== void 0 ? _b : ''),\n        };\n    }\n    makeTimeSignatureGlyph(topDigits, botDigits) {\n        return new TimeSignatureGlyph(this, topDigits, botDigits, 'timeSig0', this.point);\n    }\n    getInfo() {\n        return this.info;\n    }\n    setTimeSig(timeSpec) {\n        this.info = this.parseTimeSpec(timeSpec);\n        return this;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        this.setRendered();\n        ctx.openGroup('timesignature', this.getAttribute('id'));\n        this.info.glyph.setStave(stave);\n        this.info.glyph.setContext(ctx);\n        this.placeGlyphOnLine(this.info.glyph, stave, this.info.line);\n        this.info.glyph.renderToStave(this.x);\n        ctx.closeGroup();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { BoundingBox } from './boundingbox';\nimport { Clef } from './clef';\nimport { Element } from './element';\nimport { Font, FontStyle, FontWeight } from './font';\nimport { KeySignature } from './keysignature';\nimport { Barline, BarlineType } from './stavebarline';\nimport { StaveModifierPosition } from './stavemodifier';\nimport { Repetition } from './staverepetition';\nimport { StaveSection } from './stavesection';\nimport { StaveTempo } from './stavetempo';\nimport { StaveText } from './stavetext';\nimport { Volta } from './stavevolta';\nimport { Tables } from './tables';\nimport { TimeSignature } from './timesignature';\nimport { Category, isBarline } from './typeguard';\nimport { RuntimeError } from './util';\n// Used by Stave.format() to sort the modifiers at the beginning and end of a stave.\n// The keys (computed property names) match the CATEGORY property in the\n// Barline, Clef, KeySignature, TimeSignature classes.\nconst SORT_ORDER_BEG_MODIFIERS = {\n    [Barline.CATEGORY]: 0,\n    [Clef.CATEGORY]: 1,\n    [KeySignature.CATEGORY]: 2,\n    [TimeSignature.CATEGORY]: 3,\n};\nconst SORT_ORDER_END_MODIFIERS = {\n    [TimeSignature.CATEGORY]: 0,\n    [KeySignature.CATEGORY]: 1,\n    [Barline.CATEGORY]: 2,\n    [Clef.CATEGORY]: 3,\n};\nexport class Stave extends Element {\n    constructor(x, y, width, options) {\n        super();\n        // Initialized by the constructor via this.resetLines().\n        this.height = 0;\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.formatted = false;\n        this.start_x = x + 5;\n        this.end_x = x + width;\n        this.modifiers = []; // stave modifiers (clef, key, time, barlines, coda, segno, etc.)\n        this.measure = 0;\n        this.clef = 'treble';\n        this.endClef = undefined;\n        this.resetFont();\n        this.options = Object.assign({ vertical_bar_width: 10, num_lines: 5, fill_style: '#999999', left_bar: true, right_bar: true, spacing_between_lines_px: Tables.STAVE_LINE_DISTANCE, space_above_staff_ln: 4, space_below_staff_ln: 4, top_text_position: 1, bottom_text_position: 4, line_config: [] }, options);\n        this.bounds = { x: this.x, y: this.y, w: this.width, h: 0 };\n        this.defaultLedgerLineStyle = { strokeStyle: '#444', lineWidth: 1.4 };\n        this.resetLines();\n        // beg bar\n        this.addModifier(new Barline(this.options.left_bar ? BarlineType.SINGLE : BarlineType.NONE));\n        // end bar\n        this.addEndModifier(new Barline(this.options.right_bar ? BarlineType.SINGLE : BarlineType.NONE));\n    }\n    static get CATEGORY() {\n        return Category.Stave;\n    }\n    // This is the sum of the padding that normally goes on left + right of a stave during\n    // drawing. Used to size staves correctly with content width.\n    static get defaultPadding() {\n        const musicFont = Tables.currentMusicFont();\n        return musicFont.lookupMetric('stave.padding') + musicFont.lookupMetric('stave.endPaddingMax');\n    }\n    // Right padding, used by system if startX is already determined.\n    static get rightPadding() {\n        const musicFont = Tables.currentMusicFont();\n        return musicFont.lookupMetric('stave.endPaddingMax');\n    }\n    /** Set default style for ledger lines. */\n    setDefaultLedgerLineStyle(style) {\n        this.defaultLedgerLineStyle = style;\n    }\n    /** Get default style for ledger lines. */\n    getDefaultLedgerLineStyle() {\n        return Object.assign(Object.assign({}, this.getStyle()), this.defaultLedgerLineStyle);\n    }\n    space(spacing) {\n        return this.options.spacing_between_lines_px * spacing;\n    }\n    resetLines() {\n        this.options.line_config = [];\n        for (let i = 0; i < this.options.num_lines; i++) {\n            this.options.line_config.push({ visible: true });\n        }\n        this.height = (this.options.num_lines + this.options.space_above_staff_ln) * this.options.spacing_between_lines_px;\n        this.options.bottom_text_position = this.options.num_lines;\n    }\n    setNoteStartX(x) {\n        if (!this.formatted)\n            this.format();\n        this.start_x = x;\n        const begBarline = this.modifiers[0];\n        begBarline.setX(this.start_x - begBarline.getWidth());\n        return this;\n    }\n    getNoteStartX() {\n        if (!this.formatted)\n            this.format();\n        return this.start_x;\n    }\n    getNoteEndX() {\n        if (!this.formatted)\n            this.format();\n        return this.end_x;\n    }\n    getTieStartX() {\n        return this.start_x;\n    }\n    getTieEndX() {\n        return this.end_x;\n    }\n    getX() {\n        return this.x;\n    }\n    getNumLines() {\n        return this.options.num_lines;\n    }\n    setNumLines(n) {\n        this.options.num_lines = n;\n        this.resetLines();\n        return this;\n    }\n    setY(y) {\n        this.y = y;\n        return this;\n    }\n    getY() {\n        return this.y;\n    }\n    getTopLineTopY() {\n        return this.getYForLine(0) - Tables.STAVE_LINE_THICKNESS / 2;\n    }\n    getBottomLineBottomY() {\n        return this.getYForLine(this.getNumLines() - 1) + Tables.STAVE_LINE_THICKNESS / 2;\n    }\n    setX(x) {\n        const shift = x - this.x;\n        this.formatted = false;\n        this.x = x;\n        this.start_x += shift;\n        this.end_x += shift;\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const mod = this.modifiers[i];\n            mod.setX(mod.getX() + shift);\n        }\n        return this;\n    }\n    setWidth(width) {\n        this.formatted = false;\n        this.width = width;\n        this.end_x = this.x + width;\n        // reset the x position of the end barline (TODO(0xfe): This makes no sense)\n        // this.modifiers[1].setX(this.end_x);\n        return this;\n    }\n    getWidth() {\n        return this.width;\n    }\n    getStyle() {\n        return Object.assign({ fillStyle: this.options.fill_style, strokeStyle: this.options.fill_style, lineWidth: Tables.STAVE_LINE_THICKNESS }, this.style);\n    }\n    setMeasure(measure) {\n        this.measure = measure;\n        return this;\n    }\n    /**\n     * Gets the pixels to shift from the beginning of the stave\n     * following the modifier at the provided index\n     * @param  {Number} index The index from which to determine the shift\n     * @return {Number}       The amount of pixels shifted\n     */\n    getModifierXShift(index = 0) {\n        if (typeof index !== 'number') {\n            throw new RuntimeError('InvalidIndex', 'Must be of number type');\n        }\n        if (!this.formatted)\n            this.format();\n        if (this.getModifiers(StaveModifierPosition.BEGIN).length === 1) {\n            return 0;\n        }\n        // for right position modifiers zero shift seems correct, see 'Volta + Modifier Measure Test'\n        if (this.modifiers[index].getPosition() === StaveModifierPosition.RIGHT) {\n            return 0;\n        }\n        let start_x = this.start_x - this.x;\n        const begBarline = this.modifiers[0];\n        if (begBarline.getType() === BarlineType.REPEAT_BEGIN && start_x > begBarline.getWidth()) {\n            start_x -= begBarline.getWidth();\n        }\n        return start_x;\n    }\n    /** Coda & Segno Symbol functions */\n    setRepetitionType(type, yShift = 0) {\n        this.modifiers.push(new Repetition(type, this.x, yShift));\n        return this;\n    }\n    // Volta functions\n    setVoltaType(type, number_t, y) {\n        this.modifiers.push(new Volta(type, number_t, this.x, y));\n        return this;\n    }\n    // Section functions\n    setSection(section, y, xOffset = 0, fontSize) {\n        const staveSection = new StaveSection(section, this.x + xOffset, y);\n        if (fontSize)\n            staveSection.setFontSize(fontSize);\n        this.modifiers.push(staveSection);\n        return this;\n    }\n    // Tempo functions\n    setTempo(tempo, y) {\n        this.modifiers.push(new StaveTempo(tempo, this.x, y));\n        return this;\n    }\n    // Text functions\n    setText(text, position, options = {}) {\n        this.modifiers.push(new StaveText(text, position, options));\n        return this;\n    }\n    getHeight() {\n        return this.height;\n    }\n    getSpacingBetweenLines() {\n        return this.options.spacing_between_lines_px;\n    }\n    getBoundingBox() {\n        return new BoundingBox(this.x, this.y, this.width, this.getBottomY() - this.y);\n    }\n    getBottomY() {\n        const options = this.options;\n        const spacing = options.spacing_between_lines_px;\n        const score_bottom = this.getYForLine(options.num_lines) + options.space_below_staff_ln * spacing;\n        return score_bottom;\n    }\n    getBottomLineY() {\n        return this.getYForLine(this.options.num_lines);\n    }\n    // This returns\n    /** @returns the y for the *center* of a staff line */\n    getYForLine(line) {\n        const options = this.options;\n        const spacing = options.spacing_between_lines_px;\n        const headroom = options.space_above_staff_ln;\n        const y = this.y + line * spacing + headroom * spacing;\n        return y;\n    }\n    getLineForY(y) {\n        // Does the reverse of getYForLine - somewhat dumb and just calls\n        // getYForLine until the right value is reaches\n        const options = this.options;\n        const spacing = options.spacing_between_lines_px;\n        const headroom = options.space_above_staff_ln;\n        return (y - this.y) / spacing - headroom;\n    }\n    getYForTopText(line = 0) {\n        return this.getYForLine(-line - this.options.top_text_position);\n    }\n    getYForBottomText(line = 0) {\n        return this.getYForLine(this.options.bottom_text_position + line);\n    }\n    getYForNote(line) {\n        const options = this.options;\n        const spacing = options.spacing_between_lines_px;\n        const headroom = options.space_above_staff_ln;\n        return this.y + headroom * spacing + 5 * spacing - line * spacing;\n    }\n    getYForGlyphs() {\n        return this.getYForLine(3);\n    }\n    // This method adds a stave modifier to the stave. Note that the first two\n    // modifiers (BarLines) are automatically added upon construction.\n    addModifier(modifier, position) {\n        if (position !== undefined) {\n            modifier.setPosition(position);\n        }\n        modifier.setStave(this);\n        this.formatted = false;\n        this.modifiers.push(modifier);\n        return this;\n    }\n    addEndModifier(modifier) {\n        this.addModifier(modifier, StaveModifierPosition.END);\n        return this;\n    }\n    // Bar Line functions\n    setBegBarType(type) {\n        // Only valid bar types at beginning of stave is none, single or begin repeat\n        const { SINGLE, REPEAT_BEGIN, NONE } = BarlineType;\n        if (type === SINGLE || type === REPEAT_BEGIN || type === NONE) {\n            this.modifiers[0].setType(type);\n            this.formatted = false;\n        }\n        return this;\n    }\n    setEndBarType(type) {\n        // Repeat end not valid at end of stave\n        if (type !== BarlineType.REPEAT_BEGIN) {\n            this.modifiers[1].setType(type);\n            this.formatted = false;\n        }\n        return this;\n    }\n    setClef(clefSpec, size, annotation, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        if (position === StaveModifierPosition.END) {\n            this.endClef = clefSpec;\n        }\n        else {\n            this.clef = clefSpec;\n        }\n        const clefs = this.getModifiers(position, Clef.CATEGORY);\n        if (clefs.length === 0) {\n            this.addClef(clefSpec, size, annotation, position);\n        }\n        else {\n            clefs[0].setType(clefSpec, size, annotation);\n        }\n        return this;\n    }\n    getClef() {\n        return this.clef;\n    }\n    setEndClef(clefSpec, size, annotation) {\n        this.setClef(clefSpec, size, annotation, StaveModifierPosition.END);\n        return this;\n    }\n    getEndClef() {\n        return this.endClef;\n    }\n    setKeySignature(keySpec, cancelKeySpec, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        const keySignatures = this.getModifiers(position, KeySignature.CATEGORY);\n        if (keySignatures.length === 0) {\n            this.addKeySignature(keySpec, cancelKeySpec, position);\n        }\n        else {\n            keySignatures[0].setKeySig(keySpec, cancelKeySpec);\n        }\n        return this;\n    }\n    setEndKeySignature(keySpec, cancelKeySpec) {\n        this.setKeySignature(keySpec, cancelKeySpec, StaveModifierPosition.END);\n        return this;\n    }\n    setTimeSignature(timeSpec, customPadding, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        const timeSignatures = this.getModifiers(position, TimeSignature.CATEGORY);\n        if (timeSignatures.length === 0) {\n            this.addTimeSignature(timeSpec, customPadding, position);\n        }\n        else {\n            timeSignatures[0].setTimeSig(timeSpec);\n        }\n        return this;\n    }\n    setEndTimeSignature(timeSpec, customPadding) {\n        this.setTimeSignature(timeSpec, customPadding, StaveModifierPosition.END);\n        return this;\n    }\n    /**\n     * Add a key signature to the stave.\n     *\n     * Example:\n     * `stave.addKeySignature('Db');`\n     * @param keySpec new key specification `[A-G][b|#]?`\n     * @param cancelKeySpec\n     * @param position\n     * @returns\n     */\n    addKeySignature(keySpec, cancelKeySpec, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        this.addModifier(new KeySignature(keySpec, cancelKeySpec).setPosition(position), position);\n        return this;\n    }\n    /**\n     * Add a clef to the stave.\n     *\n     * Example:\n     *\n     * stave.addClef('treble')\n     * @param clef clef (treble|bass|...) see {@link Clef.types}\n     * @param size\n     * @param annotation\n     * @param position\n     * @returns\n     */\n    addClef(clef, size, annotation, position) {\n        if (position === undefined || position === StaveModifierPosition.BEGIN) {\n            this.clef = clef;\n        }\n        else if (position === StaveModifierPosition.END) {\n            this.endClef = clef;\n        }\n        this.addModifier(new Clef(clef, size, annotation), position);\n        return this;\n    }\n    addEndClef(clef, size, annotation) {\n        this.addClef(clef, size, annotation, StaveModifierPosition.END);\n        return this;\n    }\n    /**\n     * Add a time signature to the stave\n     *\n     * Example:\n     *\n     * `stave.addTimeSignature('4/4');`\n     * @param timeSpec time signature specification `(C\\||C|\\d\\/\\d)`\n     * @param customPadding\n     * @param position\n     * @returns\n     */\n    addTimeSignature(timeSpec, customPadding, position) {\n        this.addModifier(new TimeSignature(timeSpec, customPadding), position);\n        return this;\n    }\n    addEndTimeSignature(timeSpec, customPadding) {\n        this.addTimeSignature(timeSpec, customPadding, StaveModifierPosition.END);\n        return this;\n    }\n    // Deprecated\n    addTrebleGlyph() {\n        this.addClef('treble');\n        return this;\n    }\n    /**\n     * @param position\n     * @param category\n     * @returns array of StaveModifiers that match the provided position and category.\n     */\n    getModifiers(position, category) {\n        const noPosition = position === undefined;\n        const noCategory = category === undefined;\n        if (noPosition && noCategory) {\n            return this.modifiers;\n        }\n        else if (noPosition) {\n            // A category was provided.\n            return this.modifiers.filter((m) => category === m.getCategory());\n        }\n        else if (noCategory) {\n            // A position was provided.\n            return this.modifiers.filter((m) => position === m.getPosition());\n        }\n        else {\n            // Both position and category were provided!\n            return this.modifiers.filter((m) => position === m.getPosition() && category === m.getCategory());\n        }\n    }\n    /**\n     * Use the modifier's `getCategory()` as a key for the `order` array.\n     * The retrieved value is used to sort modifiers from left to right (0 to to 3).\n     */\n    sortByCategory(items, order) {\n        for (let i = items.length - 1; i >= 0; i--) {\n            for (let j = 0; j < i; j++) {\n                if (order[items[j].getCategory()] > order[items[j + 1].getCategory()]) {\n                    const temp = items[j];\n                    items[j] = items[j + 1];\n                    items[j + 1] = temp;\n                }\n            }\n        }\n    }\n    format() {\n        const begBarline = this.modifiers[0];\n        const endBarline = this.modifiers[1];\n        const begModifiers = this.getModifiers(StaveModifierPosition.BEGIN);\n        const endModifiers = this.getModifiers(StaveModifierPosition.END);\n        this.sortByCategory(begModifiers, SORT_ORDER_BEG_MODIFIERS);\n        this.sortByCategory(endModifiers, SORT_ORDER_END_MODIFIERS);\n        if (begModifiers.length > 1 && begBarline.getType() === BarlineType.REPEAT_BEGIN) {\n            begModifiers.push(begModifiers.splice(0, 1)[0]);\n            begModifiers.splice(0, 0, new Barline(BarlineType.SINGLE));\n        }\n        if (endModifiers.indexOf(endBarline) > 0) {\n            endModifiers.splice(0, 0, new Barline(BarlineType.NONE));\n        }\n        let width;\n        let padding;\n        let modifier;\n        let offset = 0;\n        let x = this.x;\n        for (let i = 0; i < begModifiers.length; i++) {\n            modifier = begModifiers[i];\n            padding = modifier.getPadding(i + offset);\n            width = modifier.getWidth();\n            x += padding;\n            modifier.setX(x);\n            x += width;\n            if (padding + width === 0)\n                offset--;\n        }\n        this.start_x = x;\n        x = this.x + this.width;\n        const widths = {\n            left: 0,\n            right: 0,\n            paddingRight: 0,\n            paddingLeft: 0,\n        };\n        let lastBarlineIdx = 0;\n        for (let i = 0; i < endModifiers.length; i++) {\n            modifier = endModifiers[i];\n            lastBarlineIdx = isBarline(modifier) ? i : lastBarlineIdx;\n            widths.right = 0;\n            widths.left = 0;\n            widths.paddingRight = 0;\n            widths.paddingLeft = 0;\n            const layoutMetrics = modifier.getLayoutMetrics();\n            if (layoutMetrics) {\n                if (i !== 0) {\n                    widths.right = layoutMetrics.xMax || 0;\n                    widths.paddingRight = layoutMetrics.paddingRight || 0;\n                }\n                widths.left = -layoutMetrics.xMin || 0;\n                widths.paddingLeft = layoutMetrics.paddingLeft || 0;\n                if (i === endModifiers.length - 1) {\n                    widths.paddingLeft = 0;\n                }\n            }\n            else {\n                widths.paddingRight = modifier.getPadding(i - lastBarlineIdx);\n                if (i !== 0) {\n                    widths.right = modifier.getWidth();\n                }\n                if (i === 0) {\n                    widths.left = modifier.getWidth();\n                }\n            }\n            x -= widths.paddingRight;\n            x -= widths.right;\n            modifier.setX(x);\n            x -= widths.left;\n            x -= widths.paddingLeft;\n        }\n        this.end_x = endModifiers.length === 1 ? this.x + this.width : x;\n        this.formatted = true;\n    }\n    /**\n     * All drawing functions below need the context to be set.\n     */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        ctx.openGroup('stave', this.getAttribute('id'));\n        if (!this.formatted)\n            this.format();\n        const num_lines = this.options.num_lines;\n        const width = this.width;\n        const x = this.x;\n        let y;\n        // Render lines\n        for (let line = 0; line < num_lines; line++) {\n            y = this.getYForLine(line);\n            this.applyStyle();\n            if (this.options.line_config[line].visible) {\n                ctx.beginPath();\n                ctx.moveTo(x, y);\n                ctx.lineTo(x + width, y);\n                ctx.stroke();\n            }\n            this.restoreStyle();\n        }\n        // Draw the modifiers (bar lines, coda, segno, repeat brackets, etc.)\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const modifier = this.modifiers[i];\n            // Only draw modifier if it has a draw function\n            if (typeof modifier.draw === 'function') {\n                modifier.applyStyle(ctx);\n                modifier.draw(this, this.getModifierXShift(i));\n                modifier.restoreStyle(ctx);\n            }\n        }\n        // Render measure numbers\n        if (this.measure > 0) {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            const textWidth = ctx.measureText('' + this.measure).width;\n            y = this.getYForTopText(0) + 3;\n            ctx.fillText('' + this.measure, this.x - textWidth / 2, y);\n            ctx.restore();\n        }\n        ctx.closeGroup();\n        return this;\n    }\n    getVerticalBarWidth() {\n        return this.options.vertical_bar_width;\n    }\n    /**\n     * Get the current configuration for the Stave.\n     * @return {Array} An array of configuration objects.\n     */\n    getConfigForLines() {\n        return this.options.line_config;\n    }\n    /**\n     * Configure properties of the lines in the Stave\n     * @param line_number The index of the line to configure.\n     * @param line_config An configuration object for the specified line.\n     * @throws RuntimeError \"StaveConfigError\" When the specified line number is out of\n     *   range of the number of lines specified in the constructor.\n     */\n    setConfigForLine(line_number, line_config) {\n        if (line_number >= this.options.num_lines || line_number < 0) {\n            throw new RuntimeError('StaveConfigError', 'The line number must be within the range of the number of lines in the Stave.');\n        }\n        if (line_config.visible === undefined) {\n            throw new RuntimeError('StaveConfigError', \"The line configuration object is missing the 'visible' property.\");\n        }\n        if (typeof line_config.visible !== 'boolean') {\n            throw new RuntimeError('StaveConfigError', \"The line configuration objects 'visible' property must be true or false.\");\n        }\n        this.options.line_config[line_number] = line_config;\n        return this;\n    }\n    /**\n     * Set the staff line configuration array for all of the lines at once.\n     * @param lines_configuration An array of line configuration objects.  These objects\n     *   are of the same format as the single one passed in to setLineConfiguration().\n     *   The caller can set null for any line config entry if it is desired that the default be used\n     * @throws RuntimeError \"StaveConfigError\" When the lines_configuration array does not have\n     *   exactly the same number of elements as the num_lines configuration object set in\n     *   the constructor.\n     */\n    setConfigForLines(lines_configuration) {\n        if (lines_configuration.length !== this.options.num_lines) {\n            throw new RuntimeError('StaveConfigError', 'The length of the lines configuration array must match the number of lines in the Stave');\n        }\n        // Make sure the defaults are present in case an incomplete set of\n        //  configuration options were supplied.\n        // eslint-disable-next-line\n        for (const line_config in lines_configuration) {\n            // Allow '{}' to be used if the caller just wants the default for a particular node.\n            if (lines_configuration[line_config].visible == undefined) {\n                lines_configuration[line_config] = this.options.line_config[line_config];\n            }\n            this.options.line_config[line_config] = Object.assign(Object.assign({}, this.options.line_config[line_config]), lines_configuration[line_config]);\n        }\n        this.options.line_config = lines_configuration;\n        return this;\n    }\n}\nStave.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: 8,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nfunction drawBoldDoubleLine(ctx, type, topX, topY, botY) {\n    if (type !== StaveConnector.type.BOLD_DOUBLE_LEFT && type !== StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n        throw new RuntimeError('InvalidConnector', 'A REPEAT_BEGIN or REPEAT_END type must be provided.');\n    }\n    let x_shift = 3;\n    let variableWidth = 3.5; // Width for avoiding anti-aliasing width issues\n    const thickLineOffset = 2; // For aesthetics\n    if (type === StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n        x_shift = -5; // Flips the side of the thin line\n        variableWidth = 3;\n    }\n    // Thin line\n    ctx.fillRect(topX + x_shift, topY, 1, botY - topY);\n    // Thick line\n    ctx.fillRect(topX - thickLineOffset, topY, variableWidth, botY - topY);\n}\n/** StaveConnector implements the connector lines between staves of a system. */\nexport class StaveConnector extends Element {\n    constructor(top_stave, bottom_stave) {\n        super();\n        this.thickness = Tables.STAVE_LINE_THICKNESS;\n        this.width = 3;\n        this.top_stave = top_stave;\n        this.bottom_stave = bottom_stave;\n        this.type = StaveConnector.type.DOUBLE;\n        this.resetFont();\n        // 1. Offset Bold Double Left to align with offset Repeat Begin bars\n        // 2. Offset BRACE type not to overlap with another StaveConnector\n        this.x_shift = 0;\n        this.texts = [];\n    }\n    static get CATEGORY() {\n        return Category.StaveConnector;\n    }\n    /**\n     * Set type.\n     * @param type see {@link StaveConnector.type} & {@link StaveConnector.typeString}\n     */\n    setType(type) {\n        type = typeof type === 'string' ? StaveConnector.typeString[type] : type;\n        if (type >= StaveConnector.type.SINGLE_RIGHT && type <= StaveConnector.type.NONE) {\n            this.type = type;\n        }\n        return this;\n    }\n    /** Set optional associated Text. */\n    setText(text, options = {}) {\n        this.texts.push({\n            content: text,\n            options: Object.assign({ shift_x: 0, shift_y: 0 }, options),\n        });\n        return this;\n    }\n    setXShift(x_shift) {\n        if (typeof x_shift !== 'number') {\n            throw new RuntimeError('InvalidType', 'x_shift must be a Number');\n        }\n        this.x_shift = x_shift;\n        return this;\n    }\n    getXShift() {\n        return this.x_shift;\n    }\n    /** Render connector and associated text. */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        let topY = this.top_stave.getYForLine(0);\n        let botY = this.bottom_stave.getYForLine(this.bottom_stave.getNumLines() - 1) + this.thickness;\n        let width = this.width;\n        let topX = this.top_stave.getX();\n        const isRightSidedConnector = this.type === StaveConnector.type.SINGLE_RIGHT ||\n            this.type === StaveConnector.type.BOLD_DOUBLE_RIGHT ||\n            this.type === StaveConnector.type.THIN_DOUBLE;\n        if (isRightSidedConnector) {\n            topX = this.top_stave.getX() + this.top_stave.getWidth();\n        }\n        let attachment_height = botY - topY;\n        switch (this.type) {\n            case StaveConnector.type.SINGLE:\n                width = 1;\n                break;\n            case StaveConnector.type.SINGLE_LEFT:\n                width = 1;\n                break;\n            case StaveConnector.type.SINGLE_RIGHT:\n                width = 1;\n                break;\n            case StaveConnector.type.DOUBLE:\n                topX -= this.width + 2;\n                topY -= this.thickness;\n                attachment_height += 0.5;\n                break;\n            case StaveConnector.type.BRACE: {\n                width = 12;\n                // May need additional code to draw brace\n                const x1 = this.top_stave.getX() - 2 + this.x_shift;\n                const y1 = topY;\n                const x3 = x1;\n                const y3 = botY;\n                const x2 = x1 - width;\n                const y2 = y1 + attachment_height / 2.0;\n                const cpx1 = x2 - 0.9 * width;\n                const cpy1 = y1 + 0.2 * attachment_height;\n                const cpx2 = x1 + 1.1 * width;\n                const cpy2 = y2 - 0.135 * attachment_height;\n                const cpx3 = cpx2;\n                const cpy3 = y2 + 0.135 * attachment_height;\n                const cpx4 = cpx1;\n                const cpy4 = y3 - 0.2 * attachment_height;\n                const cpx5 = x2 - width;\n                const cpy5 = cpy4;\n                const cpx6 = x1 + 0.4 * width;\n                const cpy6 = y2 + 0.135 * attachment_height;\n                const cpx7 = cpx6;\n                const cpy7 = y2 - 0.135 * attachment_height;\n                const cpx8 = cpx5;\n                const cpy8 = cpy1;\n                ctx.beginPath();\n                ctx.moveTo(x1, y1);\n                ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n                ctx.bezierCurveTo(cpx3, cpy3, cpx4, cpy4, x3, y3);\n                ctx.bezierCurveTo(cpx5, cpy5, cpx6, cpy6, x2, y2);\n                ctx.bezierCurveTo(cpx7, cpy7, cpx8, cpy8, x1, y1);\n                ctx.fill();\n                ctx.stroke();\n                break;\n            }\n            case StaveConnector.type.BRACKET:\n                topY -= 6;\n                botY += 6;\n                attachment_height = botY - topY;\n                Glyph.renderGlyph(ctx, topX - 5, topY, 40, 'bracketTop');\n                Glyph.renderGlyph(ctx, topX - 5, botY, 40, 'bracketBottom');\n                topX -= this.width + 2;\n                break;\n            case StaveConnector.type.BOLD_DOUBLE_LEFT:\n                drawBoldDoubleLine(ctx, this.type, topX + this.x_shift, topY, botY - this.thickness);\n                break;\n            case StaveConnector.type.BOLD_DOUBLE_RIGHT:\n                drawBoldDoubleLine(ctx, this.type, topX, topY, botY - this.thickness);\n                break;\n            case StaveConnector.type.THIN_DOUBLE:\n                width = 1;\n                attachment_height -= this.thickness;\n                break;\n            case StaveConnector.type.NONE:\n                break;\n            default:\n                throw new RuntimeError('InvalidType', `The provided StaveConnector.type (${this.type}) is invalid.`);\n        }\n        if (this.type !== StaveConnector.type.BRACE &&\n            this.type !== StaveConnector.type.BOLD_DOUBLE_LEFT &&\n            this.type !== StaveConnector.type.BOLD_DOUBLE_RIGHT &&\n            this.type !== StaveConnector.type.NONE) {\n            ctx.fillRect(topX, topY, width, attachment_height);\n        }\n        // If the connector is a thin double barline, draw the paralell line\n        if (this.type === StaveConnector.type.THIN_DOUBLE) {\n            ctx.fillRect(topX - 3, topY, width, attachment_height);\n        }\n        ctx.save();\n        ctx.setLineWidth(2);\n        ctx.setFont(this.textFont);\n        // Add stave connector text\n        for (let i = 0; i < this.texts.length; i++) {\n            const text = this.texts[i];\n            const text_width = ctx.measureText('' + text.content).width;\n            const x = this.top_stave.getX() - text_width - 24 + text.options.shift_x;\n            const y = (this.top_stave.getYForLine(0) + this.bottom_stave.getBottomLineY()) / 2 + text.options.shift_y;\n            ctx.fillText('' + text.content, x, y + 4);\n        }\n        ctx.restore();\n    }\n}\nStaveConnector.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 16,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n};\n/**\n * SINGLE_LEFT and SINGLE are the same value for compatibility\n * with older versions of vexflow which didn't have right sided\n * stave connectors.\n */\nStaveConnector.type = {\n    SINGLE_RIGHT: 0,\n    SINGLE_LEFT: 1,\n    SINGLE: 1,\n    DOUBLE: 2,\n    BRACE: 3,\n    BRACKET: 4,\n    BOLD_DOUBLE_LEFT: 5,\n    BOLD_DOUBLE_RIGHT: 6,\n    THIN_DOUBLE: 7,\n    NONE: 8,\n};\n/**\n * Connector type:\n * * \"singleRight\"\n * * \"singleLeft\"\n * * \"single\"\n * * \"double\"\n * * \"brace\"\n * * \"bracket\"\n * * \"boldDoubleLeft\"\n * * \"boldDoubleRight\"\n * * \"thinDouble\"\n * * \"none\"\n */\nStaveConnector.typeString = {\n    singleRight: StaveConnector.type.SINGLE_RIGHT,\n    singleLeft: StaveConnector.type.SINGLE_LEFT,\n    single: StaveConnector.type.SINGLE,\n    double: StaveConnector.type.DOUBLE,\n    brace: StaveConnector.type.BRACE,\n    bracket: StaveConnector.type.BRACKET,\n    boldDoubleLeft: StaveConnector.type.BOLD_DOUBLE_LEFT,\n    boldDoubleRight: StaveConnector.type.BOLD_DOUBLE_RIGHT,\n    thinDouble: StaveConnector.type.THIN_DOUBLE,\n    none: StaveConnector.type.NONE,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Beam } from './beam';\nimport { Font } from './font';\nimport { Fraction } from './fraction';\nimport { ModifierContext } from './modifiercontext';\nimport { Stave } from './stave';\nimport { StaveConnector } from './staveconnector';\nimport { Tables } from './tables';\nimport { TickContext } from './tickcontext';\nimport { isNote, isStaveNote } from './typeguard';\nimport { defined, log, midLine, RuntimeError } from './util';\nimport { Voice } from './voice';\n// Helper function\nconst sumArray = (arr) => arr.reduce((a, b) => a + b, 0);\n/**\n * Create `Alignment`s for each tick in `voices`. Also calculate the\n * total number of ticks in voices.\n */\nfunction createContexts(voices, makeContext, addToContext) {\n    const resolutionMultiplier = Formatter.getResolutionMultiplier(voices);\n    // Initialize tick maps.\n    const tickToContextMap = {};\n    const tickList = [];\n    const contexts = [];\n    // For each voice, extract notes and create a context for every\n    // new tick that hasn't been seen before.\n    voices.forEach((voice, voiceIndex) => {\n        // Use resolution multiplier as denominator so that no additional expansion\n        // of fractional tick values is needed.\n        const ticksUsed = new Fraction(0, resolutionMultiplier);\n        voice.getTickables().forEach((tickable) => {\n            const integerTicks = ticksUsed.numerator;\n            // If we have no tick context for this tick, create one.\n            if (!tickToContextMap[integerTicks]) {\n                const newContext = makeContext({ tickID: integerTicks });\n                contexts.push(newContext);\n                tickToContextMap[integerTicks] = newContext;\n                // Maintain a list of unique integerTicks.\n                tickList.push(integerTicks);\n            }\n            // Add this tickable to the TickContext.\n            addToContext(tickable, tickToContextMap[integerTicks], voiceIndex);\n            ticksUsed.add(tickable.getTicks());\n        });\n    });\n    return {\n        map: tickToContextMap,\n        array: contexts,\n        list: tickList.sort((a, b) => a - b),\n        resolutionMultiplier,\n    };\n}\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Formatter.DEBUG)\n        log('Vex.Flow.Formatter', args);\n}\n/**\n * Get the rest line number of the next non-rest note(s).\n * @param notes array of Notes\n * @param currRestLine\n * @param currNoteIndex current note index\n * @param compare if true, return the midpoint between the current rest line and the next rest line\n * @returns a line number, which determines the vertical position of a rest.\n */\nfunction getRestLineForNextNoteGroup(notes, currRestLine, currNoteIndex, compare) {\n    // If no valid next note group, nextRestLine is same as current.\n    let nextRestLine = currRestLine;\n    // Start with the next note and keep going until we find a valid non-rest note group.\n    for (let noteIndex = currNoteIndex + 1; noteIndex < notes.length; noteIndex++) {\n        const note = notes[noteIndex];\n        if (isNote(note) && !note.isRest() && !note.shouldIgnoreTicks()) {\n            nextRestLine = note.getLineForRest();\n            break;\n        }\n    }\n    // Locate the mid point between two lines.\n    if (compare && currRestLine !== nextRestLine) {\n        const top = Math.max(currRestLine, nextRestLine);\n        const bot = Math.min(currRestLine, nextRestLine);\n        nextRestLine = midLine(top, bot);\n    }\n    return nextRestLine;\n}\n/**\n * Format implements the formatting and layout algorithms that are used\n * to position notes in a voice. The algorithm can align multiple voices both\n * within a stave, and across multiple staves.\n *\n * To do this, the formatter breaks up voices into a grid of rational-valued\n * `ticks`, to which each note is assigned. Then, minimum widths are assigned\n * to each tick based on the widths of the notes and modifiers in that tick. This\n * establishes the smallest amount of space required for each tick.\n *\n * Finally, the formatter distributes the left over space proportionally to\n * all the ticks, setting the `x` values of the notes in each tick.\n *\n * See `tests/formatter_tests.ts` for usage examples. The helper functions included\n * here (`FormatAndDraw`, `FormatAndDrawTab`) also serve as useful usage examples.\n */\nexport class Formatter {\n    constructor(options) {\n        this.formatterOptions = Object.assign({ globalSoftmax: false, softmaxFactor: 100, maxIterations: 5 }, options);\n        this.justifyWidth = 0;\n        this.totalCost = 0;\n        this.totalShift = 0;\n        this.durationStats = {};\n        // Minimum width required to render all the notes in the voices.\n        this.minTotalWidth = 0;\n        // This is set to `true` after `minTotalWidth` is calculated.\n        this.hasMinTotalWidth = false;\n        // Arrays of tick and modifier contexts.\n        this.tickContexts = undefined;\n        this.modifierContexts = undefined;\n        // Gaps between contexts, for free movement of notes post\n        // formatting.\n        this.contextGaps = {\n            total: 0,\n            gaps: [],\n        };\n        this.voices = [];\n        this.lossHistory = [];\n    }\n    /**\n     * Helper function to layout \"notes\" one after the other without\n     * regard for proportions. Useful for tests and debugging.\n     */\n    static SimpleFormat(notes, x = 0, { paddingBetween = 10 } = {}) {\n        notes.reduce((accumulator, note) => {\n            note.addToModifierContext(new ModifierContext());\n            const tick = new TickContext().addTickable(note).preFormat();\n            const metrics = tick.getMetrics();\n            tick.setX(accumulator + metrics.totalLeftPx);\n            return accumulator + tick.getWidth() + metrics.totalRightPx + paddingBetween;\n        }, x);\n    }\n    /** Helper function to plot formatter debug info. */\n    static plotDebugging(ctx, formatter, xPos, y1, y2, options) {\n        options = Object.assign({ stavePadding: Tables.currentMusicFont().lookupMetric('stave.padding') }, options);\n        const x = xPos + options.stavePadding;\n        const contextGaps = formatter.contextGaps;\n        function stroke(x1, x2, color) {\n            ctx.beginPath();\n            ctx.setStrokeStyle(color);\n            ctx.setFillStyle(color);\n            ctx.setLineWidth(1);\n            ctx.fillRect(x1, y1, Math.max(x2 - x1, 0), y2 - y1);\n        }\n        ctx.save();\n        ctx.setFont(Font.SANS_SERIF, 8);\n        contextGaps.gaps.forEach((gap) => {\n            stroke(x + gap.x1, x + gap.x2, 'rgba(100,200,100,0.4)');\n            ctx.setFillStyle('green');\n            ctx.fillText(Math.round(gap.x2 - gap.x1).toString(), x + gap.x1, y2 + 12);\n        });\n        ctx.setFillStyle('red');\n        ctx.fillText(`Loss: ${(formatter.totalCost || 0).toFixed(2)} Shift: ${(formatter.totalShift || 0).toFixed(2)} Gap: ${contextGaps.total.toFixed(2)}`, x - 20, y2 + 27);\n        ctx.restore();\n    }\n    /**\n     * Helper function to format and draw a single voice. Returns a bounding\n     * box for the notation.\n     * @param ctx  the rendering context\n     * @param stave the stave to which to draw (`Stave` or `TabStave`)\n     * @param notes array of `Note` instances (`Note`, `TextNote`, `TabNote`, etc.)\n     * @param params one of below:\n     *    * Setting `autobeam` only `(context, stave, notes, true)` or\n     *      `(ctx, stave, notes, {autobeam: true})`\n     *    * Setting `align_rests` a struct is needed `(context, stave, notes, {align_rests: true})`\n     *    * Setting both a struct is needed `(context, stave, notes, {\n     *      autobeam: true, align_rests: true})`\n     *    * `autobeam` automatically generates beams for the notes.\n     *    * `align_rests` aligns rests with nearby notes.\n     */\n    static FormatAndDraw(ctx, stave, notes, params) {\n        let options = {\n            auto_beam: false,\n            align_rests: false,\n        };\n        if (typeof params === 'object') {\n            options = Object.assign(Object.assign({}, options), params);\n        }\n        else if (typeof params === 'boolean') {\n            options.auto_beam = params;\n        }\n        // Start by creating a voice and adding all the notes to it.\n        const voice = new Voice(Tables.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(notes);\n        // Then create beams, if requested.\n        const beams = options.auto_beam ? Beam.applyAndGetBeams(voice) : [];\n        // Instantiate a `Formatter` and format the notes.\n        new Formatter()\n            .joinVoices([voice]) // , { align_rests: options.align_rests })\n            .formatToStave([voice], stave, { align_rests: options.align_rests, stave });\n        // Render the voice and beams to the stave.\n        voice.setStave(stave).draw(ctx, stave);\n        beams.forEach((beam) => beam.setContext(ctx).draw());\n        // Return the bounding box of the voice.\n        return voice.getBoundingBox();\n    }\n    /**\n     * Helper function to format and draw aligned tab and stave notes in two\n     * separate staves.\n     * @param ctx the rendering context\n     * @param tabstave a `TabStave` instance on which to render `TabNote`s.\n     * @param stave a `Stave` instance on which to render `Note`s.\n     * @param notes array of `Note` instances for the stave (`Note`, `BarNote`, etc.)\n     * @param tabnotes array of `Note` instances for the tab stave (`TabNote`, `BarNote`, etc.)\n     * @param autobeam automatically generate beams.\n     * @param params a configuration object:\n     *    * `autobeam` automatically generates beams for the notes.\n     *    * `align_rests` aligns rests with nearby notes.\n     */\n    static FormatAndDrawTab(ctx, tabstave, stave, tabnotes, notes, autobeam, params) {\n        let opts = {\n            auto_beam: autobeam,\n            align_rests: false,\n        };\n        if (typeof params === 'object') {\n            opts = Object.assign(Object.assign({}, opts), params);\n        }\n        else if (typeof params === 'boolean') {\n            opts.auto_beam = params;\n        }\n        // Create a `4/4` voice for `notes`.\n        const notevoice = new Voice(Tables.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(notes);\n        // Create a `4/4` voice for `tabnotes`.\n        const tabvoice = new Voice(Tables.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(tabnotes);\n        // Then create beams, if requested.\n        const beams = opts.auto_beam ? Beam.applyAndGetBeams(notevoice) : [];\n        // Instantiate a `Formatter` and align tab and stave notes.\n        new Formatter()\n            .joinVoices([notevoice]) // , { align_rests: opts.align_rests })\n            .joinVoices([tabvoice])\n            .formatToStave([notevoice, tabvoice], stave, { align_rests: opts.align_rests });\n        // Render voices and beams to staves.\n        notevoice.draw(ctx, stave);\n        tabvoice.draw(ctx, tabstave);\n        beams.forEach((beam) => beam.setContext(ctx).draw());\n        // Draw a connector between tab and note staves.\n        new StaveConnector(stave, tabstave).setContext(ctx).draw();\n    }\n    /**\n     * Automatically set the vertical position of rests based on previous/next note positions.\n     * @param tickables an array of Tickables.\n     * @param alignAllNotes If `false`, only align rests that are within a group of beamed notes.\n     * @param alignTuplets If `false`, ignores tuplets.\n     */\n    static AlignRestsToNotes(tickables, alignAllNotes, alignTuplets) {\n        tickables.forEach((currTickable, index) => {\n            if (isStaveNote(currTickable) && currTickable.isRest()) {\n                if (currTickable.getTuplet() && !alignTuplets) {\n                    return;\n                }\n                // If activated rests not on default can be rendered as specified.\n                const position = currTickable.getGlyph().position.toUpperCase();\n                if (position !== 'R/4' && position !== 'B/4') {\n                    return;\n                }\n                if (alignAllNotes || currTickable.getBeam()) {\n                    // Align rests with previous/next notes.\n                    const props = currTickable.getKeyProps()[0];\n                    if (index === 0) {\n                        props.line = getRestLineForNextNoteGroup(tickables, props.line, index, false);\n                    }\n                    else if (index > 0 && index < tickables.length) {\n                        // If previous tickable is a rest, use its line number.\n                        const prevTickable = tickables[index - 1];\n                        if (isStaveNote(prevTickable)) {\n                            if (prevTickable.isRest()) {\n                                props.line = prevTickable.getKeyProps()[0].line;\n                            }\n                            else {\n                                const restLine = prevTickable.getLineForRest();\n                                // Get the rest line for next valid non-rest note group.\n                                props.line = getRestLineForNextNoteGroup(tickables, restLine, index, true);\n                            }\n                        }\n                    }\n                    currTickable.setKeyLine(0, props.line);\n                }\n            }\n        });\n    }\n    /**\n     * Find all the rests in each of the `voices` and align them to neighboring notes.\n     *\n     * @param voices\n     * @param alignAllNotes If `false`, only align rests within beamed groups of notes. If `true`, align all rests.\n     */\n    alignRests(voices, alignAllNotes) {\n        if (!voices || !voices.length) {\n            throw new RuntimeError('BadArgument', 'No voices to format rests');\n        }\n        voices.forEach((voice) => Formatter.AlignRestsToNotes(voice.getTickables(), alignAllNotes));\n    }\n    /**\n     * Estimate the width required to render 'voices'.  This is done by:\n     * 1. Sum the widths of all the tick contexts\n     * 2. Estimate the padding.\n     * The latter is done by calculating the padding 3 different ways, and taking the\n     * greatest value:\n     * 1. the padding required for unaligned notes in different voices\n     * 2. the padding based on the stddev of the tickable widths\n     * 3. the padding based on the stddev of the tickable durations.\n     *\n     * The last 2 quantities estimate a 'width entropy', where notes might need more\n     * room than the proportional formatting gives them.  A measure of all same duration\n     * and width will need no extra padding, and all these quantities will be\n     * zero in that case.\n     *\n     * @param voices the voices that contain the notes\n     * @returns the estimated width in pixels\n     */\n    preCalculateMinTotalWidth(voices) {\n        const unalignedPadding = Tables.currentMusicFont().lookupMetric('stave.unalignedNotePadding');\n        // Calculate additional padding based on 3 methods:\n        // 1) unaligned beats in voices, 2) variance of width, 3) variance of durations\n        let unalignedCtxCount = 0;\n        let wsum = 0;\n        let dsum = 0;\n        const widths = [];\n        const durations = [];\n        // Cache results.\n        if (this.hasMinTotalWidth)\n            return this.minTotalWidth;\n        // Create tick contexts if not already created.\n        if (!this.tickContexts) {\n            if (!voices) {\n                throw new RuntimeError('BadArgument', \"'voices' required to run preCalculateMinTotalWidth\");\n            }\n            this.createTickContexts(voices);\n        }\n        // eslint-disable-next-line\n        const { list: contextList, map: contextMap } = this.tickContexts;\n        this.minTotalWidth = 0;\n        // Go through each tick context and calculate total width,\n        // and also accumulate values used in padding hints\n        contextList.forEach((tick) => {\n            const context = contextMap[tick];\n            context.preFormat();\n            // If this TC doesn't have all the voices on it, it's unaligned.\n            // so increment the unaligned padding accumulator\n            if (context.getTickables().length < voices.length) {\n                unalignedCtxCount += 1;\n            }\n            // Calculate the 'width entropy' over all the Tickables.\n            context.getTickables().forEach((t) => {\n                wsum += t.getMetrics().width;\n                dsum += t.getTicks().value();\n                widths.push(t.getMetrics().width);\n                durations.push(t.getTicks().value());\n            });\n            const width = context.getWidth();\n            this.minTotalWidth += width;\n        });\n        this.hasMinTotalWidth = true;\n        // normalized (0-1) STDDEV of widths/durations gives us padding hints.\n        const wavg = wsum > 0 ? wsum / widths.length : 1 / widths.length;\n        const wvar = sumArray(widths.map((ll) => Math.pow(ll - wavg, 2)));\n        const wpads = Math.pow(wvar / widths.length, 0.5) / wavg;\n        const davg = dsum / durations.length;\n        const dvar = sumArray(durations.map((ll) => Math.pow(ll - davg, 2)));\n        const dpads = Math.pow(dvar / durations.length, 0.5) / davg;\n        // Find max of 3 methods pad the width with that\n        const padmax = Math.max(dpads, wpads) * contextList.length * unalignedPadding;\n        const unalignedPad = unalignedPadding * unalignedCtxCount;\n        return this.minTotalWidth + Math.max(unalignedPad, padmax);\n    }\n    /**\n     * Get minimum width required to render all voices. Either `format` or\n     * `preCalculateMinTotalWidth` must be called before this method.\n     */\n    getMinTotalWidth() {\n        if (!this.hasMinTotalWidth) {\n            throw new RuntimeError('NoMinTotalWidth', \"Call 'preCalculateMinTotalWidth' or 'preFormat' before calling 'getMinTotalWidth'\");\n        }\n        return this.minTotalWidth;\n    }\n    /** Calculate the resolution multiplier for `voices`. */\n    static getResolutionMultiplier(voices) {\n        if (!voices || !voices.length) {\n            throw new RuntimeError('BadArgument', 'No voices to format');\n        }\n        const totalTicks = voices[0].getTotalTicks();\n        const resolutionMultiplier = voices.reduce((accumulator, voice) => {\n            if (!voice.getTotalTicks().equals(totalTicks)) {\n                throw new RuntimeError('TickMismatch', 'Voices should have same total note duration in ticks.');\n            }\n            if (voice.getMode() === Voice.Mode.STRICT && !voice.isComplete()) {\n                throw new RuntimeError('IncompleteVoice', 'Voice does not have enough notes.');\n            }\n            return Math.max(accumulator, Fraction.LCM(accumulator, voice.getResolutionMultiplier()));\n        }, 1);\n        return resolutionMultiplier;\n    }\n    /** Create a `ModifierContext` for each tick in `voices`. */\n    createModifierContexts(voices) {\n        const fn = (tickable, context) => tickable.addToModifierContext(context);\n        const contexts = createContexts(voices, () => new ModifierContext(), fn);\n        this.modifierContexts = contexts;\n        return contexts;\n    }\n    /**\n     * Create a `TickContext` for each tick in `voices`. Also calculate the\n     * total number of ticks in voices.\n     */\n    createTickContexts(voices) {\n        const fn = (tickable, context, voiceIndex) => context.addTickable(tickable, voiceIndex);\n        const contexts = createContexts(voices, (tick) => new TickContext(tick), fn);\n        this.tickContexts = contexts;\n        const contextArray = this.tickContexts.array;\n        contextArray.forEach((context) => {\n            context.tContexts = contextArray;\n        });\n        return contexts;\n    }\n    /**\n     * This is the core formatter logic. Format voices and justify them\n     * to `justifyWidth` pixels. `renderingContext` is required to justify elements\n     * that can't retreive widths without a canvas. This method sets the `x` positions\n     * of all the tickables/notes in the formatter.\n     */\n    preFormat(justifyWidth = 0, renderingContext, voicesParam, stave) {\n        // Initialize context maps.\n        const contexts = this.tickContexts;\n        if (!contexts) {\n            throw new RuntimeError('NoTickContexts', 'preFormat requires TickContexts');\n        }\n        const { list: contextList, map: contextMap } = contexts;\n        // Reset loss history for evaluator.\n        this.lossHistory = [];\n        // If voices and a stave were provided, set the Stave for each voice\n        // and preFormat to apply Y values to the notes;\n        if (voicesParam && stave) {\n            voicesParam.forEach((voice) => voice.setStave(stave).preFormat());\n        }\n        // Now distribute the ticks to each tick context, and assign them their\n        // own X positions.\n        let x = 0;\n        let shift = 0;\n        this.minTotalWidth = 0;\n        let totalTicks = 0;\n        // Pass 1: Give each note maximum width requested by context.\n        contextList.forEach((tick) => {\n            const context = contextMap[tick];\n            // Make sure that all tickables in this context have calculated their\n            // space requirements.\n            context.preFormat();\n            const width = context.getWidth();\n            this.minTotalWidth += width;\n            const maxTicks = context.getMaxTicks().value();\n            totalTicks += maxTicks;\n            const metrics = context.getMetrics();\n            x = x + shift + metrics.totalLeftPx;\n            context.setX(x);\n            // Calculate shift for the next tick.\n            shift = width - metrics.totalLeftPx;\n        });\n        // Use softmax based on all notes across all staves. (options.globalSoftmax)\n        const { globalSoftmax, softmaxFactor, maxIterations } = this.formatterOptions;\n        const exp = (tick) => Math.pow(softmaxFactor, (contextMap[tick].getMaxTicks().value() / totalTicks));\n        const expTicksUsed = sumArray(contextList.map(exp));\n        this.minTotalWidth = x + shift;\n        this.hasMinTotalWidth = true;\n        // No justification needed. End formatting.\n        if (justifyWidth <= 0)\n            return this.evaluate();\n        // Start justification. Subtract the right extra pixels of the final context because the formatter\n        // justifies based on the context's X position, which is the left-most part of the note head.\n        const firstContext = contextMap[contextList[0]];\n        const lastContext = contextMap[contextList[contextList.length - 1]];\n        // Calculate the \"distance error\" between the tick contexts. The expected distance is the spacing proportional to\n        // the softmax of the ticks.\n        function calculateIdealDistances(adjustedJustifyWidth) {\n            const distances = contextList.map((tick, i) => {\n                const context = contextMap[tick];\n                const voices = context.getTickablesByVoice();\n                let backTickable;\n                if (i > 0) {\n                    const prevContext = contextMap[contextList[i - 1]];\n                    // Go through each tickable and search backwards for another tickable\n                    // in the same voice. If found, use that duration (ticks) to calculate\n                    // the expected distance.\n                    for (let j = i - 1; j >= 0; j--) {\n                        const backTick = contextMap[contextList[j]];\n                        const backVoices = backTick.getTickablesByVoice();\n                        // Look for matching voices between tick contexts.\n                        const matchingVoices = [];\n                        Object.keys(voices).forEach((v) => {\n                            if (backVoices[v]) {\n                                matchingVoices.push(v);\n                            }\n                        });\n                        if (matchingVoices.length > 0) {\n                            // Found matching voices, get largest duration\n                            let maxTicks = 0;\n                            let maxNegativeShiftPx = Infinity;\n                            let expectedDistance = 0;\n                            matchingVoices.forEach((v) => {\n                                const ticks = backVoices[v].getTicks().value();\n                                if (ticks > maxTicks) {\n                                    backTickable = backVoices[v];\n                                    maxTicks = ticks;\n                                }\n                                // Calculate the limits of the shift based on modifiers, etc.\n                                const thisTickable = voices[v];\n                                const insideLeftEdge = thisTickable.getX() -\n                                    (thisTickable.getMetrics().modLeftPx + thisTickable.getMetrics().leftDisplacedHeadPx);\n                                const backMetrics = backVoices[v].getMetrics();\n                                const insideRightEdge = backVoices[v].getX() + backMetrics.notePx + backMetrics.modRightPx + backMetrics.rightDisplacedHeadPx;\n                                // Don't allow shifting if notes in the same voice can collide\n                                maxNegativeShiftPx = Math.min(maxNegativeShiftPx, insideLeftEdge - insideRightEdge);\n                            });\n                            // Don't shift further left than the notehead of the last context. Actually, stay at most 5% to the right\n                            // so that two different tick contexts don't align across staves.\n                            maxNegativeShiftPx = Math.min(maxNegativeShiftPx, context.getX() - (prevContext.getX() + adjustedJustifyWidth * 0.05));\n                            // Calculate the expected distance of the current context from the last matching tickable. The\n                            // distance is scaled down by the softmax for the voice.\n                            if (globalSoftmax) {\n                                const t = totalTicks;\n                                expectedDistance = (Math.pow(softmaxFactor, (maxTicks / t)) / expTicksUsed) * adjustedJustifyWidth;\n                            }\n                            else if (typeof backTickable !== 'undefined') {\n                                expectedDistance = backTickable.getVoice().softmax(maxTicks) * adjustedJustifyWidth;\n                            }\n                            return {\n                                expectedDistance,\n                                maxNegativeShiftPx,\n                                fromTickable: backTickable,\n                            };\n                        }\n                    }\n                }\n                return { expectedDistance: 0, fromTickablePx: 0, maxNegativeShiftPx: 0 };\n            });\n            return distances;\n        }\n        function shiftToIdealDistances(idealDistances) {\n            // Distribute ticks to the contexts based on the calculated distance error.\n            const centerX = adjustedJustifyWidth / 2;\n            let spaceAccum = 0;\n            contextList.forEach((tick, index) => {\n                const context = contextMap[tick];\n                if (index > 0) {\n                    const contextX = context.getX();\n                    const ideal = idealDistances[index];\n                    const errorPx = defined(ideal.fromTickable).getX() + ideal.expectedDistance - (contextX + spaceAccum);\n                    let negativeShiftPx = 0;\n                    if (errorPx > 0) {\n                        spaceAccum += errorPx;\n                    }\n                    else if (errorPx < 0) {\n                        negativeShiftPx = Math.min(ideal.maxNegativeShiftPx, Math.abs(errorPx));\n                        spaceAccum += -negativeShiftPx;\n                    }\n                    context.setX(contextX + spaceAccum);\n                }\n                // Move center aligned tickables to middle\n                context.getCenterAlignedTickables().forEach((tickable) => {\n                    tickable.setCenterXShift(centerX - context.getX());\n                });\n            });\n            return lastContext.getX() - firstContext.getX();\n        }\n        const adjustedJustifyWidth = justifyWidth -\n            lastContext.getMetrics().notePx -\n            lastContext.getMetrics().totalRightPx -\n            firstContext.getMetrics().totalLeftPx;\n        const musicFont = Tables.currentMusicFont();\n        const configMinPadding = musicFont.lookupMetric('stave.endPaddingMin');\n        const configMaxPadding = musicFont.lookupMetric('stave.endPaddingMax');\n        const leftPadding = musicFont.lookupMetric('stave.padding');\n        let targetWidth = adjustedJustifyWidth;\n        const distances = calculateIdealDistances(targetWidth);\n        let actualWidth = shiftToIdealDistances(distances);\n        // Just one context. Done formatting.\n        if (contextList.length === 1)\n            return 0;\n        const calcMinDistance = (targetWidth, distances) => {\n            let mdCalc = targetWidth / 2;\n            if (distances.length > 1) {\n                for (let di = 1; di < distances.length; ++di) {\n                    mdCalc = Math.min(distances[di].expectedDistance / 2, mdCalc);\n                }\n            }\n            return mdCalc;\n        };\n        const minDistance = calcMinDistance(targetWidth, distances);\n        // right justify to either the configured padding, or the min distance between notes, whichever is greatest.\n        // This * 2 keeps the existing formatting unless there is 'a lot' of extra whitespace, which won't break\n        // existing visual regression tests.\n        const paddingMaxCalc = (curTargetWidth) => {\n            let lastTickablePadding = 0;\n            const lastTickable = lastContext && lastContext.getMaxTickable();\n            if (lastTickable) {\n                const voice = lastTickable.getVoice();\n                // If the number of actual ticks in the measure <> configured ticks, right-justify\n                // because the softmax won't yield the correct value\n                if (voice.getTicksUsed().value() > voice.getTotalTicks().value()) {\n                    return configMaxPadding * 2 < minDistance ? minDistance : configMaxPadding;\n                }\n                const tickWidth = lastTickable.getWidth();\n                lastTickablePadding =\n                    voice.softmax(lastContext.getMaxTicks().value()) * curTargetWidth - (tickWidth + leftPadding);\n            }\n            return configMaxPadding * 2 < lastTickablePadding ? lastTickablePadding : configMaxPadding;\n        };\n        let paddingMax = paddingMaxCalc(targetWidth);\n        let paddingMin = paddingMax - (configMaxPadding - configMinPadding);\n        const maxX = adjustedJustifyWidth - paddingMin;\n        let iterations = maxIterations;\n        // Adjust justification width until the right margin is as close as possible to the calculated padding,\n        // without going over\n        while ((actualWidth > maxX && iterations > 0) || (actualWidth + paddingMax < maxX && iterations > 1)) {\n            targetWidth -= actualWidth - maxX;\n            paddingMax = paddingMaxCalc(targetWidth);\n            paddingMin = paddingMax - (configMaxPadding - configMinPadding);\n            actualWidth = shiftToIdealDistances(calculateIdealDistances(targetWidth));\n            iterations--;\n        }\n        this.justifyWidth = justifyWidth;\n        return this.evaluate();\n    }\n    /** Calculate the total cost of this formatting decision. */\n    evaluate() {\n        if (!this.tickContexts)\n            return 0;\n        const contexts = this.tickContexts;\n        const justifyWidth = this.justifyWidth;\n        // Calculate available slack per tick context. This works out how much freedom\n        // to move a context has in either direction, without affecting other notes.\n        this.contextGaps = { total: 0, gaps: [] };\n        contexts.list.forEach((tick, index) => {\n            if (index === 0)\n                return;\n            const prevTick = contexts.list[index - 1];\n            const prevContext = contexts.map[prevTick];\n            const context = contexts.map[tick];\n            const prevMetrics = prevContext.getMetrics();\n            const currMetrics = context.getMetrics();\n            // Calculate X position of right edge of previous note\n            const insideRightEdge = prevContext.getX() + prevMetrics.notePx + prevMetrics.totalRightPx;\n            // Calculate X position of left edge of current note\n            const insideLeftEdge = context.getX() - currMetrics.totalLeftPx;\n            const gap = insideLeftEdge - insideRightEdge;\n            this.contextGaps.total += gap;\n            this.contextGaps.gaps.push({ x1: insideRightEdge, x2: insideLeftEdge });\n            // Tell the tick contexts how much they can reposition themselves.\n            context.getFormatterMetrics().freedom.left = gap;\n            prevContext.getFormatterMetrics().freedom.right = gap;\n        });\n        // Calculate mean distance in each voice for each duration type, then calculate\n        // how far each note is from the mean.\n        this.durationStats = {};\n        const durationStats = this.durationStats;\n        function updateStats(duration, space) {\n            const stats = durationStats[duration];\n            if (stats === undefined) {\n                durationStats[duration] = { mean: space, count: 1 };\n            }\n            else {\n                stats.count += 1;\n                stats.mean = (stats.mean + space) / 2;\n            }\n        }\n        this.voices.forEach((voice) => {\n            voice.getTickables().forEach((note, i, notes) => {\n                const duration = note.getTicks().clone().simplify().toString();\n                const metrics = note.getMetrics();\n                const formatterMetrics = note.getFormatterMetrics();\n                const leftNoteEdge = note.getX() + metrics.notePx + metrics.modRightPx + metrics.rightDisplacedHeadPx;\n                let space = 0;\n                if (i < notes.length - 1) {\n                    const rightNote = notes[i + 1];\n                    const rightMetrics = rightNote.getMetrics();\n                    const rightNoteEdge = rightNote.getX() - rightMetrics.modLeftPx - rightMetrics.leftDisplacedHeadPx;\n                    space = rightNoteEdge - leftNoteEdge;\n                    formatterMetrics.space.used = rightNote.getX() - note.getX();\n                    rightNote.getFormatterMetrics().freedom.left = space;\n                }\n                else {\n                    space = justifyWidth - leftNoteEdge;\n                    formatterMetrics.space.used = justifyWidth - note.getX();\n                }\n                formatterMetrics.freedom.right = space;\n                updateStats(duration, formatterMetrics.space.used);\n            });\n        });\n        // Calculate how much each note deviates from the mean. Loss function is square\n        // root of the sum of squared deviations.\n        let totalDeviation = 0;\n        this.voices.forEach((voice) => {\n            voice.getTickables().forEach((note) => {\n                const duration = note.getTicks().clone().simplify().toString();\n                const metrics = note.getFormatterMetrics();\n                metrics.space.mean = durationStats[duration].mean;\n                metrics.duration = duration;\n                metrics.iterations += 1;\n                metrics.space.deviation = metrics.space.used - metrics.space.mean;\n                totalDeviation += Math.pow(metrics.space.deviation, 2);\n            });\n        });\n        this.totalCost = Math.sqrt(totalDeviation);\n        this.lossHistory.push(this.totalCost);\n        return this.totalCost;\n    }\n    /**\n     * Run a single iteration of rejustification. At a high level, this method calculates\n     * the overall \"loss\" (or cost) of this layout, and repositions tickcontexts in an\n     * attempt to reduce the cost. You can call this method multiple times until it finds\n     * and oscillates around a global minimum.\n     * @param alpha the \"learning rate\" for the formatter. It determines how much of a shift\n     * the formatter should make based on its cost function.\n     */\n    tune(options) {\n        var _a;\n        const contexts = this.tickContexts;\n        if (!contexts) {\n            return 0;\n        }\n        const alpha = (_a = options === null || options === void 0 ? void 0 : options.alpha) !== null && _a !== void 0 ? _a : 0.5;\n        // Move `current` tickcontext by `shift` pixels, and adjust the freedom\n        // on adjacent tickcontexts.\n        function move(current, shift, prev, next) {\n            current.setX(current.getX() + shift);\n            current.getFormatterMetrics().freedom.left += shift;\n            current.getFormatterMetrics().freedom.right -= shift;\n            if (prev)\n                prev.getFormatterMetrics().freedom.right += shift;\n            if (next)\n                next.getFormatterMetrics().freedom.left -= shift;\n        }\n        let shift = 0;\n        this.totalShift = 0;\n        contexts.list.forEach((tick, index, list) => {\n            const context = contexts.map[tick];\n            const prevContext = index > 0 ? contexts.map[list[index - 1]] : undefined;\n            const nextContext = index < list.length - 1 ? contexts.map[list[index + 1]] : undefined;\n            move(context, shift, prevContext, nextContext);\n            const cost = -sumArray(context.getTickables().map((t) => t.getFormatterMetrics().space.deviation));\n            if (cost > 0) {\n                shift = -Math.min(context.getFormatterMetrics().freedom.right, Math.abs(cost));\n            }\n            else if (cost < 0) {\n                if (nextContext) {\n                    shift = Math.min(nextContext.getFormatterMetrics().freedom.right, Math.abs(cost));\n                }\n                else {\n                    shift = 0;\n                }\n            }\n            shift *= alpha;\n            this.totalShift += shift;\n        });\n        return this.evaluate();\n    }\n    /**\n     * This is the top-level call for all formatting logic completed\n     * after `x` *and* `y` values have been computed for the notes\n     * in the voices.\n     */\n    postFormat() {\n        const postFormatContexts = (contexts) => contexts.list.forEach((tick) => contexts.map[tick].postFormat());\n        if (this.modifierContexts)\n            postFormatContexts(this.modifierContexts);\n        if (this.tickContexts)\n            postFormatContexts(this.tickContexts);\n        return this;\n    }\n    /**\n     * Take all `voices` and create `ModifierContext`s out of them. This tells\n     * the formatters that the voices belong on a single stave.\n     */\n    joinVoices(voices) {\n        this.createModifierContexts(voices);\n        this.hasMinTotalWidth = false;\n        return this;\n    }\n    /**\n     * Align rests in voices, justify the contexts, and position the notes\n     * so voices are aligned and ready to render onto the stave. This method\n     * mutates the `x` positions of all tickables in `voices`.\n     *\n     * Voices are full justified to fit in `justifyWidth` pixels.\n     *\n     * Set `options.context` to the rendering context. Set `options.align_rests`\n     * to true to enable rest alignment.\n     */\n    format(voices, justifyWidth, options) {\n        const opts = Object.assign({ align_rests: false }, options);\n        this.voices = voices;\n        const softmaxFactor = this.formatterOptions.softmaxFactor;\n        if (softmaxFactor) {\n            this.voices.forEach((v) => v.setSoftmaxFactor(softmaxFactor));\n        }\n        this.alignRests(voices, opts.align_rests);\n        this.createTickContexts(voices);\n        this.preFormat(justifyWidth, opts.context, voices, opts.stave);\n        // Only postFormat if a stave was supplied for y value formatting\n        if (opts.stave)\n            this.postFormat();\n        return this;\n    }\n    // This method is just like `format` except that the `justifyWidth` is inferred from the `stave`.\n    formatToStave(voices, stave, optionsParam) {\n        const options = Object.assign({ context: stave.getContext() }, optionsParam);\n        // eslint-disable-next-line\n        const justifyWidth = stave.getNoteEndX() - stave.getNoteStartX() - Stave.defaultPadding;\n        L('Formatting voices to width: ', justifyWidth);\n        return this.format(voices, justifyWidth, options);\n    }\n    getTickContext(tick) {\n        var _a;\n        return (_a = this.tickContexts) === null || _a === void 0 ? void 0 : _a.map[tick];\n    }\n}\n// To enable logging for this class. Set `Vex.Flow.Formatter.DEBUG` to `true`.\nFormatter.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n/**\n * ## Description\n *\n * Create a new tuplet from the specified notes. The notes must\n * be part of the same voice. If they are of different rhythmic\n * values, then options.num_notes must be set.\n *\n * @constructor\n * @param {Array.<Vex.Flow.StaveNote>} A set of notes: staveNotes,\n *   notes, etc... any class that inherits stemmableNote at some\n *   point in its prototype chain.\n * @param options: object {\n *\n *   num_notes: fit this many notes into...\n *   notes_occupied: ...the space of this many notes\n *\n *       Together, these two properties make up the tuplet ratio\n *     in the form of num_notes : notes_occupied.\n *       num_notes defaults to the number of notes passed in, so\n *     it is important that if you omit this property, all of\n *     the notes passed should be of the same note value.\n *       notes_occupied defaults to 2 -- so you should almost\n *     certainly pass this parameter for anything other than\n *     a basic triplet.\n *\n *   location:\n *     default 1, which is above the notes: ┌─── 3 ───┐\n *      -1 is below the notes └─── 3 ───┘\n *\n *   bracketed: boolean, draw a bracket around the tuplet number\n *     when true: ┌─── 3 ───┐   when false: 3\n *     defaults to true if notes are not beamed, false otherwise\n *\n *   ratioed: boolean\n *     when true: ┌─── 7:8 ───┐, when false: ┌─── 7 ───┐\n *     defaults to true if the difference between num_notes and\n *     notes_occupied is greater than 1.\n *\n *   y_offset: int, default 0\n *     manually offset a tuplet, for instance to avoid collisions\n *     with articulations, etc...\n * }\n */\nimport { Element } from './element';\nimport { Formatter } from './formatter';\nimport { Glyph } from './glyph';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\nexport var TupletLocation;\n(function (TupletLocation) {\n    TupletLocation[TupletLocation[\"BOTTOM\"] = -1] = \"BOTTOM\";\n    TupletLocation[TupletLocation[\"TOP\"] = 1] = \"TOP\";\n})(TupletLocation || (TupletLocation = {}));\nexport class Tuplet extends Element {\n    constructor(notes, options = {}) {\n        super();\n        this.numerator_glyphs = [];\n        this.denom_glyphs = [];\n        if (!notes || !notes.length) {\n            throw new RuntimeError('BadArguments', 'No notes provided for tuplet.');\n        }\n        this.options = options;\n        this.notes = notes;\n        this.num_notes = this.options.num_notes != undefined ? this.options.num_notes : notes.length;\n        // We accept beats_occupied, but warn that it's deprecated:\n        // the preferred property name is now notes_occupied.\n        if (this.options.beats_occupied) {\n            this.beatsOccupiedDeprecationWarning();\n        }\n        this.notes_occupied = this.options.notes_occupied || this.options.beats_occupied || 2;\n        if (this.options.bracketed != undefined) {\n            this.bracketed = this.options.bracketed;\n        }\n        else {\n            this.bracketed = notes.some((note) => !note.hasBeam());\n        }\n        this.ratioed =\n            this.options.ratioed != undefined ? this.options.ratioed : Math.abs(this.notes_occupied - this.num_notes) > 1;\n        this.point = Tables.currentMusicFont().lookupMetric('digits.tupletPoint');\n        this.y_pos = 16;\n        this.x_pos = 100;\n        this.width = 200;\n        this.setTupletLocation(this.options.location || Tuplet.LOCATION_TOP);\n        Formatter.AlignRestsToNotes(notes, true, true);\n        this.resolveGlyphs();\n        this.attach();\n    }\n    static get CATEGORY() {\n        return Category.Tuplet;\n    }\n    static get LOCATION_TOP() {\n        return TupletLocation.TOP;\n    }\n    static get LOCATION_BOTTOM() {\n        return TupletLocation.BOTTOM;\n    }\n    static get NESTING_OFFSET() {\n        return 15;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static get metrics() {\n        return Tables.currentMusicFont().getMetrics().glyphs.tuplet;\n    }\n    attach() {\n        for (let i = 0; i < this.notes.length; i++) {\n            const note = this.notes[i];\n            note.setTuplet(this);\n        }\n    }\n    detach() {\n        for (let i = 0; i < this.notes.length; i++) {\n            const note = this.notes[i];\n            note.resetTuplet(this);\n        }\n    }\n    /**\n     * Set whether or not the bracket is drawn.\n     */\n    setBracketed(bracketed) {\n        this.bracketed = !!bracketed;\n        return this;\n    }\n    /**\n     * Set whether or not the ratio is shown.\n     */\n    setRatioed(ratioed) {\n        this.ratioed = !!ratioed;\n        return this;\n    }\n    /**\n     * Set the tuplet indicator to be displayed either on the top or bottom of the stave.\n     */\n    setTupletLocation(location) {\n        if (location !== Tuplet.LOCATION_TOP && location !== Tuplet.LOCATION_BOTTOM) {\n            // eslint-disable-next-line\n            console.warn(`Invalid tuplet location [${location}]. Using Tuplet.LOCATION_TOP.`);\n            location = Tuplet.LOCATION_TOP;\n        }\n        this.location = location;\n        return this;\n    }\n    getNotes() {\n        return this.notes;\n    }\n    getNoteCount() {\n        return this.num_notes;\n    }\n    beatsOccupiedDeprecationWarning() {\n        // eslint-disable-next-line\n        console.warn('beats_occupied has been deprecated as an option for tuplets. Please use notes_occupied instead.', 'Calls to getBeatsOccupied / setBeatsOccupied should now be routed to getNotesOccupied / setNotesOccupied.', 'The old methods will be removed in VexFlow 5.0.');\n    }\n    getBeatsOccupied() {\n        this.beatsOccupiedDeprecationWarning();\n        return this.getNotesOccupied();\n    }\n    setBeatsOccupied(beats) {\n        this.beatsOccupiedDeprecationWarning();\n        return this.setNotesOccupied(beats);\n    }\n    getNotesOccupied() {\n        return this.notes_occupied;\n    }\n    setNotesOccupied(notes) {\n        this.detach();\n        this.notes_occupied = notes;\n        this.resolveGlyphs();\n        this.attach();\n    }\n    resolveGlyphs() {\n        this.numerator_glyphs = [];\n        let n = this.num_notes;\n        while (n >= 1) {\n            this.numerator_glyphs.unshift(new Glyph('timeSig' + (n % 10), this.point));\n            n = parseInt((n / 10).toString(), 10);\n        }\n        this.denom_glyphs = [];\n        n = this.notes_occupied;\n        while (n >= 1) {\n            this.denom_glyphs.unshift(new Glyph('timeSig' + (n % 10), this.point));\n            n = parseInt((n / 10).toString(), 10);\n        }\n    }\n    // determine how many tuplets are nested within this tuplet\n    // on the same side (above/below), to calculate a y\n    // offset for this tuplet:\n    getNestedTupletCount() {\n        const location = this.location;\n        const first_note = this.notes[0];\n        let maxTupletCount = countTuplets(first_note, location);\n        let minTupletCount = countTuplets(first_note, location);\n        // Count the tuplets that are on the same side (above/below)\n        // as this tuplet:\n        function countTuplets(note, location) {\n            return note.getTupletStack().filter((tuplet) => tuplet.location === location).length;\n        }\n        this.notes.forEach((note) => {\n            const tupletCount = countTuplets(note, location);\n            maxTupletCount = tupletCount > maxTupletCount ? tupletCount : maxTupletCount;\n            minTupletCount = tupletCount < minTupletCount ? tupletCount : minTupletCount;\n        });\n        return maxTupletCount - minTupletCount;\n    }\n    // determine the y position of the tuplet:\n    getYPosition() {\n        // offset the tuplet for any nested tuplets between\n        // it and the notes:\n        const nested_tuplet_y_offset = this.getNestedTupletCount() * Tuplet.NESTING_OFFSET * -this.location;\n        // offset the tuplet for any manual y_offset:\n        const y_offset = this.options.y_offset || 0;\n        // now iterate through the notes and find our highest\n        // or lowest locations, to form a base y_pos\n        const first_note = this.notes[0];\n        let y_pos;\n        if (this.location === Tuplet.LOCATION_TOP) {\n            y_pos = first_note.checkStave().getYForLine(0) - Tuplet.metrics.topModifierOffset;\n            // check modifiers above note to see if they will collide with tuplet beam\n            for (let i = 0; i < this.notes.length; ++i) {\n                const note = this.notes[i];\n                let modLines = 0;\n                const mc = note.getModifierContext();\n                if (mc) {\n                    modLines = Math.max(modLines, mc.getState().top_text_line);\n                }\n                const modY = note.getYForTopText(modLines) - Tuplet.metrics.noteHeadOffset;\n                if (note.hasStem() || note.isRest()) {\n                    const top_y = note.getStemDirection() === Stem.UP\n                        ? note.getStemExtents().topY - Tuplet.metrics.stemOffset\n                        : note.getStemExtents().baseY - Tuplet.metrics.noteHeadOffset;\n                    y_pos = Math.min(top_y, y_pos);\n                    if (modLines > 0) {\n                        y_pos = Math.min(modY, y_pos);\n                    }\n                }\n            }\n        }\n        else {\n            let lineCheck = Tuplet.metrics.bottomLine; // tuplet default on line 4\n            // check modifiers below note to see if they will collide with tuplet beam\n            this.notes.forEach((nn) => {\n                const mc = nn.getModifierContext();\n                if (mc) {\n                    lineCheck = Math.max(lineCheck, mc.getState().text_line + 1);\n                }\n            });\n            y_pos = first_note.checkStave().getYForLine(lineCheck) + Tuplet.metrics.noteHeadOffset;\n            for (let i = 0; i < this.notes.length; ++i) {\n                if (this.notes[i].hasStem() || this.notes[i].isRest()) {\n                    const bottom_y = this.notes[i].getStemDirection() === Stem.UP\n                        ? this.notes[i].getStemExtents().baseY + Tuplet.metrics.noteHeadOffset\n                        : this.notes[i].getStemExtents().topY + Tuplet.metrics.stemOffset;\n                    if (bottom_y > y_pos) {\n                        y_pos = bottom_y;\n                    }\n                }\n            }\n        }\n        return y_pos + nested_tuplet_y_offset + y_offset;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        // determine x value of left bound of tuplet\n        const first_note = this.notes[0];\n        const last_note = this.notes[this.notes.length - 1];\n        if (!this.bracketed) {\n            this.x_pos = first_note.getStemX();\n            this.width = last_note.getStemX() - this.x_pos;\n        }\n        else {\n            this.x_pos = first_note.getTieLeftX() - 5;\n            this.width = last_note.getTieRightX() - this.x_pos + 5;\n        }\n        // determine y value for tuplet\n        this.y_pos = this.getYPosition();\n        const addGlyphWidth = (width, glyph) => width + defined(glyph.getMetrics().width);\n        // calculate total width of tuplet notation\n        let width = this.numerator_glyphs.reduce(addGlyphWidth, 0);\n        if (this.ratioed) {\n            width = this.denom_glyphs.reduce(addGlyphWidth, width);\n            width += this.point * 0.32;\n        }\n        const notation_center_x = this.x_pos + this.width / 2;\n        const notation_start_x = notation_center_x - width / 2;\n        // draw bracket if the tuplet is not beamed\n        if (this.bracketed) {\n            const line_width = this.width / 2 - width / 2 - 5;\n            // only draw the bracket if it has positive length\n            if (line_width > 0) {\n                ctx.fillRect(this.x_pos, this.y_pos, line_width, 1);\n                ctx.fillRect(this.x_pos + this.width / 2 + width / 2 + 5, this.y_pos, line_width, 1);\n                ctx.fillRect(this.x_pos, this.y_pos + (this.location === Tuplet.LOCATION_BOTTOM ? 1 : 0), 1, this.location * 10);\n                ctx.fillRect(this.x_pos + this.width, this.y_pos + (this.location === Tuplet.LOCATION_BOTTOM ? 1 : 0), 1, this.location * 10);\n            }\n        }\n        // draw numerator glyphs\n        const shiftY = Tables.currentMusicFont().lookupMetric('digits.shiftY', 0);\n        let x_offset = 0;\n        this.numerator_glyphs.forEach((glyph) => {\n            glyph.render(ctx, notation_start_x + x_offset, this.y_pos + this.point / 3 - 2 + shiftY);\n            x_offset += defined(glyph.getMetrics().width);\n        });\n        // display colon and denominator if the ratio is to be shown\n        if (this.ratioed) {\n            const colon_x = notation_start_x + x_offset + this.point * 0.16;\n            const colon_radius = this.point * 0.06;\n            ctx.beginPath();\n            ctx.arc(colon_x, this.y_pos - this.point * 0.08, colon_radius, 0, Math.PI * 2, true);\n            ctx.closePath();\n            ctx.fill();\n            ctx.beginPath();\n            ctx.arc(colon_x, this.y_pos + this.point * 0.12, colon_radius, 0, Math.PI * 2, true);\n            ctx.closePath();\n            ctx.fill();\n            x_offset += this.point * 0.32;\n            this.denom_glyphs.forEach((glyph) => {\n                glyph.render(ctx, notation_start_x + x_offset, this.y_pos + this.point / 3 - 2 + shiftY);\n                x_offset += defined(glyph.getMetrics().width);\n            });\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { TupletLocation } from './tuplet';\nimport { Category, isStaveNote, isTabNote } from './typeguard';\nimport { RuntimeError } from './util';\nfunction calculateStemDirection(notes) {\n    let lineSum = 0;\n    notes.forEach((note) => {\n        if (note.keyProps) {\n            note.keyProps.forEach((keyProp) => {\n                lineSum += keyProp.line - 3;\n            });\n        }\n    });\n    if (lineSum >= 0) {\n        return Stem.DOWN;\n    }\n    return Stem.UP;\n}\nfunction getStemSlope(firstNote, lastNote) {\n    const firstStemTipY = firstNote.getStemExtents().topY;\n    const firstStemX = firstNote.getStemX();\n    const lastStemTipY = lastNote.getStemExtents().topY;\n    const lastStemX = lastNote.getStemX();\n    return (lastStemTipY - firstStemTipY) / (lastStemX - firstStemX);\n}\nexport const BEAM_LEFT = 'L';\nexport const BEAM_RIGHT = 'R';\nexport const BEAM_BOTH = 'B';\n/** `Beams` span over a set of `StemmableNotes`. */\nexport class Beam extends Element {\n    constructor(notes, auto_stem = false) {\n        super();\n        this.slope = 0;\n        this.y_shift = 0;\n        /**\n         * Overrides to default beam directions for secondary-level beams that do not\n         * connect to any other note. See further explanation at\n         * `setPartialBeamSideAt`\n         */\n        this.forcedPartialDirections = {};\n        if (!notes || notes.length === 0) {\n            throw new RuntimeError('BadArguments', 'No notes provided for beam.');\n        }\n        if (notes.length === 1) {\n            throw new RuntimeError('BadArguments', 'Too few notes for beam.');\n        }\n        // Validate beam line, direction and ticks.\n        this.ticks = notes[0].getIntrinsicTicks();\n        if (this.ticks >= Tables.durationToTicks('4')) {\n            throw new RuntimeError('BadArguments', 'Beams can only be applied to notes shorter than a quarter note.');\n        }\n        let i; // shared iterator\n        let note;\n        this.stem_direction = Stem.UP;\n        for (i = 0; i < notes.length; ++i) {\n            note = notes[i];\n            if (note.hasStem()) {\n                this.stem_direction = note.getStemDirection();\n                break;\n            }\n        }\n        let stem_direction = this.stem_direction;\n        // Figure out optimal stem direction based on given notes\n        if (auto_stem && isStaveNote(notes[0])) {\n            stem_direction = calculateStemDirection(notes);\n        }\n        else if (auto_stem && isTabNote(notes[0])) {\n            // Auto Stem TabNotes\n            const stem_weight = notes.reduce((memo, note) => memo + note.getStemDirection(), 0);\n            stem_direction = stem_weight > -1 ? Stem.UP : Stem.DOWN;\n        }\n        // Apply stem directions and attach beam to notes\n        for (i = 0; i < notes.length; ++i) {\n            note = notes[i];\n            if (auto_stem) {\n                note.setStemDirection(stem_direction);\n                this.stem_direction = stem_direction;\n            }\n            note.setBeam(this);\n        }\n        this.postFormatted = false;\n        this.notes = notes;\n        this.beam_count = this.getBeamCount();\n        this.break_on_indices = [];\n        this.render_options = {\n            beam_width: 5,\n            max_slope: 0.25,\n            min_slope: -0.25,\n            slope_iterations: 20,\n            slope_cost: 100,\n            show_stemlets: false,\n            stemlet_extension: 7,\n            partial_beam_length: 10,\n            flat_beams: false,\n            min_flat_beam_offset: 15,\n        };\n    }\n    static get CATEGORY() {\n        return Category.Beam;\n    }\n    /** Get the direction of the beam */\n    getStemDirection() {\n        return this.stem_direction;\n    }\n    /**\n     * Get the default beam groups for a provided time signature.\n     * Attempt to guess if the time signature is not found in table.\n     * Currently this is fairly naive.\n     */\n    static getDefaultBeamGroups(time_sig) {\n        if (!time_sig || time_sig === 'c') {\n            time_sig = '4/4';\n        }\n        const defaults = {\n            '1/2': ['1/2'],\n            '2/2': ['1/2'],\n            '3/2': ['1/2'],\n            '4/2': ['1/2'],\n            '1/4': ['1/4'],\n            '2/4': ['1/4'],\n            '3/4': ['1/4'],\n            '4/4': ['1/4'],\n            '1/8': ['1/8'],\n            '2/8': ['2/8'],\n            '3/8': ['3/8'],\n            '4/8': ['2/8'],\n            '1/16': ['1/16'],\n            '2/16': ['2/16'],\n            '3/16': ['3/16'],\n            '4/16': ['2/16'],\n        };\n        const groups = defaults[time_sig];\n        if (groups === undefined) {\n            // If no beam groups found, naively determine\n            // the beam groupings from the time signature\n            const beatTotal = parseInt(time_sig.split('/')[0], 10);\n            const beatValue = parseInt(time_sig.split('/')[1], 10);\n            const tripleMeter = beatTotal % 3 === 0;\n            if (tripleMeter) {\n                return [new Fraction(3, beatValue)];\n            }\n            else if (beatValue > 4) {\n                return [new Fraction(2, beatValue)];\n            }\n            else if (beatValue <= 4) {\n                return [new Fraction(1, beatValue)];\n            }\n        }\n        else {\n            return groups.map((group) => new Fraction().parse(group));\n        }\n        return [new Fraction(1, 4)];\n    }\n    /**\n     * A helper function to automatically build basic beams for a voice. For more\n     * complex auto-beaming use `Beam.generateBeams()`.\n     * @param voice the voice to generate the beams for\n     * @param stem_direction a stem direction to apply to the entire voice\n     * @param groups an array of `Fraction` representing beat groupings for the beam\n     */\n    static applyAndGetBeams(voice, stem_direction, groups) {\n        return Beam.generateBeams(voice.getTickables(), { groups, stem_direction });\n    }\n    /**\n     * A helper function to autimatically build beams for a voice with\n     * configuration options.\n     *\n     * Example configuration object:\n     *\n     * ```\n     * config = {\n     *   groups: [new Vex.Flow.Fraction(2, 8)],\n     *   stem_direction: -1,\n     *   beam_rests: true,\n     *   beam_middle_only: true,\n     *   show_stemlets: false\n     * };\n     * ```\n     * @param notes an array of notes to create the beams for\n     * @param config the configuration object\n     * @param config.stem_direction set to apply the same direction to all notes\n     * @param config.beam_rests set to `true` to include rests in the beams\n     * @param config.beam_middle_only set to `true` to only beam rests in the middle of the beat\n     * @param config.show_stemlets set to `true` to draw stemlets for rests\n     * @param config.maintain_stem_directions set to `true` to not apply new stem directions\n     * @param config.groups array of `Fractions` that represent the beat structure to beam the notes\n     *\n     */\n    static generateBeams(notes, config = {}) {\n        if (!config.groups || !config.groups.length) {\n            config.groups = [new Fraction(2, 8)];\n        }\n        // Convert beam groups to tick amounts\n        const tickGroups = config.groups.map((group) => {\n            if (!group.multiply) {\n                throw new RuntimeError('InvalidBeamGroups', 'The beam groups must be an array of Vex.Flow.Fractions');\n            }\n            return group.clone().multiply(Tables.RESOLUTION, 1);\n        });\n        const unprocessedNotes = notes;\n        let currentTickGroup = 0;\n        let noteGroups = [];\n        let currentGroup = [];\n        function getTotalTicks(vf_notes) {\n            return vf_notes.reduce((memo, note) => note.getTicks().clone().add(memo), new Fraction(0, 1));\n        }\n        function nextTickGroup() {\n            if (tickGroups.length - 1 > currentTickGroup) {\n                currentTickGroup += 1;\n            }\n            else {\n                currentTickGroup = 0;\n            }\n        }\n        function createGroups() {\n            let nextGroup = [];\n            // number of ticks in current group\n            let currentGroupTotalTicks = new Fraction(0, 1);\n            unprocessedNotes.forEach((unprocessedNote) => {\n                nextGroup = [];\n                if (unprocessedNote.shouldIgnoreTicks()) {\n                    noteGroups.push(currentGroup);\n                    currentGroup = nextGroup;\n                    return; // Ignore untickables (like bar notes)\n                }\n                currentGroup.push(unprocessedNote);\n                const ticksPerGroup = tickGroups[currentTickGroup].clone();\n                const totalTicks = getTotalTicks(currentGroup).add(currentGroupTotalTicks);\n                // Double the amount of ticks in a group, if it's an unbeamable tuplet\n                const unbeamable = Tables.durationToNumber(unprocessedNote.getDuration()) < 8;\n                if (unbeamable && unprocessedNote.getTuplet()) {\n                    ticksPerGroup.numerator *= 2;\n                }\n                // If the note that was just added overflows the group tick total\n                if (totalTicks.greaterThan(ticksPerGroup)) {\n                    // If the overflow note can be beamed, start the next group\n                    // with it. Unbeamable notes leave the group overflowed.\n                    if (!unbeamable) {\n                        const note = currentGroup.pop();\n                        if (note)\n                            nextGroup.push(note);\n                    }\n                    noteGroups.push(currentGroup);\n                    // We have overflown, so we're going to next tick group. As we might have\n                    // overflown by more than 1 group, we need to go forward as many times as\n                    // needed, decreasing currentGroupTotalTicks by as many ticks as there are\n                    // in current groups as we go forward.\n                    do {\n                        currentGroupTotalTicks = totalTicks.subtract(tickGroups[currentTickGroup]);\n                        nextTickGroup();\n                    } while (currentGroupTotalTicks.greaterThanEquals(tickGroups[currentTickGroup]));\n                    currentGroup = nextGroup;\n                }\n                else if (totalTicks.equals(ticksPerGroup)) {\n                    noteGroups.push(currentGroup);\n                    currentGroupTotalTicks = new Fraction(0, 1);\n                    currentGroup = nextGroup;\n                    nextTickGroup();\n                }\n            });\n            // Adds any remainder notes beam\n            if (currentGroup.length > 0) {\n                noteGroups.push(currentGroup);\n            }\n        }\n        function getBeamGroups() {\n            return noteGroups.filter((group) => {\n                if (group.length > 1) {\n                    let beamable = true;\n                    group.forEach((note) => {\n                        if (note.getIntrinsicTicks() >= Tables.durationToTicks('4')) {\n                            beamable = false;\n                        }\n                    });\n                    return beamable;\n                }\n                return false;\n            });\n        }\n        // Splits up groups by Rest\n        function sanitizeGroups() {\n            const sanitizedGroups = [];\n            noteGroups.forEach((group) => {\n                let tempGroup = [];\n                group.forEach((note, index, group) => {\n                    const isFirstOrLast = index === 0 || index === group.length - 1;\n                    const prevNote = group[index - 1];\n                    const breaksOnEachRest = !config.beam_rests && note.isRest();\n                    const breaksOnFirstOrLastRest = config.beam_rests && config.beam_middle_only && note.isRest() && isFirstOrLast;\n                    let breakOnStemChange = false;\n                    if (config.maintain_stem_directions && prevNote && !note.isRest() && !prevNote.isRest()) {\n                        const prevDirection = prevNote.getStemDirection();\n                        const currentDirection = note.getStemDirection();\n                        breakOnStemChange = currentDirection !== prevDirection;\n                    }\n                    const isUnbeamableDuration = parseInt(note.getDuration(), 10) < 8;\n                    // Determine if the group should be broken at this note\n                    const shouldBreak = breaksOnEachRest || breaksOnFirstOrLastRest || breakOnStemChange || isUnbeamableDuration;\n                    if (shouldBreak) {\n                        // Add current group\n                        if (tempGroup.length > 0) {\n                            sanitizedGroups.push(tempGroup);\n                        }\n                        // Start a new group. Include the current note if the group\n                        // was broken up by stem direction, as that note needs to start\n                        // the next group of notes\n                        tempGroup = breakOnStemChange ? [note] : [];\n                    }\n                    else {\n                        // Add note to group\n                        tempGroup.push(note);\n                    }\n                });\n                // If there is a remaining group, add it as well\n                if (tempGroup.length > 0) {\n                    sanitizedGroups.push(tempGroup);\n                }\n            });\n            noteGroups = sanitizedGroups;\n        }\n        function formatStems() {\n            noteGroups.forEach((group) => {\n                let stemDirection;\n                if (config.maintain_stem_directions) {\n                    const note = findFirstNote(group);\n                    stemDirection = note ? note.getStemDirection() : Stem.UP;\n                }\n                else {\n                    if (config.stem_direction) {\n                        stemDirection = config.stem_direction;\n                    }\n                    else {\n                        stemDirection = calculateStemDirection(group);\n                    }\n                }\n                applyStemDirection(group, stemDirection);\n            });\n        }\n        function findFirstNote(group) {\n            for (let i = 0; i < group.length; i++) {\n                const note = group[i];\n                if (!note.isRest()) {\n                    return note;\n                }\n            }\n            return false;\n        }\n        function applyStemDirection(group, direction) {\n            group.forEach((note) => {\n                note.setStemDirection(direction);\n            });\n        }\n        // Get all of the tuplets in all of the note groups\n        function getTuplets() {\n            const uniqueTuplets = [];\n            // Go through all of the note groups and inspect for tuplets\n            noteGroups.forEach((group) => {\n                let tuplet;\n                group.forEach((note) => {\n                    const noteTuplet = note.getTuplet();\n                    if (noteTuplet && tuplet !== noteTuplet) {\n                        tuplet = noteTuplet;\n                        uniqueTuplets.push(tuplet);\n                    }\n                });\n            });\n            return uniqueTuplets;\n        }\n        // Using closures to store the variables throughout the various functions\n        // IMO Keeps it this process lot cleaner - but not super consistent with\n        // the rest of the API's style - Silverwolf90 (Cyril)\n        createGroups();\n        sanitizeGroups();\n        formatStems();\n        // Get the notes to be beamed\n        const beamedNoteGroups = getBeamGroups();\n        // Get the tuplets in order to format them accurately\n        const allTuplets = getTuplets();\n        // Create a Vex.Flow.Beam from each group of notes to be beamed\n        const beams = [];\n        beamedNoteGroups.forEach((group) => {\n            const beam = new Beam(group);\n            if (config.show_stemlets) {\n                beam.render_options.show_stemlets = true;\n            }\n            if (config.secondary_breaks) {\n                beam.render_options.secondary_break_ticks = Tables.durationToTicks(config.secondary_breaks);\n            }\n            if (config.flat_beams === true) {\n                beam.render_options.flat_beams = true;\n                beam.render_options.flat_beam_offset = config.flat_beam_offset;\n            }\n            beams.push(beam);\n        });\n        // Reformat tuplets\n        allTuplets.forEach((tuplet) => {\n            // Set the tuplet location based on the stem direction\n            const direction = tuplet.notes[0].stem_direction === Stem.DOWN ? TupletLocation.BOTTOM : TupletLocation.TOP;\n            tuplet.setTupletLocation(direction);\n            // If any of the notes in the tuplet are not beamed, draw a bracket.\n            let bracketed = false;\n            for (let i = 0; i < tuplet.notes.length; i++) {\n                const note = tuplet.notes[i];\n                if (!note.hasBeam()) {\n                    bracketed = true;\n                    break;\n                }\n            }\n            tuplet.setBracketed(bracketed);\n        });\n        return beams;\n    }\n    /** Get the notes in this beam. */\n    getNotes() {\n        return this.notes;\n    }\n    /** Get the max number of beams in the set of notes. */\n    getBeamCount() {\n        const beamCounts = this.notes.map((note) => note.getGlyph().beam_count);\n        const maxBeamCount = beamCounts.reduce((max, beamCount) => (beamCount > max ? beamCount : max));\n        return maxBeamCount;\n    }\n    /** Set which note `indices` to break the secondary beam at. */\n    breakSecondaryAt(indices) {\n        this.break_on_indices = indices;\n        return this;\n    }\n    /**\n     * Forces the direction of a partial beam (a secondary-level beam that exists\n     * on one note only of the beam group). This is useful in rhythms such as 6/8\n     * eighth-sixteenth-eighth-sixteenth, where the direction of the beam on the\n     * first sixteenth note can help imply whether the rhythm is to be felt as\n     * three groups of eighth notes (typical) or as two groups of three-sixteenths\n     * (less common):\n     * ```\n     *  ┌───┬──┬──┐      ┌──┬──┬──┐\n     *  │   ├─ │ ─┤  vs  │ ─┤  │ ─┤\n     *  │   │  │  │      │  │  │  │\n     * ```\n     */\n    setPartialBeamSideAt(noteIndex, side) {\n        this.forcedPartialDirections[noteIndex] = side;\n        return this;\n    }\n    /**\n     * Restore the default direction of a partial beam (a secondary-level beam\n     * that does not connect to any other notes).\n     */\n    unsetPartialBeamSideAt(noteIndex) {\n        delete this.forcedPartialDirections[noteIndex];\n        return this;\n    }\n    /** Return the y coordinate for linear function. */\n    getSlopeY(x, first_x_px, first_y_px, slope) {\n        return first_y_px + (x - first_x_px) * slope;\n    }\n    /** Calculate the best possible slope for the provided notes. */\n    calculateSlope() {\n        const { notes, stem_direction: stemDirection, render_options: { max_slope, min_slope, slope_iterations, slope_cost }, } = this;\n        const firstNote = notes[0];\n        const initialSlope = getStemSlope(firstNote, notes[notes.length - 1]);\n        const increment = (max_slope - min_slope) / slope_iterations;\n        let minCost = Number.MAX_VALUE;\n        let bestSlope = 0;\n        let yShift = 0;\n        // iterate through slope values to find best weighted fit\n        for (let slope = min_slope; slope <= max_slope; slope += increment) {\n            let totalStemExtension = 0;\n            let yShiftTemp = 0;\n            // iterate through notes, calculating y shift and stem extension\n            for (let i = 1; i < notes.length; ++i) {\n                const note = notes[i];\n                if (note.hasStem() || note.isRest()) {\n                    const adjustedStemTipY = this.getSlopeY(note.getStemX(), firstNote.getStemX(), firstNote.getStemExtents().topY, slope) + yShiftTemp;\n                    const stemTipY = note.getStemExtents().topY;\n                    // beam needs to be shifted up to accommodate note\n                    if (stemTipY * stemDirection < adjustedStemTipY * stemDirection) {\n                        const diff = Math.abs(stemTipY - adjustedStemTipY);\n                        yShiftTemp += diff * -stemDirection;\n                        totalStemExtension += diff * i;\n                    }\n                    else {\n                        // beam overshoots note, account for the difference\n                        totalStemExtension += (stemTipY - adjustedStemTipY) * stemDirection;\n                    }\n                }\n            }\n            // most engraving books suggest aiming for a slope about half the angle of the\n            // difference between the first and last notes' stem length;\n            const idealSlope = initialSlope / 2;\n            const distanceFromIdeal = Math.abs(idealSlope - slope);\n            // This tries to align most beams to something closer to the idealSlope, but\n            // doesn't go crazy. To disable, set this.render_options.slope_cost = 0\n            const cost = slope_cost * distanceFromIdeal + Math.abs(totalStemExtension);\n            // update state when a more ideal slope is found\n            if (cost < minCost) {\n                minCost = cost;\n                bestSlope = slope;\n                yShift = yShiftTemp;\n            }\n        }\n        this.slope = bestSlope;\n        this.y_shift = yShift;\n    }\n    /** Calculate a slope and y-shift for flat beams. */\n    calculateFlatSlope() {\n        const { notes, stem_direction, render_options: { beam_width, min_flat_beam_offset, flat_beam_offset }, } = this;\n        // If a flat beam offset has not yet been supplied or calculated,\n        // generate one based on the notes in this particular note group\n        let total = 0;\n        let extremeY = 0; // Store the highest or lowest note here\n        let extremeBeamCount = 0; // The beam count of the extreme note\n        let currentExtreme = 0;\n        for (let i = 0; i < notes.length; i++) {\n            // Total up all of the offsets so we can average them out later\n            const note = notes[i];\n            const stemTipY = note.getStemExtents().topY;\n            total += stemTipY;\n            // Store the highest (stems-up) or lowest (stems-down) note so the\n            //  offset can be adjusted in case the average isn't enough\n            if (stem_direction === Stem.DOWN && currentExtreme < stemTipY) {\n                currentExtreme = stemTipY;\n                extremeY = Math.max(...note.getYs());\n                extremeBeamCount = note.getBeamCount();\n            }\n            else if (stem_direction === Stem.UP && (currentExtreme === 0 || currentExtreme > stemTipY)) {\n                currentExtreme = stemTipY;\n                extremeY = Math.min(...note.getYs());\n                extremeBeamCount = note.getBeamCount();\n            }\n        }\n        // Average the offsets to try and come up with a reasonable one that\n        //  works for all of the notes in the beam group.\n        let offset = total / notes.length;\n        // In case the average isn't long enough, add or subtract some more\n        //  based on the highest or lowest note (again, based on the stem\n        //  direction). This also takes into account the added height due to\n        //  the width of the beams.\n        const beamWidth = beam_width * 1.5;\n        const extremeTest = min_flat_beam_offset + extremeBeamCount * beamWidth;\n        const newOffset = extremeY + extremeTest * -stem_direction;\n        if (stem_direction === Stem.DOWN && offset < newOffset) {\n            offset = extremeY + extremeTest;\n        }\n        else if (stem_direction === Stem.UP && offset > newOffset) {\n            offset = extremeY - extremeTest;\n        }\n        if (!flat_beam_offset) {\n            // Set the offset for the group based on the calculations above.\n            this.render_options.flat_beam_offset = offset;\n        }\n        else if (stem_direction === Stem.DOWN && offset > flat_beam_offset) {\n            this.render_options.flat_beam_offset = offset;\n        }\n        else if (stem_direction === Stem.UP && offset < flat_beam_offset) {\n            this.render_options.flat_beam_offset = offset;\n        }\n        // for flat beams, the slope and y_shift are simply 0\n        this.slope = 0;\n        this.y_shift = 0;\n    }\n    /** Return the Beam y offset. */\n    getBeamYToDraw() {\n        const firstNote = this.notes[0];\n        const firstStemTipY = firstNote.getStemExtents().topY;\n        let beamY = firstStemTipY;\n        // For flat beams, set the first and last Y to the offset, rather than\n        //  using the note's stem extents.\n        if (this.render_options.flat_beams && this.render_options.flat_beam_offset) {\n            beamY = this.render_options.flat_beam_offset;\n        }\n        return beamY;\n    }\n    /**\n     * Create new stems for the notes in the beam, so that each stem\n     * extends into the beams.\n     */\n    applyStemExtensions() {\n        const { notes, slope, y_shift, stem_direction, beam_count, render_options: { show_stemlets, stemlet_extension, beam_width }, } = this;\n        const firstNote = notes[0];\n        const firstStemTipY = this.getBeamYToDraw();\n        const firstStemX = firstNote.getStemX();\n        for (let i = 0; i < notes.length; ++i) {\n            const note = notes[i];\n            const stem = note.getStem();\n            if (stem) {\n                const stemX = note.getStemX();\n                const { topY: stemTipY } = note.getStemExtents();\n                const beamedStemTipY = this.getSlopeY(stemX, firstStemX, firstStemTipY, slope) + y_shift;\n                const preBeamExtension = stem.getExtension();\n                const beamExtension = stem_direction === Stem.UP ? stemTipY - beamedStemTipY : beamedStemTipY - stemTipY;\n                stem.setExtension(preBeamExtension + beamExtension);\n                stem.adjustHeightForBeam();\n                if (note.isRest() && show_stemlets) {\n                    const beamWidth = beam_width;\n                    const totalBeamWidth = (beam_count - 1) * beamWidth * 1.5 + beamWidth;\n                    stem.setVisibility(true).setStemlet(true, totalBeamWidth + stemlet_extension);\n                }\n            }\n        }\n    }\n    /** Return upper level beam direction. */\n    lookupBeamDirection(duration, prev_tick, tick, next_tick, noteIndex) {\n        if (duration === '4') {\n            return BEAM_LEFT;\n        }\n        const forcedBeamDirection = this.forcedPartialDirections[noteIndex];\n        if (forcedBeamDirection)\n            return forcedBeamDirection;\n        const lookup_duration = `${Tables.durationToNumber(duration) / 2}`;\n        const prev_note_gets_beam = prev_tick < Tables.durationToTicks(lookup_duration);\n        const next_note_gets_beam = next_tick < Tables.durationToTicks(lookup_duration);\n        const note_gets_beam = tick < Tables.durationToTicks(lookup_duration);\n        if (prev_note_gets_beam && next_note_gets_beam && note_gets_beam) {\n            return BEAM_BOTH;\n        }\n        else if (prev_note_gets_beam && !next_note_gets_beam && note_gets_beam) {\n            return BEAM_LEFT;\n        }\n        else if (!prev_note_gets_beam && next_note_gets_beam && note_gets_beam) {\n            return BEAM_RIGHT;\n        }\n        return this.lookupBeamDirection(lookup_duration, prev_tick, tick, next_tick, noteIndex);\n    }\n    /** Get the x coordinates for the beam lines of specific `duration`. */\n    getBeamLines(duration) {\n        const tick_of_duration = Tables.durationToTicks(duration);\n        let beam_started = false;\n        const beam_lines = [];\n        let current_beam = undefined;\n        const partial_beam_length = this.render_options.partial_beam_length;\n        let previous_should_break = false;\n        let tick_tally = 0;\n        for (let i = 0; i < this.notes.length; ++i) {\n            const note = this.notes[i];\n            // See if we need to break secondary beams on this note.\n            const ticks = note.getTicks().value();\n            tick_tally += ticks;\n            let should_break = false;\n            // 8th note beams are always drawn.\n            if (parseInt(duration, 10) >= 8) {\n                // First, check to see if any indices were set up through breakSecondaryAt()\n                should_break = this.break_on_indices.indexOf(i) !== -1;\n                // If the secondary breaks were auto-configured in the render options,\n                //  handle that as well.\n                if (this.render_options.secondary_break_ticks && tick_tally >= this.render_options.secondary_break_ticks) {\n                    tick_tally = 0;\n                    should_break = true;\n                }\n            }\n            const note_gets_beam = note.getIntrinsicTicks() < tick_of_duration;\n            const stem_x = note.getStemX() - Stem.WIDTH / 2;\n            // Check to see if the next note in the group will get a beam at this\n            //  level. This will help to inform the partial beam logic below.\n            const prev_note = this.notes[i - 1];\n            const next_note = this.notes[i + 1];\n            const next_note_gets_beam = next_note && next_note.getIntrinsicTicks() < tick_of_duration;\n            const prev_note_gets_beam = prev_note && prev_note.getIntrinsicTicks() < tick_of_duration;\n            const beam_alone = prev_note && next_note && note_gets_beam && !prev_note_gets_beam && !next_note_gets_beam;\n            // const beam_alone = note_gets_beam && !prev_note_gets_beam && !next_note_gets_beam;\n            if (note_gets_beam) {\n                // This note gets a beam at the current level\n                if (beam_started) {\n                    // We're currently in the middle of a beam. Just continue it on to\n                    //  the stem X of the current note.\n                    current_beam = beam_lines[beam_lines.length - 1];\n                    current_beam.end = stem_x;\n                    // If a secondary beam break is set up, end the beam right now.\n                    if (should_break) {\n                        beam_started = false;\n                        if (next_note && !next_note_gets_beam && current_beam.end === undefined) {\n                            // This note gets a beam,.but the next one does not. This means\n                            //  we need a partial pointing right.\n                            current_beam.end = current_beam.start - partial_beam_length;\n                        }\n                    }\n                }\n                else {\n                    // No beam started yet. Start a new one.\n                    current_beam = { start: stem_x, end: undefined };\n                    beam_started = true;\n                    if (beam_alone) {\n                        // previous and next beam exists and does not get a beam but current gets it.\n                        const prev_tick = prev_note.getIntrinsicTicks();\n                        const next_tick = next_note.getIntrinsicTicks();\n                        const tick = note.getIntrinsicTicks();\n                        const beam_direction = this.lookupBeamDirection(duration, prev_tick, tick, next_tick, i);\n                        if ([BEAM_LEFT, BEAM_BOTH].includes(beam_direction)) {\n                            current_beam.end = current_beam.start - partial_beam_length;\n                        }\n                        else {\n                            current_beam.end = current_beam.start + partial_beam_length;\n                        }\n                    }\n                    else if (!next_note_gets_beam) {\n                        // The next note doesn't get a beam. Draw a partial.\n                        if ((previous_should_break || i === 0) && next_note) {\n                            // This is the first note (but not the last one), or it is\n                            //  following a secondary break. Draw a partial to the right.\n                            current_beam.end = current_beam.start + partial_beam_length;\n                        }\n                        else {\n                            // By default, draw a partial to the left.\n                            current_beam.end = current_beam.start - partial_beam_length;\n                        }\n                    }\n                    else if (should_break) {\n                        // This note should have a secondary break after it. Even though\n                        //  we just started a beam, it needs to end immediately.\n                        current_beam.end = current_beam.start - partial_beam_length;\n                        beam_started = false;\n                    }\n                    beam_lines.push(current_beam);\n                }\n            }\n            else {\n                // The current note does not get a beam.\n                beam_started = false;\n            }\n            // Store the secondary break flag to inform the partial beam logic in\n            //  the next iteration of the loop.\n            previous_should_break = should_break;\n        }\n        // Add a partial beam pointing left if this is the last note in the group\n        const last_beam = beam_lines[beam_lines.length - 1];\n        if (last_beam && last_beam.end === undefined) {\n            last_beam.end = last_beam.start - partial_beam_length;\n        }\n        return beam_lines;\n    }\n    /** Render the stems for each note. */\n    drawStems(ctx) {\n        this.notes.forEach((note) => {\n            const stem = note.getStem();\n            if (stem) {\n                ctx.openGroup('stem', note.getAttribute('id') + '-stem');\n                stem.setContext(ctx).draw();\n                ctx.closeGroup();\n            }\n        }, this);\n    }\n    // Render the beam lines\n    drawBeamLines(ctx) {\n        const valid_beam_durations = ['4', '8', '16', '32', '64'];\n        const firstNote = this.notes[0];\n        let beamY = this.getBeamYToDraw();\n        const firstStemX = firstNote.getStemX();\n        const beamThickness = this.render_options.beam_width * this.stem_direction;\n        // Draw the beams.\n        for (let i = 0; i < valid_beam_durations.length; ++i) {\n            const duration = valid_beam_durations[i];\n            const beamLines = this.getBeamLines(duration);\n            for (let j = 0; j < beamLines.length; ++j) {\n                const beam_line = beamLines[j];\n                const startBeamX = beam_line.start;\n                const startBeamY = this.getSlopeY(startBeamX, firstStemX, beamY, this.slope);\n                const lastBeamX = beam_line.end;\n                if (lastBeamX) {\n                    const lastBeamY = this.getSlopeY(lastBeamX, firstStemX, beamY, this.slope);\n                    this.setAttribute('el', ctx.openGroup('beam'));\n                    ctx.beginPath();\n                    ctx.moveTo(startBeamX, startBeamY);\n                    ctx.lineTo(startBeamX, startBeamY + beamThickness);\n                    ctx.lineTo(lastBeamX + 1, lastBeamY + beamThickness);\n                    ctx.lineTo(lastBeamX + 1, lastBeamY);\n                    ctx.closePath();\n                    ctx.fill();\n                    ctx.closeGroup();\n                }\n                else {\n                    throw new RuntimeError('NoLastBeamX', 'lastBeamX undefined.');\n                }\n            }\n            beamY += beamThickness * 1.5;\n        }\n    }\n    /** Pre-format the beam. */\n    preFormat() {\n        return this;\n    }\n    /**\n     * Post-format the beam. This can only be called after\n     * the notes in the beam have both `x` and `y` values. ie: they've\n     * been formatted and have staves.\n     */\n    postFormat() {\n        if (this.postFormatted)\n            return;\n        // Calculate a smart slope if we're not forcing the beams to be flat.\n        if (isTabNote(this.notes[0]) || this.render_options.flat_beams) {\n            this.calculateFlatSlope();\n        }\n        else {\n            this.calculateSlope();\n        }\n        this.applyStemExtensions();\n        this.postFormatted = true;\n    }\n    /** Render the beam to the canvas context */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        if (this.unbeamable)\n            return;\n        if (!this.postFormatted) {\n            this.postFormat();\n        }\n        this.drawStems(ctx);\n        this.applyStyle();\n        this.drawBeamLines(ctx);\n        this.restoreStyle();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\n// MIT License\nimport { Clef } from './clef';\nimport { Glyph } from './glyph';\nimport { Note } from './note';\nimport { Category } from './typeguard';\n/** ClefNote implements clef annotations in measures. */\nexport class ClefNote extends Note {\n    constructor(type, size, annotation) {\n        super({ duration: 'b' });\n        this.type = type;\n        this.clef_obj = new Clef(type, size, annotation);\n        this.clef = this.clef_obj.clef;\n        this.glyph = new Glyph(this.clef.code, this.clef.point);\n        this.setWidth(this.glyph.getMetrics().width);\n        // Note properties\n        this.ignore_ticks = true;\n    }\n    static get CATEGORY() {\n        return Category.ClefNote;\n    }\n    /** Set clef type, size and annotation. */\n    setType(type, size, annotation) {\n        this.type = type;\n        this.clef_obj = new Clef(type, size, annotation);\n        this.clef = this.clef_obj.clef;\n        this.glyph = new Glyph(this.clef.code, this.clef.point);\n        this.setWidth(this.glyph.getMetrics().width);\n        return this;\n    }\n    /** Get associated clef. */\n    getClef() {\n        return this.clef;\n    }\n    /** Set associated context. */\n    setContext(context) {\n        super.setContext(context);\n        this.glyph.setContext(this.getContext());\n        return this;\n    }\n    /** Get bounding box. */\n    getBoundingBox() {\n        return super.getBoundingBox();\n    }\n    /* Overridden to ignore */\n    // eslint-disable-next-line\n    addToModifierContext(mc) {\n        // DO NOTHING.\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    /** Render clef note. */\n    draw() {\n        var _a;\n        const stave = this.checkStave();\n        if (!this.glyph.getContext()) {\n            this.glyph.setContext(this.getContext());\n        }\n        this.setRendered();\n        const abs_x = this.getAbsoluteX();\n        this.glyph.setStave(stave);\n        this.glyph.setYShift(stave.getYForLine((_a = this.clef.line) !== null && _a !== void 0 ? _a : 0) - stave.getYForGlyphs());\n        this.glyph.renderToStave(abs_x);\n        // If the Vex.Flow.Clef has an annotation, such as 8va, draw it.\n        if (this.clef_obj.annotation !== undefined) {\n            const attachment = new Glyph(this.clef_obj.annotation.code, this.clef_obj.annotation.point);\n            if (!attachment.getContext()) {\n                attachment.setContext(this.getContext());\n            }\n            attachment.setStave(stave);\n            attachment.setYShift(stave.getYForLine(this.clef_obj.annotation.line) - stave.getYForGlyphs());\n            attachment.setXShift(this.clef_obj.annotation.x_shift);\n            attachment.renderToStave(abs_x);\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This file implements the `Crescendo` object which draws crescendos and\n// decrescendo dynamics markings. A `Crescendo` is initialized with a\n// duration and formatted as part of a `Voice` like any other `Note`\n// type in VexFlow. This object would most likely be formatted in a Voice\n// with `TextNotes` - which are used to represent other dynamics markings.\nimport { Note } from './note';\nimport { TickContext } from './tickcontext';\nimport { Category } from './typeguard';\nimport { log } from './util';\n// To enable logging for this class. Set `Vex.Flow.Crescendo.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Crescendo.DEBUG)\n        log('Vex.Flow.Crescendo', args);\n}\n// Private helper to draw the hairpin\nfunction renderHairpin(ctx, params) {\n    const begin_x = params.begin_x;\n    const end_x = params.end_x;\n    const y = params.y;\n    const half_height = params.height / 2;\n    ctx.beginPath();\n    if (params.reverse) {\n        ctx.moveTo(begin_x, y - half_height);\n        ctx.lineTo(end_x, y);\n        ctx.lineTo(begin_x, y + half_height);\n    }\n    else {\n        ctx.moveTo(end_x, y - half_height);\n        ctx.lineTo(begin_x, y);\n        ctx.lineTo(end_x, y + half_height);\n    }\n    ctx.stroke();\n    ctx.closePath();\n}\nexport class Crescendo extends Note {\n    // Initialize the crescendo's properties\n    constructor(noteStruct) {\n        super(noteStruct);\n        this.options = {\n            // Extensions to the length of the crescendo on either side\n            extend_left: 0,\n            extend_right: 0,\n            // Vertical shift\n            y_shift: 0,\n        };\n        // Whether the object is a decrescendo\n        this.decrescendo = false;\n        // The staff line to be placed on\n        this.line = noteStruct.line || 0;\n        // The height at the open end of the cresc/decresc\n        this.height = 15;\n    }\n    /** Crescendo category string. */\n    static get CATEGORY() {\n        return Category.Crescendo;\n    }\n    // Set the line to center the element on\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    // Set the full height at the open end\n    setHeight(height) {\n        this.height = height;\n        return this;\n    }\n    // Set whether the sign should be a descresendo by passing a bool\n    // to `decresc`\n    setDecrescendo(decresc) {\n        this.decrescendo = decresc;\n        return this;\n    }\n    // Preformat the note\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    // Render the Crescendo object onto the canvas\n    draw() {\n        const ctx = this.checkContext();\n        const stave = this.checkStave();\n        this.setRendered();\n        const tick_context = this.getTickContext();\n        const next_context = TickContext.getNextContext(tick_context);\n        const begin_x = this.getAbsoluteX();\n        const end_x = next_context ? next_context.getX() : stave.getX() + stave.getWidth();\n        const y = stave.getYForLine(this.line + -3) + 1;\n        L('Drawing ', this.decrescendo ? 'decrescendo ' : 'crescendo ', this.height, 'x', begin_x - end_x);\n        renderHairpin(ctx, {\n            begin_x: begin_x - this.options.extend_left,\n            end_x: end_x + this.options.extend_right,\n            y: y + this.options.y_shift,\n            height: this.height,\n            reverse: this.decrescendo,\n        });\n    }\n}\nCrescendo.DEBUG = false;\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements curves (for slurs)\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport var CurvePosition;\n(function (CurvePosition) {\n    CurvePosition[CurvePosition[\"NEAR_HEAD\"] = 1] = \"NEAR_HEAD\";\n    CurvePosition[CurvePosition[\"NEAR_TOP\"] = 2] = \"NEAR_TOP\";\n})(CurvePosition || (CurvePosition = {}));\nexport class Curve extends Element {\n    // from: Start note\n    // to: End note\n    // options:\n    //    cps: List of control points\n    //    x_shift: pixels to shift\n    //    y_shift: pixels to shift\n    constructor(from, to, options) {\n        super();\n        this.render_options = Object.assign({ thickness: 2, x_shift: 0, y_shift: 10, position: CurvePosition.NEAR_HEAD, position_end: CurvePosition.NEAR_HEAD, invert: false, cps: [\n                { x: 0, y: 10 },\n                { x: 0, y: 10 },\n            ] }, options);\n        this.from = from;\n        this.to = to;\n    }\n    static get CATEGORY() {\n        return Category.Curve;\n    }\n    static get Position() {\n        return CurvePosition;\n    }\n    static get PositionString() {\n        return {\n            nearHead: CurvePosition.NEAR_HEAD,\n            nearTop: CurvePosition.NEAR_TOP,\n        };\n    }\n    setNotes(from, to) {\n        if (!from && !to) {\n            throw new RuntimeError('BadArguments', 'Curve needs to have either `from` or `to` set.');\n        }\n        this.from = from;\n        this.to = to;\n        return this;\n    }\n    /**\n     * @return {boolean} Returns true if this is a partial bar.\n     */\n    isPartial() {\n        return !this.from || !this.to;\n    }\n    renderCurve(params) {\n        const ctx = this.checkContext();\n        const x_shift = this.render_options.x_shift;\n        const y_shift = this.render_options.y_shift * params.direction;\n        const first_x = params.first_x + x_shift;\n        const first_y = params.first_y + y_shift;\n        const last_x = params.last_x - x_shift;\n        const last_y = params.last_y + y_shift;\n        const thickness = this.render_options.thickness;\n        const cps = this.render_options.cps;\n        const { x: cp0x, y: cp0y } = cps[0];\n        const { x: cp1x, y: cp1y } = cps[1];\n        const cp_spacing = (last_x - first_x) / (cps.length + 2);\n        ctx.beginPath();\n        ctx.moveTo(first_x, first_y);\n        ctx.bezierCurveTo(first_x + cp_spacing + cp0x, first_y + cp0y * params.direction, last_x - cp_spacing + cp1x, last_y + cp1y * params.direction, last_x, last_y);\n        ctx.bezierCurveTo(last_x - cp_spacing + cp1x, last_y + (cp1y + thickness) * params.direction, first_x + cp_spacing + cp0x, first_y + (cp0y + thickness) * params.direction, first_x, first_y);\n        ctx.stroke();\n        ctx.closePath();\n        ctx.fill();\n    }\n    draw() {\n        this.checkContext();\n        this.setRendered();\n        const first_note = this.from;\n        const last_note = this.to;\n        let first_x;\n        let last_x;\n        let first_y;\n        let last_y;\n        let stem_direction = 0;\n        let metric = 'baseY';\n        let end_metric = 'baseY';\n        function getPosition(position) {\n            return typeof position === 'string' ? Curve.PositionString[position] : position;\n        }\n        const position = getPosition(this.render_options.position);\n        const position_end = getPosition(this.render_options.position_end);\n        if (position === CurvePosition.NEAR_TOP) {\n            metric = 'topY';\n            end_metric = 'topY';\n        }\n        if (position_end === CurvePosition.NEAR_HEAD) {\n            end_metric = 'baseY';\n        }\n        else if (position_end === CurvePosition.NEAR_TOP) {\n            end_metric = 'topY';\n        }\n        if (first_note) {\n            first_x = first_note.getTieRightX();\n            stem_direction = first_note.getStemDirection();\n            first_y = first_note.getStemExtents()[metric];\n        }\n        else {\n            const stave = last_note.checkStave();\n            first_x = stave.getTieStartX();\n            first_y = last_note.getStemExtents()[metric];\n        }\n        if (last_note) {\n            last_x = last_note.getTieLeftX();\n            stem_direction = last_note.getStemDirection();\n            last_y = last_note.getStemExtents()[end_metric];\n        }\n        else {\n            const stave = first_note.checkStave();\n            last_x = stave.getTieEndX();\n            last_y = first_note.getStemExtents()[end_metric];\n        }\n        this.renderCurve({\n            first_x,\n            last_x,\n            first_y,\n            last_y,\n            direction: stem_direction * (this.render_options.invert === true ? -1 : 1),\n        });\n        return true;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// A generic text parsing class for VexFlow.\nimport { log, RuntimeError } from './util';\n// To enable logging for this class. Set `Vex.Flow.Parser.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Parser.DEBUG)\n        log('Vex.Flow.Parser', args);\n}\nconst NO_ERROR_POS = -1;\n// Converts parser results into an easy to reference list that can be\n// used in triggers. This function returns:\n// - nested array in which the leaf elements are string or null\n// - string (including empty strings)\n// - null\nfunction flattenMatches(r) {\n    if ('matchedString' in r)\n        return r.matchedString; // string\n    if ('results' in r)\n        return flattenMatches(r.results);\n    const results = r;\n    if (results.length === 1)\n        return flattenMatches(results[0]);\n    if (results.length === 0)\n        return null;\n    return results.map(flattenMatches); // nested array\n}\n// This is the base parser class. Given an arbitrary context-free grammar, it\n// can parse any line and execute code when specific rules are met (e.g.,\n// when a string is terminated.)\nexport class Parser {\n    // For an example of a simple grammar, take a look at tests/parser_tests.ts or\n    // the EasyScore grammar in easyscore.ts.\n    constructor(grammar) {\n        this.grammar = grammar;\n        this.line = '';\n        this.pos = 0;\n        this.errorPos = NO_ERROR_POS;\n    }\n    // Parse `line` using current grammar. Returns `{success: true}` if the\n    // line parsed correctly, otherwise returns `{success: false, errorPos: N}`\n    // where `errorPos` is the location of the error in the string.\n    parse(line) {\n        this.line = line;\n        this.pos = 0;\n        this.errorPos = NO_ERROR_POS;\n        const result = this.expect(this.grammar.begin());\n        result.errorPos = this.errorPos;\n        return result;\n    }\n    matchFail(returnPos) {\n        if (this.errorPos === NO_ERROR_POS)\n            this.errorPos = this.pos;\n        this.pos = returnPos;\n    }\n    matchSuccess() {\n        this.errorPos = NO_ERROR_POS;\n    }\n    // Look for `token` in this.line[this.pos], and return success\n    // if one is found. `token` is specified as a regular expression.\n    matchToken(token, noSpace = false) {\n        const regexp = noSpace ? new RegExp('^((' + token + '))') : new RegExp('^((' + token + ')\\\\s*)');\n        const workingLine = this.line.slice(this.pos);\n        const result = workingLine.match(regexp);\n        if (result !== null) {\n            return {\n                success: true,\n                matchedString: result[2],\n                incrementPos: result[1].length,\n                pos: this.pos,\n            };\n        }\n        else {\n            return { success: false, pos: this.pos };\n        }\n    }\n    // Execute rule to match a sequence of tokens (or rules). If `maybe` is\n    // set, then return success even if the token is not found, but reset\n    // the position before exiting.\n    // TODO: expectOne(...) is never called with the `maybe` parameter.\n    expectOne(rule, maybe = false) {\n        const results = [];\n        const pos = this.pos;\n        let allMatches = true;\n        let oneMatch = false;\n        maybe = maybe === true || rule.maybe === true;\n        // Execute all sub rules in sequence.\n        if (rule.expect) {\n            for (const next of rule.expect) {\n                const localPos = this.pos;\n                const result = this.expect(next);\n                // If `rule.or` is set, then return success if any one\n                // of the subrules match, else all subrules must match.\n                if (result.success) {\n                    results.push(result);\n                    oneMatch = true;\n                    if (rule.or)\n                        break;\n                }\n                else {\n                    allMatches = false;\n                    if (!rule.or) {\n                        this.pos = localPos;\n                        break;\n                    }\n                }\n            }\n        }\n        const gotOne = (rule.or && oneMatch) || allMatches;\n        const success = gotOne || maybe === true;\n        const numMatches = gotOne ? 1 : 0;\n        if (maybe && !gotOne)\n            this.pos = pos;\n        if (success) {\n            this.matchSuccess();\n        }\n        else {\n            this.matchFail(pos);\n        }\n        return { success, results, numMatches };\n    }\n    // Try to match multiple (one or more) instances of the rule. If `maybe` is set,\n    // then a failed match is also a success (but the position is reset).\n    expectOneOrMore(rule, maybe = false) {\n        const results = [];\n        const pos = this.pos;\n        let numMatches = 0;\n        let more = true;\n        do {\n            const result = this.expectOne(rule);\n            if (result.success && result.results) {\n                numMatches++;\n                results.push(result.results);\n            }\n            else {\n                more = false;\n            }\n        } while (more);\n        const success = numMatches > 0 || maybe === true;\n        if (maybe && !(numMatches > 0))\n            this.pos = pos;\n        if (success) {\n            this.matchSuccess();\n        }\n        else {\n            this.matchFail(pos);\n        }\n        return { success, results, numMatches };\n    }\n    // Match zero or more instances of `rule`. Offloads to `expectOneOrMore`.\n    expectZeroOrMore(rule) {\n        return this.expectOneOrMore(rule, true);\n    }\n    // Execute the rule produced by the provided `rules` function. This\n    // offloads to one of the above matchers and consolidates the results. It is also\n    // responsible for executing any code triggered by the rule (in `rule.run`.)\n    expect(ruleFunc) {\n        L('Evaluating rule function:', ruleFunc);\n        if (!ruleFunc) {\n            throw new RuntimeError('Invalid rule function');\n        }\n        let result;\n        // Get rule from Grammar class.\n        // expect(...) handles both lexing & parsing:\n        // - lexer rules produce tokens.\n        // - parser rules produce expressions which may trigger code via the\n        //   { run: () => ... } trigger functions in easyscore.ts.\n        //   These functions build the VexFlow objects that are displayed on screen.\n        const rule = ruleFunc.bind(this.grammar)();\n        if (rule.token) {\n            // A lexer rule has a `token` property.\n            // Base case: parse the regex and throw an error if the\n            // line doesn't match.\n            result = this.matchToken(rule.token, rule.noSpace === true);\n            if (result.success) {\n                // Token match! Update position and throw away parsed portion\n                // of string.\n                this.pos += result.incrementPos;\n            }\n        }\n        else if (rule.expect) {\n            // A parser rule has an `expect` property.\n            if (rule.oneOrMore) {\n                result = this.expectOneOrMore(rule);\n            }\n            else if (rule.zeroOrMore) {\n                result = this.expectZeroOrMore(rule);\n            }\n            else {\n                result = this.expectOne(rule);\n            }\n        }\n        else {\n            L(rule);\n            throw new RuntimeError('Bad grammar! No `token` or `expect` property ' + rule);\n        }\n        // If there's a trigger attached to this rule, then run it.\n        // Make the matches accessible through `state.matches` in the\n        // `run: (state) => ...` trigger.\n        const matches = [];\n        result.matches = matches;\n        if (result.results) {\n            result.results.forEach((r) => matches.push(flattenMatches(r)));\n        }\n        if (rule.run && result.success) {\n            rule.run({ matches });\n        }\n        return result;\n    }\n}\nParser.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Articulation } from './articulation';\nimport { Dot } from './dot';\nimport { FretHandFinger } from './frethandfinger';\nimport { Music } from './music';\nimport { Parser } from './parser';\nimport { Stem } from './stem';\nimport { defined, log, RuntimeError } from './util';\n// To enable logging for this class. Set `Vex.Flow.EasyScore.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (EasyScore.DEBUG)\n        log('Vex.Flow.EasyScore', args);\n}\nexport class EasyScoreGrammar {\n    constructor(builder) {\n        this.builder = builder;\n    }\n    begin() {\n        return this.LINE;\n    }\n    LINE() {\n        return {\n            expect: [this.PIECE, this.PIECES, this.EOL],\n        };\n    }\n    PIECE() {\n        return {\n            expect: [this.CHORDORNOTE, this.PARAMS],\n            run: () => this.builder.commitPiece(),\n        };\n    }\n    PIECES() {\n        return {\n            expect: [this.COMMA, this.PIECE],\n            zeroOrMore: true,\n        };\n    }\n    PARAMS() {\n        return {\n            expect: [this.DURATION, this.TYPE, this.DOTS, this.OPTS],\n        };\n    }\n    CHORDORNOTE() {\n        return {\n            expect: [this.CHORD, this.SINGLENOTE],\n            or: true,\n        };\n    }\n    CHORD() {\n        return {\n            expect: [this.LPAREN, this.NOTES, this.RPAREN],\n            // eslint-disable-next-line\n            run: (state) => this.builder.addChord(state.matches[1]),\n        };\n    }\n    NOTES() {\n        return {\n            expect: [this.NOTE],\n            oneOrMore: true,\n        };\n    }\n    NOTE() {\n        return {\n            expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n        };\n    }\n    SINGLENOTE() {\n        return {\n            expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n            run: (state) => {\n                // eslint-disable-next-line\n                const s = state;\n                this.builder.addSingleNote(s.matches[0], s.matches[1], s.matches[2]);\n            },\n        };\n    }\n    ACCIDENTAL() {\n        return {\n            expect: [this.MICROTONES, this.ACCIDENTALS],\n            maybe: true,\n            or: true,\n        };\n    }\n    DOTS() {\n        return {\n            expect: [this.DOT],\n            zeroOrMore: true,\n            // eslint-disable-next-line\n            run: (state) => this.builder.setNoteDots(state.matches),\n        };\n    }\n    TYPE() {\n        return {\n            expect: [this.SLASH, this.MAYBESLASH, this.TYPES],\n            maybe: true,\n            // eslint-disable-next-line\n            run: (state) => this.builder.setNoteType(state.matches[2]),\n        };\n    }\n    DURATION() {\n        return {\n            expect: [this.SLASH, this.DURATIONS],\n            maybe: true,\n            // eslint-disable-next-line\n            run: (state) => this.builder.setNoteDuration(state.matches[1]),\n        };\n    }\n    OPTS() {\n        return {\n            expect: [this.LBRACKET, this.KEYVAL, this.KEYVALS, this.RBRACKET],\n            maybe: true,\n        };\n    }\n    KEYVALS() {\n        return {\n            expect: [this.COMMA, this.KEYVAL],\n            zeroOrMore: true,\n        };\n    }\n    KEYVAL() {\n        const unquote = (str) => str.slice(1, -1);\n        return {\n            expect: [this.KEY, this.EQUALS, this.VAL],\n            // eslint-disable-next-line\n            run: (state) => this.builder.addNoteOption(state.matches[0], unquote(state.matches[2])),\n        };\n    }\n    VAL() {\n        return {\n            expect: [this.SVAL, this.DVAL],\n            or: true,\n        };\n    }\n    KEY() {\n        return { token: '[a-zA-Z][a-zA-Z0-9]*' };\n    }\n    DVAL() {\n        return { token: '[\"][^\"]*[\"]' };\n    }\n    SVAL() {\n        return { token: \"['][^']*[']\" };\n    }\n    NOTENAME() {\n        return { token: '[a-gA-G]' };\n    }\n    OCTAVE() {\n        return { token: '[0-9]+' };\n    }\n    ACCIDENTALS() {\n        return { token: 'bb|b|##|#|n' };\n    }\n    MICROTONES() {\n        return { token: 'bbs|bss|bs|db|d|\\\\+\\\\+-|\\\\+-|\\\\+\\\\+|\\\\+|k|o' };\n    }\n    DURATIONS() {\n        return { token: '[0-9whq]+' };\n    }\n    TYPES() {\n        return { token: '[rRsSmMhHgG]' };\n    }\n    LPAREN() {\n        return { token: '[(]' };\n    }\n    RPAREN() {\n        return { token: '[)]' };\n    }\n    COMMA() {\n        return { token: '[,]' };\n    }\n    DOT() {\n        return { token: '[.]' };\n    }\n    SLASH() {\n        return { token: '[/]' };\n    }\n    MAYBESLASH() {\n        return { token: '[/]?' };\n    }\n    EQUALS() {\n        return { token: '[=]' };\n    }\n    LBRACKET() {\n        return { token: '\\\\[' };\n    }\n    RBRACKET() {\n        return { token: '\\\\]' };\n    }\n    EOL() {\n        return { token: '$' };\n    }\n}\nexport class Piece {\n    constructor(duration) {\n        this.chord = [];\n        this.dots = 0;\n        this.options = {};\n        this.duration = duration;\n    }\n}\nexport class Builder {\n    constructor(factory) {\n        this.commitHooks = [];\n        this.factory = factory;\n        this.reset();\n    }\n    reset(options) {\n        this.options = Object.assign({ stem: 'auto', clef: 'treble' }, options);\n        this.elements = { notes: [], accidentals: [] };\n        this.rollingDuration = '8';\n        this.resetPiece();\n    }\n    getFactory() {\n        return this.factory;\n    }\n    getElements() {\n        return this.elements;\n    }\n    addCommitHook(commitHook) {\n        this.commitHooks.push(commitHook);\n    }\n    resetPiece() {\n        L('resetPiece');\n        this.piece = new Piece(this.rollingDuration);\n    }\n    setNoteDots(dots) {\n        L('setNoteDots:', dots);\n        if (dots)\n            this.piece.dots = dots.length;\n    }\n    setNoteDuration(duration) {\n        L('setNoteDuration:', duration);\n        this.rollingDuration = this.piece.duration = duration || this.rollingDuration;\n    }\n    setNoteType(type) {\n        L('setNoteType:', type);\n        if (type)\n            this.piece.type = type;\n    }\n    addNoteOption(key, value) {\n        L('addNoteOption: key:', key, 'value:', value);\n        this.piece.options[key] = value;\n    }\n    addNote(key, accid, octave) {\n        L('addNote:', key, accid, octave);\n        this.piece.chord.push({\n            key: key,\n            accid,\n            octave,\n        });\n    }\n    addSingleNote(key, accid, octave) {\n        L('addSingleNote:', key, accid, octave);\n        this.addNote(key, accid, octave);\n    }\n    // notes is an array with 3 entries\n    addChord(notes) {\n        L('startChord');\n        if (typeof notes[0] !== 'object') {\n            this.addSingleNote(notes[0]);\n        }\n        else {\n            notes.forEach((n) => {\n                if (n)\n                    this.addNote(...n); // n => [string, string | null, string]\n            });\n        }\n        L('endChord');\n    }\n    commitPiece() {\n        L('commitPiece');\n        const { factory } = this;\n        if (!factory)\n            return;\n        const options = Object.assign(Object.assign({}, this.options), this.piece.options);\n        // reset() sets this.options.stem & this.options.clef but we check to make sure nothing has changed.\n        // e.g., auto | up | down\n        const stem = defined(options.stem, 'BadArguments', 'options.stem is not defined').toLowerCase();\n        // e.g., treble | bass\n        const clef = defined(options.clef, 'BadArguments', 'options.clef is not defined').toLowerCase();\n        const { chord, duration, dots, type } = this.piece;\n        // Create a string[] that will be assigned to the .keys property of the StaveNote.\n        // Each string in the array represents a note pitch and is of the form: {NoteName}{Accidental}/{Octave}\n        // Only standard accidentals are included in the .keys property. Microtonal accidentals are not included.\n        const standardAccidentals = Music.accidentals;\n        const keys = chord.map((notePiece) => {\n            var _a;\n            return notePiece.key +\n                (standardAccidentals.includes((_a = notePiece.accid) !== null && _a !== void 0 ? _a : '') ? notePiece.accid : '') +\n                '/' +\n                notePiece.octave;\n        });\n        const auto_stem = stem === 'auto'; // StaveNoteStruct expects the underscore & lowercase.\n        // Build a GhostNote or StaveNote using the information we gathered.\n        const note = (type === null || type === void 0 ? void 0 : type.toLowerCase()) == 'g'\n            ? factory.GhostNote({ duration, dots })\n            : factory.StaveNote({ keys, duration, dots, type, clef, auto_stem });\n        if (!auto_stem)\n            note.setStemDirection(stem === 'up' ? Stem.UP : Stem.DOWN);\n        // Attach accidentals.\n        const accidentals = [];\n        chord.forEach((notePiece, index) => {\n            const accid = notePiece.accid;\n            if (typeof accid === 'string') {\n                const accidental = factory.Accidental({ type: accid });\n                note.addModifier(accidental, index);\n                accidentals.push(accidental);\n            }\n            else {\n                accidentals.push(undefined);\n            }\n        });\n        // Attach dots.\n        for (let i = 0; i < dots; i++)\n            Dot.buildAndAttach([note], { all: true });\n        this.commitHooks.forEach((commitHook) => commitHook(options, note, this));\n        this.elements.notes.push(note);\n        this.elements.accidentals.push(accidentals);\n        this.resetPiece();\n    }\n}\n/**\n * Commit hook used by EasyScore.setOptions().\n */\nfunction setId(options, note) {\n    if (options.id === undefined)\n        return;\n    note.setAttribute('id', options.id);\n}\n// Used by setClass() below.\nconst commaSeparatedRegex = /\\s*,\\s*/;\n/**\n * Commit hook used by EasyScore.setOptions().\n */\nfunction setClass(options, note) {\n    if (options.class === undefined)\n        return;\n    options.class.split(commaSeparatedRegex).forEach((className) => note.addClass(className));\n}\n/**\n * EasyScore implements a parser for a simple language to generate VexFlow objects.\n */\nexport class EasyScore {\n    constructor(options = {}) {\n        this.defaults = {\n            clef: 'treble',\n            time: '4/4',\n            stem: 'auto',\n        };\n        this.setOptions(options);\n    }\n    /**\n     * Set the score defaults.\n     * clef must be set appropriately to avoid errors when adding Staves.\n     * @param defaults.clef default clef ( treble | bass ...) see {@link Clef.types}\n     * @param defaults.time default time signature ( 4/4 | 9/8 ...)\n     * @param defaults.stem default stem arrangement (auto | up | down)\n     * @returns this\n     */\n    set(defaults) {\n        this.defaults = Object.assign(Object.assign({}, this.defaults), defaults);\n        return this;\n    }\n    /**\n     * @param options.factory is required.\n     * @returns this\n     */\n    setOptions(options) {\n        var _a, _b;\n        // eslint-disable-next-line\n        const factory = options.factory; // ! operator, because options.factory was set in Factory.EasyScore().\n        const builder = (_a = options.builder) !== null && _a !== void 0 ? _a : new Builder(factory);\n        this.options = Object.assign(Object.assign({ commitHooks: [setId, setClass, Articulation.easyScoreHook, FretHandFinger.easyScoreHook], throwOnError: false }, options), { factory,\n            builder });\n        this.factory = factory;\n        this.builder = builder;\n        this.grammar = new EasyScoreGrammar(this.builder);\n        this.parser = new Parser(this.grammar);\n        (_b = this.options.commitHooks) === null || _b === void 0 ? void 0 : _b.forEach((commitHook) => this.addCommitHook(commitHook));\n        return this;\n    }\n    setContext(context) {\n        this.factory.setContext(context);\n        return this;\n    }\n    parse(line, options = {}) {\n        this.builder.reset(options);\n        const result = this.parser.parse(line);\n        if (!result.success && this.options.throwOnError) {\n            L(result);\n            throw new RuntimeError('Error parsing line: ' + line);\n        }\n        return result;\n    }\n    beam(notes, options) {\n        this.factory.Beam({ notes, options });\n        return notes;\n    }\n    tuplet(notes, options) {\n        this.factory.Tuplet({ notes, options });\n        return notes;\n    }\n    notes(line, options = {}) {\n        options = Object.assign({ clef: this.defaults.clef, stem: this.defaults.stem }, options);\n        this.parse(line, options);\n        return this.builder.getElements().notes;\n    }\n    voice(notes, options = {}) {\n        options = Object.assign({ time: this.defaults.time }, options);\n        return this.factory.Voice(options).addTickables(notes);\n    }\n    addCommitHook(commitHook) {\n        this.builder.addCommitHook(commitHook);\n    }\n}\nEasyScore.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\nimport { StemmableNote } from './stemmablenote';\nimport { Category, isAnnotation } from './typeguard';\nimport { RuntimeError } from './util';\nconst ERROR_MSG = 'Ghost note must have valid initialization data to identify duration.';\nexport class GhostNote extends StemmableNote {\n    static get CATEGORY() {\n        return Category.GhostNote;\n    }\n    constructor(parameter) {\n        if (!parameter) {\n            throw new RuntimeError('BadArguments', ERROR_MSG);\n        }\n        let noteStruct;\n        if (typeof parameter === 'string') {\n            // Preserve backwards-compatibility\n            noteStruct = { duration: parameter };\n        }\n        else if (typeof parameter === 'object') {\n            noteStruct = parameter;\n        }\n        else {\n            throw new RuntimeError('BadArguments', ERROR_MSG);\n        }\n        super(noteStruct);\n        // Note properties\n        this.setWidth(0);\n    }\n    /**\n     * @returns true if this note is a type of rest. Rests don't have pitches, but take up space in the score.\n     */\n    isRest() {\n        return true;\n    }\n    setStave(stave) {\n        super.setStave(stave);\n        return this;\n    }\n    /* Overridden to ignore */\n    // eslint-disable-next-line\n    addToModifierContext(mc) {\n        // DO NOTHING.\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    draw() {\n        // Draw Annotations\n        this.setRendered();\n        for (let i = 0; i < this.modifiers.length; ++i) {\n            const modifier = this.modifiers[i];\n            if (isAnnotation(modifier)) {\n                modifier.setContext(this.getContext());\n                modifier.drawWithStyle();\n            }\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\nimport { Note } from './note';\nimport { Category } from './typeguard';\nexport class GlyphNote extends Note {\n    constructor(glyph, noteStruct, options) {\n        super(noteStruct);\n        this.options = Object.assign({ ignoreTicks: false, line: 2 }, options);\n        // Note properties\n        this.ignore_ticks = this.options.ignoreTicks;\n        if (glyph) {\n            this.setGlyph(glyph);\n        }\n    }\n    static get CATEGORY() {\n        return Category.GlyphNote;\n    }\n    setGlyph(glyph) {\n        this.glyph = glyph;\n        this.setWidth(this.glyph.getMetrics().width);\n        return this;\n    }\n    getBoundingBox() {\n        return this.glyph.getBoundingBox();\n    }\n    preFormat() {\n        if (!this.preFormatted && this.modifierContext) {\n            this.modifierContext.preFormat();\n        }\n        this.preFormatted = true;\n        return this;\n    }\n    drawModifiers() {\n        const ctx = this.checkContext();\n        ctx.openGroup('modifiers');\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const modifier = this.modifiers[i];\n            modifier.setContext(ctx);\n            modifier.drawWithStyle();\n        }\n        ctx.closeGroup();\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        this.setRendered();\n        ctx.openGroup('glyphNote', this.getAttribute('id'));\n        // Context is set when setStave is called on Note\n        const glyph = this.glyph;\n        if (!glyph.getContext()) {\n            glyph.setContext(ctx);\n        }\n        glyph.setStave(stave);\n        glyph.setYShift(stave.getYForLine(this.options.line) - stave.getYForGlyphs());\n        const x = this.isCenterAligned() ? this.getAbsoluteX() - this.getWidth() / 2 : this.getAbsoluteX();\n        glyph.renderToStave(x);\n        this.drawModifiers();\n        ctx.closeGroup();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\nimport { StaveNote } from './stavenote';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class GraceNote extends StaveNote {\n    constructor(noteStruct) {\n        super(Object.assign({ glyph_font_scale: Tables.NOTATION_FONT_SCALE * GraceNote.SCALE, stroke_px: GraceNote.LEDGER_LINE_OFFSET }, noteStruct));\n        this.slash = noteStruct.slash || false;\n        this.slur = true;\n        this.buildNoteHeads();\n        this.width = 3;\n    }\n    static get CATEGORY() {\n        return Category.GraceNote;\n    }\n    static get LEDGER_LINE_OFFSET() {\n        return 2;\n    }\n    static get SCALE() {\n        return 0.66;\n    }\n    getStemExtension() {\n        if (this.stem_extension_override) {\n            return this.stem_extension_override;\n        }\n        const glyph = this.getGlyph();\n        if (glyph) {\n            let ret = super.getStemExtension();\n            if (glyph.stem) {\n                const staveNoteScale = this.getStaveNoteScale();\n                ret = (Stem.HEIGHT + ret) * staveNoteScale - Stem.HEIGHT;\n            }\n            return ret;\n        }\n        return 0;\n    }\n    getStaveNoteScale() {\n        return this.render_options.glyph_font_scale / Tables.NOTATION_FONT_SCALE;\n    }\n    draw() {\n        super.draw();\n        this.setRendered();\n        const stem = this.stem;\n        if (this.slash && stem) {\n            const staveNoteScale = this.getStaveNoteScale();\n            // some magic numbers are based on the staveNoteScale 0.66.\n            const offsetScale = staveNoteScale / 0.66;\n            let slashBBox = undefined;\n            const beam = this.beam;\n            if (beam) {\n                // FIXME: should render slash after beam?\n                if (!beam.postFormatted) {\n                    beam.postFormat();\n                }\n                slashBBox = this.calcBeamedNotesSlashBBox(8 * offsetScale, 8 * offsetScale, {\n                    stem: 6 * offsetScale,\n                    beam: 5 * offsetScale,\n                });\n            }\n            else {\n                const stem_direction = this.getStemDirection();\n                const noteHeadBounds = this.getNoteHeadBounds();\n                const noteStemHeight = stem.getHeight();\n                let x = this.getAbsoluteX();\n                let y = stem_direction === Stem.DOWN\n                    ? noteHeadBounds.y_top - noteStemHeight\n                    : noteHeadBounds.y_bottom - noteStemHeight;\n                const defaultStemExtention = stem_direction === Stem.DOWN ? this.glyph.stem_down_extension : this.glyph.stem_up_extension;\n                let defaultOffsetY = Tables.STEM_HEIGHT;\n                defaultOffsetY -= defaultOffsetY / 2.8;\n                defaultOffsetY += defaultStemExtention;\n                y += defaultOffsetY * staveNoteScale * stem_direction;\n                const offsets = stem_direction === Stem.UP\n                    ? {\n                        x1: 1,\n                        y1: 0,\n                        x2: 13,\n                        y2: -9,\n                    }\n                    : {\n                        x1: -4,\n                        y1: 1,\n                        x2: 13,\n                        y2: 9,\n                    };\n                x += offsets.x1 * offsetScale;\n                y += offsets.y1 * offsetScale;\n                slashBBox = {\n                    x1: x,\n                    y1: y,\n                    x2: x + offsets.x2 * offsetScale,\n                    y2: y + offsets.y2 * offsetScale,\n                };\n            }\n            // FIXME: avoid staff lines, ledger lines or others.\n            const ctx = this.checkContext();\n            ctx.save();\n            ctx.setLineWidth(1 * offsetScale); // FIXME: use more appropriate value.\n            ctx.beginPath();\n            ctx.moveTo(slashBBox.x1, slashBBox.y1);\n            ctx.lineTo(slashBBox.x2, slashBBox.y2);\n            ctx.closePath();\n            ctx.stroke();\n            ctx.restore();\n        }\n    }\n    calcBeamedNotesSlashBBox(slashStemOffset, slashBeamOffset, protrusions) {\n        const beam = this.beam;\n        if (!beam)\n            throw new RuntimeError('NoBeam', \"Can't calculate without a beam.\");\n        const beam_slope = beam.slope;\n        const isBeamEndNote = beam.notes[beam.notes.length - 1] === this;\n        const scaleX = isBeamEndNote ? -1 : 1;\n        const beam_angle = Math.atan(beam_slope * scaleX);\n        // slash line intersecting point on beam.\n        const iPointOnBeam = {\n            dx: Math.cos(beam_angle) * slashBeamOffset,\n            dy: Math.sin(beam_angle) * slashBeamOffset,\n        };\n        slashStemOffset *= this.getStemDirection();\n        const slash_angle = Math.atan((iPointOnBeam.dy - slashStemOffset) / iPointOnBeam.dx);\n        const protrusion_stem_dx = Math.cos(slash_angle) * protrusions.stem * scaleX;\n        const protrusion_stem_dy = Math.sin(slash_angle) * protrusions.stem;\n        const protrusion_beam_dx = Math.cos(slash_angle) * protrusions.beam * scaleX;\n        const protrusion_beam_dy = Math.sin(slash_angle) * protrusions.beam;\n        const stemX = this.getStemX();\n        const stem0X = beam.notes[0].getStemX();\n        const stemY = beam.getBeamYToDraw() + (stemX - stem0X) * beam_slope;\n        const ret = {\n            x1: stemX - protrusion_stem_dx,\n            y1: stemY + slashStemOffset - protrusion_stem_dy,\n            x2: stemX + iPointOnBeam.dx * scaleX + protrusion_beam_dx,\n            y2: stemY + iPointOnBeam.dy + protrusion_beam_dy,\n        };\n        return ret;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Mark Meeus 2019\nimport { KeySignature } from './keysignature';\nimport { Note } from './note';\nimport { Category } from './typeguard';\nexport class KeySigNote extends Note {\n    constructor(keySpec, cancelKeySpec, alterKeySpec) {\n        super({ duration: 'b' });\n        this.keySignature = new KeySignature(keySpec, cancelKeySpec, alterKeySpec);\n        // Note properties\n        this.ignore_ticks = true;\n    }\n    static get CATEGORY() {\n        return Category.KeySigNote;\n    }\n    /* Overridden to ignore */\n    // eslint-disable-next-line\n    addToModifierContext(mc) {\n        // DO NOTHING.\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        this.keySignature.setStave(this.checkStave());\n        this.setWidth(this.keySignature.getWidth());\n        return this;\n    }\n    draw() {\n        const ctx = this.checkStave().checkContext();\n        this.setRendered();\n        this.keySignature.setX(this.getAbsoluteX());\n        this.keySignature.setContext(ctx);\n        this.keySignature.draw();\n    }\n}\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements multiple measure rests.\nimport { Element } from './element';\nimport { Glyph } from './glyph';\nimport { NoteHead } from './notehead';\nimport { StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { TimeSignature } from './timesignature';\nimport { Category, isBarline } from './typeguard';\nimport { defined } from './util';\nlet semibreve_rest;\nfunction get_semibreve_rest() {\n    if (!semibreve_rest) {\n        const noteHead = new NoteHead({ duration: 'w', note_type: 'r' });\n        semibreve_rest = {\n            glyph_font_scale: noteHead.render_options.glyph_font_scale,\n            glyph_code: noteHead.glyph_code,\n            width: noteHead.getWidth(),\n        };\n    }\n    return semibreve_rest;\n}\nexport class MultiMeasureRest extends Element {\n    /**\n     *\n     * @param number_of_measures Number of measures.\n     * @param options The options object.\n     */\n    constructor(number_of_measures, options) {\n        super();\n        this.xs = { left: NaN, right: NaN };\n        this.hasPaddingLeft = false;\n        this.hasPaddingRight = false;\n        this.hasLineThickness = false;\n        this.hasSymbolSpacing = false;\n        this.number_of_measures = number_of_measures;\n        // Keep track of whether these four options were provided.\n        this.hasPaddingLeft = typeof options.padding_left === 'number';\n        this.hasPaddingRight = typeof options.padding_right === 'number';\n        this.hasLineThickness = typeof options.line_thickness === 'number';\n        this.hasSymbolSpacing = typeof options.symbol_spacing === 'number';\n        const musicFont = Tables.currentMusicFont();\n        this.render_options = Object.assign({ use_symbols: false, show_number: true, number_line: -0.5, number_glyph_point: musicFont.lookupMetric('digits.point'), line: 2, spacing_between_lines_px: Tables.STAVE_LINE_DISTANCE, serif_thickness: 2, semibreve_rest_glyph_scale: Tables.NOTATION_FONT_SCALE, padding_left: 0, padding_right: 0, line_thickness: 5, symbol_spacing: 0 }, options);\n        const fontLineShift = musicFont.lookupMetric('digits.shiftLine', 0);\n        this.render_options.number_line += fontLineShift;\n    }\n    static get CATEGORY() {\n        return Category.MultiMeasureRest;\n    }\n    getXs() {\n        return this.xs;\n    }\n    setStave(stave) {\n        this.stave = stave;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    drawLine(stave, ctx, left, right, spacingBetweenLines) {\n        const options = this.render_options;\n        const y = stave.getYForLine(options.line);\n        const padding = (right - left) * 0.1;\n        left += padding;\n        right -= padding;\n        let lineThicknessHalf;\n        if (this.hasLineThickness) {\n            lineThicknessHalf = options.line_thickness * 0.5;\n        }\n        else {\n            lineThicknessHalf = spacingBetweenLines * 0.25;\n        }\n        const serifThickness = options.serif_thickness;\n        const top = y - spacingBetweenLines;\n        const bot = y + spacingBetweenLines;\n        const leftIndented = left + serifThickness;\n        const rightIndented = right - serifThickness;\n        const lineTop = y - lineThicknessHalf;\n        const lineBottom = y + lineThicknessHalf;\n        ctx.save();\n        ctx.beginPath();\n        ctx.moveTo(left, top);\n        ctx.lineTo(leftIndented, top);\n        ctx.lineTo(leftIndented, lineTop);\n        ctx.lineTo(rightIndented, lineTop);\n        ctx.lineTo(rightIndented, top);\n        ctx.lineTo(right, top);\n        ctx.lineTo(right, bot);\n        ctx.lineTo(rightIndented, bot);\n        ctx.lineTo(rightIndented, lineBottom);\n        ctx.lineTo(leftIndented, lineBottom);\n        ctx.lineTo(leftIndented, bot);\n        ctx.lineTo(left, bot);\n        ctx.closePath();\n        ctx.fill();\n    }\n    drawSymbols(stave, ctx, left, right, spacingBetweenLines) {\n        const n4 = Math.floor(this.number_of_measures / 4);\n        const n = this.number_of_measures % 4;\n        const n2 = Math.floor(n / 2);\n        const n1 = n % 2;\n        const options = this.render_options;\n        // FIXME: TODO: invalidate semibreve_rest at the appropriate time\n        // (e.g., if the system font settings are changed).\n        semibreve_rest = undefined;\n        const rest = get_semibreve_rest();\n        const rest_scale = options.semibreve_rest_glyph_scale;\n        const rest_width = rest.width * (rest_scale / rest.glyph_font_scale);\n        const glyphs = {\n            2: {\n                width: rest_width * 0.5,\n                height: spacingBetweenLines,\n            },\n            1: {\n                width: rest_width,\n            },\n        };\n        /* 10: normal spacingBetweenLines */\n        const spacing = this.hasSymbolSpacing ? options.symbol_spacing : 10;\n        const width = n4 * glyphs[2].width + n2 * glyphs[2].width + n1 * glyphs[1].width + (n4 + n2 + n1 - 1) * spacing;\n        let x = left + (right - left) * 0.5 - width * 0.5;\n        const line = options.line;\n        const yTop = stave.getYForLine(line - 1);\n        const yMiddle = stave.getYForLine(line);\n        const yBottom = stave.getYForLine(line + 1);\n        ctx.save();\n        ctx.setStrokeStyle('none');\n        ctx.setLineWidth(0);\n        for (let i = 0; i < n4; ++i) {\n            ctx.fillRect(x, yMiddle - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n            ctx.fillRect(x, yBottom - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n            x += glyphs[2].width + spacing;\n        }\n        for (let i = 0; i < n2; ++i) {\n            ctx.fillRect(x, yMiddle - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n            x += glyphs[2].width + spacing;\n        }\n        for (let i = 0; i < n1; ++i) {\n            Glyph.renderGlyph(ctx, x, yTop, rest_scale, rest.glyph_code);\n            x += glyphs[1].width + spacing;\n        }\n        ctx.restore();\n    }\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        const stave = this.checkStave();\n        let left = stave.getNoteStartX();\n        let right = stave.getNoteEndX();\n        // FIXME: getNoteStartX() returns x + 5(barline width)\n        //        getNoteEndX() returns x + width(no barline width)\n        // See Stave constructor. How do we fix this?\n        // Here, we subtract the barline width.\n        const begModifiers = stave.getModifiers(StaveModifierPosition.BEGIN);\n        if (begModifiers.length === 1 && isBarline(begModifiers[0])) {\n            left -= begModifiers[0].getWidth();\n        }\n        const options = this.render_options;\n        if (this.hasPaddingLeft) {\n            left = stave.getX() + options.padding_left;\n        }\n        if (this.hasPaddingRight) {\n            right = stave.getX() + stave.getWidth() - options.padding_right;\n        }\n        this.xs.left = left;\n        this.xs.right = right;\n        const spacingBetweenLines = options.spacing_between_lines_px;\n        if (options.use_symbols) {\n            this.drawSymbols(stave, ctx, left, right, spacingBetweenLines);\n        }\n        else {\n            this.drawLine(stave, ctx, left, right, spacingBetweenLines);\n        }\n        if (options.show_number) {\n            const timeSpec = '/' + this.number_of_measures;\n            const timeSig = new TimeSignature(timeSpec, 0, false);\n            timeSig.point = options.number_glyph_point;\n            timeSig.setTimeSig(timeSpec);\n            timeSig.setStave(stave);\n            timeSig.setX(left + (right - left) * 0.5 - timeSig.getInfo().glyph.getMetrics().width * 0.5);\n            timeSig.bottomLine = options.number_line;\n            timeSig.setContext(ctx).draw();\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (PedalMarking.DEBUG)\n        log('Vex.Flow.PedalMarking', args);\n}\n/**\n * Draws a pedal glyph with the provided `name` on a rendering `context`\n * at the coordinates `x` and `y. Takes into account the glyph data\n * coordinate shifts.\n */\nfunction drawPedalGlyph(name, context, x, y, point) {\n    const glyph_data = PedalMarking.GLYPHS[name];\n    const glyph = new Glyph(glyph_data.code, point, { category: 'pedalMarking' });\n    glyph.render(context, x + glyph_data.x_shift, y + glyph_data.y_shift);\n}\n/**\n * PedalMarking implements different types of pedal markings. These notation\n * elements indicate to the performer when to depress and release the a pedal.\n *\n * In order to create \"Sostenuto\", and \"una corda\" markings, you must set\n * custom text for the release/depress pedal markings.\n */\nexport class PedalMarking extends Element {\n    constructor(notes) {\n        super();\n        this.notes = notes;\n        this.type = PedalMarking.type.TEXT;\n        this.line = 0;\n        // Custom text for the release/depress markings\n        this.custom_depress_text = '';\n        this.custom_release_text = '';\n        this.resetFont();\n        this.render_options = {\n            bracket_height: 10,\n            text_margin_right: 6,\n            bracket_line_width: 1,\n            color: 'black',\n        };\n    }\n    static get CATEGORY() {\n        return Category.PedalMarking;\n    }\n    /**\n     * Create a sustain pedal marking. Returns the defaults PedalMarking.\n     * Which uses the traditional \"Ped\" and \"*\"\" markings.\n     */\n    static createSustain(notes) {\n        const pedal = new PedalMarking(notes);\n        return pedal;\n    }\n    /** Create a sostenuto pedal marking */\n    static createSostenuto(notes) {\n        const pedal = new PedalMarking(notes);\n        pedal.setType(PedalMarking.type.MIXED);\n        pedal.setCustomText('Sost. Ped.');\n        return pedal;\n    }\n    /** Create an una corda pedal marking */\n    static createUnaCorda(notes) {\n        const pedal = new PedalMarking(notes);\n        pedal.setType(PedalMarking.type.TEXT);\n        pedal.setCustomText('una corda', 'tre corda');\n        return pedal;\n    }\n    /** Set pedal type. */\n    setType(type) {\n        type = typeof type === 'string' ? PedalMarking.typeString[type] : type;\n        if (type >= PedalMarking.type.TEXT && type <= PedalMarking.type.MIXED) {\n            this.type = type;\n        }\n        return this;\n    }\n    /**\n     * Set custom text for the `depress`/`release` pedal markings. No text is\n     * set if the parameter is falsy.\n     */\n    setCustomText(depress, release) {\n        this.custom_depress_text = depress || '';\n        this.custom_release_text = release || '';\n        return this;\n    }\n    /** Set the staff line to render the markings on. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Draw the bracket based pedal markings. */\n    drawBracketed() {\n        const ctx = this.checkContext();\n        let is_pedal_depressed = false;\n        let prev_x;\n        let prev_y;\n        // Iterate through each note\n        this.notes.forEach((note, index, notes) => {\n            // Each note triggers the opposite pedal action\n            is_pedal_depressed = !is_pedal_depressed;\n            // Get the initial coordinates for the note\n            const x = note.getAbsoluteX();\n            const y = note.checkStave().getYForBottomText(this.line + 3);\n            // Throw if current note is positioned before the previous note\n            if (x < prev_x) {\n                throw new RuntimeError('InvalidConfiguration', 'The notes provided must be in order of ascending x positions');\n            }\n            // Determine if the previous or next note are the same\n            // as the current note. We need to keep track of this for\n            // when adjustments are made for the release+depress action\n            const next_is_same = notes[index + 1] === note;\n            const prev_is_same = notes[index - 1] === note;\n            let x_shift = 0;\n            const point = Tables.currentMusicFont().lookupMetric(`pedalMarking.${is_pedal_depressed ? 'down' : 'up'}.point`);\n            if (is_pedal_depressed) {\n                // Adjustment for release+depress\n                x_shift = prev_is_same ? 5 : 0;\n                if (this.type === PedalMarking.type.MIXED && !prev_is_same) {\n                    // For MIXED style, start with text instead of bracket\n                    if (this.custom_depress_text) {\n                        // If we have custom text, use instead of the default \"Ped\" glyph\n                        const text_width = ctx.measureText(this.custom_depress_text).width;\n                        ctx.fillText(this.custom_depress_text, x - text_width / 2, y);\n                        x_shift = text_width / 2 + this.render_options.text_margin_right;\n                    }\n                    else {\n                        // Render the Ped glyph in position\n                        drawPedalGlyph('pedal_depress', ctx, x, y, point);\n                        x_shift = 20 + this.render_options.text_margin_right;\n                    }\n                }\n                else {\n                    // Draw start bracket\n                    ctx.beginPath();\n                    ctx.moveTo(x, y - this.render_options.bracket_height);\n                    ctx.lineTo(x + x_shift, y);\n                    ctx.stroke();\n                    ctx.closePath();\n                }\n            }\n            else {\n                // Adjustment for release+depress\n                x_shift = next_is_same ? -5 : 0;\n                // Draw end bracket\n                ctx.beginPath();\n                ctx.moveTo(prev_x, prev_y);\n                ctx.lineTo(x + x_shift, y);\n                ctx.lineTo(x, y - this.render_options.bracket_height);\n                ctx.stroke();\n                ctx.closePath();\n            }\n            // Store previous coordinates\n            prev_x = x + x_shift;\n            prev_y = y;\n        });\n    }\n    /**\n     * Draw the text based pedal markings. This defaults to the traditional\n     * \"Ped\" and \"*\"\" symbols if no custom text has been provided.\n     */\n    drawText() {\n        const ctx = this.checkContext();\n        let is_pedal_depressed = false;\n        // Iterate through each note, placing glyphs or custom text accordingly\n        this.notes.forEach((note) => {\n            is_pedal_depressed = !is_pedal_depressed;\n            const stave = note.checkStave();\n            const x = note.getAbsoluteX();\n            const y = stave.getYForBottomText(this.line + 3);\n            const point = Tables.currentMusicFont().lookupMetric(`pedalMarking.${is_pedal_depressed ? 'down' : 'up'}.point`);\n            let text_width = 0;\n            if (is_pedal_depressed) {\n                if (this.custom_depress_text) {\n                    text_width = ctx.measureText(this.custom_depress_text).width;\n                    ctx.fillText(this.custom_depress_text, x - text_width / 2, y);\n                }\n                else {\n                    drawPedalGlyph('pedal_depress', ctx, x, y, point);\n                }\n            }\n            else {\n                if (this.custom_release_text) {\n                    text_width = ctx.measureText(this.custom_release_text).width;\n                    ctx.fillText(this.custom_release_text, x - text_width / 2, y);\n                }\n                else {\n                    drawPedalGlyph('pedal_release', ctx, x, y, point);\n                }\n            }\n        });\n    }\n    /** Render the pedal marking in position on the rendering context. */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        ctx.save();\n        ctx.setStrokeStyle(this.render_options.color);\n        ctx.setFillStyle(this.render_options.color);\n        ctx.setFont(this.textFont);\n        L('Rendering Pedal Marking');\n        if (this.type === PedalMarking.type.BRACKET || this.type === PedalMarking.type.MIXED) {\n            ctx.setLineWidth(this.render_options.bracket_line_width);\n            this.drawBracketed();\n        }\n        else if (this.type === PedalMarking.type.TEXT) {\n            this.drawText();\n        }\n        ctx.restore();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.PedalMarking.DEBUG` to `true`. */\nPedalMarking.DEBUG = false;\nPedalMarking.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 12,\n    weight: FontWeight.BOLD,\n    style: FontStyle.ITALIC,\n};\n/** Glyph data */\nPedalMarking.GLYPHS = {\n    pedal_depress: {\n        code: 'keyboardPedalPed',\n        x_shift: -10,\n        y_shift: 0,\n    },\n    pedal_release: {\n        code: 'keyboardPedalUp',\n        x_shift: -2,\n        y_shift: 3,\n    },\n};\n/** Pedal type as number. */\nPedalMarking.type = {\n    TEXT: 1,\n    BRACKET: 2,\n    MIXED: 3,\n};\n/** Pedal type as string. */\nPedalMarking.typeString = {\n    text: PedalMarking.type.TEXT,\n    bracket: PedalMarking.type.BRACKET,\n    mixed: PedalMarking.type.MIXED,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\nimport { Glyph } from './glyph';\nimport { GlyphNote } from './glyphnote';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\n// Map `type` to SMuFL glyph code.\nconst CODES = {\n    '1': 'repeat1Bar',\n    '2': 'repeat2Bars',\n    '4': 'repeat4Bars',\n    slash: 'repeatBarSlash',\n};\nexport class RepeatNote extends GlyphNote {\n    static get CATEGORY() {\n        return Category.RepeatNote;\n    }\n    constructor(type, noteStruct, options) {\n        super(undefined, Object.assign({ duration: 'q', align_center: type !== 'slash' }, noteStruct), options);\n        const glyphCode = CODES[type] || 'repeat1Bar';\n        const glyph = new Glyph(glyphCode, Tables.currentMusicFont().lookupMetric('repeatNote.point', 40), {\n            category: 'repeatNote',\n        });\n        this.setGlyph(glyph);\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `StaveLine` which are simply lines that connect\n// two notes. This object is highly configurable, see the `render_options`.\n// A simple line is often used for notating glissando articulations, but you\n// can format a `StaveLine` with arrows or colors for more pedagogical\n// purposes, such as diagrams.\nimport { Element } from './element';\nimport { Tables } from './tables';\nimport { TextJustification } from './textnote';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\n// Attribution: Arrow rendering implementations based off of\n// Patrick Horgan's article, \"Drawing lines and arcs with\n// arrow heads on  HTML5 Canvas\"\n//\n// Draw an arrow head that connects between 3 coordinates.\nfunction drawArrowHead(ctx, x0, y0, x1, y1, x2, y2) {\n    // all cases do this.\n    ctx.beginPath();\n    ctx.moveTo(x0, y0);\n    ctx.lineTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.lineTo(x0, y0);\n    ctx.closePath();\n    ctx.fill();\n}\nexport class StaveLine extends Element {\n    // Initialize the StaveLine with the given `notes`.\n    //\n    // `notes` is a struct that has:\n    //\n    //  ```\n    //  {\n    //    first_note: Note,\n    //    last_note: Note,\n    //    first_indices: [n1, n2, n3],\n    //    last_indices: [n1, n2, n3]\n    //  }\n    //  ```\n    constructor(notes) {\n        super();\n        this.setNotes(notes);\n        this.text = '';\n        this.resetFont();\n        this.render_options = {\n            // Space to add to the left or the right\n            padding_left: 4,\n            padding_right: 3,\n            // The width of the line in pixels\n            line_width: 1,\n            // An array of line/space lengths. (TODO/QUESTION: Is this supported in SVG?).\n            line_dash: undefined,\n            // Can draw rounded line end, instead of a square. (TODO/QUESTION: Is this supported in SVG?).\n            rounded_end: true,\n            // The color of the line and arrowheads\n            color: undefined,\n            // Flags to draw arrows on each end of the line\n            draw_start_arrow: false,\n            draw_end_arrow: false,\n            // The length of the arrowhead sides\n            arrowhead_length: 10,\n            // The angle of the arrowhead\n            arrowhead_angle: Math.PI / 8,\n            // The position of the text\n            text_position_vertical: StaveLine.TextVerticalPosition.TOP,\n            text_justification: StaveLine.TextJustification.CENTER,\n        };\n    }\n    static get CATEGORY() {\n        return Category.StaveLine;\n    }\n    // The the annotation for the `StaveLine`\n    setText(text) {\n        this.text = text;\n        return this;\n    }\n    // Set the notes for the `StaveLine`\n    setNotes(notes) {\n        if (!notes.first_note && !notes.last_note) {\n            throw new RuntimeError('BadArguments', 'Notes needs to have either first_note or last_note set.');\n        }\n        if (!notes.first_indices)\n            notes.first_indices = [0];\n        if (!notes.last_indices)\n            notes.last_indices = [0];\n        if (notes.first_indices.length !== notes.last_indices.length) {\n            throw new RuntimeError('BadArguments', 'Connected notes must have same number of indices.');\n        }\n        this.notes = notes;\n        this.first_note = notes.first_note;\n        this.first_indices = notes.first_indices;\n        this.last_note = notes.last_note;\n        this.last_indices = notes.last_indices;\n        return this;\n    }\n    // Apply the style of the `StaveLine` to the context\n    applyLineStyle() {\n        const ctx = this.checkContext();\n        const render_options = this.render_options;\n        if (render_options.line_dash) {\n            ctx.setLineDash(render_options.line_dash);\n        }\n        if (render_options.line_width) {\n            ctx.setLineWidth(render_options.line_width);\n        }\n        if (render_options.rounded_end) {\n            ctx.setLineCap('round');\n        }\n        else {\n            ctx.setLineCap('square');\n        }\n    }\n    // Apply the text styling to the context\n    applyFontStyle() {\n        const ctx = this.checkContext();\n        ctx.setFont(this.textFont);\n        const render_options = this.render_options;\n        const color = render_options.color;\n        if (color) {\n            ctx.setStrokeStyle(color);\n            ctx.setFillStyle(color);\n        }\n    }\n    // Helper function to draw a line with arrow heads\n    drawArrowLine(ctx, pt1, pt2) {\n        const both_arrows = this.render_options.draw_start_arrow && this.render_options.draw_end_arrow;\n        const x1 = pt1.x;\n        const y1 = pt1.y;\n        const x2 = pt2.x;\n        const y2 = pt2.y;\n        // For ends with arrow we actually want to stop before we get to the arrow\n        // so that wide lines won't put a flat end on the arrow.\n        const distance = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n        const ratio = (distance - this.render_options.arrowhead_length / 3) / distance;\n        let end_x;\n        let end_y;\n        let start_x;\n        let start_y;\n        if (this.render_options.draw_end_arrow || both_arrows) {\n            end_x = Math.round(x1 + (x2 - x1) * ratio);\n            end_y = Math.round(y1 + (y2 - y1) * ratio);\n        }\n        else {\n            end_x = x2;\n            end_y = y2;\n        }\n        if (this.render_options.draw_start_arrow || both_arrows) {\n            start_x = x1 + (x2 - x1) * (1 - ratio);\n            start_y = y1 + (y2 - y1) * (1 - ratio);\n        }\n        else {\n            start_x = x1;\n            start_y = y1;\n        }\n        if (this.render_options.color) {\n            ctx.setStrokeStyle(this.render_options.color);\n            ctx.setFillStyle(this.render_options.color);\n        }\n        // Draw the shaft of the arrow\n        ctx.beginPath();\n        ctx.moveTo(start_x, start_y);\n        ctx.lineTo(end_x, end_y);\n        ctx.stroke();\n        ctx.closePath();\n        // calculate the angle of the line\n        const line_angle = Math.atan2(y2 - y1, x2 - x1);\n        // h is the line length of a side of the arrow head\n        const h = Math.abs(this.render_options.arrowhead_length / Math.cos(this.render_options.arrowhead_angle));\n        let angle1;\n        let angle2;\n        let top_x;\n        let top_y;\n        let bottom_x;\n        let bottom_y;\n        if (this.render_options.draw_end_arrow || both_arrows) {\n            angle1 = line_angle + Math.PI + this.render_options.arrowhead_angle;\n            top_x = x2 + Math.cos(angle1) * h;\n            top_y = y2 + Math.sin(angle1) * h;\n            angle2 = line_angle + Math.PI - this.render_options.arrowhead_angle;\n            bottom_x = x2 + Math.cos(angle2) * h;\n            bottom_y = y2 + Math.sin(angle2) * h;\n            drawArrowHead(ctx, top_x, top_y, x2, y2, bottom_x, bottom_y);\n        }\n        if (this.render_options.draw_start_arrow || both_arrows) {\n            angle1 = line_angle + this.render_options.arrowhead_angle;\n            top_x = x1 + Math.cos(angle1) * h;\n            top_y = y1 + Math.sin(angle1) * h;\n            angle2 = line_angle - this.render_options.arrowhead_angle;\n            bottom_x = x1 + Math.cos(angle2) * h;\n            bottom_y = y1 + Math.sin(angle2) * h;\n            drawArrowHead(ctx, top_x, top_y, x1, y1, bottom_x, bottom_y);\n        }\n    }\n    // Renders the `StaveLine` on the context\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        const first_note = this.first_note;\n        const last_note = this.last_note;\n        const render_options = this.render_options;\n        ctx.save();\n        this.applyLineStyle();\n        // Cycle through each set of indices and draw lines\n        let start_position = { x: 0, y: 0 };\n        let end_position = { x: 0, y: 0 };\n        this.first_indices.forEach((first_index, i) => {\n            const last_index = this.last_indices[i];\n            // Get initial coordinates for the start/end of the line\n            start_position = first_note.getModifierStartXY(2, first_index);\n            end_position = last_note.getModifierStartXY(1, last_index);\n            const upwards_slope = start_position.y > end_position.y;\n            // Adjust `x` coordinates for modifiers\n            start_position.x += first_note.getMetrics().modRightPx + render_options.padding_left;\n            end_position.x -= last_note.getMetrics().modLeftPx + render_options.padding_right;\n            // Adjust first `x` coordinates for displacements\n            const notehead_width = first_note.getGlyph().getWidth();\n            const first_displaced = first_note.getKeyProps()[first_index].displaced;\n            if (first_displaced && first_note.getStemDirection() === 1) {\n                start_position.x += notehead_width + render_options.padding_left;\n            }\n            // Adjust last `x` coordinates for displacements\n            const last_displaced = last_note.getKeyProps()[last_index].displaced;\n            if (last_displaced && last_note.getStemDirection() === -1) {\n                end_position.x -= notehead_width + render_options.padding_right;\n            }\n            // Adjust y position better if it's not coming from the center of the note\n            start_position.y += upwards_slope ? -3 : 1;\n            end_position.y += upwards_slope ? 2 : 0;\n            this.drawArrowLine(ctx, start_position, end_position);\n        });\n        ctx.restore();\n        // Determine the x coordinate where to start the text\n        const text_width = ctx.measureText(this.text).width;\n        const justification = render_options.text_justification;\n        let x = 0;\n        if (justification === StaveLine.TextJustification.LEFT) {\n            x = start_position.x;\n        }\n        else if (justification === StaveLine.TextJustification.CENTER) {\n            const delta_x = end_position.x - start_position.x;\n            const center_x = delta_x / 2 + start_position.x;\n            x = center_x - text_width / 2;\n        }\n        else if (justification === StaveLine.TextJustification.RIGHT) {\n            x = end_position.x - text_width;\n        }\n        // Determine the y value to start the text\n        let y = 0;\n        const vertical_position = render_options.text_position_vertical;\n        if (vertical_position === StaveLine.TextVerticalPosition.TOP) {\n            y = first_note.checkStave().getYForTopText();\n        }\n        else if (vertical_position === StaveLine.TextVerticalPosition.BOTTOM) {\n            y = first_note.checkStave().getYForBottomText(Tables.TEXT_HEIGHT_OFFSET_HACK);\n        }\n        // Draw the text\n        ctx.save();\n        this.applyFontStyle();\n        ctx.fillText(this.text, x, y);\n        ctx.restore();\n        return this;\n    }\n}\n/** Default text font. */\nStaveLine.TEXT_FONT = Object.assign({}, Element.TEXT_FONT);\n// Text Positioning\nStaveLine.TextVerticalPosition = {\n    TOP: 1,\n    BOTTOM: 2,\n};\nStaveLine.TextJustification = TextJustification;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { BoundingBox } from './boundingbox';\nimport { Element } from './element';\nimport { Formatter } from './formatter';\nimport { Note } from './note';\nimport { Stave } from './stave';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\n/**\n * System implements a musical system, which is a collection of staves,\n * each which can have one or more voices. All voices across all staves in\n * the system are formatted together.\n */\nexport class System extends Element {\n    constructor(params = {}) {\n        super();\n        this.setOptions(params);\n        this.parts = [];\n    }\n    static get CATEGORY() {\n        return Category.System;\n    }\n    /** Set formatting options. */\n    setOptions(options = {}) {\n        if (!options.factory) {\n            throw new RuntimeError('NoFactory', 'System.setOptions(options) requires a factory.');\n        }\n        this.factory = options.factory;\n        this.options = Object.assign(Object.assign({ factory: this.factory, x: 10, y: 10, width: 500, spaceBetweenStaves: 12, autoWidth: false, noJustification: false, debugFormatter: false, formatIterations: 0, noPadding: false }, options), { details: Object.assign({ alpha: 0.5 }, options.details), formatOptions: Object.assign({}, options.formatOptions) });\n        if (this.options.noJustification === false && typeof options.width === 'undefined') {\n            this.options.autoWidth = true;\n        }\n    }\n    /** Set associated context. */\n    setContext(context) {\n        super.setContext(context);\n        this.factory.setContext(context);\n        return this;\n    }\n    /**\n     * Add connector between staves.\n     * @param type see {@link StaveConnector.typeString}\n     */\n    addConnector(type = 'double') {\n        this.connector = this.factory.StaveConnector({\n            top_stave: this.parts[0].stave,\n            bottom_stave: this.parts[this.parts.length - 1].stave,\n            type,\n        });\n        return this.connector;\n    }\n    /**\n     * Add a stave to the system.\n     *\n     * Example (one voice):\n     *\n     * `system.addStave({voices: [score.voice(score.notes('C#5/q, B4, A4, G#4'))]});`\n     *\n     * Example (two voices):\n     *\n     * `system.addStave({voices: [`\n     *   `score.voice(score.notes('C#5/q, B4, A4, G#4', {stem: 'up'})),`\n     *   `score.voice(score.notes('C#4/h, C#4', {stem: 'down'}))`\n     * `]});`\n     */\n    addStave(params) {\n        var _a;\n        const staveOptions = Object.assign({ left_bar: false }, params.options);\n        const stave = (_a = params.stave) !== null && _a !== void 0 ? _a : this.factory.Stave({ x: this.options.x, y: this.options.y, width: this.options.width, options: staveOptions });\n        const p = Object.assign(Object.assign({ stave, \n            /* voices: [], */\n            spaceAbove: 0, spaceBelow: 0, debugNoteMetrics: false, noJustification: false }, params), { options: staveOptions });\n        const ctx = this.getContext();\n        p.voices.forEach((voice) => voice\n            .setContext(ctx)\n            .setStave(stave)\n            .getTickables()\n            .forEach((tickable) => tickable.setStave(stave)));\n        this.parts.push(p);\n        return stave;\n    }\n    /** Format the system. */\n    format() {\n        const options_details = this.options.details;\n        let justifyWidth = 0;\n        const formatter = new Formatter(options_details);\n        this.formatter = formatter;\n        let y = this.options.y;\n        let startX = 0;\n        let allVoices = [];\n        const debugNoteMetricsYs = [];\n        // Join the voices for each stave.\n        this.parts.forEach((part) => {\n            y = y + part.stave.space(part.spaceAbove);\n            part.stave.setY(y);\n            formatter.joinVoices(part.voices);\n            y = y + part.stave.space(part.spaceBelow);\n            y = y + part.stave.space(this.options.spaceBetweenStaves);\n            if (part.debugNoteMetrics) {\n                debugNoteMetricsYs.push({ y, voice: part.voices[0] });\n                y += 15;\n            }\n            allVoices = allVoices.concat(part.voices);\n            startX = Math.max(startX, part.stave.getNoteStartX());\n        });\n        // Update the start position of all staves.\n        this.parts.forEach((part) => part.stave.setNoteStartX(startX));\n        if (this.options.autoWidth) {\n            justifyWidth = formatter.preCalculateMinTotalWidth(allVoices);\n            this.parts.forEach((part) => {\n                part.stave.setWidth(justifyWidth + Stave.rightPadding + (startX - this.options.x));\n            });\n        }\n        else {\n            justifyWidth = this.options.noPadding\n                ? this.options.width - this.options.x\n                : this.options.width - (startX - this.options.x) - Stave.defaultPadding;\n        }\n        formatter.format(allVoices, this.options.noJustification ? 0 : justifyWidth, this.options.formatOptions);\n        for (let i = 0; i < this.options.formatIterations; i++) {\n            formatter.tune(options_details);\n        }\n        this.startX = startX;\n        this.debugNoteMetricsYs = debugNoteMetricsYs;\n        this.lastY = y;\n        this.boundingBox = new BoundingBox(this.options.x, this.options.y, this.options.width, this.lastY - this.options.y);\n    }\n    /** Render the system. */\n    draw() {\n        // Render debugging information, if requested.\n        const ctx = this.checkContext();\n        if (!this.formatter || !this.startX || !this.lastY || !this.debugNoteMetricsYs) {\n            throw new RuntimeError('NoFormatter', 'format() must be called before draw()');\n        }\n        this.setRendered();\n        if (this.options.debugFormatter) {\n            Formatter.plotDebugging(ctx, this.formatter, this.startX, this.options.y, this.lastY);\n        }\n        this.debugNoteMetricsYs.forEach((d) => {\n            d.voice.getTickables().forEach((tickable) => Note.plotMetrics(ctx, tickable, d.y));\n        });\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// The file implements notes for Tablature notation. This consists of one or\n// more fret positions, and can either be drawn with or without stems.\n//\n// See `tests/tabnote_tests.ts` for usage examples.\nimport { Font } from './font';\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Stem } from './stem';\nimport { StemmableNote } from './stemmablenote';\nimport { Tables } from './tables';\nimport { Category, isDot } from './typeguard';\nimport { defined, RuntimeError } from './util';\n// Gets the unused strings grouped together if consecutive.\n//\n// Parameters:\n// * num_lines - The number of lines\n// * strings_used - An array of numbers representing which strings have fret positions\nfunction getUnusedStringGroups(num_lines, strings_used) {\n    const stem_through = [];\n    let group = [];\n    for (let string = 1; string <= num_lines; string++) {\n        const is_used = strings_used.indexOf(string) > -1;\n        if (!is_used) {\n            group.push(string);\n        }\n        else {\n            stem_through.push(group);\n            group = [];\n        }\n    }\n    if (group.length > 0)\n        stem_through.push(group);\n    return stem_through;\n}\n// Gets groups of points that outline the partial stem lines\n// between fret positions\n//\n// Parameters:\n// * stem_Y - The `y` coordinate the stem is located on\n// * unused_strings - An array of groups of unused strings\n// * stave - The stave to use for reference\n// * stem_direction - The direction of the stem\nfunction getPartialStemLines(stem_y, unused_strings, stave, stem_direction) {\n    const up_stem = stem_direction !== 1;\n    const down_stem = stem_direction !== -1;\n    const line_spacing = stave.getSpacingBetweenLines();\n    const total_lines = stave.getNumLines();\n    const stem_lines = [];\n    unused_strings.forEach((strings) => {\n        const containsLastString = strings.indexOf(total_lines) > -1;\n        const containsFirstString = strings.indexOf(1) > -1;\n        if ((up_stem && containsFirstString) || (down_stem && containsLastString)) {\n            return;\n        }\n        // If there's only one string in the group, push a duplicate value.\n        // We do this because we need 2 strings to convert into upper/lower y\n        // values.\n        if (strings.length === 1) {\n            strings.push(strings[0]);\n        }\n        const line_ys = [];\n        // Iterate through each group string and store it's y position\n        strings.forEach((string, index, strings) => {\n            const isTopBound = string === 1;\n            const isBottomBound = string === total_lines;\n            // Get the y value for the appropriate staff line,\n            // we adjust for a 0 index array, since string numbers are index 1\n            let y = stave.getYForLine(string - 1);\n            // Unless the string is the first or last, add padding to each side\n            // of the line\n            if (index === 0 && !isTopBound) {\n                y -= line_spacing / 2 - 1;\n            }\n            else if (index === strings.length - 1 && !isBottomBound) {\n                y += line_spacing / 2 - 1;\n            }\n            // Store the y value\n            line_ys.push(y);\n            // Store a subsequent y value connecting this group to the main\n            // stem above/below the stave if it's the top/bottom string\n            if (stem_direction === 1 && isTopBound) {\n                line_ys.push(stem_y - 2);\n            }\n            else if (stem_direction === -1 && isBottomBound) {\n                line_ys.push(stem_y + 2);\n            }\n        });\n        // Add the sorted y values to the\n        stem_lines.push(line_ys.sort((a, b) => a - b));\n    });\n    return stem_lines;\n}\nexport class TabNote extends StemmableNote {\n    // Initialize the TabNote with a `noteStruct` full of properties\n    // and whether to `draw_stem` when rendering the note\n    constructor(noteStruct, draw_stem = false) {\n        super(noteStruct);\n        this.glyphs = [];\n        // Return the number of the greatest string, which is the string lowest on the display\n        this.greatestString = () => {\n            return this.positions.map((x) => x.str).reduce((a, b) => (a > b ? a : b));\n        };\n        // Return the number of the least string, which is the string highest on the display\n        this.leastString = () => {\n            return this.positions.map((x) => x.str).reduce((a, b) => (a < b ? a : b));\n        };\n        this.ghost = false; // Renders parenthesis around notes\n        // Note properties\n        // The fret positions in the note. An array of `{ str: X, fret: X }`\n        this.positions = noteStruct.positions || [];\n        // Render Options\n        this.render_options = Object.assign(Object.assign({}, this.render_options), { \n            // font size for note heads and rests\n            glyph_font_scale: Tables.TABLATURE_FONT_SCALE, \n            // Flag to draw a stem\n            draw_stem, \n            // Flag to draw dot modifiers\n            draw_dots: draw_stem, \n            // Flag to extend the main stem through the stave and fret positions\n            draw_stem_through_stave: false, \n            // vertical shift from stave line\n            y_shift: 0, \n            // normal glyph scale\n            scale: 1.0, \n            // default tablature font\n            font: `${Font.SIZE}pt ${Font.SANS_SERIF}` });\n        this.glyph = Tables.getGlyphProps(this.duration, this.noteType);\n        defined(this.glyph, 'BadArguments', `No glyph found for duration '${this.duration}' and type '${this.noteType}'`);\n        this.buildStem();\n        if (noteStruct.stem_direction) {\n            this.setStemDirection(noteStruct.stem_direction);\n        }\n        else {\n            this.setStemDirection(Stem.UP);\n        }\n        // Renders parenthesis around notes\n        this.ghost = false;\n        this.updateWidth();\n    }\n    static get CATEGORY() {\n        return Category.TabNote;\n    }\n    reset() {\n        super.reset();\n        if (this.stave)\n            this.setStave(this.stave);\n        return this;\n    }\n    // Set as ghost `TabNote`, surrounds the fret positions with parenthesis.\n    // Often used for indicating frets that are being bent to\n    setGhost(ghost) {\n        this.ghost = ghost;\n        this.updateWidth();\n        return this;\n    }\n    // Determine if the note has a stem\n    hasStem() {\n        if (this.render_options.draw_stem)\n            return true;\n        return false;\n    }\n    // Get the default stem extension for the note\n    getStemExtension() {\n        const glyph = this.getGlyph();\n        if (this.stem_extension_override != null) {\n            return this.stem_extension_override;\n        }\n        if (glyph) {\n            return this.getStemDirection() === Stem.UP ? glyph.tabnote_stem_up_extension : glyph.tabnote_stem_down_extension;\n        }\n        return 0;\n    }\n    // Calculate and store the width of the note\n    updateWidth() {\n        this.glyphs = [];\n        this.width = 0;\n        for (let i = 0; i < this.positions.length; ++i) {\n            let fret = this.positions[i].fret;\n            if (this.ghost)\n                fret = '(' + fret + ')';\n            const glyph = Tables.tabToGlyph(fret.toString(), this.render_options.scale);\n            this.glyphs.push(glyph);\n            this.width = Math.max(glyph.getWidth(), this.width);\n        }\n        // For some reason we associate a notehead glyph with a TabNote, and this\n        // glyph is used for certain width calculations. Of course, this is totally\n        // incorrect since a notehead is a poor approximation for the dimensions of\n        // a fret number which can have multiple digits. As a result, we must\n        // overwrite getWidth() to return the correct width\n        this.glyph.getWidth = () => this.width;\n    }\n    // Set the `stave` to the note\n    setStave(stave) {\n        super.setStave(stave);\n        const ctx = stave.getContext();\n        this.setContext(ctx);\n        // Calculate the fret number width based on font used\n        if (ctx) {\n            this.width = 0;\n            for (let i = 0; i < this.glyphs.length; ++i) {\n                const glyph = this.glyphs[i];\n                const text = '' + glyph.text;\n                if (text.toUpperCase() !== 'X') {\n                    ctx.save();\n                    ctx.setFont(this.render_options.font);\n                    glyph.width = ctx.measureText(text).width;\n                    ctx.restore();\n                    glyph.getWidth = () => glyph.width;\n                }\n                this.width = Math.max(glyph.getWidth(), this.width);\n            }\n            this.glyph.getWidth = () => this.width;\n        }\n        // we subtract 1 from `line` because getYForLine expects a 0-based index,\n        // while the position.str is a 1-based index\n        const ys = this.positions.map(({ str: line }) => stave.getYForLine(Number(line) - 1));\n        this.setYs(ys);\n        if (this.stem) {\n            this.stem.setYBounds(this.getStemY(), this.getStemY());\n        }\n        return this;\n    }\n    // Get the fret positions for the note\n    getPositions() {\n        return this.positions;\n    }\n    // Get the default `x` and `y` coordinates for a modifier at a specific\n    // `position` at a fret position `index`\n    getModifierStartXY(position, index) {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n        }\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', 'No Y-Values calculated for this note.');\n        }\n        let x = 0;\n        if (position === Modifier.Position.LEFT) {\n            x = -1 * 2; // FIXME: modifier padding, move to font file\n        }\n        else if (position === Modifier.Position.RIGHT) {\n            x = this.width + 2; // FIXME: modifier padding, move to font file\n        }\n        else if (position === Modifier.Position.BELOW || position === Modifier.Position.ABOVE) {\n            const note_glyph_width = this.glyph.getWidth();\n            x = note_glyph_width / 2;\n        }\n        return {\n            x: this.getAbsoluteX() + x,\n            y: this.ys[index],\n        };\n    }\n    // Get the default line for rest\n    getLineForRest() {\n        return Number(this.positions[0].str);\n    }\n    // Pre-render formatting\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        if (this.modifierContext)\n            this.modifierContext.preFormat();\n        // width is already set during init()\n        this.preFormatted = true;\n    }\n    // Get the x position for the stem\n    getStemX() {\n        return this.getCenterGlyphX();\n    }\n    // Get the y position for the stem\n    getStemY() {\n        const num_lines = this.checkStave().getNumLines();\n        // The decimal staff line amounts provide optimal spacing between the\n        // fret number and the stem\n        const stemUpLine = -0.5;\n        const stemDownLine = num_lines - 0.5;\n        const stemStartLine = Stem.UP === this.stem_direction ? stemUpLine : stemDownLine;\n        return this.checkStave().getYForLine(stemStartLine);\n    }\n    // Get the stem extents for the tabnote\n    getStemExtents() {\n        return this.checkStem().getExtents();\n    }\n    // Draw the fal onto the context\n    drawFlag() {\n        var _a;\n        const { beam, glyph, render_options: { draw_stem }, } = this;\n        const context = this.checkContext();\n        const shouldDrawFlag = beam == undefined && draw_stem;\n        // Now it's the flag's turn.\n        if (glyph.flag && shouldDrawFlag) {\n            const flag_x = this.getStemX();\n            const flag_y = this.getStemDirection() === Stem.DOWN\n                ? // Down stems are below the note head and have flags on the right.\n                    this.getStemY() - this.checkStem().getHeight() - (this.glyph ? this.glyph.stem_down_extension : 0)\n                : // Up stems are above the note head and have flags on the right.\n                    this.getStemY() - this.checkStem().getHeight() + (this.glyph ? this.glyph.stem_up_extension : 0);\n            // Draw the Flag\n            //this.flag?.setOptions({ category: 'flag.tabStem' });\n            (_a = this.flag) === null || _a === void 0 ? void 0 : _a.render(context, flag_x, flag_y);\n            //Glyph.renderGlyph(context, flag_x, flag_y, glyph_font_scale, flag_code, { category: 'flag.tabStem' });\n        }\n    }\n    // Render the modifiers onto the context.\n    drawModifiers() {\n        this.modifiers.forEach((modifier) => {\n            // Only draw the dots if enabled.\n            if (isDot(modifier) && !this.render_options.draw_dots) {\n                return;\n            }\n            modifier.setContext(this.getContext());\n            modifier.drawWithStyle();\n        });\n    }\n    // Render the stem extension through the fret positions\n    drawStemThrough() {\n        const stemX = this.getStemX();\n        const stemY = this.getStemY();\n        const ctx = this.checkContext();\n        const drawStem = this.render_options.draw_stem;\n        const stemThrough = this.render_options.draw_stem_through_stave;\n        if (drawStem && stemThrough) {\n            const numLines = this.checkStave().getNumLines();\n            const stringsUsed = this.positions.map((position) => Number(position.str));\n            const unusedStrings = getUnusedStringGroups(numLines, stringsUsed);\n            const stemLines = getPartialStemLines(stemY, unusedStrings, this.checkStave(), this.getStemDirection());\n            ctx.save();\n            ctx.setLineWidth(Stem.WIDTH);\n            stemLines.forEach((bounds) => {\n                if (bounds.length === 0)\n                    return;\n                ctx.beginPath();\n                ctx.moveTo(stemX, bounds[0]);\n                ctx.lineTo(stemX, bounds[bounds.length - 1]);\n                ctx.stroke();\n                ctx.closePath();\n            });\n            ctx.restore();\n        }\n    }\n    // Render the fret positions onto the context\n    drawPositions() {\n        const ctx = this.checkContext();\n        const x = this.getAbsoluteX();\n        const ys = this.ys;\n        for (let i = 0; i < this.positions.length; ++i) {\n            const y = ys[i] + this.render_options.y_shift;\n            const glyph = this.glyphs[i];\n            // Center the fret text beneath the notation note head\n            const note_glyph_width = this.glyph.getWidth();\n            const tab_x = x + note_glyph_width / 2 - glyph.getWidth() / 2;\n            // FIXME: Magic numbers.\n            ctx.clearRect(tab_x - 2, y - 3, glyph.getWidth() + 4, 6);\n            if (glyph.code) {\n                Glyph.renderGlyph(ctx, tab_x, y, this.render_options.glyph_font_scale * this.render_options.scale, glyph.code);\n            }\n            else {\n                ctx.save();\n                ctx.setFont(this.render_options.font);\n                const text = glyph.text.toString();\n                ctx.fillText(text, tab_x, y + 5 * this.render_options.scale);\n                ctx.restore();\n            }\n        }\n    }\n    // The main rendering function for the entire note.\n    draw() {\n        const ctx = this.checkContext();\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', \"Can't draw note without Y values.\");\n        }\n        this.setRendered();\n        const render_stem = this.beam == undefined && this.render_options.draw_stem;\n        ctx.openGroup('tabnote', undefined, { pointerBBox: true });\n        this.drawPositions();\n        this.drawStemThrough();\n        if (this.stem && render_stem) {\n            const stem_x = this.getStemX();\n            this.stem.setNoteHeadXBounds(stem_x, stem_x);\n            ctx.openGroup('stem', undefined, { pointerBBox: true });\n            this.stem.setContext(ctx).draw();\n            ctx.closeGroup();\n        }\n        this.drawFlag();\n        this.drawModifiers();\n        ctx.closeGroup();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\nimport { Stave } from './stave';\nimport { Category } from './typeguard';\nexport class TabStave extends Stave {\n    static get CATEGORY() {\n        return Category.TabStave;\n    }\n    constructor(x, y, width, options) {\n        const tab_options = Object.assign({ spacing_between_lines_px: 13, num_lines: 6, top_text_position: 1 }, options);\n        super(x, y, width, tab_options);\n    }\n    getYForGlyphs() {\n        return this.getYForLine(2.5);\n    }\n    // Deprecated\n    addTabGlyph() {\n        this.addClef('tab');\n        return this;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// This file implements `TextBrackets` which extend between two notes.\n// The octave transposition markings (8va, 8vb, 15va, 15vb) can be created\n// using this class.\nimport { Element } from './element';\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Renderer } from './renderer';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { log, RuntimeError } from './util';\n// To enable logging for this class. Set `Vex.Flow.TextBracket.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (TextBracket.DEBUG)\n        log('Vex.Flow.TextBracket', args);\n}\nexport var TextBracketPosition;\n(function (TextBracketPosition) {\n    TextBracketPosition[TextBracketPosition[\"TOP\"] = 1] = \"TOP\";\n    TextBracketPosition[TextBracketPosition[\"BOTTOM\"] = -1] = \"BOTTOM\";\n})(TextBracketPosition || (TextBracketPosition = {}));\nexport class TextBracket extends Element {\n    constructor({ start, stop, text = '', superscript = '', position = TextBracketPosition.TOP }) {\n        super();\n        this.start = start;\n        this.stop = stop;\n        this.text = text;\n        this.superscript = superscript;\n        this.position = typeof position === 'string' ? TextBracket.PositionString[position] : position;\n        this.line = 1;\n        this.resetFont();\n        this.render_options = {\n            dashed: true,\n            dash: [5],\n            color: 'black',\n            line_width: 1,\n            show_bracket: true,\n            bracket_height: 8,\n            // In the BOTTOM position, the bracket line can extend\n            // under the superscript.\n            underline_superscript: true,\n        };\n    }\n    static get CATEGORY() {\n        return Category.TextBracket;\n    }\n    static get Position() {\n        return TextBracketPosition;\n    }\n    static get PositionString() {\n        return {\n            top: TextBracketPosition.TOP,\n            bottom: TextBracketPosition.BOTTOM,\n        };\n    }\n    /**\n     * @deprecated Use `TextBracket.Position` instead.\n     */\n    static get Positions() {\n        L('Positions is deprecated, use TextBracketPosition instead.');\n        return TextBracketPosition;\n    }\n    /**\n     * @deprecated Use `TextBracket.PositionString` instead.\n     */\n    static get PositionsString() {\n        L('PositionsString is deprecated, use PositionString instead.');\n        return TextBracket.PositionString;\n    }\n    /**\n     * Apply the text backet styling to the provided context.\n     * @param ctx\n     * @returns this\n     */\n    applyStyle(ctx) {\n        ctx.setFont(this.font);\n        const options = this.render_options;\n        ctx.setStrokeStyle(options.color);\n        ctx.setFillStyle(options.color);\n        ctx.setLineWidth(options.line_width);\n        return this;\n    }\n    // Set whether the bracket line should be `dashed`. You can also\n    // optionally set the `dash` pattern by passing in an array of numbers\n    setDashed(dashed, dash) {\n        this.render_options.dashed = dashed;\n        if (dash)\n            this.render_options.dash = dash;\n        return this;\n    }\n    // Set the rendering `context` for the octave bracket\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    // Draw the octave bracket on the rendering context\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        let y = 0;\n        switch (this.position) {\n            case TextBracketPosition.TOP:\n                y = this.start.checkStave().getYForTopText(this.line);\n                break;\n            case TextBracketPosition.BOTTOM:\n                y = this.start.checkStave().getYForBottomText(this.line + Tables.TEXT_HEIGHT_OFFSET_HACK);\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', `The position ${this.position} is invalid.`);\n        }\n        // Get the preliminary start and stop coordintates for the bracket\n        const start = { x: this.start.getAbsoluteX(), y };\n        const stop = { x: this.stop.getAbsoluteX(), y };\n        L('Rendering TextBracket: start:', start, 'stop:', stop, 'y:', y);\n        const bracket_height = this.render_options.bracket_height * this.position;\n        ctx.save();\n        this.applyStyle(ctx);\n        // Draw text\n        ctx.fillText(this.text, start.x, start.y);\n        // Get the width and height for the octave number\n        const main_measure = ctx.measureText(this.text);\n        const main_width = main_measure.width;\n        const main_height = main_measure.height;\n        // Calculate the y position for the super script\n        const super_y = start.y - main_height / 2.5;\n        // We called this.resetFont() in the constructor, so we know this.textFont is available.\n        // eslint-disable-next-line\n        const { family, size, weight, style } = this.textFont;\n        // To draw the superscript, we scale the font size by 1/1.4.\n        const smallerFontSize = Font.scaleSize(size, 0.714286);\n        ctx.setFont(family, smallerFontSize, weight, style);\n        ctx.fillText(this.superscript, start.x + main_width + 1, super_y);\n        // Determine width and height of the superscript\n        const super_measure = ctx.measureText(this.superscript);\n        const super_width = super_measure.width;\n        const super_height = super_measure.height;\n        // Setup initial coordinates for the bracket line\n        let start_x = start.x;\n        let line_y = super_y;\n        const end_x = stop.x + this.stop.getGlyph().getWidth();\n        // Adjust x and y coordinates based on position\n        if (this.position === TextBracketPosition.TOP) {\n            start_x += main_width + super_width + 5;\n            line_y -= super_height / 2.7;\n        }\n        else if (this.position === TextBracketPosition.BOTTOM) {\n            line_y += super_height / 2.7;\n            start_x += main_width + 2;\n            if (!this.render_options.underline_superscript) {\n                start_x += super_width;\n            }\n        }\n        if (this.render_options.dashed) {\n            // Main line\n            Renderer.drawDashedLine(ctx, start_x, line_y, end_x, line_y, this.render_options.dash);\n            // Ending Bracket\n            if (this.render_options.show_bracket) {\n                Renderer.drawDashedLine(ctx, end_x, line_y + 1 * this.position, end_x, line_y + bracket_height, this.render_options.dash);\n            }\n        }\n        else {\n            ctx.beginPath();\n            ctx.moveTo(start_x, line_y);\n            // Main line\n            ctx.lineTo(end_x, line_y);\n            if (this.render_options.show_bracket) {\n                // Ending bracket\n                ctx.lineTo(end_x, line_y + bracket_height);\n            }\n            ctx.stroke();\n            ctx.closePath();\n        }\n        ctx.restore();\n    }\n}\nTextBracket.DEBUG = false;\nTextBracket.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 15,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.ITALIC,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Glyph } from './glyph';\nimport { Note } from './note';\nimport { Category } from './typeguard';\nimport { defined, log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (TextDynamics.DEBUG)\n        log('Vex.Flow.TextDynamics', args);\n}\n/**\n * `TextDynamics` renders traditional\n * text dynamics markings, **ie: p, f, sfz, rfz, ppp**\n *\n * You can render any dynamics string that contains a combination of\n * the following letters:  P, M, F, Z, R, S\n */\nexport class TextDynamics extends Note {\n    /**\n     * Create the dynamics marking.\n     *\n     * A `TextDynamics` object inherits from `Note` so that it can be formatted\n     * within a `Voice`.\n     *\n     * @param noteStruct an object that contains a `duration` property and a\n     * `sequence` of letters that represents the letters to render.\n     */\n    constructor(noteStruct) {\n        super(noteStruct);\n        this.sequence = (noteStruct.text || '').toLowerCase();\n        this.line = noteStruct.line || 0;\n        this.glyphs = [];\n        this.render_options = Object.assign(Object.assign({}, this.render_options), { glyph_font_size: 40 });\n        L('New Dynamics Text: ', this.sequence);\n    }\n    static get CATEGORY() {\n        return Category.TextDynamics;\n    }\n    /** The glyph data for each dynamics letter. */\n    static get GLYPHS() {\n        return {\n            f: {\n                code: 'dynamicForte',\n                width: 12,\n            },\n            p: {\n                code: 'dynamicPiano',\n                width: 14,\n            },\n            m: {\n                code: 'dynamicMezzo',\n                width: 17,\n            },\n            s: {\n                code: 'dynamicSforzando',\n                width: 10,\n            },\n            z: {\n                code: 'dynamicZ',\n                width: 12,\n            },\n            r: {\n                code: 'dynamicRinforzando',\n                width: 12,\n            },\n        };\n    }\n    /** Set the Stave line on which the note should be placed. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Preformat the dynamics text. */\n    preFormat() {\n        let total_width = 0;\n        // length of this.glyphs must be <=\n        // length of this.sequence, so if we're formatted before\n        // create new glyphs.\n        this.glyphs = [];\n        // Iterate through each letter\n        this.sequence.split('').forEach((letter) => {\n            // Get the glyph data for the letter\n            const glyph_data = TextDynamics.GLYPHS[letter];\n            if (!glyph_data)\n                throw new RuntimeError('Invalid dynamics character: ' + letter);\n            const size = defined(this.render_options.glyph_font_size);\n            const glyph = new Glyph(glyph_data.code, size, { category: 'textNote' });\n            // Add the glyph\n            this.glyphs.push(glyph);\n            total_width += glyph_data.width;\n        });\n        // Store the width of the text\n        this.setWidth(total_width);\n        this.preFormatted = true;\n        return this;\n    }\n    /** Draw the dynamics text on the rendering context. */\n    draw() {\n        this.setRendered();\n        const x = this.getAbsoluteX();\n        const y = this.checkStave().getYForLine(this.line + -3);\n        L('Rendering Dynamics: ', this.sequence);\n        let letter_x = x;\n        this.glyphs.forEach((glyph, index) => {\n            const current_letter = this.sequence[index];\n            glyph.render(this.checkContext(), letter_x, y);\n            letter_x += TextDynamics.GLYPHS[current_letter].width;\n        });\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.TextDynamics.DEBUG` to `true`. */\nTextDynamics.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\nimport { Note } from './note';\nimport { TimeSignature } from './timesignature';\nimport { Category } from './typeguard';\nexport class TimeSigNote extends Note {\n    constructor(timeSpec, customPadding) {\n        super({ duration: 'b' });\n        const timeSignature = new TimeSignature(timeSpec, customPadding);\n        this.timeSigInfo = timeSignature.getInfo();\n        this.setWidth(this.timeSigInfo.glyph.getMetrics().width);\n        // Note properties\n        this.ignore_ticks = true;\n    }\n    static get CATEGORY() {\n        return Category.TimeSigNote;\n    }\n    /* Overridden to ignore */\n    // eslint-disable-next-line\n    addToModifierContext(mc) {\n        // DO NOTHING.\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = this.checkContext();\n        this.setRendered();\n        if (!this.timeSigInfo.glyph.getContext()) {\n            this.timeSigInfo.glyph.setContext(ctx);\n        }\n        this.timeSigInfo.glyph.setStave(stave);\n        this.timeSigInfo.glyph.setYShift(stave.getYForLine(2) - stave.getYForGlyphs());\n        this.timeSigInfo.glyph.renderToStave(this.getAbsoluteX());\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Balazs Forian-Szabo\n// MIT License\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { log } from './util';\nimport { Vibrato } from './vibrato';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (VibratoBracket.DEBUG)\n        log('Vex.Flow.VibratoBracket', args);\n}\n/** `VibratoBracket` renders vibrato effect between two notes. */\nexport class VibratoBracket extends Element {\n    /**\n     * Either the stop or start note must be set, or both of them.\n     * An undefined value for the start or stop note indicates that the vibrato\n     * is drawn from the beginning or until the end of the stave accordingly.\n     */\n    constructor(bracket_data) {\n        super();\n        if (bracket_data.start)\n            this.start = bracket_data.start;\n        if (bracket_data.stop)\n            this.stop = bracket_data.stop;\n        this.line = 1;\n        this.render_options = {\n            harsh: false,\n            wave_height: 6,\n            wave_width: 4,\n            wave_girth: 2,\n            vibrato_width: 0,\n        };\n    }\n    static get CATEGORY() {\n        return Category.VibratoBracket;\n    }\n    /** Set line position of the vibrato bracket. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Set harsh vibrato bracket. */\n    setHarsh(harsh) {\n        this.render_options.harsh = harsh;\n        return this;\n    }\n    /** Draw the vibrato bracket on the rendering context. */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        const y = (this.start && this.start.checkStave().getYForTopText(this.line)) ||\n            (this.stop && this.stop.checkStave().getYForTopText(this.line)) ||\n            0;\n        // If start note is not set then vibrato will be drawn\n        // from the beginning of the stave\n        const start_x = (this.start && this.start.getAbsoluteX()) || (this.stop && this.stop.checkStave().getTieStartX()) || 0;\n        // If stop note is not set then vibrato will be drawn\n        // until the end of the stave\n        const stop_x = (this.stop && this.stop.getAbsoluteX() - this.stop.getWidth() - 5) ||\n            (this.start && this.start.checkStave().getTieEndX() - 10) ||\n            0;\n        this.render_options.vibrato_width = stop_x - start_x;\n        L('Rendering VibratoBracket: start_x:', start_x, 'stop_x:', stop_x, 'y:', y);\n        Vibrato.renderVibrato(ctx, start_x, y, this.render_options);\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.VibratoBracket.DEBUG` to `true`. */\nVibratoBracket.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n// MIT License\nimport { Accidental } from './accidental';\nimport { Annotation, AnnotationHorizontalJustify, AnnotationVerticalJustify } from './annotation';\nimport { Articulation } from './articulation';\nimport { BarNote } from './barnote';\nimport { Beam } from './beam';\nimport { ChordSymbol } from './chordsymbol';\nimport { ClefNote } from './clefnote';\nimport { Curve } from './curve';\nimport { EasyScore } from './easyscore';\nimport { Element } from './element';\nimport { Formatter } from './formatter';\nimport { FretHandFinger } from './frethandfinger';\nimport { GhostNote } from './ghostnote';\nimport { GlyphNote } from './glyphnote';\nimport { GraceNote } from './gracenote';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { KeySigNote } from './keysignote';\nimport { ModifierContext } from './modifiercontext';\nimport { MultiMeasureRest } from './multimeasurerest';\nimport { NoteSubGroup } from './notesubgroup';\nimport { PedalMarking } from './pedalmarking';\nimport { Renderer } from './renderer';\nimport { RepeatNote } from './repeatnote';\nimport { Stave } from './stave';\nimport { StaveConnector } from './staveconnector';\nimport { StaveLine } from './staveline';\nimport { StaveNote } from './stavenote';\nimport { StaveTie } from './stavetie';\nimport { StringNumber } from './stringnumber';\nimport { System } from './system';\nimport { TabNote } from './tabnote';\nimport { TabStave } from './tabstave';\nimport { TextBracket } from './textbracket';\nimport { TextDynamics } from './textdynamics';\nimport { TextNote } from './textnote';\nimport { TickContext } from './tickcontext';\nimport { TimeSigNote } from './timesignote';\nimport { Tuplet } from './tuplet';\nimport { defined, log, RuntimeError } from './util';\nimport { VibratoBracket } from './vibratobracket';\nimport { Voice } from './voice';\nimport { isHTMLCanvas } from './web';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Factory.DEBUG)\n        log('Vex.Flow.Factory', args);\n}\n/**\n * Factory implements a high level API around VexFlow.\n */\nexport class Factory {\n    /**\n     * Example:\n     *\n     * Create an SVG renderer and attach it to the DIV element named \"boo\" to render using <page-width> 1200 and <page-height> 600\n     *\n     * `const vf: Factory = new Vex.Flow.Factory({renderer: { elementId: 'boo', width: 1200, height: 600 }});`\n     */\n    constructor(options = {}) {\n        L('New factory: ', options);\n        this.options = {\n            stave: {\n                space: 10,\n            },\n            renderer: {\n                elementId: '',\n                width: 500,\n                height: 200,\n                background: '#FFF',\n            },\n            font: Factory.TEXT_FONT,\n        };\n        this.setOptions(options);\n    }\n    /**\n     * Static simplified function to access constructor without providing FactoryOptions\n     *\n     * Example:\n     *\n     * Create an SVG renderer and attach it to the DIV element named \"boo\" to render using <page-width> 1200 and <page-height> 600\n     *\n     * `const vf: Factory = Vex.Flow.Factory.newFromElementId('boo', 1200, 600 );`\n     */\n    static newFromElementId(elementId, width = 500, height = 200) {\n        return new Factory({ renderer: { elementId, width, height } });\n    }\n    reset() {\n        this.renderQ = [];\n        this.systems = [];\n        this.staves = [];\n        this.voices = [];\n        this.stave = undefined; // current stave\n    }\n    setOptions(options) {\n        this.options = Object.assign(Object.assign({}, this.options), options);\n        this.initRenderer();\n        this.reset();\n    }\n    initRenderer() {\n        const { elementId, width, height, background } = this.options.renderer;\n        if (elementId == null) {\n            return;\n        }\n        if (elementId == '') {\n            L(this);\n            throw new RuntimeError('renderer.elementId not set in FactoryOptions');\n        }\n        let backend = this.options.renderer.backend;\n        if (backend === undefined) {\n            const elem = document.getElementById(elementId);\n            // We use a custom type check here, because node-canvas mimics canvas,\n            // but is not an instance of window.HTMLCanvasElement.\n            // In fact, `window` might be undefined here.\n            // See: https://www.npmjs.com/package/canvas\n            if (isHTMLCanvas(elem)) {\n                backend = Renderer.Backends.CANVAS;\n            }\n            else {\n                backend = Renderer.Backends.SVG;\n            }\n        }\n        this.context = Renderer.buildContext(elementId, backend, width, height, background);\n    }\n    getContext() {\n        return this.context;\n    }\n    setContext(context) {\n        this.context = context;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    getVoices() {\n        return this.voices;\n    }\n    /** Return pixels from current stave spacing. */\n    Stave(params) {\n        const staveSpace = this.options.stave.space;\n        const p = Object.assign({ x: 0, y: 0, width: this.options.renderer.width - staveSpace * 1.0, options: { spacing_between_lines_px: staveSpace * 1.0 } }, params);\n        const stave = new Stave(p.x, p.y, p.width, p.options);\n        this.staves.push(stave);\n        stave.setContext(this.context);\n        this.stave = stave;\n        return stave;\n    }\n    TabStave(params) {\n        const staveSpace = this.options.stave.space;\n        const p = Object.assign({ x: 0, y: 0, width: this.options.renderer.width - staveSpace * 1.0, options: { spacing_between_lines_px: staveSpace * 1.3 } }, params);\n        const stave = new TabStave(p.x, p.y, p.width, p.options);\n        this.staves.push(stave);\n        stave.setContext(this.context);\n        this.stave = stave;\n        return stave;\n    }\n    StaveNote(noteStruct) {\n        const note = new StaveNote(noteStruct);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    GlyphNote(glyph, noteStruct, options) {\n        const note = new GlyphNote(glyph, noteStruct, options);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    RepeatNote(type, noteStruct, options) {\n        const note = new RepeatNote(type, noteStruct, options);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    GhostNote(noteStruct) {\n        const ghostNote = new GhostNote(noteStruct);\n        if (this.stave)\n            ghostNote.setStave(this.stave);\n        ghostNote.setContext(this.context);\n        this.renderQ.push(ghostNote);\n        return ghostNote;\n    }\n    TextNote(noteStruct) {\n        const textNote = new TextNote(noteStruct);\n        if (this.stave)\n            textNote.setStave(this.stave);\n        textNote.setContext(this.context);\n        this.renderQ.push(textNote);\n        return textNote;\n    }\n    BarNote(params = {}) {\n        const barNote = new BarNote(params.type);\n        if (this.stave)\n            barNote.setStave(this.stave);\n        barNote.setContext(this.context);\n        this.renderQ.push(barNote);\n        return barNote;\n    }\n    ClefNote(params) {\n        const p = Object.assign({ type: 'treble', options: {\n                size: 'default',\n                annotation: undefined,\n            } }, params);\n        const clefNote = new ClefNote(p.type, p.options.size, p.options.annotation);\n        if (this.stave)\n            clefNote.setStave(this.stave);\n        clefNote.setContext(this.context);\n        this.renderQ.push(clefNote);\n        return clefNote;\n    }\n    TimeSigNote(params) {\n        const p = Object.assign({ time: '4/4' }, params);\n        const timeSigNote = new TimeSigNote(p.time);\n        if (this.stave)\n            timeSigNote.setStave(this.stave);\n        timeSigNote.setContext(this.context);\n        this.renderQ.push(timeSigNote);\n        return timeSigNote;\n    }\n    KeySigNote(params) {\n        const keySigNote = new KeySigNote(params.key, params.cancelKey, params.alterKey);\n        if (this.stave)\n            keySigNote.setStave(this.stave);\n        keySigNote.setContext(this.context);\n        this.renderQ.push(keySigNote);\n        return keySigNote;\n    }\n    TabNote(noteStruct) {\n        const note = new TabNote(noteStruct);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    GraceNote(noteStruct) {\n        const note = new GraceNote(noteStruct);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        return note;\n    }\n    GraceNoteGroup(params) {\n        const group = new GraceNoteGroup(params.notes, params.slur);\n        group.setContext(this.context);\n        return group;\n    }\n    Accidental(params) {\n        const accid = new Accidental(params.type);\n        accid.setContext(this.context);\n        return accid;\n    }\n    Annotation(params) {\n        const p = Object.assign({ text: 'p', hJustify: AnnotationHorizontalJustify.CENTER, vJustify: AnnotationVerticalJustify.BOTTOM }, params);\n        const annotation = new Annotation(p.text);\n        annotation.setJustification(p.hJustify);\n        annotation.setVerticalJustification(p.vJustify);\n        annotation.setFont(p.font);\n        annotation.setContext(this.context);\n        return annotation;\n    }\n    ChordSymbol(params) {\n        const p = Object.assign({ vJustify: 'top', hJustify: 'center', kerning: true, reportWidth: true }, params);\n        const chordSymbol = new ChordSymbol();\n        chordSymbol.setHorizontal(p.hJustify);\n        chordSymbol.setVertical(p.vJustify);\n        chordSymbol.setEnableKerning(p.kerning);\n        chordSymbol.setReportWidth(p.reportWidth);\n        // There is a default font based on the engraving font.  Only set then\n        // font if it is specific, else use the default\n        if (typeof p.fontFamily === 'string' && typeof p.fontSize === 'number') {\n            if (typeof p.fontWeight === 'string')\n                chordSymbol.setFont(p.fontFamily, p.fontSize, p.fontWeight);\n            else\n                chordSymbol.setFont(p.fontFamily, p.fontSize, '');\n        }\n        else if (typeof p.fontSize === 'number') {\n            chordSymbol.setFontSize(p.fontSize);\n        }\n        chordSymbol.setContext(this.context);\n        return chordSymbol;\n    }\n    Articulation(params) {\n        const p = Object.assign({ type: 'a.', position: 'above' }, params);\n        const articulation = new Articulation(p.type);\n        articulation.setPosition(p.position);\n        articulation.setContext(this.context);\n        return articulation;\n    }\n    TextDynamics(params) {\n        const p = Object.assign({ text: 'p', duration: 'q', dots: 0, line: 0 }, params);\n        const text = new TextDynamics({\n            text: p.text,\n            line: p.line,\n            duration: p.duration,\n            dots: p.dots,\n        });\n        if (this.stave)\n            text.setStave(this.stave);\n        text.setContext(this.context);\n        this.renderQ.push(text);\n        return text;\n    }\n    Fingering(params) {\n        const p = Object.assign({ number: '0', position: 'left' }, params);\n        const fingering = new FretHandFinger(p.number);\n        fingering.setPosition(p.position);\n        fingering.setContext(this.context);\n        return fingering;\n    }\n    StringNumber(params) {\n        const stringNumber = new StringNumber(params.number);\n        stringNumber.setPosition(params.position);\n        stringNumber.setContext(this.context);\n        return stringNumber;\n    }\n    TickContext() {\n        return new TickContext();\n    }\n    ModifierContext() {\n        return new ModifierContext();\n    }\n    MultiMeasureRest(params) {\n        const numMeasures = defined(params.number_of_measures, 'NoNumberOfMeasures');\n        const multiMeasureRest = new MultiMeasureRest(numMeasures, params);\n        multiMeasureRest.setContext(this.context);\n        this.renderQ.push(multiMeasureRest);\n        return multiMeasureRest;\n    }\n    Voice(params) {\n        const p = Object.assign({ time: '4/4' }, params);\n        const voice = new Voice(p.time, p.options);\n        this.voices.push(voice);\n        return voice;\n    }\n    StaveConnector(params) {\n        const connector = new StaveConnector(params.top_stave, params.bottom_stave);\n        connector.setType(params.type).setContext(this.context);\n        this.renderQ.push(connector);\n        return connector;\n    }\n    Formatter(options) {\n        return new Formatter(options);\n    }\n    Tuplet(params) {\n        const p = Object.assign({ notes: [], options: {} }, params);\n        const tuplet = new Tuplet(p.notes, p.options).setContext(this.context);\n        this.renderQ.push(tuplet);\n        return tuplet;\n    }\n    Beam(params) {\n        var _a, _b, _c, _d, _e;\n        const beam = new Beam(params.notes, (_a = params.options) === null || _a === void 0 ? void 0 : _a.autoStem).setContext(this.context);\n        beam.breakSecondaryAt((_c = (_b = params.options) === null || _b === void 0 ? void 0 : _b.secondaryBeamBreaks) !== null && _c !== void 0 ? _c : []);\n        if ((_d = params.options) === null || _d === void 0 ? void 0 : _d.partialBeamDirections) {\n            Object.entries((_e = params.options) === null || _e === void 0 ? void 0 : _e.partialBeamDirections).forEach(([noteIndex, direction]) => {\n                beam.setPartialBeamSideAt(Number(noteIndex), direction);\n            });\n        }\n        this.renderQ.push(beam);\n        return beam;\n    }\n    Curve(params) {\n        const curve = new Curve(params.from, params.to, params.options).setContext(this.context);\n        this.renderQ.push(curve);\n        return curve;\n    }\n    StaveTie(params) {\n        var _a;\n        const tie = new StaveTie({\n            first_note: params.from,\n            last_note: params.to,\n            first_indices: params.first_indices,\n            last_indices: params.last_indices,\n        }, params.text);\n        if ((_a = params.options) === null || _a === void 0 ? void 0 : _a.direction)\n            tie.setDirection(params.options.direction);\n        tie.setContext(this.context);\n        this.renderQ.push(tie);\n        return tie;\n    }\n    StaveLine(params) {\n        var _a, _b;\n        const line = new StaveLine({\n            first_note: params.from,\n            last_note: params.to,\n            first_indices: params.first_indices,\n            last_indices: params.last_indices,\n        });\n        if ((_a = params.options) === null || _a === void 0 ? void 0 : _a.text)\n            line.setText(params.options.text);\n        if ((_b = params.options) === null || _b === void 0 ? void 0 : _b.font)\n            line.setFont(params.options.font);\n        line.setContext(this.context);\n        this.renderQ.push(line);\n        return line;\n    }\n    VibratoBracket(params) {\n        const vibratoBracket = new VibratoBracket({\n            start: params.from,\n            stop: params.to,\n        });\n        if (params.options.line)\n            vibratoBracket.setLine(params.options.line);\n        if (params.options.harsh)\n            vibratoBracket.setHarsh(params.options.harsh);\n        vibratoBracket.setContext(this.context);\n        this.renderQ.push(vibratoBracket);\n        return vibratoBracket;\n    }\n    TextBracket(params) {\n        const textBracket = new TextBracket({\n            start: params.from,\n            stop: params.to,\n            text: params.text,\n            superscript: params.options.superscript,\n            position: params.options.position,\n        });\n        if (params.options.line)\n            textBracket.setLine(params.options.line);\n        if (params.options.font)\n            textBracket.setFont(params.options.font);\n        textBracket.setContext(this.context);\n        this.renderQ.push(textBracket);\n        return textBracket;\n    }\n    System(params = {}) {\n        params.factory = this;\n        const system = new System(params).setContext(this.context);\n        this.systems.push(system);\n        return system;\n    }\n    /**\n     * Creates EasyScore. Normally the first step after constructing a Factory. For example:\n     * ```\n     * const vf: Factory = new Vex.Flow.Factory({renderer: { elementId: 'boo', width: 1200, height: 600 }});\n     * const score: EasyScore = vf.EasyScore();\n     * ```\n     * @param options.factory optional instance of Factory\n     * @param options.builder instance of Builder\n     * @param options.commitHooks function to call after a note element is created\n     * @param options.throwOnError throw error in case of parsing error\n     */\n    EasyScore(options = {}) {\n        options.factory = this;\n        return new EasyScore(options);\n    }\n    PedalMarking(params) {\n        const p = Object.assign({ notes: [], options: {\n                style: 'mixed',\n            } }, params);\n        const pedal = new PedalMarking(p.notes);\n        pedal.setType(PedalMarking.typeString[p.options.style]);\n        pedal.setContext(this.context);\n        this.renderQ.push(pedal);\n        return pedal;\n    }\n    NoteSubGroup(params) {\n        const p = Object.assign({ notes: [] }, params);\n        const group = new NoteSubGroup(p.notes);\n        group.setContext(this.context);\n        return group;\n    }\n    /** Render the score. */\n    draw() {\n        const ctx = this.context;\n        this.systems.forEach((s) => s.setContext(ctx).format());\n        this.staves.forEach((s) => s.setContext(ctx).draw());\n        this.voices.forEach((v) => v.setContext(ctx).draw());\n        this.renderQ.forEach((e) => {\n            if (!e.isRendered())\n                e.setContext(ctx).draw();\n        });\n        this.systems.forEach((s) => s.setContext(ctx).draw());\n        this.reset();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Factory.DEBUG` to `true`. */\nFactory.DEBUG = false;\n/** Default text font. */\nFactory.TEXT_FONT = Object.assign({}, Element.TEXT_FONT);\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Balazs Forian-Szabo\n//\n// ## Description\n//\n// A basic implementation of grace notes\n// to be rendered on a tab stave.\n//\n// See `tests/gracetabnote_tests.ts` for usage examples.\nimport { Font } from './font';\nimport { TabNote } from './tabnote';\nimport { Category } from './typeguard';\nexport class GraceTabNote extends TabNote {\n    static get CATEGORY() {\n        return Category.GraceTabNote;\n    }\n    constructor(noteStruct) {\n        super(noteStruct, false);\n        this.render_options = Object.assign(Object.assign({}, this.render_options), { \n            // vertical shift from stave line\n            y_shift: 0.3, \n            // grace glyph scale\n            scale: 0.6, \n            // grace tablature font\n            font: `7.5pt ${Font.SANS_SERIF}` });\n        this.updateWidth();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This class implements diatonic key management.\nimport { Music } from './music';\nimport { RuntimeError } from './util';\nexport class KeyManager {\n    constructor(key) {\n        this.music = new Music();\n        this.setKey(key);\n    }\n    setKey(key) {\n        this.key = key;\n        this.reset();\n        return this;\n    }\n    getKey() {\n        return this.key;\n    }\n    reset() {\n        this.keyParts = this.music.getKeyParts(this.key);\n        this.keyString = this.keyParts.root;\n        if (this.keyParts.accidental)\n            this.keyString += this.keyParts.accidental;\n        const is_supported_type = Music.scaleTypes[this.keyParts.type];\n        if (!is_supported_type) {\n            throw new RuntimeError('BadArguments', `Unsupported key type: ${this.key}`);\n        }\n        this.scale = this.music.getScaleTones(this.music.getNoteValue(this.keyString), Music.scaleTypes[this.keyParts.type]);\n        this.scaleMap = {};\n        this.scaleMapByValue = {};\n        this.originalScaleMapByValue = {};\n        const noteLocation = Music.root_indices[this.keyParts.root];\n        for (let i = 0; i < Music.roots.length; ++i) {\n            const index = (noteLocation + i) % Music.roots.length;\n            const rootName = Music.roots[index];\n            const noteName = this.music.getRelativeNoteName(rootName, this.scale[i]);\n            this.scaleMap[rootName] = noteName;\n            this.scaleMapByValue[this.scale[i]] = noteName;\n            this.originalScaleMapByValue[this.scale[i]] = noteName;\n        }\n        return this;\n    }\n    getAccidental(key) {\n        const root = this.music.getKeyParts(key).root;\n        const parts = this.music.getNoteParts(this.scaleMap[root]);\n        return {\n            note: this.scaleMap[root],\n            accidental: parts.accidental,\n        };\n    }\n    selectNote(note) {\n        note = note.toLowerCase();\n        const parts = this.music.getNoteParts(note);\n        // First look for matching note in our altered scale\n        const scaleNote = this.scaleMap[parts.root];\n        const modparts = this.music.getNoteParts(scaleNote);\n        if (scaleNote === note) {\n            return {\n                note: scaleNote,\n                accidental: parts.accidental,\n                change: false,\n            };\n        }\n        // Then search for a note of equivalent value in our altered scale\n        const valueNote = this.scaleMapByValue[this.music.getNoteValue(note)];\n        if (valueNote != null) {\n            return {\n                note: valueNote,\n                accidental: this.music.getNoteParts(valueNote).accidental,\n                change: false,\n            };\n        }\n        // Then search for a note of equivalent value in the original scale\n        const originalValueNote = this.originalScaleMapByValue[this.music.getNoteValue(note)];\n        if (originalValueNote != null) {\n            this.scaleMap[modparts.root] = originalValueNote;\n            delete this.scaleMapByValue[this.music.getNoteValue(scaleNote)];\n            this.scaleMapByValue[this.music.getNoteValue(note)] = originalValueNote;\n            return {\n                note: originalValueNote,\n                accidental: this.music.getNoteParts(originalValueNote).accidental,\n                change: true,\n            };\n        }\n        // Then try to unmodify a currently modified note.\n        if (modparts.root === note) {\n            delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n            this.scaleMapByValue[this.music.getNoteValue(modparts.root)] = modparts.root;\n            this.scaleMap[modparts.root] = modparts.root;\n            return {\n                note: modparts.root,\n                accidental: undefined,\n                change: true,\n            };\n        }\n        // Last resort -- shitshoot\n        delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n        this.scaleMapByValue[this.music.getNoteValue(note)] = note;\n        delete this.scaleMap[modparts.root];\n        this.scaleMap[modparts.root] = note;\n        return {\n            note,\n            accidental: parts.accidental,\n            change: true,\n        };\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Author: Raffaele Viglianti, 2012 http://itisnotsound.wordpress.com/\n//\n// This class implements hairpins between notes.\n// Hairpins can be either crescendo or decrescendo.\nimport { Element } from './element';\nimport { Modifier } from './modifier';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class StaveHairpin extends Element {\n    /**\n     * Create a new hairpin from the specified notes.\n     *\n     * @param {!Object} notes The notes to tie up.\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *  }\n     * @param {!Object} type The type of hairpin\n     */\n    constructor(notes, type) {\n        super();\n        this.setNotes(notes);\n        this.hairpin = type;\n        this.position = Modifier.Position.BELOW;\n        this.render_options = {\n            height: 10,\n            y_shift: 0,\n            left_shift_px: 0,\n            right_shift_px: 0,\n            right_shift_ticks: 0,\n            left_shift_ticks: 0,\n        };\n    }\n    static get CATEGORY() {\n        return Category.StaveHairpin;\n    }\n    /* Helper function to convert ticks into pixels.\n     * Requires a Formatter with voices joined and formatted (to\n     * get pixels per tick)\n     *\n     * options is struct that has:\n     *\n     *  {\n     *   height: px,\n     *   y_shift: px,         // vertical offset\n     *   left_shift_ticks: 0, // left horizontal offset expressed in ticks\n     *   right_shift_ticks: 0 // right horizontal offset expressed in ticks\n     *  }\n     *\n     **/\n    static FormatByTicksAndDraw(ctx, formatter, notes, type, position, options) {\n        var _a, _b;\n        const ppt = formatter.pixelsPerTick;\n        if (ppt == null) {\n            throw new RuntimeError('BadArguments', 'A valid Formatter must be provide to draw offsets by ticks.');\n        }\n        const l_shift_px = ppt * ((_a = options.left_shift_ticks) !== null && _a !== void 0 ? _a : 0);\n        const r_shift_px = ppt * ((_b = options.right_shift_ticks) !== null && _b !== void 0 ? _b : 0);\n        const hairpin_options = {\n            height: options.height,\n            y_shift: options.y_shift,\n            left_shift_px: l_shift_px,\n            right_shift_px: r_shift_px,\n            right_shift_ticks: 0,\n            left_shift_ticks: 0,\n        };\n        new StaveHairpin({\n            first_note: notes.first_note,\n            last_note: notes.last_note,\n        }, type)\n            .setContext(ctx)\n            .setRenderOptions(hairpin_options)\n            .setPosition(position)\n            .draw();\n    }\n    setPosition(position) {\n        if (position === Modifier.Position.ABOVE || position === Modifier.Position.BELOW) {\n            this.position = position;\n        }\n        return this;\n    }\n    setRenderOptions(options) {\n        if (options.height != null &&\n            options.y_shift != null &&\n            options.left_shift_px != null &&\n            options.right_shift_px != null) {\n            this.render_options = options;\n        }\n        return this;\n    }\n    /**\n     * Set the notes to attach this hairpin to.\n     *\n     * @param {!Object} notes The start and end notes.\n     */\n    setNotes(notes) {\n        if (!notes.first_note && !notes.last_note) {\n            throw new RuntimeError('BadArguments', 'Hairpin needs to have either first_note or last_note set.');\n        }\n        this.notes = notes;\n        this.first_note = notes.first_note;\n        this.last_note = notes.last_note;\n        return this;\n    }\n    renderHairpin(params) {\n        const ctx = this.checkContext();\n        let dis = this.render_options.y_shift + 20;\n        let y_shift = params.first_y;\n        if (this.position === Modifier.Position.ABOVE) {\n            dis = -dis + 30;\n            y_shift = params.first_y - params.staff_height;\n        }\n        const l_shift = this.render_options.left_shift_px;\n        const r_shift = this.render_options.right_shift_px;\n        ctx.beginPath();\n        switch (this.hairpin) {\n            case StaveHairpin.type.CRESC:\n                ctx.moveTo(params.last_x + r_shift, y_shift + dis);\n                ctx.lineTo(params.first_x + l_shift, y_shift + this.render_options.height / 2 + dis);\n                ctx.lineTo(params.last_x + r_shift, y_shift + this.render_options.height + dis);\n                break;\n            case StaveHairpin.type.DECRESC:\n                ctx.moveTo(params.first_x + l_shift, y_shift + dis);\n                ctx.lineTo(params.last_x + r_shift, y_shift + this.render_options.height / 2 + dis);\n                ctx.lineTo(params.first_x + l_shift, y_shift + this.render_options.height + dis);\n                break;\n            default:\n                // Default is NONE, so nothing to draw\n                break;\n        }\n        ctx.stroke();\n        ctx.closePath();\n    }\n    draw() {\n        this.checkContext();\n        this.setRendered();\n        const firstNote = this.first_note;\n        const lastNote = this.last_note;\n        if (!firstNote || !lastNote)\n            throw new RuntimeError('NoNote', 'Notes required to draw');\n        const start = firstNote.getModifierStartXY(this.position, 0);\n        const end = lastNote.getModifierStartXY(this.position, 0);\n        this.renderHairpin({\n            first_x: start.x,\n            last_x: end.x,\n            first_y: firstNote.checkStave().getY() + firstNote.checkStave().getHeight(),\n            last_y: lastNote.checkStave().getY() + lastNote.checkStave().getHeight(),\n            staff_height: firstNote.checkStave().getHeight(),\n        });\n    }\n}\nStaveHairpin.type = {\n    CRESC: 1,\n    DECRESC: 2,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n//\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\nimport { Font, FontStyle, FontWeight } from './font';\nimport { TabTie } from './tabtie';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class TabSlide extends TabTie {\n    /**\n     * @param notes is a struct of the form:\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     * @param notes.first_note the starting note of the slide\n     * @param notes.last_note the ending note of the slide\n     * @param notes.first_indices specifies which string + fret positions of the TabNote are used in this slide. zero indexed.\n     * @param notes.last_indices currently unused. we assume it's the same as first_indices.\n     *\n     * @param direction TabSlide.SLIDE_UP or TabSlide.SLIDE_DOWN\n     */\n    constructor(notes, direction) {\n        super(notes, 'sl.');\n        // Determine the direction automatically if it is not provided.\n        if (!direction) {\n            let first_fret = notes.first_note.getPositions()[0].fret;\n            if (typeof first_fret === 'string') {\n                first_fret = parseInt(first_fret, 10);\n            }\n            let last_fret = notes.last_note.getPositions()[0].fret;\n            if (typeof last_fret === 'string') {\n                last_fret = parseInt(last_fret, 10);\n            }\n            // If either of the frets are 'X', parseInt() above will return NaN.\n            // Choose TabSlide.SLIDE_UP by default.\n            if (isNaN(first_fret) || isNaN(last_fret)) {\n                direction = TabSlide.SLIDE_UP;\n            }\n            else {\n                direction = first_fret > last_fret ? TabSlide.SLIDE_DOWN : TabSlide.SLIDE_UP;\n            }\n        }\n        this.direction = direction;\n        this.render_options.cp1 = 11;\n        this.render_options.cp2 = 14;\n        this.render_options.y_shift = 0.5;\n        this.resetFont();\n    }\n    static get CATEGORY() {\n        return Category.TabSlide;\n    }\n    static get SLIDE_UP() {\n        return 1;\n    }\n    static get SLIDE_DOWN() {\n        return -1;\n    }\n    static createSlideUp(notes) {\n        return new TabSlide(notes, TabSlide.SLIDE_UP);\n    }\n    static createSlideDown(notes) {\n        return new TabSlide(notes, TabSlide.SLIDE_DOWN);\n    }\n    renderTie(params) {\n        if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n            throw new RuntimeError('BadArguments', 'No Y-values to render');\n        }\n        const ctx = this.checkContext();\n        const first_x_px = params.first_x_px;\n        const first_ys = params.first_ys;\n        const last_x_px = params.last_x_px;\n        const direction = params.direction;\n        if (direction !== TabSlide.SLIDE_UP && direction !== TabSlide.SLIDE_DOWN) {\n            throw new RuntimeError('BadSlide', 'Invalid slide direction');\n        }\n        // eslint-disable-next-line\n        const first_indices = this.notes.first_indices;\n        for (let i = 0; i < first_indices.length; ++i) {\n            const slide_y = first_ys[first_indices[i]] + this.render_options.y_shift;\n            if (isNaN(slide_y)) {\n                throw new RuntimeError('BadArguments', 'Bad indices for slide rendering.');\n            }\n            ctx.beginPath();\n            ctx.moveTo(first_x_px, slide_y + 3 * direction);\n            ctx.lineTo(last_x_px, slide_y - 3 * direction);\n            ctx.closePath();\n            ctx.stroke();\n        }\n        this.setRendered();\n    }\n}\nTabSlide.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 10,\n    weight: FontWeight.BOLD,\n    style: FontStyle.ITALIC,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Mike Corrigan <corrigan@gmail.com>\n// MIT License\nimport { Glyph } from './glyph';\nimport { GraceNote } from './gracenote';\nimport { Modifier } from './modifier';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category, isGraceNote } from './typeguard';\n/** Tremolo implements tremolo notation. */\nexport class Tremolo extends Modifier {\n    /**\n     * @param num number of bars\n     */\n    constructor(num) {\n        super();\n        this.num = num;\n        this.position = Modifier.Position.CENTER;\n        this.code = 'tremolo1';\n        // big strokes scales initialised to 1 (no scale)\n        this.y_spacing_scale = 1;\n        this.extra_stroke_scale = 1;\n    }\n    static get CATEGORY() {\n        return Category.Tremolo;\n    }\n    /** Draw the tremolo on the rendering context. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const stemDirection = note.getStemDirection();\n        const start = note.getModifierStartXY(this.position, this.index);\n        let x = start.x;\n        const gn = isGraceNote(note);\n        const scale = gn ? GraceNote.SCALE : 1;\n        const category = `tremolo.${gn ? 'grace' : 'default'}`;\n        const musicFont = Tables.currentMusicFont();\n        let y_spacing = musicFont.lookupMetric(`${category}.spacing`) * stemDirection;\n        // add y_spacing_scale for big strokes (#1258)\n        y_spacing *= this.y_spacing_scale;\n        const height = this.num * y_spacing;\n        let y = note.getStemExtents().baseY - height;\n        if (stemDirection < 0) {\n            y += musicFont.lookupMetric(`${category}.offsetYStemDown`) * scale;\n        }\n        else {\n            y += musicFont.lookupMetric(`${category}.offsetYStemUp`) * scale;\n        }\n        const fontScale = musicFont.lookupMetric(`${category}.point`);\n        x += musicFont.lookupMetric(`${category}.offsetXStem${stemDirection === Stem.UP ? 'Up' : 'Down'}`);\n        for (let i = 0; i < this.num; ++i) {\n            Glyph.renderGlyph(ctx, x, y, fontScale, this.code, { category, scale: this.extra_stroke_scale });\n            y += y_spacing;\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Tables } from './tables';\nimport { RuntimeError } from './util';\n/** `Tuning` implements varies types of tunings for tablature. */\nexport class Tuning {\n    /**\n     * Constructor.\n     * @param tuningString tuning name (eg. 'dagdad') or comma separated note strings\n     */\n    constructor(tuningString = 'E/5,B/4,G/4,D/4,A/3,E/3,B/2,E/2') {\n        this.tuningValues = [];\n        // Default to standard tuning.\n        this.setTuning(tuningString);\n    }\n    static get names() {\n        return {\n            standard: 'E/5,B/4,G/4,D/4,A/3,E/3',\n            dagdad: 'D/5,A/4,G/4,D/4,A/3,D/3',\n            dropd: 'E/5,B/4,G/4,D/4,A/3,D/3',\n            eb: 'Eb/5,Bb/4,Gb/4,Db/4,Ab/3,Db/3',\n            standardBanjo: 'D/5,B/4,G/4,D/4,G/5',\n        };\n    }\n    /** Return the note number associated to the note string. */\n    noteToInteger(noteString) {\n        return Tables.keyProperties(noteString).int_value;\n    }\n    /**\n     * Set tuning identified by tuning name (eg. 'dagdad')\n     * @param tuningString tuning name (eg. 'dagdad') or comma separated note strings\n     */\n    setTuning(tuningString) {\n        if (Tuning.names[tuningString]) {\n            tuningString = Tuning.names[tuningString];\n        }\n        this.tuningValues = [];\n        const keys = tuningString.split(/\\s*,\\s*/);\n        if (keys.length === 0) {\n            throw new RuntimeError('BadArguments', `Invalid tuning string: ${tuningString}`);\n        }\n        for (let i = 0; i < keys.length; ++i) {\n            this.tuningValues[i] = this.noteToInteger(keys[i]);\n        }\n    }\n    /** Return the note number associated with a tablature string. */\n    getValueForString(stringNum) {\n        const s = Number(stringNum);\n        if (s < 1 || s > this.tuningValues.length) {\n            throw new RuntimeError('BadArguments', `String number must be between 1 and ${this.tuningValues.length}:${stringNum}`);\n        }\n        return this.tuningValues[s - 1];\n    }\n    /** Return the note number associated with a tablature string and fret. */\n    getValueForFret(fretNum, stringNum) {\n        const stringValue = this.getValueForString(stringNum);\n        const f = Number(fretNum);\n        if (f < 0) {\n            throw new RuntimeError('BadArguments', `Fret number must be 0 or higher: ${fretNum}`);\n        }\n        return stringValue + f;\n    }\n    /** Return the note string associated with tablature string and fret. */\n    getNoteForFret(fretNum, stringNum) {\n        const noteValue = this.getValueForFret(fretNum, stringNum);\n        const octave = Math.floor(noteValue / 12);\n        const value = noteValue % 12;\n        return `${Tables.integerToNote(value)}/${octave}`;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Accidental } from './accidental';\nimport { Annotation, AnnotationHorizontalJustify, AnnotationVerticalJustify } from './annotation';\nimport { Articulation } from './articulation';\nimport { BarNote } from './barnote';\nimport { Beam } from './beam';\nimport { Bend } from './bend';\nimport { BoundingBox } from './boundingbox';\nimport { BoundingBoxComputation } from './boundingboxcomputation';\nimport { CanvasContext } from './canvascontext';\nimport { ChordSymbol, ChordSymbolHorizontalJustify, ChordSymbolVerticalJustify, SymbolModifiers, SymbolTypes, } from './chordsymbol';\nimport { Clef } from './clef';\nimport { ClefNote } from './clefnote';\nimport { Crescendo } from './crescendo';\nimport { Curve, CurvePosition } from './curve';\nimport { Dot } from './dot';\nimport { EasyScore } from './easyscore';\nimport { Element } from './element';\nimport { Factory } from './factory';\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Formatter } from './formatter';\nimport { Fraction } from './fraction';\nimport { FretHandFinger } from './frethandfinger';\nimport { GhostNote } from './ghostnote';\nimport { Glyph } from './glyph';\nimport { GlyphNote } from './glyphnote';\nimport { GraceNote } from './gracenote';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { GraceTabNote } from './gracetabnote';\nimport { KeyManager } from './keymanager';\nimport { KeySignature } from './keysignature';\nimport { KeySigNote } from './keysignote';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { ModifierContext } from './modifiercontext';\nimport { MultiMeasureRest } from './multimeasurerest';\nimport { Music } from './music';\nimport { Note } from './note';\nimport { NoteHead } from './notehead';\nimport { NoteSubGroup } from './notesubgroup';\nimport { Ornament } from './ornament';\nimport { Parenthesis } from './parenthesis';\nimport { Parser } from './parser';\nimport { PedalMarking } from './pedalmarking';\nimport { Registry } from './registry';\nimport { RenderContext } from './rendercontext';\nimport { Renderer, RendererBackends, RendererLineEndType } from './renderer';\nimport { RepeatNote } from './repeatnote';\nimport { Stave } from './stave';\nimport { Barline, BarlineType } from './stavebarline';\nimport { StaveConnector } from './staveconnector';\nimport { StaveHairpin } from './stavehairpin';\nimport { StaveLine } from './staveline';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { StaveNote } from './stavenote';\nimport { Repetition } from './staverepetition';\nimport { StaveTempo } from './stavetempo';\nimport { StaveText } from './stavetext';\nimport { StaveTie } from './stavetie';\nimport { Volta, VoltaType } from './stavevolta';\nimport { Stem } from './stem';\nimport { StringNumber } from './stringnumber';\nimport { Stroke } from './strokes';\nimport { SVGContext } from './svgcontext';\nimport { System } from './system';\nimport { Tables } from './tables';\nimport { TabNote } from './tabnote';\nimport { TabSlide } from './tabslide';\nimport { TabStave } from './tabstave';\nimport { TabTie } from './tabtie';\nimport { TextBracket, TextBracketPosition } from './textbracket';\nimport { TextDynamics } from './textdynamics';\nimport { TextFormatter } from './textformatter';\nimport { TextJustification, TextNote } from './textnote';\nimport { TickContext } from './tickcontext';\nimport { TimeSignature } from './timesignature';\nimport { TimeSigNote } from './timesignote';\nimport { Tremolo } from './tremolo';\nimport { Tuning } from './tuning';\nimport { Tuplet } from './tuplet';\nimport { DATE, ID, VERSION } from './version';\nimport { Vibrato } from './vibrato';\nimport { VibratoBracket } from './vibratobracket';\nimport { Voice, VoiceMode } from './voice';\nexport class Flow {\n    static get BUILD() {\n        return {\n            /** version number. */\n            VERSION: VERSION,\n            /** git commit ID that this library was built from. */\n            ID: ID,\n            /** The date when this library was compiled. */\n            DATE: DATE,\n        };\n    }\n    /**\n     * Examples:\n     * ```\n     * Vex.Flow.setMusicFont('Petaluma');\n     * Vex.Flow.setMusicFont('Bravura', 'Gonville');\n     * ```\n     *\n     * **CASE 1**: You are using `vexflow.js`, which includes all music fonts (Bravura, Gonville, Petaluma, Custom).\n     * In this case, calling this method is optional, since VexFlow already defaults to a music font stack of:\n     * 'Bravura', 'Gonville', 'Custom'.\n     *\n     * **CASE 2**: You are using `vexflow-bravura.js` or `vexflow-petaluma.js` or `vexflow-gonville.js`,\n     * which includes a single music font. Calling this method is unnecessary.\n     *\n     * **CASE 3**: You are using the light weight `vexflow-core.js` to take advantage of lazy loading for fonts.\n     * In this case, the default music font stack is empty.\n     * Example:\n     * ```\n     * await Vex.Flow.fetchMusicFont('Petaluma');\n     * Vex.Flow.setMusicFont('Petaluma');\n     * ... (do VexFlow stuff) ...\n     * ```\n     * See `demos/fonts/` for more examples.\n     *\n     * @returns an array of Font objects corresponding to the provided `fontNames`.\n     */\n    static setMusicFont(...fontNames) {\n        // Convert the array of font names into an array of Font objects.\n        const fonts = fontNames.map((fontName) => Font.load(fontName));\n        Tables.MUSIC_FONT_STACK = fonts;\n        Glyph.MUSIC_FONT_STACK = fonts.slice();\n        Glyph.CURRENT_CACHE_KEY = fontNames.join(',');\n        return fonts;\n    }\n    /**\n     * Used with vexflow-core which supports dynamic font loading.\n     */\n    // eslint-disable-next-line\n    static fetchMusicFont(fontName, fontModuleOrPath) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // The default implementation does nothing.\n            // See vexflow-core.ts for the implementation that vexflow-core.js uses.\n        });\n    }\n    static getMusicFont() {\n        const fonts = Tables.MUSIC_FONT_STACK;\n        return fonts.map((font) => font.getName());\n    }\n    static get NOTATION_FONT_SCALE() {\n        return Tables.NOTATION_FONT_SCALE;\n    }\n    static set NOTATION_FONT_SCALE(value) {\n        Tables.NOTATION_FONT_SCALE = value;\n    }\n    static get TABLATURE_FONT_SCALE() {\n        return Tables.TABLATURE_FONT_SCALE;\n    }\n    static set TABLATURE_FONT_SCALE(value) {\n        Tables.TABLATURE_FONT_SCALE = value;\n    }\n    static get RESOLUTION() {\n        return Tables.RESOLUTION;\n    }\n    static set RESOLUTION(value) {\n        Tables.RESOLUTION = value;\n    }\n    static get SLASH_NOTEHEAD_WIDTH() {\n        return Tables.SLASH_NOTEHEAD_WIDTH;\n    }\n    static set SLASH_NOTEHEAD_WIDTH(value) {\n        Tables.SLASH_NOTEHEAD_WIDTH = value;\n    }\n    static get STAVE_LINE_DISTANCE() {\n        return Tables.STAVE_LINE_DISTANCE;\n    }\n    static set STAVE_LINE_DISTANCE(value) {\n        Tables.STAVE_LINE_DISTANCE = value;\n    }\n    static get STAVE_LINE_THICKNESS() {\n        return Tables.STAVE_LINE_THICKNESS;\n    }\n    static set STAVE_LINE_THICKNESS(value) {\n        Tables.STAVE_LINE_THICKNESS = value;\n    }\n    static get STEM_HEIGHT() {\n        return Tables.STEM_HEIGHT;\n    }\n    static set STEM_HEIGHT(value) {\n        Tables.STEM_HEIGHT = value;\n    }\n    static get STEM_WIDTH() {\n        return Tables.STEM_WIDTH;\n    }\n    static set STEM_WIDTH(value) {\n        Tables.STEM_WIDTH = value;\n    }\n    static get TIME4_4() {\n        return Tables.TIME4_4;\n    }\n    static get accidentalMap() {\n        return Tables.accidentalMap;\n    }\n    static get unicode() {\n        return Tables.unicode;\n    }\n    static keySignature(spec) {\n        return Tables.keySignature(spec);\n    }\n    static hasKeySignature(spec) {\n        return Tables.hasKeySignature(spec);\n    }\n    static getKeySignatures() {\n        return Tables.getKeySignatures();\n    }\n    static clefProperties(clef) {\n        return Tables.clefProperties(clef);\n    }\n    // eslint-disable-next-line\n    static keyProperties(key, clef, params) {\n        return Tables.keyProperties(key, clef, params);\n    }\n    static durationToTicks(duration) {\n        return Tables.durationToTicks(duration);\n    }\n}\nFlow.Accidental = Accidental;\nFlow.Annotation = Annotation;\nFlow.Articulation = Articulation;\nFlow.Barline = Barline;\nFlow.BarNote = BarNote;\nFlow.Beam = Beam;\nFlow.Bend = Bend;\nFlow.BoundingBox = BoundingBox;\nFlow.BoundingBoxComputation = BoundingBoxComputation;\nFlow.CanvasContext = CanvasContext;\nFlow.ChordSymbol = ChordSymbol;\nFlow.Clef = Clef;\nFlow.ClefNote = ClefNote;\nFlow.Crescendo = Crescendo;\nFlow.Curve = Curve;\nFlow.Dot = Dot;\nFlow.EasyScore = EasyScore;\nFlow.Element = Element;\nFlow.Factory = Factory;\nFlow.Font = Font;\nFlow.Formatter = Formatter;\nFlow.Fraction = Fraction;\nFlow.FretHandFinger = FretHandFinger;\nFlow.GhostNote = GhostNote;\nFlow.Glyph = Glyph;\nFlow.GlyphNote = GlyphNote;\nFlow.GraceNote = GraceNote;\nFlow.GraceNoteGroup = GraceNoteGroup;\nFlow.GraceTabNote = GraceTabNote;\nFlow.KeyManager = KeyManager;\nFlow.KeySignature = KeySignature;\nFlow.KeySigNote = KeySigNote;\nFlow.Modifier = Modifier;\nFlow.ModifierContext = ModifierContext;\nFlow.MultiMeasureRest = MultiMeasureRest;\nFlow.Music = Music;\nFlow.Note = Note;\nFlow.NoteHead = NoteHead;\nFlow.NoteSubGroup = NoteSubGroup;\nFlow.Ornament = Ornament;\nFlow.Parenthesis = Parenthesis;\nFlow.Parser = Parser;\nFlow.PedalMarking = PedalMarking;\nFlow.Registry = Registry;\nFlow.RenderContext = RenderContext;\nFlow.Renderer = Renderer;\nFlow.RepeatNote = RepeatNote;\nFlow.Repetition = Repetition;\nFlow.Stave = Stave;\nFlow.StaveConnector = StaveConnector;\nFlow.StaveHairpin = StaveHairpin;\nFlow.StaveLine = StaveLine;\nFlow.StaveModifier = StaveModifier;\nFlow.StaveNote = StaveNote;\nFlow.StaveTempo = StaveTempo;\nFlow.StaveText = StaveText;\nFlow.StaveTie = StaveTie;\nFlow.Stem = Stem;\nFlow.StringNumber = StringNumber;\nFlow.Stroke = Stroke;\nFlow.SVGContext = SVGContext;\nFlow.System = System;\nFlow.TabNote = TabNote;\nFlow.TabSlide = TabSlide;\nFlow.TabStave = TabStave;\nFlow.TabTie = TabTie;\nFlow.TextBracket = TextBracket;\nFlow.TextDynamics = TextDynamics;\nFlow.TextFormatter = TextFormatter;\nFlow.TextNote = TextNote;\nFlow.TickContext = TickContext;\nFlow.TimeSignature = TimeSignature;\nFlow.TimeSigNote = TimeSigNote;\nFlow.Tremolo = Tremolo;\nFlow.Tuning = Tuning;\nFlow.Tuplet = Tuplet;\nFlow.Vibrato = Vibrato;\nFlow.VibratoBracket = VibratoBracket;\nFlow.Voice = Voice;\nFlow.Volta = Volta;\n// Exported Enums.\n// Sorted by the module / file they are exported from.\nFlow.AnnotationHorizontalJustify = AnnotationHorizontalJustify;\nFlow.AnnotationVerticalJustify = AnnotationVerticalJustify;\nFlow.ChordSymbolHorizontalJustify = ChordSymbolHorizontalJustify;\nFlow.ChordSymbolVerticalJustify = ChordSymbolVerticalJustify;\nFlow.SymbolTypes = SymbolTypes;\nFlow.SymbolModifiers = SymbolModifiers;\nFlow.CurvePosition = CurvePosition;\nFlow.FontWeight = FontWeight;\nFlow.FontStyle = FontStyle;\nFlow.ModifierPosition = ModifierPosition;\nFlow.RendererBackends = RendererBackends;\nFlow.RendererLineEndType = RendererLineEndType;\nFlow.BarlineType = BarlineType;\nFlow.StaveModifierPosition = StaveModifierPosition;\nFlow.VoltaType = VoltaType;\nFlow.TextBracketPosition = TextBracketPosition;\nFlow.TextJustification = TextJustification;\nFlow.VoiceMode = VoiceMode;\n","export const VERSION = '4.0.1';\nexport const ID = '409af72ce03dd6da1919ee6c7de72c62aac0644e';\nexport const DATE = '2022-03-24T20:35:28.447Z';\n","export const BravuraFont = {\n    glyphs: {\n        bracketTop: {\n            x_min: 0,\n            x_max: 469,\n            y_min: 0,\n            y_max: 295,\n            ha: 295,\n            o: 'm 0 0 l 180 0 b 674 390 410 43 616 150 b 675 405 675 396 675 400 b 664 425 675 416 671 422 b 628 405 651 425 635 415 b 157 179 613 389 432 199 l 12 179 b 0 168 3 179 0 177 z',\n        },\n        bracketBottom: {\n            x_min: 0,\n            x_max: 469,\n            y_min: -295,\n            y_max: 0,\n            ha: 295,\n            o: 'm 0 -168 b 12 -179 0 -177 3 -179 l 157 -179 b 628 -405 432 -199 613 -389 b 664 -425 635 -415 651 -425 b 675 -405 671 -422 675 -416 b 674 -390 675 -400 675 -396 b 180 0 616 -150 410 -43 l 0 0 z',\n        },\n        barlineTick: {\n            x_min: 0,\n            x_max: 36,\n            y_min: 868,\n            y_max: 1120,\n            ha: 252,\n            o: 'm 52 1250 l 52 1613 l 0 1613 l 0 1250 z',\n        },\n        breathMarkTick: {\n            x_min: 0,\n            x_max: 500,\n            y_min: 0,\n            y_max: 502,\n            ha: 502,\n            o: 'm 9 367 b 0 374 6 372 3 374 b 9 334 0 367 0 343 b 179 19 40 312 164 121 b 192 0 179 3 186 0 b 210 19 197 0 207 6 b 698 701 245 197 507 658 b 720 714 714 704 720 711 b 698 723 720 720 711 723 b 197 186 455 714 210 202 b 186 176 194 179 189 176 b 176 186 179 176 176 186 b 9 367 143 266 27 359 z',\n        },\n        segno: {\n            x_min: 4,\n            x_max: 550,\n            y_min: -27,\n            y_max: 759,\n            ha: 786,\n            o: 'm 194 958 b 217 939 203 958 213 955 l 220 929 b 325 805 230 890 252 805 b 425 901 384 805 425 840 b 413 969 425 923 420 946 b 220 1060 390 1035 294 1060 b 6 793 120 1060 6 936 b 29 687 6 759 13 723 b 295 449 75 582 284 454 b 304 438 301 446 304 444 b 295 415 304 432 301 425 b 78 22 285 395 78 22 b 73 3 75 16 73 9 b 114 -39 73 -20 91 -39 b 150 -17 128 -39 143 -30 b 377 395 150 -17 373 386 b 395 402 377 393 389 402 b 704 176 416 397 704 312 b 621 75 704 120 670 82 l 616 73 b 562 138 586 73 562 94 l 562 154 b 485 249 562 209 526 249 b 468 246 480 249 474 248 b 366 153 415 233 366 210 b 540 -12 366 65 455 -12 b 600 -1 559 -12 579 -9 b 792 251 716 37 792 131 b 789 292 792 264 791 278 b 523 588 768 451 540 579 b 498 611 505 598 498 603 b 501 619 498 613 500 616 b 732 1032 508 631 732 1032 b 737 1053 736 1040 737 1045 b 697 1093 737 1076 719 1093 b 661 1073 683 1093 668 1086 b 423 647 661 1073 432 660 b 410 635 419 639 416 635 b 396 639 406 635 402 636 b 128 792 383 644 166 727 b 108 868 120 808 108 838 b 186 958 108 907 125 948 z m 598 671 b 680 589 598 626 635 589 b 762 671 726 589 762 626 b 680 753 762 717 726 753 b 598 671 635 753 598 717 z m 202 380 b 120 462 202 425 166 462 b 37 380 75 462 37 425 b 120 298 37 334 75 298 b 202 380 166 298 202 334 z',\n        },\n        coda: {\n            x_min: -4,\n            x_max: 955,\n            y_min: -158,\n            y_max: 898,\n            ha: 1056,\n            o: 'm 1349 576 l 1178 576 b 729 1083 1164 847 962 1064 l 729 1269 b 694 1293 729 1287 713 1293 b 660 1269 675 1293 660 1287 l 660 1083 b 210 576 426 1064 226 848 l 20 576 b -6 541 0 576 -6 560 b 20 507 -6 523 0 507 l 210 507 b 660 0 226 238 426 19 l 660 -202 b 694 -228 660 -222 675 -228 b 729 -202 713 -228 729 -222 l 729 0 b 1178 507 962 19 1164 238 l 1349 507 b 1375 541 1369 507 1375 523 b 1349 576 1375 560 1369 576 z m 940 576 l 729 576 l 729 1002 b 940 576 930 985 940 809 z m 660 1002 l 660 576 l 455 576 b 660 1002 455 809 455 985 z m 455 507 l 660 507 l 660 69 b 455 507 474 91 456 285 z m 729 69 l 729 507 l 940 507 b 729 69 936 287 909 91 z',\n        },\n        gClef: {\n            x_min: 0,\n            x_max: 671,\n            y_min: -658,\n            y_max: 1098,\n            ha: 1756,\n            o: 'm 541 598 b 550 625 539 615 541 616 b 824 1174 706 770 824 953 b 730 1509 824 1299 789 1423 b 655 1581 708 1541 671 1581 b 562 1512 635 1581 590 1544 b 420 1064 455 1394 420 1214 b 441 828 420 981 431 887 b 428 793 444 811 445 808 b 0 125 220 622 0 416 b 524 -363 0 -125 171 -363 b 624 -354 557 -363 595 -360 b 645 -367 639 -351 642 -350 b 684 -657 662 -464 684 -589 b 455 -896 684 -870 540 -896 b 340 -854 377 -896 340 -873 b 386 -829 340 -844 353 -840 b 482 -694 431 -816 482 -778 b 344 -547 482 -615 432 -547 b 190 -713 248 -547 190 -624 b 464 -948 190 -806 246 -948 b 747 -660 560 -948 747 -904 b 706 -351 747 -577 721 -441 b 724 -327 703 -334 704 -336 b 966 16 870 -269 966 -147 b 619 363 966 200 831 363 b 577 389 582 363 582 363 z m 677 1358 b 763 1240 724 1358 763 1319 b 513 851 763 1080 626 950 b 494 863 503 842 497 844 b 485 995 488 900 485 949 b 677 1358 485 1220 589 1358 z m 520 377 b 498 343 524 350 524 351 b 289 63 372 300 289 186 b 455 -192 289 -66 357 -158 b 494 -200 467 -196 484 -200 b 511 -184 505 -200 511 -193 b 490 -166 511 -174 500 -170 b 386 -12 429 -140 386 -78 b 530 157 386 71 442 132 b 559 145 553 163 556 161 l 631 -284 b 611 -304 634 -300 632 -300 b 530 -311 588 -308 559 -311 b 115 29 278 -311 115 -171 b 249 363 115 114 130 228 b 469 567 336 459 402 513 b 490 562 484 579 487 577 z m 619 148 b 635 168 616 166 618 170 b 848 -66 752 158 848 60 b 713 -271 848 -157 793 -230 b 690 -262 696 -279 693 -279 z',\n        },\n        cClef: {\n            x_min: 0,\n            x_max: 699,\n            y_min: -506,\n            y_max: 506,\n            ha: 1012,\n            o: 'm 331 694 b 301 724 331 714 321 724 l 300 724 b 269 694 279 724 269 714 l 269 -694 b 300 -724 269 -714 279 -724 l 301 -724 b 331 -694 321 -724 331 -714 l 331 -63 b 344 -55 331 -52 338 -53 b 472 -265 382 -65 442 -102 b 500 -301 477 -288 485 -301 b 530 -262 516 -301 523 -287 b 684 -128 549 -199 582 -128 b 804 -409 778 -128 804 -220 b 651 -683 804 -598 770 -683 b 528 -644 631 -683 528 -674 b 567 -622 528 -636 552 -628 b 625 -528 596 -612 625 -583 b 527 -429 625 -465 583 -429 b 416 -547 465 -429 416 -471 b 667 -729 416 -638 495 -729 b 1007 -413 903 -729 1007 -563 b 706 -76 1007 -215 897 -76 b 618 -89 664 -76 636 -84 b 576 -88 603 -94 589 -96 b 524 0 556 -75 524 -29 b 576 88 524 29 556 75 b 618 89 589 96 603 94 b 706 76 636 84 664 76 b 1007 413 897 76 1007 215 b 667 729 1007 563 903 729 b 416 547 495 729 416 638 b 527 429 416 471 465 429 b 625 528 583 429 625 465 b 567 622 625 583 596 612 b 528 644 552 628 528 636 b 651 683 528 674 631 683 b 804 409 770 683 804 598 b 684 128 804 220 778 128 b 530 262 582 128 549 199 b 500 301 523 287 516 301 b 472 265 485 301 477 288 b 344 55 442 102 382 65 b 331 63 338 53 331 52 z m 30 724 b 0 694 10 724 0 714 l 0 -694 b 30 -724 0 -714 10 -724 l 154 -724 b 184 -694 174 -724 184 -714 l 184 694 b 154 724 184 714 174 724 z',\n        },\n        fClef: {\n            x_min: -5,\n            x_max: 684,\n            y_min: -635,\n            y_max: 262,\n            ha: 897,\n            o: 'm 363 377 b 0 56 112 377 0 194 b 177 -158 0 -59 60 -158 b 330 -6 268 -158 330 -95 b 192 144 330 86 262 144 b 120 134 153 144 138 134 b 96 160 101 134 96 145 b 330 323 96 217 183 323 b 549 -53 482 323 549 173 b 14 -871 549 -455 350 -680 b -7 -897 1 -878 -7 -886 b 12 -914 -7 -906 -1 -914 b 36 -907 19 -914 27 -912 b 765 -40 390 -734 765 -478 b 363 377 765 210 612 377 z m 906 259 b 827 180 861 259 827 225 b 906 101 827 135 861 101 b 985 180 950 101 985 135 b 906 259 985 225 950 259 z m 907 -102 b 829 -180 863 -102 829 -135 b 907 -258 829 -225 863 -258 b 985 -180 952 -258 985 -225 b 907 -102 985 -135 952 -102 z',\n        },\n        unpitchedPercussionClef1: {\n            x_min: 0,\n            x_max: 382,\n            y_min: -250,\n            y_max: 250,\n            ha: 500,\n            o: 'm 230 -338 l 230 338 b 210 360 230 350 222 360 l 20 360 b 0 338 9 360 0 350 l 0 -338 b 20 -360 0 -350 9 -360 l 210 -360 b 230 -338 222 -360 230 -350 z m 550 338 b 530 360 550 350 541 360 l 340 360 b 320 338 328 360 320 350 l 320 -338 b 340 -360 320 -350 328 -360 l 530 -360 b 550 -338 541 -360 550 -350 z',\n        },\n        '6stringTabClef': {\n            x_min: -3,\n            x_max: 408,\n            y_min: -748,\n            y_max: 764,\n            ha: 1512,\n            o: 'm 557 1024 l 557 1100 l 26 1100 l 26 1024 l 249 1024 l 249 422 l 336 422 l 336 1024 z m 588 -328 l 350 348 l 238 348 l -4 -328 l 88 -328 l 160 -125 l 420 -125 l 491 -328 z m 397 -52 l 181 -52 l 292 256 z m 544 -883 b 420 -719 544 -802 507 -752 b 514 -572 482 -690 514 -639 b 314 -399 514 -472 442 -399 l 39 -399 l 39 -1077 l 344 -1077 b 544 -883 467 -1077 544 -995 z m 428 -583 b 292 -691 428 -652 389 -691 l 125 -691 l 125 -475 l 292 -475 b 428 -583 389 -475 428 -514 z m 458 -884 b 337 -1001 458 -949 418 -1001 l 125 -1001 l 125 -768 l 337 -768 b 458 -884 418 -768 458 -818 z',\n        },\n        timeSig0: {\n            x_min: 20,\n            x_max: 450,\n            y_min: -250,\n            y_max: 251,\n            ha: 501,\n            o: 'm 648 0 b 338 361 648 200 510 361 b 29 0 167 361 29 200 b 338 -360 29 -199 167 -360 b 648 0 510 -360 648 -199 z m 338 317 b 446 10 397 317 446 180 b 338 -295 446 -158 397 -295 b 230 10 278 -295 230 -158 b 338 317 230 180 278 317 z',\n        },\n        timeSig1: {\n            x_min: 20,\n            x_max: 314,\n            y_min: -250,\n            y_max: 251,\n            ha: 501,\n            o: 'm 35 19 b 29 0 35 19 29 10 b 45 -20 29 -7 33 -16 b 58 -23 50 -22 56 -23 b 78 -10 72 -23 78 -10 b 156 117 78 -10 140 89 b 170 131 161 127 167 131 b 179 111 176 131 179 120 l 179 -261 b 115 -315 179 -294 145 -315 b 91 -337 105 -315 91 -320 b 122 -360 91 -353 104 -360 l 429 -360 b 452 -337 452 -360 452 -337 b 431 -315 452 -337 452 -315 b 384 -265 410 -315 384 -289 l 384 328 b 356 361 384 351 376 360 b 281 356 336 361 300 356 b 206 360 253 356 228 357 b 199 361 203 360 200 361 b 173 334 184 361 179 347 z',\n        },\n        timeSig2: {\n            x_min: 20,\n            x_max: 426,\n            y_min: -257,\n            y_max: 254,\n            ha: 511,\n            o: 'm 606 -131 b 589 -111 606 -114 599 -111 b 570 -127 577 -111 573 -117 l 569 -128 b 513 -192 554 -164 543 -192 b 488 -187 505 -192 498 -190 b 445 -171 469 -180 459 -179 b 289 -137 416 -160 348 -137 b 236 -145 271 -137 252 -140 b 422 -42 268 -94 390 -50 b 613 147 523 -14 613 27 b 330 366 613 300 464 366 b 69 275 229 366 140 357 b 29 170 45 245 29 209 b 42 108 29 150 33 130 b 160 29 63 63 108 29 b 261 156 248 29 261 120 b 161 275 261 242 161 246 b 275 330 164 295 190 330 b 405 192 403 330 405 233 b 193 -102 405 60 297 -39 b 33 -317 114 -153 58 -223 l 32 -321 b 69 -370 32 -340 48 -370 b 203 -282 101 -370 118 -282 b 410 -360 261 -282 282 -360 b 606 -131 472 -360 583 -354 z',\n        },\n        timeSig3: {\n            x_min: 20,\n            x_max: 401,\n            y_min: -251,\n            y_max: 249,\n            ha: 500,\n            o: 'm 307 357 b 301 357 305 357 304 357 l 291 359 b 285 359 289 359 287 359 b 37 200 161 359 37 276 b 154 84 37 153 65 89 l 161 84 b 256 177 225 84 256 130 l 256 189 b 209 248 252 242 216 245 b 180 268 202 251 180 248 l 180 274 b 240 310 183 298 228 310 b 374 199 363 310 374 233 l 374 189 b 199 36 374 82 289 40 b 164 12 184 35 164 27 b 200 -6 164 -6 189 -6 b 379 -137 366 -6 379 -118 b 269 -307 379 -289 301 -307 b 256 -305 264 -307 258 -305 b 216 -282 245 -304 217 -304 l 216 -275 b 249 -180 216 -243 248 -222 b 145 -76 249 -120 207 -76 b 130 -78 140 -76 135 -76 b 60 -115 105 -82 78 -96 b 29 -203 36 -137 29 -171 b 275 -361 32 -315 134 -359 l 288 -361 b 577 -161 431 -361 577 -288 l 577 -151 b 537 -50 575 -109 564 -82 b 503 -20 528 -39 517 -29 l 472 -3 l 425 10 b 410 17 418 12 413 12 b 409 24 409 20 409 22 b 415 37 409 30 410 36 b 459 50 431 42 446 43 b 547 181 517 78 547 115 b 307 357 547 314 367 353 z',\n        },\n        timeSig4: {\n            x_min: 20,\n            x_max: 450,\n            y_min: -250,\n            y_max: 251,\n            ha: 501,\n            o: 'm 521 -107 l 521 202 b 504 226 521 213 520 226 b 475 213 491 226 484 223 l 338 48 b 325 14 333 40 325 32 l 325 -107 l 131 -107 b 481 336 246 -9 477 318 l 482 340 b 461 361 482 353 472 361 b 363 359 448 361 389 359 b 261 361 337 359 272 361 b 228 334 248 361 228 357 b 43 -105 228 156 86 -45 l 35 -117 b 35 -118 35 -117 35 -118 l 33 -120 b 29 -137 30 -127 29 -132 b 58 -161 29 -151 40 -161 l 325 -161 l 325 -252 b 268 -302 325 -291 294 -302 b 235 -330 245 -302 235 -315 b 262 -360 235 -344 240 -360 l 569 -360 b 598 -330 583 -360 598 -350 b 566 -301 598 -310 580 -301 b 521 -246 552 -301 521 -292 l 521 -161 l 626 -161 b 648 -134 641 -161 648 -151 b 626 -107 648 -117 642 -107 z',\n        },\n        timeSig5: {\n            x_min: 20,\n            x_max: 383,\n            y_min: -251,\n            y_max: 246,\n            ha: 497,\n            o: 'm 109 85 b 117 179 109 85 115 166 b 138 197 118 190 125 197 l 144 197 b 285 184 158 194 226 184 b 492 323 485 184 492 300 b 472 353 492 341 488 353 b 295 340 454 353 341 340 b 101 354 249 340 125 351 b 66 330 75 354 68 341 l 50 10 l 50 7 b 79 -14 50 -12 65 -14 b 111 14 94 -14 95 -1 b 209 62 125 29 160 62 b 357 -125 258 62 357 35 b 235 -304 357 -284 272 -304 b 202 -300 223 -304 212 -304 b 184 -279 194 -295 186 -289 b 202 -259 184 -269 194 -264 b 256 -163 235 -239 256 -203 b 144 -50 256 -99 206 -50 b 30 -157 66 -50 35 -107 b 29 -183 29 -166 29 -174 b 284 -361 29 -302 107 -361 b 552 -125 456 -361 552 -255 b 314 112 552 6 445 112 b 122 71 230 112 168 98 b 115 69 120 69 117 69 b 109 79 109 69 109 75 z',\n        },\n        timeSig6: {\n            x_min: 20,\n            x_max: 414,\n            y_min: -249,\n            y_max: 251,\n            ha: 500,\n            o: 'm 439 120 b 554 229 500 120 554 167 b 553 245 554 235 554 239 b 348 361 539 337 426 361 b 85 209 239 360 137 307 b 29 4 53 148 29 72 l 29 -1 b 73 -200 30 -68 42 -143 b 324 -359 132 -307 203 -359 b 513 -307 389 -359 461 -348 b 596 -137 563 -266 596 -202 b 379 72 596 -24 490 72 b 248 22 333 72 285 55 b 239 19 245 19 242 19 b 226 53 230 19 226 30 b 346 327 230 320 315 327 b 393 305 374 327 393 320 b 357 251 393 285 366 268 b 347 209 350 238 347 223 b 369 150 347 187 354 166 b 439 120 379 131 420 120 z m 320 3 b 405 -158 366 3 405 -69 b 320 -320 405 -248 366 -320 b 236 -158 274 -320 236 -248 b 320 3 236 -69 274 3 z',\n        },\n        timeSig7: {\n            x_min: 20,\n            x_max: 421,\n            y_min: -250,\n            y_max: 249,\n            ha: 499,\n            o: 'm 606 294 b 582 351 606 333 606 351 b 552 336 580 351 557 346 b 485 236 541 318 521 236 b 262 359 449 236 382 359 b 137 307 179 359 157 325 b 98 281 117 288 108 282 b 60 315 86 281 68 301 b 43 325 58 321 50 325 b 29 308 36 325 29 321 l 29 71 b 45 48 29 71 30 48 b 66 76 56 48 60 60 b 164 196 81 112 99 196 b 374 88 222 196 291 88 b 446 118 415 88 435 109 b 459 124 451 121 456 124 b 469 111 465 124 468 120 b 272 -112 469 71 359 -10 b 173 -315 217 -176 173 -259 b 200 -360 173 -346 173 -360 b 294 -347 226 -360 258 -347 b 412 -360 330 -347 397 -360 b 435 -307 426 -360 435 -348 b 606 288 435 -66 606 140 z',\n        },\n        timeSig8: {\n            x_min: 20,\n            x_max: 416,\n            y_min: -259,\n            y_max: 259,\n            ha: 518,\n            o: 'm 481 52 b 567 204 533 85 567 132 b 317 373 567 351 356 373 b 36 176 150 373 36 297 b 161 -16 36 76 92 23 b 29 -190 86 -52 29 -99 b 301 -373 29 -315 158 -373 b 599 -117 445 -373 599 -311 b 481 52 599 -30 549 17 z m 406 85 b 168 240 291 125 168 150 b 314 331 168 301 251 331 b 482 207 360 331 482 308 b 406 85 482 150 454 112 z m 295 -325 b 111 -183 199 -325 111 -276 b 225 -48 111 -125 161 -72 b 436 -219 330 -94 436 -124 b 295 -325 436 -276 392 -325 z',\n        },\n        timeSig9: {\n            x_min: 20,\n            x_max: 414,\n            y_min: -249,\n            y_max: 251,\n            ha: 500,\n            o: 'm 186 -117 b 71 -226 125 -117 71 -164 b 72 -242 71 -232 71 -236 b 276 -359 86 -334 199 -359 b 540 -206 386 -357 488 -304 b 596 -1 572 -145 596 -69 l 596 4 b 552 203 595 71 583 145 b 301 361 492 310 422 361 b 112 310 236 361 164 351 b 29 140 62 269 29 204 b 246 -69 29 27 135 -69 b 377 -19 292 -69 340 -52 b 386 -16 380 -16 383 -16 b 399 -50 395 -16 399 -27 b 279 -324 395 -317 310 -324 b 232 -302 251 -324 232 -317 b 268 -248 232 -282 259 -265 b 278 -206 275 -235 278 -220 b 256 -147 278 -184 271 -163 b 186 -117 246 -128 204 -117 z m 305 0 b 220 161 259 0 220 72 b 305 323 220 251 259 323 b 389 161 351 323 389 251 b 305 0 389 72 351 0 z',\n        },\n        timeSigCommon: {\n            x_min: 5,\n            x_max: 424,\n            y_min: -249,\n            y_max: 251,\n            ha: 500,\n            o: 'm 336 361 b 7 -14 131 361 7 180 b 101 -262 7 -108 42 -190 b 321 -359 156 -328 235 -359 b 611 -88 573 -359 611 -130 b 589 -56 611 -56 595 -56 b 567 -82 577 -56 567 -58 b 363 -311 567 -268 409 -311 b 184 40 246 -311 184 -197 b 372 327 184 278 294 327 b 477 278 446 327 477 292 b 451 246 477 265 472 246 b 360 140 393 246 360 184 b 471 32 360 58 431 32 b 580 156 471 32 580 36 b 336 361 580 344 363 361 z',\n        },\n        timeSigCutCommon: {\n            x_min: 0,\n            x_max: 418,\n            y_min: -359,\n            y_max: 361,\n            ha: 720,\n            o: 'm 573 -58 b 559 -82 567 -58 559 -60 b 354 -310 559 -266 400 -310 b 317 -305 340 -310 328 -308 b 302 -284 311 -304 302 -295 l 302 287 b 338 323 302 297 328 321 b 363 324 347 324 356 324 b 468 275 436 324 468 289 b 442 243 468 264 464 243 b 351 137 384 243 351 181 b 462 30 351 56 422 30 b 572 154 462 30 572 35 b 318 357 572 295 441 357 b 302 390 310 359 302 383 l 302 495 b 276 520 302 507 292 520 b 252 495 265 520 252 507 l 252 369 b 235 346 252 359 238 346 l 196 331 b 0 -14 66 275 0 122 b 225 -346 0 -150 86 -310 b 252 -382 235 -350 252 -369 l 252 -492 b 276 -517 252 -505 265 -517 b 302 -492 292 -517 302 -505 l 302 -379 b 318 -359 302 -370 308 -363 b 602 -85 563 -354 602 -130 b 579 -58 600 -58 586 -58 z m 252 -235 b 243 -252 252 -248 248 -252 b 236 -248 240 -252 238 -251 b 177 37 197 -193 177 -96 b 232 259 177 147 200 215 b 236 262 233 262 235 262 b 252 239 243 262 252 251 z',\n        },\n        timeSigPlus: {\n            x_min: -1,\n            x_max: 499,\n            y_min: -250,\n            y_max: 250,\n            ha: 500,\n            o: 'm 432 53 b 413 79 420 53 413 65 l 413 340 b 392 360 413 350 405 360 l 325 360 b 305 340 312 360 305 350 l 305 79 b 284 53 305 66 292 53 l 19 53 b -1 33 9 53 -1 46 l -1 -33 b 19 -55 -1 -46 9 -55 l 284 -55 b 305 -75 298 -55 305 -68 l 305 -340 b 325 -360 305 -350 312 -360 l 392 -360 b 413 -340 405 -360 413 -350 l 413 -78 b 433 -55 413 -63 423 -55 l 698 -55 b 719 -33 708 -55 719 -46 l 719 33 b 698 53 719 46 708 53 z',\n        },\n        timeSigPlusSmall: {\n            x_min: -1,\n            x_max: 255,\n            y_min: -133,\n            y_max: 123,\n            ha: 256,\n            o: 'm 220 20 b 210 33 215 20 210 26 l 210 166 b 200 177 210 171 206 177 l 166 177 b 156 166 160 177 156 171 l 156 33 b 145 20 156 27 150 20 l 10 20 b -1 10 4 20 -1 16 l -1 -24 b 10 -35 -1 -30 4 -35 l 145 -35 b 156 -46 153 -35 156 -42 l 156 -180 b 166 -192 156 -186 160 -192 l 200 -192 b 210 -180 206 -192 210 -186 l 210 -48 b 222 -35 210 -39 216 -35 l 356 -35 b 367 -24 361 -35 367 -30 l 367 10 b 356 20 367 16 361 20 z',\n        },\n        timeSigMinus: {\n            x_min: 0,\n            x_max: 448,\n            y_min: -35,\n            y_max: 40,\n            ha: 75,\n            o: 'm 645 39 b 619 58 645 49 634 58 l 27 58 b 0 39 12 58 0 49 l 0 -32 b 27 -50 0 -42 12 -50 l 619 -50 b 645 -32 634 -50 645 -42 z',\n        },\n        timeSigParensRight: {\n            x_min: 0,\n            x_max: 184,\n            y_min: -489,\n            y_max: 491,\n            ha: 980,\n            o: 'm 0 -696 b 3 -704 0 -698 1 -704 b 7 -703 4 -704 6 -704 b 265 1 187 -530 265 -282 b 12 701 265 289 187 531 b 4 707 12 701 6 707 b 0 696 1 707 0 703 l 0 665 b 4 644 0 665 0 651 b 167 1 112 503 167 315 b 6 -641 167 -311 109 -497 b 0 -658 3 -644 0 -651 z',\n        },\n        timeSigParensRightSmall: {\n            x_min: 0,\n            x_max: 110,\n            y_min: -251,\n            y_max: 249,\n            ha: 500,\n            o: 'm 0 -356 b 3 -361 0 -357 1 -361 b 158 0 112 -272 158 -145 b 4 359 158 147 109 272 b 0 353 3 359 0 357 l 0 338 b 3 327 0 338 0 330 b 91 0 60 246 91 160 b 4 -328 91 -160 62 -249 b 0 -337 3 -330 0 -333 z',\n        },\n        timeSigParensLeft: {\n            x_min: 0,\n            x_max: 184,\n            y_min: -489,\n            y_max: 491,\n            ha: 980,\n            o: 'm 265 -658 b 259 -641 265 -651 262 -644 b 98 1 156 -497 98 -311 b 261 644 98 315 153 503 b 265 665 265 651 265 665 l 265 696 b 261 707 265 703 264 707 b 253 701 259 707 253 701 b 0 1 78 531 0 289 b 258 -703 0 -282 78 -530 b 262 -704 259 -704 261 -704 b 265 -696 264 -704 265 -698 z',\n        },\n        timeSigParensLeftSmall: {\n            x_min: 0,\n            x_max: 110,\n            y_min: -251,\n            y_max: 249,\n            ha: 500,\n            o: 'm 158 -337 b 154 -328 158 -333 156 -330 b 68 0 96 -249 68 -160 b 156 327 68 160 98 246 b 158 338 158 330 158 338 l 158 353 b 154 359 158 357 156 359 b 0 0 49 272 0 147 b 156 -361 0 -145 46 -272 b 158 -356 157 -361 158 -357 z',\n        },\n        noteheadDoubleWhole: {\n            x_min: 0,\n            x_max: 599,\n            y_min: -155,\n            y_max: 155,\n            ha: 310,\n            o: 'm 13 223 b 0 212 4 223 0 217 l 0 -213 b 13 -223 0 -219 4 -223 l 32 -223 b 45 -213 39 -223 45 -219 l 45 212 b 32 223 45 217 39 223 z m 96 223 b 82 212 88 223 82 217 l 82 -213 b 96 -223 82 -219 88 -223 l 114 -223 b 128 -213 121 -223 128 -219 l 128 212 b 114 223 128 217 121 223 z m 747 223 b 733 212 740 223 733 217 l 733 -213 b 747 -223 733 -219 740 -223 l 766 -223 b 780 -213 773 -223 780 -219 l 780 212 b 766 223 780 217 773 223 z m 829 223 b 815 212 824 223 815 217 l 815 -213 b 829 -223 815 -219 824 -223 l 848 -223 b 863 -213 857 -223 863 -219 l 863 212 b 848 223 863 217 857 223 z m 438 180 b 130 1 248 180 130 101 b 423 -180 130 -92 210 -180 b 733 1 657 -180 733 -98 b 438 180 733 104 572 180 z m 469 -145 b 331 -71 409 -145 369 -112 b 284 58 305 -37 284 12 b 400 147 284 131 333 147 b 577 -45 498 147 577 42 b 469 -145 577 -115 533 -145 z',\n        },\n        noteheadWhole: {\n            x_min: 0,\n            x_max: 422,\n            y_min: -125,\n            y_max: 125,\n            ha: 250,\n            o: 'm 311 180 b 0 3 120 180 0 101 b 297 -180 0 -94 82 -180 b 608 3 533 -180 608 -98 b 311 180 608 105 445 180 z m 160 91 b 274 148 176 141 229 148 b 452 -45 373 148 452 42 b 386 -141 452 -89 433 -130 b 341 -147 372 -145 356 -147 b 206 -72 289 -147 236 -112 b 156 56 177 -39 156 10 b 160 91 156 68 157 79 z',\n        },\n        noteheadHalf: {\n            x_min: 0,\n            x_max: 295,\n            y_min: -125,\n            y_max: 125,\n            ha: 250,\n            o: 'm 140 -180 b 425 60 377 -180 425 13 b 282 180 425 134 366 180 b 0 -60 68 180 0 14 b 140 -180 0 -137 60 -180 z m 108 -125 b 50 -92 78 -125 60 -109 b 42 -63 46 -84 42 -73 b 318 121 42 7 251 121 b 372 91 346 121 361 108 b 380 63 376 82 380 73 b 108 -125 380 1 177 -125 z',\n        },\n        noteheadBlack: {\n            x_min: 0,\n            x_max: 295,\n            y_min: -125,\n            y_max: 125,\n            ha: 250,\n            o: 'm 140 -180 b 425 60 268 -180 425 -62 b 285 180 425 134 367 180 b 0 -60 127 180 0 63 b 140 -180 0 -135 62 -180 z',\n        },\n        noteheadXWhole: {\n            x_min: 0,\n            x_max: 377,\n            y_min: -125,\n            y_max: 125,\n            ha: 250,\n            o: 'm 272 -95 l 364 -171 b 384 -180 370 -177 377 -180 l 511 -180 b 543 -148 528 -180 543 -164 b 531 -124 543 -140 539 -131 l 412 0 l 531 124 b 541 148 539 131 541 140 b 513 180 541 164 528 180 l 384 180 b 364 171 377 180 370 177 l 272 94 l 179 171 b 158 180 173 177 166 180 l 30 180 b 0 148 16 180 0 164 b 12 124 0 140 4 131 l 132 0 l 12 -124 b 1 -148 4 -131 1 -140 b 32 -180 1 -164 14 -180 l 158 -180 b 179 -171 166 -180 173 -177 z m 386 -141 l 272 -45 l 157 -141 l 88 -141 l 245 0 l 88 141 l 157 141 l 272 45 l 386 141 l 456 141 l 300 0 l 456 -141 z',\n        },\n        noteheadXHalf: {\n            x_min: 0,\n            x_max: 334,\n            y_min: -125,\n            y_max: 125,\n            ha: 250,\n            o: 'm 295 180 b 271 170 287 180 278 177 l 209 98 l 115 171 b 95 180 109 177 104 180 l 36 180 b 4 148 19 180 4 164 b 14 124 4 140 7 132 l 140 22 l 7 -127 b 0 -148 3 -131 0 -138 b 32 -180 0 -166 14 -180 l 184 -180 b 209 -170 193 -180 203 -177 l 271 -99 l 363 -171 b 384 -180 370 -176 377 -180 l 445 -180 b 478 -147 461 -180 478 -163 b 465 -125 478 -138 474 -131 l 341 -22 l 474 127 b 481 148 480 131 481 138 b 448 180 481 166 468 180 z m 36 148 l 95 148 l 233 33 l 334 148 l 410 148 l 274 -6 l 445 -148 l 384 -148 l 248 -35 l 147 -148 l 71 -148 l 206 4 z',\n        },\n        noteheadXBlack: {\n            x_min: 0,\n            x_max: 290,\n            y_min: -125,\n            y_max: 125,\n            ha: 250,\n            o: 'm 410 -143 l 239 0 l 410 144 b 418 160 415 147 418 154 b 399 180 418 171 408 180 b 389 177 396 180 392 179 l 207 26 l 29 177 b 17 180 26 179 22 180 b 0 161 7 180 0 170 b 7 144 0 156 3 148 l 179 0 l 7 -143 b 0 -158 1 -147 0 -153 b 19 -180 0 -170 7 -180 b 29 -176 23 -180 26 -179 l 207 -24 l 389 -176 b 399 -180 392 -179 396 -180 b 418 -160 410 -180 418 -168 b 410 -143 418 -153 415 -147 z',\n        },\n        noteheadCircleX: {\n            x_min: 0,\n            x_max: 249,\n            y_min: -125,\n            y_max: 125,\n            ha: 250,\n            o: 'm 179 180 b 0 0 81 180 0 99 b 179 -180 0 -99 81 -180 b 359 0 278 -180 359 -99 b 179 180 359 99 278 180 z m 261 112 l 180 30 l 98 112 b 179 138 121 128 148 138 b 261 112 210 138 238 128 z m 317 0 b 292 -82 317 -30 308 -59 l 209 1 l 291 84 b 317 0 307 60 317 30 z m 40 0 b 69 84 40 32 50 60 l 151 1 l 68 -84 b 40 0 49 -60 40 -30 z m 95 -111 l 180 -27 l 262 -111 b 179 -138 239 -128 210 -138 b 95 -111 148 -138 120 -128 z',\n        },\n        noteheadTriangleUpWhole: {\n            x_min: 0,\n            x_max: 319,\n            y_min: -125,\n            y_max: 125,\n            ha: 250,\n            o: 'm 445 -180 b 459 -166 454 -180 459 -173 b 458 -158 459 -163 458 -160 l 239 173 b 228 180 238 177 233 180 b 216 173 225 180 219 177 l 1 -158 b 0 -166 1 -160 0 -163 b 14 -180 0 -173 6 -180 z m 170 -137 b 145 -96 157 -137 145 -109 b 228 108 145 -17 197 56 b 310 -98 259 55 310 -17 b 288 -137 310 -111 301 -137 z',\n        },\n        noteheadTriangleUpHalf: {\n            x_min: 0,\n            x_max: 285,\n            y_min: -125,\n            y_max: 125,\n            ha: 250,\n            o: 'm 215 180 b 202 173 210 180 204 177 l 3 -157 b 0 -166 1 -160 0 -163 b 14 -180 0 -173 7 -180 l 396 -180 b 410 -166 406 -180 410 -173 b 409 -158 410 -163 410 -161 l 228 173 b 215 180 226 174 220 180 z m 246 -138 l 115 -138 l 232 76 l 297 -37 z',\n        },\n        noteheadTriangleUpBlack: {\n            x_min: 0,\n            x_max: 293,\n            y_min: -125,\n            y_max: 125,\n            ha: 250,\n            o: 'm 422 -180 l 207 180 l 0 -180 z',\n        },\n        noteheadDiamondWhole: {\n            x_min: 0,\n            x_max: 270,\n            y_min: -125,\n            y_max: 125,\n            ha: 250,\n            o: 'm 386 -23 b 389 -16 387 -20 389 -19 b 383 -7 389 -13 386 -9 l 130 179 b 122 180 128 180 125 180 b 115 177 120 180 117 180 l 3 23 b 0 17 1 20 0 19 b 4 7 0 16 3 10 l 258 -179 b 264 -180 261 -179 262 -180 b 272 -176 268 -180 271 -179 z m 66 40 b 62 48 65 42 62 45 l 109 111 b 112 112 109 112 111 112 b 118 111 115 112 117 111 l 320 -37 b 324 -46 323 -39 324 -42 b 275 -111 278 -111 276 -111 b 268 -108 272 -111 271 -109 z',\n        },\n        noteheadDiamondHalf: {\n            x_min: 0,\n            x_max: 251,\n            y_min: -125,\n            y_max: 125,\n            ha: 250,\n            o: 'm 359 -7 b 361 0 360 -6 361 -3 b 359 7 361 3 360 4 l 189 177 b 180 180 186 179 183 180 b 174 177 179 180 176 179 l 4 7 b 0 0 1 4 0 3 b 4 -7 0 -3 1 -6 l 174 -177 b 180 -180 176 -180 179 -180 b 189 -177 183 -180 186 -180 z m 266 26 b 138 -71 266 -12 176 -71 b 96 -50 121 -71 108 -63 b 88 -24 89 -43 88 -32 b 215 73 88 13 177 73 b 266 26 238 73 266 50 z',\n        },\n        noteheadDiamondBlack: {\n            x_min: 0,\n            x_max: 250,\n            y_min: -125,\n            y_max: 125,\n            ha: 250,\n            o: 'm 357 -6 b 360 1 359 -4 360 -1 b 357 9 360 4 359 7 l 189 177 b 180 180 187 179 184 180 b 171 177 177 180 173 179 l 3 9 b 0 1 0 6 0 4 b 4 -7 0 -1 1 -4 l 173 -177 b 180 -180 176 -180 177 -180 b 187 -177 181 -180 184 -180 z',\n        },\n        noteheadSquareWhite: {\n            x_min: 0,\n            x_max: 313,\n            y_min: -125,\n            y_max: 125,\n            ha: 250,\n            o: 'm 451 -180 l 451 180 l 0 180 l 0 -180 z m 40 -138 l 40 140 l 410 140 l 410 -138 z',\n        },\n        noteheadSquareBlack: {\n            x_min: 0,\n            x_max: 313,\n            y_min: -125,\n            y_max: 125,\n            ha: 250,\n            o: 'm 451 -180 l 451 180 l 0 180 l 0 -180 z',\n        },\n        noteheadParenthesis: {\n            x_min: -73,\n            x_max: 368,\n            y_min: -180,\n            y_max: 182,\n            ha: 362,\n            o: 'm 52 -249 b -30 -144 3 -212 -14 -190 b -52 4 -45 -102 -52 -56 b 52 252 -52 118 -36 179 l 46 262 b -105 3 -49 197 -105 124 b 45 -259 -105 -109 -48 -200 z m 382 -259 b 530 3 474 -202 530 -108 b 379 262 530 122 474 200 l 373 252 b 478 4 462 180 478 118 b 456 -144 478 -56 471 -102 b 373 -249 439 -190 422 -212 z',\n        },\n        noteheadParenthesisRight: {\n            x_min: -36,\n            x_max: 73,\n            y_min: -181,\n            y_max: 181,\n            ha: 362,\n            o: 'm -43 -261 b 105 1 49 -203 105 -109 b -46 261 105 121 49 199 l -52 251 b 53 3 37 179 53 117 b 32 -145 53 -58 46 -104 b -52 -251 14 -192 -3 -213 z',\n        },\n        noteheadParenthesisLeft: {\n            x_min: 0,\n            x_max: 109,\n            y_min: -181,\n            y_max: 181,\n            ha: 362,\n            o: 'm 157 -251 b 75 -145 108 -213 91 -192 b 53 3 60 -104 53 -58 b 157 251 53 117 69 177 l 151 261 b 0 1 56 196 0 122 b 150 -261 0 -111 58 -202 z',\n        },\n        augmentationDot: {\n            x_min: 0,\n            x_max: 100,\n            y_min: -50,\n            y_max: 50,\n            ha: 100,\n            o: 'm 144 0 b 72 72 144 40 112 72 b 0 0 32 72 0 40 b 72 -72 0 -40 32 -72 b 144 0 112 -72 144 -40 z',\n        },\n        tremolo1: {\n            x_min: -150,\n            x_max: 150,\n            y_min: -93,\n            y_max: 94,\n            ha: 187,\n            o: 'm 216 -45 l 216 135 l -216 46 l -216 -134 z',\n        },\n        flag8thUp: {\n            x_min: 0,\n            x_max: 264,\n            y_min: -810.1921176545985,\n            y_max: 9,\n            ha: 819.1921176545985,\n            o: 'm 343 -1138 b 380 -888 343 -1138 380 -1001 b 215 -395 380 -708 305 -539 b 58 -19 141 -281 81 -157 b 27 13 53 4 42 13 b 0 -9 12 13 0 9 l 0 -353 b 284 -688 95 -370 232 -566 b 318 -904 305 -737 318 -819 b 284 -1102 318 -969 308 -1037 b 279 -1123 281 -1110 279 -1117 b 302 -1165 279 -1146 294 -1159 b 343 -1138 311 -1171 336 -1162 z',\n        },\n        flag8thDown: {\n            x_min: 0,\n            x_max: 306,\n            y_min: -14,\n            y_max: 808,\n            ha: 822,\n            o: 'm 346 1094 b 376 897 366 1034 376 962 b 318 642 376 812 340 691 b 0 340 265 521 193 405 l 0 1 b 23 -20 0 -13 12 -20 b 58 12 36 -20 55 -12 b 262 387 82 148 189 274 b 441 881 353 530 441 701 b 400 1142 441 994 412 1096 b 377 1164 396 1158 387 1164 b 346 1094 356 1164 331 1136 z',\n        },\n        flag16thUp: {\n            x_min: 0,\n            x_max: 279,\n            y_min: -813,\n            y_max: 2,\n            ha: 815,\n            o: 'm 392 -1146 b 402 -988 397 -1139 402 -1057 l 402 -956 b 360 -783 402 -896 386 -837 b 359 -770 360 -779 359 -776 b 360 -760 359 -768 359 -765 b 396 -577 364 -752 396 -665 b 392 -526 396 -559 395 -543 b 236 -275 377 -428 340 -387 b 53 -16 158 -192 78 -168 b 24 3 50 0 33 3 b 0 -12 16 3 0 -1 l 0 -570 l 7 -570 b 298 -778 96 -573 199 -576 b 344 -992 331 -847 344 -917 b 333 -1120 344 -1034 340 -1077 b 331 -1133 331 -1126 331 -1129 b 363 -1171 331 -1152 343 -1171 b 392 -1146 373 -1171 383 -1165 z m 301 -661 b 223 -562 278 -625 253 -596 b 59 -331 156 -484 89 -449 b 58 -327 58 -330 58 -328 b 78 -312 58 -321 66 -312 l 89 -312 b 302 -464 177 -312 255 -393 b 341 -592 328 -501 341 -546 b 340 -621 341 -602 341 -611 b 330 -658 337 -632 337 -647 b 311 -667 328 -662 318 -667 b 301 -661 307 -667 304 -665 z',\n        },\n        flag16thDown: {\n            x_min: 0,\n            x_max: 290.8951581511223,\n            y_min: -9,\n            y_max: 812.0064,\n            ha: 821.0064,\n            o: 'm 346 1132 b 312 768 367 1011 367 880 b 7 559 213 566 96 562 l 0 559 l 0 1 b 24 -13 0 -6 10 -13 b 53 6 35 -13 50 -10 b 406 516 88 228 372 289 b 410 567 409 531 410 549 b 374 750 410 655 379 742 b 373 760 373 753 373 756 b 374 773 373 766 374 769 b 405 1138 426 881 428 1022 b 370 1169 397 1171 387 1169 b 346 1132 353 1168 341 1156 z m 325 657 b 344 647 333 657 343 652 b 354 611 351 636 351 622 b 356 582 356 600 356 590 b 317 454 356 534 343 491 b 89 302 269 383 177 302 l 78 302 b 58 317 66 302 58 310 b 59 321 58 318 58 320 b 238 552 89 439 170 472 b 315 651 268 585 292 613 b 325 657 318 655 321 657 z',\n        },\n        flag32ndUp: {\n            x_min: 0,\n            x_max: 261,\n            y_min: -812,\n            y_max: 149,\n            ha: 961,\n            o: 'm 374 -969 b 337 -806 372 -913 359 -858 b 336 -796 336 -804 336 -801 b 337 -788 336 -793 336 -791 b 370 -616 340 -778 370 -698 b 340 -482 370 -570 360 -524 b 369 -330 353 -445 369 -386 b 366 -289 369 -315 369 -302 b 220 -58 350 -202 317 -163 b 46 187 148 20 71 43 b 20 215 45 200 35 215 b 0 197 12 215 0 207 l 0 -609 l 7 -609 b 278 -802 91 -612 186 -615 b 323 -999 310 -865 323 -930 b 311 -1122 323 -1040 318 -1080 b 310 -1132 311 -1126 310 -1129 b 328 -1166 310 -1149 318 -1162 b 337 -1169 331 -1168 334 -1169 b 366 -1146 346 -1169 356 -1162 b 376 -1009 370 -1138 376 -1071 b 374 -969 376 -995 374 -982 z m 300 -261 b 321 -330 315 -289 321 -311 b 317 -360 321 -341 318 -350 b 300 -423 314 -374 307 -399 b 220 -334 279 -397 253 -370 b 56 -92 150 -256 79 -232 b 300 -261 135 -92 220 -127 z m 315 -657 b 308 -690 312 -668 312 -680 b 292 -698 307 -694 300 -698 b 282 -693 288 -698 284 -697 b 216 -608 261 -661 240 -636 l 209 -600 b 56 -390 147 -527 88 -495 b 73 -367 53 -380 60 -367 b 318 -622 189 -367 318 -505 b 315 -657 318 -634 317 -645 z',\n        },\n        flag32ndDown: {\n            x_min: 0,\n            x_max: 273,\n            y_min: -172,\n            y_max: 812,\n            ha: 984,\n            o: 'm 393 973 b 333 1169 393 1002 383 1169 b 324 1168 330 1169 327 1169 b 304 1130 314 1164 304 1149 b 305 1120 304 1128 305 1125 b 334 962 317 1056 334 1011 b 289 821 334 922 323 880 b 0 619 180 625 88 622 l 0 -229 b 20 -248 0 -242 9 -248 b 48 -219 35 -248 46 -232 b 229 36 72 -69 154 -46 b 380 278 330 145 364 186 b 383 320 383 291 383 305 b 351 484 383 382 364 445 b 384 629 374 526 384 580 b 356 780 384 704 361 766 b 356 783 356 782 356 783 l 351 791 b 356 804 351 796 353 799 l 361 814 b 393 958 380 850 387 865 z m 56 386 b 217 609 86 501 153 533 b 292 706 246 642 269 670 b 304 711 295 710 300 711 b 321 703 311 711 320 707 b 328 670 325 693 325 681 b 331 634 330 658 331 645 b 82 367 331 516 199 367 l 75 367 b 56 386 62 367 56 379 z m 330 350 b 334 320 331 340 334 331 b 311 248 334 301 328 278 b 59 72 229 109 141 72 b 56 76 56 73 56 75 b 229 331 81 226 154 249 b 310 423 264 369 289 397 b 330 350 318 396 325 366 z',\n        },\n        flag64thUp: {\n            x_min: 0,\n            x_max: 261,\n            y_min: -812,\n            y_max: 347,\n            ha: 1159,\n            o: 'm 374 -969 b 337 -806 372 -913 359 -858 b 336 -796 336 -804 336 -801 b 337 -788 336 -793 336 -791 b 370 -616 340 -778 370 -698 b 340 -482 370 -570 360 -524 b 369 -330 353 -445 369 -386 b 337 -203 369 -287 359 -242 b 369 -43 350 -167 369 -104 b 366 -4 369 -30 367 -17 b 220 228 350 84 317 122 b 46 472 148 305 71 328 b 20 500 45 485 32 500 b 0 482 10 500 0 492 l 0 -609 l 7 -609 b 278 -802 91 -612 186 -615 b 323 -999 310 -865 323 -930 b 311 -1122 323 -1040 318 -1080 b 310 -1132 311 -1126 310 -1129 b 328 -1166 310 -1149 318 -1162 b 337 -1169 331 -1168 334 -1169 b 366 -1146 346 -1169 356 -1162 b 376 -1009 370 -1138 376 -1071 b 374 -969 376 -995 374 -982 z m 300 24 b 321 -45 315 -4 321 -26 b 317 -75 321 -56 318 -65 l 298 -145 b 220 -58 278 -121 253 -94 b 58 187 148 20 82 43 b 56 193 58 189 58 192 b 300 24 138 193 220 157 z m 300 -261 b 321 -330 315 -289 321 -311 b 317 -360 321 -341 318 -350 b 300 -423 314 -374 307 -399 b 220 -334 279 -397 253 -370 b 56 -92 150 -256 79 -232 b 300 -261 135 -92 220 -127 z m 315 -657 b 308 -690 312 -668 312 -680 b 292 -698 307 -694 300 -698 b 282 -693 288 -698 284 -697 b 216 -608 261 -661 240 -636 l 209 -600 b 55 -386 147 -527 84 -497 b 73 -367 52 -376 63 -367 b 318 -622 189 -367 318 -505 b 315 -657 318 -634 317 -645 z',\n        },\n        flag64thDown: {\n            x_min: 0,\n            x_max: 273,\n            y_min: -376,\n            y_max: 812,\n            ha: 1188,\n            o: 'm 393 973 b 333 1169 393 1002 383 1169 b 324 1168 330 1169 327 1169 b 304 1130 314 1164 304 1149 b 305 1120 304 1128 305 1125 b 334 962 317 1056 334 1011 b 289 821 334 922 323 880 b 0 619 180 625 88 622 l 0 -523 b 20 -541 0 -534 9 -541 b 48 -513 35 -541 46 -526 b 229 -258 72 -363 154 -340 b 380 -16 330 -148 364 -108 b 384 27 383 -1 384 13 b 351 189 384 88 366 151 b 380 278 366 216 374 243 b 383 320 383 291 383 305 b 351 484 383 382 364 445 b 384 629 374 526 384 580 b 356 780 384 704 361 766 b 356 783 356 782 356 783 l 351 791 b 356 804 351 796 353 799 l 361 814 b 393 958 380 850 387 865 z m 56 386 b 217 609 86 501 153 533 b 292 706 246 642 269 670 b 304 711 295 710 300 711 b 321 703 311 711 320 707 b 328 670 325 693 325 681 b 331 634 330 658 331 645 b 82 367 331 516 199 367 l 75 367 b 56 386 62 367 56 379 z m 330 350 b 334 320 331 340 334 331 b 311 248 334 301 328 278 b 59 72 229 109 141 72 b 56 76 56 73 56 75 b 229 331 81 226 154 249 b 310 423 264 369 289 397 b 330 350 318 396 325 366 z m 330 56 b 334 26 331 46 334 37 b 311 -46 334 7 328 -16 b 56 -222 229 -184 137 -222 b 229 36 75 -86 145 -55 b 311 128 264 73 289 102 z',\n        },\n        flag128thUp: {\n            x_min: 0,\n            x_max: 261,\n            y_min: -812,\n            y_max: 533,\n            ha: 1345,\n            o: 'm 374 -969 b 337 -806 372 -913 359 -858 b 336 -796 336 -804 336 -801 b 337 -788 336 -793 336 -791 b 370 -616 340 -778 370 -698 b 340 -482 370 -570 360 -524 b 369 -330 353 -445 369 -386 b 337 -203 369 -287 359 -242 b 369 -43 350 -167 369 -104 b 366 -4 369 -30 367 -17 b 341 75 360 26 353 50 b 369 222 354 111 369 167 b 366 264 369 236 369 251 b 220 495 350 351 317 390 b 46 740 148 573 71 596 b 22 768 45 753 35 768 b 0 750 10 768 0 760 l 0 -609 l 7 -609 b 278 -802 91 -612 186 -615 b 323 -999 310 -865 323 -930 b 311 -1122 323 -1040 318 -1080 b 310 -1132 311 -1126 310 -1129 b 328 -1166 310 -1149 318 -1162 b 337 -1169 331 -1168 334 -1169 b 366 -1146 346 -1169 356 -1162 b 376 -1009 370 -1138 376 -1071 b 374 -969 376 -995 374 -982 z m 300 292 b 321 223 315 264 321 242 b 317 193 321 212 318 203 b 301 135 314 180 308 158 b 220 228 281 161 255 190 b 55 461 151 304 79 327 b 300 292 134 461 220 426 z m 300 24 b 321 -45 315 -4 321 -26 b 317 -75 321 -56 318 -65 l 298 -145 b 220 -58 278 -121 253 -94 b 56 187 148 20 81 43 b 55 193 56 189 56 192 b 300 24 137 193 220 157 z m 300 -261 b 321 -330 315 -289 321 -311 b 317 -360 321 -341 318 -350 b 300 -423 314 -374 307 -399 b 220 -334 279 -397 253 -370 b 56 -92 150 -256 79 -232 b 300 -261 135 -92 220 -127 z m 315 -657 b 308 -690 312 -668 312 -680 b 292 -698 307 -694 300 -698 b 282 -693 288 -698 284 -697 b 216 -608 261 -661 240 -636 l 209 -600 b 55 -386 147 -527 84 -497 b 73 -367 53 -376 62 -367 b 318 -622 189 -367 318 -505 b 315 -657 318 -634 317 -645 z',\n        },\n        flag128thDown: {\n            x_min: 0,\n            x_max: 273,\n            y_min: -580,\n            y_max: 812,\n            ha: 1392,\n            o: 'm 393 973 b 333 1169 393 1002 383 1169 b 324 1168 330 1169 327 1169 b 304 1130 314 1164 304 1149 b 305 1120 304 1128 305 1125 b 334 962 317 1056 334 1011 b 289 821 334 922 323 880 b 0 619 180 625 88 622 l 0 -816 b 20 -835 0 -828 7 -835 b 48 -806 33 -835 46 -819 b 229 -552 72 -657 154 -634 b 380 -310 330 -442 364 -402 b 384 -266 383 -295 384 -281 b 351 -105 384 -206 366 -143 b 384 27 372 -66 384 -16 b 351 189 384 88 366 151 b 380 278 366 216 374 243 b 383 320 383 291 383 305 b 351 484 383 382 364 445 b 384 629 374 526 384 580 b 356 780 384 704 361 766 b 356 783 356 782 356 783 l 351 791 b 356 804 351 796 353 799 l 361 814 b 393 958 380 850 387 865 z m 56 386 b 217 609 86 501 153 533 b 292 706 246 642 269 670 b 304 711 295 710 300 711 b 321 703 311 711 320 707 b 328 670 325 693 325 681 b 331 634 330 658 331 645 b 82 367 331 516 199 367 l 75 367 b 56 386 62 367 56 379 z m 330 350 b 334 320 331 340 334 331 b 311 248 334 301 328 278 b 59 72 229 109 141 72 b 56 76 56 73 56 75 b 229 331 81 226 154 249 b 310 423 264 369 289 397 b 330 350 318 396 325 366 z m 330 56 b 334 26 331 46 334 37 b 311 -46 334 7 328 -16 b 56 -222 229 -184 137 -222 b 229 36 75 -86 145 -55 b 311 128 264 73 289 102 z m 330 -238 b 334 -268 331 -248 334 -256 b 311 -340 334 -287 328 -310 b 56 -516 229 -478 137 -516 b 229 -258 75 -380 145 -348 b 311 -166 264 -220 289 -192 z',\n        },\n        accidentalFlat: {\n            x_min: 0,\n            x_max: 226,\n            y_min: -175,\n            y_max: 439,\n            ha: 614,\n            o: 'm 17 -245 b 30 -252 22 -251 26 -252 b 39 -249 35 -252 39 -249 b 153 -161 82 -225 117 -186 b 325 82 281 -72 325 16 b 196 220 325 164 262 216 b 117 196 171 220 137 209 b 85 176 108 189 92 176 b 78 177 82 176 81 176 b 62 202 68 181 62 192 b 72 608 63 233 72 579 b 45 632 72 624 59 632 b 0 592 24 632 1 618 b 17 -245 0 592 6 -230 z m 68 -117 b 63 27 68 -117 63 -30 b 66 73 63 50 65 68 b 167 144 76 102 134 144 b 226 60 209 144 226 96 b 98 -134 226 -17 160 -95 b 84 -138 92 -137 88 -138 b 68 -117 71 -138 68 -124 z',\n        },\n        accidentalNatural: {\n            x_min: 0,\n            x_max: 168,\n            y_min: -335,\n            y_max: 341,\n            ha: 676,\n            o: 'm 203 261 b 197 259 200 261 199 259 b 68 226 197 259 105 226 b 53 233 59 226 53 228 l 53 474 b 36 491 53 484 45 491 l 17 491 b 0 474 7 491 0 484 l 0 -268 b 13 -281 0 -276 4 -281 l 16 -279 b 22 -278 17 -279 20 -279 b 164 -235 42 -269 122 -235 b 189 -251 179 -235 189 -239 l 189 -465 b 206 -482 189 -475 196 -482 l 225 -482 b 242 -465 233 -482 242 -475 l 242 258 b 230 269 242 265 236 269 b 225 268 229 269 226 269 z m 53 56 b 176 114 53 76 141 114 b 189 107 184 114 189 112 l 189 -42 b 71 -101 189 -68 107 -101 b 53 -92 60 -101 53 -98 z',\n        },\n        accidentalSharp: {\n            x_min: 0,\n            x_max: 249,\n            y_min: -348,\n            y_max: 350,\n            ha: 698,\n            o: 'm 341 170 b 359 194 351 174 359 186 l 359 297 b 348 308 359 304 354 308 b 341 307 346 308 344 308 b 305 294 341 307 312 295 b 285 312 295 294 285 301 l 285 488 b 265 504 285 497 276 504 b 242 488 251 504 242 497 l 242 301 b 223 259 240 287 236 268 b 132 223 206 249 157 229 b 115 252 120 223 115 240 l 115 425 b 95 441 115 433 105 441 b 72 425 81 441 72 433 l 72 230 b 55 192 72 210 63 196 b 17 176 46 187 17 176 b 0 153 7 173 0 161 l 0 50 b 13 37 0 42 4 37 l 16 39 b 50 53 17 39 39 48 l 52 55 b 72 29 63 55 72 40 l 72 -114 b 56 -147 72 -130 65 -143 b 17 -163 48 -150 17 -163 b 0 -186 7 -166 0 -177 l 0 -288 b 13 -301 0 -297 4 -301 l 16 -300 b 50 -287 17 -300 37 -291 b 55 -285 52 -285 53 -285 b 72 -308 65 -285 72 -301 l 72 -485 b 91 -501 72 -494 81 -501 b 115 -485 105 -501 115 -494 l 115 -285 b 130 -253 115 -266 122 -256 l 217 -217 b 219 -217 217 -217 219 -217 l 222 -216 b 242 -242 235 -216 242 -233 l 242 -422 b 261 -438 242 -431 251 -438 b 285 -422 276 -438 285 -431 l 285 -217 b 301 -184 285 -206 291 -189 b 341 -168 311 -180 341 -168 b 359 -144 351 -164 359 -153 l 359 -42 b 348 -30 359 -35 354 -30 b 341 -32 346 -30 344 -30 l 304 -46 b 285 -20 295 -46 285 -37 l 285 114 b 304 156 285 124 292 151 z m 242 -65 b 132 -122 233 -94 166 -122 b 115 -115 124 -122 117 -120 b 111 -43 112 -109 111 -78 b 115 63 111 1 112 52 b 220 118 118 88 184 118 b 242 109 230 118 239 115 b 248 27 245 102 248 66 b 242 -65 248 -12 245 -52 z',\n        },\n        accidentalDoubleSharp: {\n            x_min: 0,\n            x_max: 247,\n            y_min: -125,\n            y_max: 127,\n            ha: 252,\n            o: 'm 274 -46 b 206 1 258 -37 206 -9 b 274 50 206 22 253 43 b 278 50 275 50 276 50 l 287 49 b 346 63 304 49 331 52 b 356 115 353 71 356 92 b 292 183 356 174 351 183 b 233 173 266 183 240 180 b 226 117 228 168 226 143 b 179 49 219 101 196 49 b 130 117 158 49 135 96 b 118 173 130 141 125 167 b 66 183 112 180 89 183 b 7 173 42 183 16 180 b 0 120 3 170 0 145 b 7 63 0 94 3 68 b 68 49 17 55 43 49 b 82 50 73 49 78 50 b 150 3 98 42 150 13 b 84 -46 150 -16 104 -39 l 69 -46 b 7 -56 43 -46 16 -49 b 0 -111 3 -60 0 -85 b 7 -166 0 -137 3 -163 b 65 -180 17 -174 40 -180 b 118 -166 86 -180 109 -176 b 130 -111 127 -158 130 -134 b 132 -105 130 -109 131 -107 b 177 -45 141 -85 158 -45 b 226 -111 196 -45 220 -91 b 233 -166 226 -137 228 -161 b 291 -180 243 -174 266 -180 b 356 -114 346 -180 356 -166 b 346 -56 356 -89 351 -63 b 288 -46 338 -49 312 -46 z',\n        },\n        accidentalDoubleFlat: {\n            x_min: 0,\n            x_max: 411,\n            y_min: -175,\n            y_max: 437,\n            ha: 612,\n            o: 'm 452 217 b 384 194 426 217 408 207 b 350 176 374 189 363 176 b 343 177 347 176 344 176 b 328 202 333 180 328 190 b 337 606 328 232 337 579 b 310 629 337 622 324 629 b 265 592 291 629 268 616 b 269 194 265 592 266 395 b 196 217 248 209 223 217 l 187 217 b 120 194 160 217 143 207 b 85 176 108 189 98 176 b 78 177 82 176 81 176 b 62 202 68 180 62 190 b 72 606 62 232 72 579 b 45 629 72 622 59 629 b 0 592 24 629 1 616 b 17 -245 0 592 7 -232 b 30 -252 22 -251 26 -252 b 39 -249 35 -252 39 -249 b 153 -161 84 -226 120 -186 b 274 -50 206 -124 246 -85 b 284 -245 276 -158 279 -240 b 295 -252 288 -251 292 -252 b 304 -249 300 -252 304 -249 b 416 -163 348 -226 383 -186 b 592 82 546 -72 592 16 b 461 217 592 163 528 216 z m 96 -134 b 84 -138 92 -137 86 -138 b 68 -115 72 -138 68 -124 b 63 26 68 -115 63 -30 b 66 72 63 49 65 66 b 168 144 75 101 134 144 b 226 59 212 144 226 95 b 96 -134 226 -22 161 -94 z m 361 -134 b 348 -138 356 -137 351 -138 b 333 -115 337 -138 333 -124 b 328 39 333 -115 328 -16 b 330 72 328 55 328 68 b 433 144 338 101 399 144 b 468 130 448 144 459 140 b 490 59 481 112 490 88 b 361 -134 490 -22 426 -94 z',\n        },\n        accidentalParensLeft: {\n            x_min: 0,\n            x_max: 141,\n            y_min: -248,\n            y_max: 247,\n            ha: 495,\n            o: 'm 203 331 l 203 351 b 202 356 203 354 203 356 b 0 0 60 281 0 140 b 199 -357 0 -144 60 -269 b 203 -354 200 -357 203 -356 l 203 -333 b 200 -327 203 -330 202 -328 b 86 0 118 -253 86 -160 b 200 324 86 158 120 251 b 203 331 202 325 203 327 z',\n        },\n        accidentalParensRight: {\n            x_min: 0,\n            x_max: 141,\n            y_min: -248,\n            y_max: 247,\n            ha: 495,\n            o: 'm 0 331 b 3 324 0 327 1 325 b 117 0 84 251 117 158 b 3 -327 117 -160 85 -253 b 0 -333 1 -328 0 -330 l 0 -354 b 4 -357 0 -356 3 -357 b 203 0 143 -269 203 -144 b 1 356 203 140 143 281 b 0 351 0 356 0 354 z',\n        },\n        accidentalQuarterToneFlatStein: {\n            x_min: 1,\n            x_max: 227,\n            y_min: -175,\n            y_max: 439,\n            ha: 614,\n            o: 'm 310 -245 b 327 592 321 -230 327 592 b 282 632 325 618 302 632 b 255 608 268 632 255 624 b 265 202 255 579 264 233 b 249 177 265 192 259 181 b 242 176 246 176 245 176 b 210 196 235 176 219 189 b 131 220 190 209 156 220 b 1 85 65 216 1 164 b 174 -161 1 16 46 -72 b 288 -249 210 -186 245 -225 b 297 -252 288 -249 292 -252 b 310 -245 301 -252 305 -251 z m 259 -117 b 243 -138 259 -124 256 -138 b 229 -134 239 -138 235 -137 b 101 60 167 -95 101 -17 b 160 144 101 96 118 144 b 261 73 193 144 251 102 b 264 27 262 68 264 50 b 259 -117 264 -30 259 -117 z',\n        },\n        accidentalThreeQuarterTonesFlatZimmermann: {\n            x_min: 1,\n            x_max: 466,\n            y_min: -175,\n            y_max: 439,\n            ha: 614,\n            o: 'm 363 -245 b 376 -252 367 -251 372 -252 b 384 -249 380 -252 384 -249 b 497 -161 428 -226 464 -186 b 671 84 625 -72 671 16 b 541 220 671 164 606 217 b 513 217 531 220 523 219 b 464 196 495 212 480 206 b 431 176 452 189 442 176 b 423 177 428 176 426 176 b 408 202 413 180 408 190 l 419 608 b 392 632 419 625 406 632 b 346 592 372 632 347 618 b 363 -245 346 592 351 -230 z m 289 -249 b 297 -252 289 -249 292 -252 b 310 -245 300 -252 305 -251 b 328 592 321 -230 328 592 b 282 631 327 618 302 631 b 255 608 268 631 255 624 l 266 202 b 251 177 266 190 261 180 b 243 176 248 176 246 176 b 210 196 232 176 222 189 b 164 216 196 204 180 210 l 163 217 b 132 220 151 219 143 220 b 1 84 65 217 1 163 b 177 -163 1 16 48 -72 b 289 -249 210 -186 245 -226 z m 262 72 b 265 26 264 66 265 49 b 261 -115 265 -30 261 -115 b 245 -138 261 -124 258 -138 b 230 -134 240 -138 236 -137 b 102 60 166 -92 102 -20 b 124 128 102 88 111 112 b 161 144 134 138 147 144 b 199 134 173 144 184 141 b 262 72 219 122 256 92 z m 413 -115 b 409 26 413 -115 409 -30 b 412 72 409 49 410 66 b 514 144 420 102 480 144 b 570 60 557 144 570 96 b 442 -134 570 -23 508 -91 b 429 -138 436 -137 433 -138 b 413 -115 418 -138 413 -124 z',\n        },\n        accidentalQuarterToneSharpStein: {\n            x_min: 0,\n            x_max: 179,\n            y_min: -353,\n            y_max: 307,\n            ha: 660,\n            o: 'm 258 240 b 246 252 258 248 252 252 b 240 251 245 252 242 252 b 168 225 240 251 171 225 b 150 253 156 225 150 240 l 150 426 b 130 442 150 435 141 442 b 105 418 108 442 105 429 l 105 230 b 91 193 105 219 101 202 b 17 161 65 183 42 171 b 0 138 9 158 0 147 l 0 36 b 13 23 0 27 4 23 l 16 24 b 86 53 17 24 73 49 l 88 55 b 107 30 98 55 107 42 l 107 -114 b 92 -145 107 -130 101 -143 l 17 -177 b 0 -200 9 -180 0 -192 l 0 -302 b 13 -315 0 -311 4 -315 l 16 -314 b 85 -285 17 -314 72 -291 b 105 -312 92 -282 105 -301 l 105 -492 b 125 -508 105 -501 114 -508 b 150 -484 147 -508 150 -498 l 150 -285 b 151 -274 150 -281 150 -278 b 164 -253 153 -265 158 -256 b 240 -225 176 -251 240 -225 b 258 -202 249 -222 258 -210 l 258 -99 b 245 -86 258 -91 253 -86 l 242 -88 b 240 -88 242 -88 240 -88 l 240 -86 b 168 -115 240 -86 174 -114 b 148 -91 158 -115 148 -107 l 148 43 b 167 85 148 55 156 81 b 240 114 180 91 240 114 b 258 138 249 118 258 128 z',\n        },\n        accidentalThreeQuarterTonesSharpStein: {\n            x_min: 3,\n            x_max: 317,\n            y_min: -347,\n            y_max: 369,\n            ha: 716,\n            o: 'm 456 324 b 448 336 456 330 454 336 b 393 317 445 336 400 320 b 389 315 392 315 390 315 b 383 325 386 315 383 318 l 383 508 b 360 531 383 528 379 531 b 337 508 341 531 337 527 l 337 318 b 325 291 337 300 334 294 b 268 268 320 288 287 276 b 253 281 256 268 253 274 l 253 464 b 230 487 253 484 249 487 b 207 464 212 487 207 482 l 207 264 b 194 240 207 253 204 245 l 132 217 b 131 217 132 217 132 217 l 130 216 b 118 229 122 216 118 220 l 118 420 b 95 444 118 439 114 444 b 72 420 76 444 72 439 l 72 212 b 60 190 72 197 68 193 l 16 173 b 4 161 9 170 4 167 l 4 50 b 13 39 4 45 9 39 b 58 55 16 39 46 49 b 63 56 60 56 62 56 b 72 42 71 56 72 50 l 72 -125 b 58 -150 72 -137 65 -147 l 16 -166 b 4 -177 9 -168 4 -171 l 4 -289 b 14 -301 4 -295 9 -301 b 53 -287 16 -301 40 -291 b 62 -285 56 -285 59 -285 b 72 -298 69 -285 72 -289 l 72 -477 b 95 -500 72 -495 76 -500 b 118 -477 114 -500 118 -495 l 118 -278 b 127 -259 118 -269 121 -261 l 196 -232 b 207 -243 204 -232 207 -235 l 207 -432 b 230 -455 207 -452 212 -455 b 253 -432 249 -455 253 -451 l 253 -228 b 268 -204 253 -216 259 -207 l 320 -186 b 328 -183 323 -184 325 -183 b 337 -194 334 -183 337 -187 l 337 -387 b 360 -410 337 -408 341 -410 b 383 -387 379 -410 383 -406 l 383 -174 b 395 -157 383 -166 390 -158 l 445 -138 b 456 -127 452 -135 456 -132 l 456 -14 b 448 -3 456 -10 454 -3 b 397 -22 445 -3 408 -17 l 396 -23 b 383 -6 387 -23 383 -16 l 383 163 b 392 181 383 173 384 179 b 445 202 397 183 445 202 b 456 213 452 203 456 207 z m 337 -45 b 266 -78 333 -56 287 -78 b 258 -75 262 -78 259 -76 b 253 19 255 -71 253 -27 b 258 130 253 69 255 122 b 333 163 264 141 315 163 b 337 161 334 163 337 161 b 341 78 340 157 341 120 b 337 -45 341 24 340 -37 z m 118 -127 b 114 -48 114 -121 114 -86 b 118 78 114 6 115 68 b 200 114 122 91 180 114 b 207 111 204 114 206 112 b 212 22 210 107 212 66 b 207 -94 212 -29 210 -85 b 127 -130 203 -108 148 -130 b 118 -127 122 -130 120 -128 z',\n        },\n        accidentalBuyukMucennebFlat: {\n            x_min: 1,\n            x_max: 287,\n            y_min: -174,\n            y_max: 438,\n            ha: 612,\n            o: 'm 379 452 b 370 464 379 458 377 464 b 164 389 366 464 170 392 b 156 396 163 389 156 393 b 157 436 157 409 157 428 b 167 452 157 445 161 449 b 366 526 173 455 366 526 b 379 540 374 528 379 534 l 379 611 b 370 622 379 616 377 622 b 170 550 366 622 174 552 b 160 557 163 550 160 554 b 161 608 160 585 161 602 b 134 631 161 624 148 631 b 89 590 114 631 91 616 l 89 528 b 81 517 89 526 88 518 b 16 491 76 514 16 491 b 1 480 6 490 1 485 l 1 406 b 13 395 1 400 4 395 l 14 396 b 79 419 16 396 72 415 b 89 412 86 419 89 415 b 91 376 89 399 89 386 b 82 359 91 364 89 361 b 16 331 76 356 16 331 b 1 321 6 331 1 328 l 1 248 b 13 236 1 242 4 236 b 79 262 16 236 71 258 b 92 251 89 262 92 256 b 107 -242 95 23 101 -236 b 120 -251 111 -249 115 -251 b 128 -248 124 -251 128 -248 b 240 -160 171 -225 207 -184 b 413 84 367 -71 413 16 b 284 220 413 166 350 216 b 207 196 259 220 229 209 b 170 176 196 190 184 176 l 168 177 b 151 203 157 181 151 192 b 153 269 151 210 151 236 b 163 292 153 275 153 289 b 366 367 173 297 366 367 b 379 383 374 370 379 376 z m 186 -132 b 173 -137 180 -135 176 -137 b 157 -114 161 -137 157 -122 b 153 35 157 -114 153 -22 b 154 73 153 53 153 68 b 219 135 160 92 197 124 b 255 144 232 141 243 144 b 292 130 269 144 282 140 b 314 62 305 114 314 91 b 186 -132 314 -17 251 -94 z',\n        },\n        accidentalBakiyeFlat: {\n            x_min: -1,\n            x_max: 286,\n            y_min: -175,\n            y_max: 439,\n            ha: 614,\n            o: 'm 377 454 b 369 467 377 458 376 467 b 363 465 367 467 364 467 b 161 390 363 465 167 393 b 153 399 154 390 153 395 b 157 608 154 494 157 593 b 130 632 157 624 144 632 b 86 592 111 632 88 618 b 88 377 86 592 86 501 b 76 356 88 373 88 360 l 12 331 b -1 320 3 330 -1 327 l -1 248 b 9 236 -1 242 1 236 b 81 264 12 236 78 261 b 89 258 86 264 89 261 b 104 -245 92 30 96 -236 b 115 -252 108 -251 112 -252 b 124 -249 120 -252 124 -249 b 239 -161 167 -226 203 -186 b 412 84 367 -72 412 17 b 282 220 412 166 348 216 b 255 216 274 220 264 219 b 203 196 238 212 222 206 b 171 177 193 189 177 177 b 163 179 168 177 166 177 b 147 202 153 181 147 192 b 147 216 147 204 147 209 l 150 262 b 150 276 150 269 150 275 b 158 291 150 287 154 289 b 363 370 163 292 363 370 b 377 384 373 373 377 379 z m 181 -134 b 167 -138 176 -137 171 -138 b 153 -117 156 -138 153 -125 b 148 27 153 -117 148 -30 b 151 73 148 50 150 68 b 255 144 161 105 219 144 b 312 62 298 144 312 99 b 181 -134 312 -19 249 -96 z',\n        },\n        accidentalKomaSharp: {\n            x_min: 0,\n            x_max: 229,\n            y_min: -337,\n            y_max: 322,\n            ha: 659,\n            o: 'm 312 151 b 330 176 323 156 330 166 l 330 278 b 320 289 330 285 327 289 b 312 288 318 289 315 289 b 200 246 312 288 203 248 b 181 275 187 246 181 264 l 181 448 b 163 464 181 456 173 464 b 138 441 140 464 138 452 l 138 253 b 122 215 137 240 132 225 b 17 177 92 203 45 177 b 0 153 7 173 0 163 l 0 50 b 10 39 0 43 4 39 b 17 40 13 39 14 39 l 128 81 b 138 52 138 81 138 63 l 138 -91 b 124 -124 138 -107 132 -120 b 17 -167 115 -127 17 -167 b 0 -192 7 -171 0 -181 l 0 -294 b 10 -305 0 -301 4 -305 b 17 -304 13 -305 14 -305 b 128 -261 17 -304 117 -264 l 130 -259 b 138 -276 137 -259 138 -268 l 138 -469 b 157 -485 138 -478 147 -485 b 181 -462 179 -485 181 -475 l 181 -262 b 183 -252 181 -258 181 -255 b 197 -232 186 -243 190 -235 b 312 -187 207 -228 312 -187 b 330 -163 323 -183 330 -173 l 330 -60 b 320 -49 330 -53 327 -49 b 312 -50 318 -49 315 -49 l 200 -94 b 193 -95 197 -95 194 -95 b 181 -68 183 -95 181 -85 l 181 66 b 200 108 181 92 189 104 z',\n        },\n        accidentalKucukMucennebSharp: {\n            x_min: -1,\n            x_max: 339,\n            y_min: -338,\n            y_max: 321,\n            ha: 659,\n            o: 'm 264 92 b 271 102 264 98 265 99 l 395 150 b 412 174 405 154 412 164 l 412 276 b 402 288 412 284 409 288 b 395 287 400 288 397 288 b 282 245 395 287 285 246 b 264 274 269 245 264 262 l 264 446 b 245 462 264 455 255 462 b 220 439 222 462 220 451 l 220 252 b 204 213 219 239 215 223 b 99 176 174 202 127 176 b 82 151 89 171 82 161 l 82 49 b 92 37 82 42 86 37 b 99 39 95 37 96 37 l 210 79 b 216 81 212 81 215 81 b 220 78 219 81 220 79 l 220 56 b 216 46 220 52 220 48 b 16 -29 210 45 16 -29 b -1 -45 4 -32 -1 -36 l -1 -138 b 12 -154 -1 -145 3 -154 l 215 -79 b 220 -84 219 -79 220 -81 l 220 -105 b 210 -122 220 -115 219 -120 b 99 -168 202 -127 99 -168 b 82 -193 89 -173 82 -183 l 82 -295 b 92 -307 82 -302 86 -307 b 99 -305 95 -307 96 -307 b 210 -262 99 -305 199 -265 l 212 -261 b 220 -278 219 -261 220 -269 l 220 -471 b 239 -487 220 -480 229 -487 b 264 -464 261 -487 264 -477 l 264 -264 b 265 -253 264 -259 264 -256 b 279 -233 268 -245 272 -236 b 395 -189 289 -229 395 -189 b 412 -164 405 -184 412 -174 l 412 -62 b 402 -50 412 -55 409 -50 b 395 -52 400 -50 397 -50 l 278 -96 b 264 -86 268 -96 264 -94 l 264 -68 b 269 -59 264 -62 265 -60 b 471 17 274 -58 471 17 b 488 36 484 22 488 27 l 488 127 b 475 144 488 134 487 144 l 472 141 b 471 141 472 141 471 141 l 471 143 b 272 68 471 143 282 71 l 269 66 b 264 71 264 66 264 69 z',\n        },\n        accidentalKoron: {\n            x_min: 0,\n            x_max: 300,\n            y_min: -472,\n            y_max: 157,\n            ha: 629,\n            o: 'm 432 -4 b 415 10 432 1 418 9 l 4 226 b 0 223 1 226 0 225 l 0 -672 b 7 -680 0 -677 3 -680 l 45 -680 b 52 -672 49 -680 52 -677 l 52 -193 l 415 -22 b 432 -4 418 -20 432 -13 z m 52 -137 l 52 144 l 327 -7 z',\n        },\n        accidentalSori: {\n            x_min: 0,\n            x_max: 421,\n            y_min: -318,\n            y_max: 328,\n            ha: 646,\n            o: 'm 606 10 b 589 23 606 16 592 22 l 382 109 l 382 465 b 374 472 382 469 379 472 l 337 472 b 330 465 333 472 330 469 l 330 132 l 183 194 l 183 425 b 176 432 183 429 180 432 l 138 432 b 131 425 134 432 131 429 l 131 216 l 3 269 b 0 265 0 269 0 266 l 0 223 b 3 213 0 216 0 215 l 131 160 l 131 -150 l 3 -203 b 0 -212 0 -204 0 -206 l 0 -255 b 3 -259 0 -258 1 -259 l 131 -204 l 131 -451 b 138 -458 131 -455 134 -458 l 176 -458 b 183 -451 180 -458 183 -455 l 183 -183 l 330 -120 l 330 -410 b 337 -418 330 -415 333 -418 l 374 -418 b 382 -410 379 -418 382 -415 l 382 -98 l 589 -9 b 606 10 592 -9 606 0 z m 183 -128 l 183 138 l 330 76 l 330 -66 z m 382 -45 l 382 55 l 501 6 z',\n        },\n        articAccentAbove: {\n            x_min: 0,\n            x_max: 339,\n            y_min: 1,\n            y_max: 245,\n            ha: 244,\n            o: 'm 469 151 b 488 177 488 156 488 166 b 469 203 488 189 488 197 l 37 350 b 24 353 32 351 26 353 b 3 333 12 353 7 344 b 0 318 1 327 0 323 b 20 298 0 311 4 304 b 346 187 20 298 331 193 b 356 177 353 186 356 181 b 344 167 356 173 353 170 b 20 58 328 163 20 58 b 0 36 4 50 0 43 b 3 23 0 32 1 27 b 23 1 7 13 13 1 b 29 3 24 1 27 1 z',\n        },\n        articAccentBelow: {\n            x_min: 0,\n            x_max: 339,\n            y_min: -244,\n            y_max: 0,\n            ha: 244,\n            o: 'm 469 -202 b 488 -176 488 -197 488 -187 b 469 -150 488 -164 488 -156 l 37 -3 b 24 0 32 -1 26 0 b 3 -20 12 0 7 -9 b 0 -35 1 -26 0 -30 b 20 -55 0 -42 4 -49 b 346 -166 20 -55 331 -160 b 356 -176 353 -167 356 -171 b 344 -186 356 -180 353 -183 b 20 -295 328 -190 20 -295 b 0 -317 4 -302 0 -310 b 3 -330 0 -321 1 -325 b 23 -351 7 -340 13 -351 b 29 -350 24 -351 27 -351 z',\n        },\n        articTenutoAbove: {\n            x_min: -1,\n            x_max: 338,\n            y_min: 0,\n            y_max: 48,\n            ha: 48,\n            o: 'm 452 0 b 487 35 485 0 487 16 b 452 69 487 53 487 69 l 33 69 b -1 35 -1 69 -1 53 b 33 0 -1 16 -1 0 z',\n        },\n        articTenutoBelow: {\n            x_min: -1,\n            x_max: 338,\n            y_min: -48,\n            y_max: 0,\n            ha: 48,\n            o: 'm 452 -69 b 487 -35 485 -69 487 -53 b 452 0 487 -16 487 0 l 33 0 b -1 -35 -1 0 -1 -16 b 33 -69 -1 -53 -1 -69 z',\n        },\n        articStaccatoAbove: {\n            x_min: 0,\n            x_max: 84,\n            y_min: 0,\n            y_max: 84,\n            ha: 84,\n            o: 'm 121 60 b 60 121 121 94 94 121 b 0 60 27 121 0 94 b 60 0 0 27 27 0 b 121 60 94 0 121 27 z',\n        },\n        articStaccatoBelow: {\n            x_min: 0,\n            x_max: 84,\n            y_min: -84,\n            y_max: 0,\n            ha: 84,\n            o: 'm 121 -60 b 60 0 121 -27 94 0 b 0 -60 27 0 0 -27 b 60 -121 0 -94 27 -121 b 121 -60 94 -121 121 -94 z',\n        },\n        articStaccatissimoAbove: {\n            x_min: 1,\n            x_max: 100,\n            y_min: -2,\n            y_max: 293,\n            ha: 295,\n            o: 'm 72 422 b 1 390 35 422 3 409 b 72 -3 1 369 39 -3 b 144 389 108 -3 144 356 b 72 422 144 410 111 422 z',\n        },\n        articStaccatissimoBelow: {\n            x_min: 1,\n            x_max: 100,\n            y_min: -295,\n            y_max: 0,\n            ha: 295,\n            o: 'm 72 -425 b 144 -392 111 -425 144 -413 b 72 0 144 -359 108 0 b 1 -393 39 0 1 -372 b 72 -425 3 -412 35 -425 z',\n        },\n        articMarcatoAbove: {\n            x_min: -1,\n            x_max: 235,\n            y_min: -1,\n            y_max: 253,\n            ha: 254,\n            o: 'm 181 356 b 167 364 177 361 173 364 b 153 356 157 364 153 356 l 0 23 b -1 16 -1 20 -1 19 b 9 0 -1 9 1 1 b 16 -1 10 -1 14 -1 b 32 9 22 -1 29 1 b 112 186 32 9 109 180 b 118 190 114 189 115 190 b 127 186 121 190 124 189 b 209 9 128 180 209 9 b 225 0 213 3 219 0 l 323 0 b 338 16 333 1 338 7 b 337 23 338 19 338 22 z',\n        },\n        articMarcatoBelow: {\n            x_min: -1,\n            x_max: 235,\n            y_min: -254,\n            y_max: 0,\n            ha: 254,\n            o: 'm 156 -357 b 170 -366 160 -363 164 -366 b 184 -357 180 -366 184 -357 l 337 -24 b 338 -17 338 -22 338 -20 b 328 -1 338 -10 336 -3 b 321 0 327 0 323 0 b 305 -10 315 0 308 -3 b 225 -187 305 -10 228 -181 b 219 -192 223 -190 222 -192 b 210 -187 216 -192 213 -190 b 128 -10 209 -181 128 -10 b 112 -1 124 -4 118 -1 l 14 -1 b -1 -17 4 -3 -1 -9 b 0 -24 -1 -20 -1 -23 z',\n        },\n        fermataAbove: {\n            x_min: 3,\n            x_max: 605,\n            y_min: -3,\n            y_max: 329,\n            ha: 332,\n            o: 'm 435 318 b 818 36 742 318 804 91 b 821 26 819 32 819 27 b 851 -4 831 6 837 -4 b 871 16 864 -4 871 1 b 870 30 871 20 871 24 b 438 474 780 471 480 474 b 6 30 392 474 94 471 b 4 14 4 24 4 19 b 23 -4 4 0 12 -4 b 52 26 36 -4 43 6 b 56 39 53 27 55 33 b 435 318 73 98 138 318 z m 516 75 b 436 153 516 117 480 153 b 359 75 395 153 359 117 b 436 -4 359 32 395 -4 b 516 75 480 -4 516 32 z',\n        },\n        fermataBelow: {\n            x_min: 3,\n            x_max: 605,\n            y_min: -332,\n            y_max: 0,\n            ha: 332,\n            o: 'm 435 -323 b 56 -43 138 -323 73 -102 b 52 -30 55 -37 53 -32 b 23 0 43 -10 36 0 b 4 -19 12 0 4 -4 b 6 -35 4 -23 4 -29 b 438 -478 94 -475 392 -478 b 870 -35 480 -478 780 -475 b 871 -20 871 -29 871 -24 b 851 0 871 -6 864 0 b 821 -30 837 0 831 -10 b 818 -40 819 -32 819 -36 b 435 -323 804 -95 742 -323 z m 516 -79 b 436 0 516 -36 480 0 b 359 -79 395 0 359 -36 b 436 -157 359 -121 395 -157 b 516 -79 480 -157 516 -121 z',\n        },\n        breathMarkComma: {\n            x_min: 1,\n            x_max: 152,\n            y_min: 2,\n            y_max: 251,\n            ha: 249,\n            o: 'm 104 361 b 1 271 42 361 1 321 b 82 190 1 222 35 190 b 122 160 118 190 122 160 b 125 144 124 154 125 150 b 102 88 125 124 115 105 b 37 32 78 56 40 35 b 26 17 32 29 26 26 l 27 16 b 37 3 29 6 33 3 b 181 102 85 3 158 66 b 219 239 210 147 219 197 l 219 249 b 104 361 219 317 170 361 z',\n        },\n        breathMarkUpbow: {\n            x_min: 1,\n            x_max: 249,\n            y_min: 1,\n            y_max: 495,\n            ha: 494,\n            o: 'm 181 1 b 206 22 193 1 203 10 l 359 683 l 359 688 b 338 713 359 700 351 710 l 333 713 b 308 694 321 713 311 706 l 180 140 l 53 694 b 27 713 49 706 39 713 l 22 713 b 1 690 10 710 1 700 b 3 683 1 687 1 685 l 154 22 b 181 1 157 10 167 1 z',\n        },\n        caesura: {\n            x_min: 0,\n            x_max: 384,\n            y_min: -1,\n            y_max: 532,\n            ha: 533,\n            o: 'm 40 -1 b 78 26 58 -1 72 9 l 321 713 b 323 726 323 717 323 721 b 282 766 323 747 304 766 b 245 739 265 766 251 756 l 3 52 b 0 37 1 48 0 42 b 27 1 0 22 10 7 b 40 -1 32 -1 36 -1 z m 308 26 l 552 713 b 553 726 553 717 553 721 b 513 766 553 747 534 766 b 475 739 495 766 481 756 l 232 52 b 230 39 230 48 230 43 b 258 1 230 23 240 7 b 271 -1 262 -1 266 -1 b 308 26 287 -1 302 9 z',\n        },\n        caesuraCurved: {\n            x_min: 0,\n            x_max: 373,\n            y_min: 0,\n            y_max: 530,\n            ha: 530,\n            o: 'm 491 763 b 445 719 468 763 446 744 b 252 98 432 507 340 295 l 226 39 b 223 27 225 35 223 32 b 252 0 223 13 233 0 b 276 16 262 0 272 6 b 537 716 386 230 537 478 b 491 763 537 742 518 763 z m 29 0 b 53 16 39 0 48 6 l 82 69 b 314 716 187 264 314 498 b 268 763 314 742 295 763 b 222 719 245 763 223 744 b 29 98 209 507 117 295 l 3 39 b 0 29 1 36 0 33 b 29 0 0 14 12 0 z',\n        },\n        restMaxima: {\n            x_min: 0,\n            x_max: 381,\n            y_min: -249,\n            y_max: 250,\n            ha: 499,\n            o: 'm 180 -330 l 180 331 b 156 360 180 356 170 360 l 23 360 b 0 331 10 360 0 356 l 0 -330 b 23 -359 0 -354 10 -359 l 156 -359 b 180 -330 170 -359 180 -354 z m 549 -330 l 549 331 b 524 360 549 356 539 360 l 392 360 b 369 331 379 360 369 356 l 369 -330 b 392 -359 369 -354 379 -359 l 524 -359 b 549 -330 539 -359 549 -354 z',\n        },\n        restDoubleWhole: {\n            x_min: 0,\n            x_max: 125,\n            y_min: 0,\n            y_max: 250,\n            ha: 250,\n            o: 'm 180 22 l 180 338 b 156 360 180 350 170 360 l 23 360 b 0 338 10 360 0 350 l 0 22 b 23 0 0 10 10 0 l 156 0 b 180 22 170 0 180 10 z',\n        },\n        restWhole: {\n            x_min: 0,\n            x_max: 282,\n            y_min: -135,\n            y_max: 9,\n            ha: 144,\n            o: 'm 406 -157 l 406 -24 b 369 13 406 -3 389 13 l 37 13 b 0 -24 16 13 0 -3 l 0 -157 b 37 -194 0 -177 16 -194 l 369 -194 b 406 -157 389 -194 406 -177 z',\n        },\n        restHalf: {\n            x_min: 0,\n            x_max: 282,\n            y_min: -2,\n            y_max: 142,\n            ha: 144,\n            o: 'm 406 35 l 406 167 b 369 204 406 189 389 204 l 37 204 b 0 167 16 204 0 189 l 0 35 b 37 -3 0 14 16 -3 l 369 -3 b 406 35 389 -3 406 14 z',\n        },\n        restQuarter: {\n            x_min: 1,\n            x_max: 270,\n            y_min: -375,\n            y_max: 373,\n            ha: 748,\n            o: 'm 112 -55 b 174 -141 135 -84 156 -111 b 183 -161 177 -147 183 -158 b 181 -167 183 -163 183 -166 b 166 -174 179 -173 173 -174 b 143 -170 160 -174 148 -171 b 137 -170 141 -170 138 -170 l 125 -166 b 1 -304 50 -166 1 -233 b 168 -527 1 -376 63 -446 b 206 -540 180 -536 194 -540 b 228 -531 216 -540 226 -537 b 230 -521 229 -527 230 -524 b 207 -487 230 -508 219 -497 b 170 -435 189 -487 173 -448 b 164 -397 166 -423 164 -410 b 255 -292 164 -338 194 -292 b 369 -317 297 -292 344 -308 l 370 -318 b 382 -320 376 -320 379 -320 b 389 -314 386 -320 389 -318 b 336 -232 389 -297 351 -249 b 236 -32 281 -166 236 -112 b 236 -27 236 -30 236 -29 l 238 -17 b 238 -13 238 -16 238 -14 b 333 199 243 71 295 140 b 338 220 337 206 338 213 b 333 248 338 235 333 248 b 95 526 333 248 120 501 b 69 537 88 533 78 537 b 40 507 55 537 40 527 b 46 484 40 500 42 492 b 134 291 52 468 134 395 b 48 108 134 238 112 176 b 27 66 33 94 27 78 b 42 32 27 46 42 32 z',\n        },\n        rest8th: {\n            x_min: 0,\n            x_max: 247,\n            y_min: -251,\n            y_max: 174,\n            ha: 425,\n            o: 'm 193 154 b 96 251 193 207 150 251 b 0 154 43 251 0 207 b 39 81 0 124 17 98 b 117 56 62 65 89 56 b 173 66 137 56 157 60 b 225 88 193 72 206 78 b 232 89 228 89 230 89 b 239 76 238 89 239 84 b 238 60 239 72 239 66 b 104 -343 233 39 130 -248 b 145 -361 104 -360 137 -361 b 196 -347 161 -361 181 -359 b 341 161 200 -344 341 161 b 356 217 347 187 354 210 b 338 240 356 232 341 239 b 323 235 336 240 331 240 b 193 140 312 226 240 140 z',\n        },\n        rest16th: {\n            x_min: 0,\n            x_max: 320,\n            y_min: -500,\n            y_max: 179,\n            ha: 679,\n            o: 'm 300 160 b 202 258 300 215 256 258 b 104 160 148 258 104 215 b 219 62 104 101 164 62 b 331 94 258 62 298 75 b 341 96 336 95 338 96 b 348 86 346 96 348 94 b 265 -173 348 63 275 -151 b 194 -217 253 -200 215 -217 b 196 -203 196 -212 196 -207 b 98 -105 196 -148 151 -105 b 0 -203 43 -105 0 -148 b 115 -301 0 -262 60 -301 b 223 -271 153 -301 190 -288 b 229 -279 226 -271 229 -274 l 228 -281 b 228 -282 228 -282 228 -282 l 91 -690 b 91 -691 91 -690 91 -691 l 89 -693 b 134 -720 89 -706 102 -720 b 189 -687 176 -720 183 -703 l 356 -138 b 420 81 393 -16 420 81 b 459 226 420 81 456 207 b 461 232 459 229 461 230 b 446 248 461 240 449 246 b 431 242 439 248 435 245 b 300 145 420 233 348 147 z',\n        },\n        rest32nd: {\n            x_min: 0,\n            x_max: 363,\n            y_min: -500,\n            y_max: 426,\n            ha: 926,\n            o: 'm 508 603 b 492 598 501 603 497 600 b 361 503 482 590 410 503 l 361 516 b 264 613 361 570 318 613 b 166 516 210 613 166 570 b 206 444 166 487 183 461 b 246 423 217 433 232 428 b 284 418 258 420 269 418 b 393 449 321 418 360 432 b 399 451 395 451 397 451 b 415 426 409 451 415 436 l 413 423 b 413 422 413 423 413 422 l 357 192 b 279 140 350 168 302 140 b 281 153 281 144 281 148 b 183 251 281 207 236 251 b 85 153 128 251 85 207 b 125 81 85 124 102 98 b 164 60 137 71 150 65 b 203 55 176 58 189 55 b 311 86 240 55 278 69 b 315 88 312 88 314 88 b 325 69 323 88 325 76 l 268 -167 b 194 -217 261 -197 216 -216 b 196 -203 196 -212 196 -207 b 98 -105 196 -148 153 -105 b 0 -203 45 -105 0 -148 b 115 -301 0 -262 60 -301 b 228 -269 154 -301 194 -288 b 232 -268 229 -268 230 -268 b 240 -276 236 -268 240 -272 b 138 -688 240 -282 141 -678 b 137 -697 137 -691 137 -694 b 176 -720 137 -708 145 -720 b 232 -690 222 -720 226 -706 b 484 436 236 -672 484 436 b 521 582 484 436 518 564 b 523 588 521 585 523 586 b 508 603 523 600 511 603 z',\n        },\n        rest64th: {\n            x_min: 0,\n            x_max: 423,\n            y_min: -753,\n            y_max: 430,\n            ha: 1183,\n            o: 'm 596 609 b 580 603 589 609 585 606 b 448 507 569 595 497 507 b 449 521 449 511 449 516 b 351 619 449 575 405 619 b 253 521 297 619 253 575 b 372 422 253 461 317 422 b 481 454 410 422 446 438 b 491 456 484 455 488 456 b 504 441 498 456 504 451 b 501 426 504 436 503 432 b 445 202 500 422 451 217 b 359 144 435 174 383 144 l 359 158 b 261 256 359 212 315 256 b 163 158 207 256 163 212 b 243 65 163 112 202 78 b 279 60 255 62 266 60 b 397 91 320 60 360 73 b 403 92 400 92 402 92 b 412 79 409 92 412 86 b 410 72 412 76 412 75 b 351 -161 408 59 356 -150 b 281 -212 340 -199 301 -212 l 281 -197 b 183 -99 281 -144 238 -99 b 85 -197 130 -99 85 -144 b 125 -271 85 -228 102 -253 b 166 -291 138 -279 151 -287 b 204 -297 177 -294 192 -297 b 262 -287 225 -297 245 -292 b 305 -265 282 -279 287 -274 b 310 -264 307 -264 308 -264 b 318 -284 317 -264 318 -275 b 317 -295 318 -288 317 -294 b 259 -524 315 -302 265 -508 b 194 -567 251 -554 213 -567 b 196 -554 196 -563 196 -559 b 98 -456 196 -500 153 -456 b 0 -554 45 -456 0 -500 b 40 -626 0 -583 17 -609 b 118 -652 60 -644 92 -652 b 210 -629 145 -652 186 -642 b 216 -628 213 -628 215 -628 b 228 -647 226 -628 228 -639 l 226 -651 b 226 -652 226 -651 226 -652 l 122 -1054 b 121 -1064 121 -1058 121 -1061 b 167 -1084 121 -1077 134 -1084 b 215 -1060 202 -1084 209 -1076 b 402 -278 217 -1047 229 -1021 b 436 -135 403 -278 431 -161 l 570 441 b 609 588 570 441 605 569 b 596 609 609 603 602 608 z',\n        },\n        rest128th: {\n            x_min: 0,\n            x_max: 485,\n            y_min: -750,\n            y_max: 689,\n            ha: 1439,\n            o: 'm 537 894 b 439 992 537 949 494 992 b 341 894 386 992 341 949 b 382 822 341 865 359 840 b 459 796 402 805 433 796 b 518 806 480 796 501 801 l 520 808 b 569 828 539 814 552 819 b 580 831 572 829 577 831 b 598 812 589 831 598 825 b 596 801 598 809 598 805 b 540 575 590 773 546 595 b 448 510 534 553 475 510 l 448 524 b 350 622 448 577 405 622 b 252 524 297 622 252 577 b 292 451 252 494 269 468 b 369 426 318 433 337 426 b 429 435 389 426 412 429 b 494 464 449 442 475 455 b 498 465 495 465 497 465 b 505 446 504 465 505 456 b 503 426 505 439 504 432 l 446 202 b 366 144 439 173 389 144 l 366 158 b 268 256 366 212 323 256 b 170 158 215 256 170 212 b 289 59 170 98 235 59 b 347 69 310 59 330 63 b 397 91 367 76 379 82 b 406 94 400 92 403 94 b 415 79 412 94 415 88 b 412 63 415 75 413 69 b 357 -157 408 42 364 -134 b 281 -212 346 -196 302 -212 b 282 -197 281 -207 282 -203 b 184 -99 282 -144 238 -99 b 86 -197 130 -99 86 -144 b 204 -297 86 -258 150 -297 b 262 -287 225 -297 245 -292 b 312 -265 282 -279 294 -274 b 318 -264 314 -264 317 -264 b 327 -275 324 -264 327 -269 b 266 -517 324 -287 278 -490 b 200 -569 248 -566 220 -567 l 196 -554 b 98 -456 196 -500 153 -456 b 0 -554 45 -456 0 -500 b 118 -652 0 -615 63 -652 b 177 -642 138 -652 160 -648 l 179 -641 b 229 -621 197 -635 210 -629 l 230 -619 b 239 -626 236 -619 239 -622 b 238 -632 239 -628 239 -631 b 131 -1057 235 -642 134 -1050 b 173 -1080 131 -1071 140 -1080 b 230 -1057 219 -1080 225 -1074 l 658 815 b 697 960 658 815 694 942 b 698 966 697 963 698 965 b 684 982 698 975 687 981 b 668 976 677 982 672 979 b 537 880 658 969 586 881 z',\n        },\n        dynamicPiano: {\n            x_min: -89,\n            x_max: 366,\n            y_min: -142,\n            y_max: 274,\n            ha: 416,\n            o: 'm 395 395 b 292 357 350 395 318 380 b 262 328 272 340 268 328 b 246 363 255 328 259 338 b 177 393 236 380 215 393 b 1 251 92 393 46 333 b -9 223 -6 238 -9 230 b 7 207 -9 213 -1 207 b 30 229 17 207 23 216 b 127 338 72 301 101 338 b 143 321 138 338 143 331 b 134 285 143 310 138 295 l -43 -154 b -65 -168 -48 -166 -50 -168 l -109 -168 b -128 -187 -122 -168 -128 -174 b -111 -204 -128 -199 -122 -204 l 167 -204 b 186 -186 180 -204 186 -199 b 168 -168 186 -174 180 -168 l 111 -168 b 98 -164 102 -168 98 -168 b 101 -154 98 -163 99 -158 l 166 7 b 179 24 168 14 171 24 b 213 -1 186 24 190 10 b 276 -14 233 -12 252 -14 b 527 266 415 -14 527 130 b 395 395 527 350 475 395 z m 356 341 b 389 288 380 341 389 320 b 243 35 389 217 312 35 b 207 81 219 35 207 50 b 235 180 207 111 219 140 l 264 251 b 356 341 284 300 321 341 z',\n        },\n        dynamicMezzo: {\n            x_min: -20,\n            x_max: 446,\n            y_min: -10,\n            y_max: 274,\n            ha: 284,\n            o: 'm 528 395 b 431 350 487 395 454 374 b 409 330 416 336 415 330 b 397 360 402 330 406 341 b 334 395 389 379 370 395 b 236 350 292 395 259 374 b 215 330 222 336 220 330 b 203 360 207 330 212 340 b 147 393 194 379 174 393 b -19 251 71 393 26 331 b -29 223 -26 238 -29 230 b -13 207 -29 213 -22 207 b 9 226 -3 207 1 215 b 107 338 52 300 81 338 b 122 321 118 338 122 331 b 114 285 122 310 118 295 l 9 24 b 4 9 6 17 4 13 b 20 0 4 3 9 0 l 91 0 b 114 17 104 0 108 3 l 207 251 b 287 323 225 292 255 323 b 308 302 304 323 308 314 b 294 249 308 285 302 269 b 203 24 294 248 292 248 b 199 9 200 17 199 13 b 215 0 199 3 203 0 l 285 0 b 308 17 298 0 302 3 l 402 251 b 481 323 419 292 449 323 b 503 302 498 323 503 314 b 413 43 503 252 413 104 b 478 -14 413 6 436 -14 b 629 102 533 -14 583 26 b 642 132 638 117 642 125 b 629 145 642 141 636 145 b 608 127 619 145 615 138 b 534 49 580 84 553 49 b 523 62 526 49 523 53 b 606 317 523 112 606 238 b 528 395 606 353 588 395 z',\n        },\n        dynamicForte: {\n            x_min: -141,\n            x_max: 364,\n            y_min: -152,\n            y_max: 444,\n            ha: 596,\n            o: 'm 23 380 b 0 357 7 380 0 373 b 22 336 0 343 7 336 l 105 336 b 117 330 114 336 117 336 b 114 315 117 327 115 323 l 23 0 b -101 -187 -17 -141 -43 -187 b -127 -174 -120 -187 -127 -181 b -92 -156 -127 -163 -114 -170 b -63 -102 -75 -144 -63 -125 b -128 -43 -63 -65 -89 -43 b -203 -122 -171 -43 -203 -78 b -95 -219 -203 -186 -156 -219 b 161 17 14 -219 82 -145 b 269 317 203 105 235 194 l 271 318 b 289 336 271 323 282 336 l 383 336 b 406 359 399 336 406 343 b 384 380 406 373 399 380 l 298 380 b 284 387 288 380 284 380 b 287 405 284 392 285 396 b 419 606 315 530 347 606 b 442 595 431 606 442 603 b 419 580 442 586 435 588 b 389 526 400 572 389 552 b 454 465 389 485 418 465 b 524 543 491 465 524 490 b 400 639 524 596 491 639 b 135 402 261 639 183 540 b 107 380 128 380 127 380 z',\n        },\n        dynamicRinforzando: {\n            x_min: -20,\n            x_max: 277,\n            y_min: 0,\n            y_max: 274,\n            ha: 274,\n            o: 'm 324 395 b 235 350 287 395 256 374 b 215 330 222 336 220 330 b 203 360 207 330 213 337 b 145 393 194 379 174 393 b -19 251 75 393 27 337 b -29 223 -26 238 -29 230 b -13 207 -29 213 -22 207 b 9 226 -3 207 3 215 b 107 338 52 301 81 338 b 122 321 118 338 122 331 b 114 285 122 310 118 295 l 9 24 b 4 9 6 17 4 13 b 20 0 4 3 9 0 l 91 0 b 114 17 104 0 108 3 l 207 251 b 304 351 226 298 272 351 b 318 343 312 351 318 348 b 287 285 318 330 287 325 b 338 239 287 256 308 239 b 399 318 373 239 399 268 b 324 395 399 360 377 395 z',\n        },\n        dynamicSforzando: {\n            x_min: 0,\n            x_max: 229,\n            y_min: -10,\n            y_max: 273,\n            ha: 283,\n            o: 'm 212 393 b 68 274 127 393 68 350 b 145 161 68 223 95 196 b 200 85 187 132 200 114 b 127 20 200 53 173 20 b 66 42 91 20 66 32 b 91 56 66 49 75 46 b 111 98 104 65 111 79 b 59 145 111 127 86 145 b 0 78 24 145 0 117 b 125 -14 0 30 49 -14 b 291 120 219 -14 291 36 b 220 232 291 160 276 190 b 151 314 168 271 151 287 b 213 361 151 337 168 361 b 258 346 238 361 258 356 b 240 333 258 340 251 340 b 226 298 232 325 226 314 b 276 252 226 269 248 252 b 330 307 311 252 330 279 b 212 393 330 360 285 393 z',\n        },\n        dynamicZ: {\n            x_min: -30,\n            x_max: 244,\n            y_min: -10,\n            y_max: 268,\n            ha: 278,\n            o: 'm 333 386 b 298 377 321 386 314 382 b 239 370 282 373 259 370 b 94 383 153 370 111 383 b 68 364 79 383 72 377 l 33 264 b 29 242 30 255 29 248 b 45 228 29 232 36 228 b 66 249 55 228 60 236 l 81 279 b 96 297 85 288 88 297 b 168 292 102 297 127 292 b 223 302 194 292 215 302 b 196 269 229 302 197 271 l -26 45 b -43 16 -37 33 -43 27 b -24 -1 -43 6 -36 -1 b 4 16 -12 -1 -3 10 b 39 30 16 24 27 30 b 179 -14 79 30 108 -14 b 297 102 259 -14 297 43 b 245 166 297 147 271 166 b 197 115 219 166 197 145 b 236 72 197 88 216 72 b 259 79 251 72 255 79 b 264 75 262 79 264 78 b 258 60 264 72 261 66 b 229 45 252 50 242 45 b 117 95 186 45 173 95 b 85 86 98 95 89 86 b 102 111 85 86 95 104 l 333 338 b 351 370 344 350 351 359 b 333 386 351 380 343 386 z',\n        },\n        ornamentTrill: {\n            x_min: 0,\n            x_max: 521,\n            y_min: -10,\n            y_max: 390,\n            ha: 400,\n            o: 'm 383 562 b 364 557 377 562 369 559 l 294 534 b 269 511 281 530 275 526 l 217 384 b 206 367 212 370 210 367 b 179 380 200 367 192 374 b 118 393 158 389 140 393 b 0 292 50 393 0 353 b 95 210 0 248 30 210 b 140 213 112 210 131 213 b 144 209 143 213 144 212 b 140 194 144 206 143 202 l 124 156 b 96 58 108 117 96 88 b 179 -14 96 17 124 -14 b 325 153 253 -14 325 46 b 307 251 325 187 320 219 b 302 265 304 258 302 261 b 334 294 302 274 311 281 l 343 298 b 455 348 393 328 428 348 b 474 327 468 348 474 344 b 465 285 474 312 469 295 l 360 24 b 356 9 357 17 356 13 b 372 0 356 3 360 0 l 442 0 b 465 17 455 0 459 3 l 559 251 b 655 351 577 298 624 351 b 670 343 664 351 670 348 b 638 285 670 330 638 325 b 690 239 638 256 660 239 b 750 318 724 239 750 268 b 675 395 750 360 729 395 b 586 350 638 395 608 374 b 566 330 573 336 572 330 b 553 361 559 330 564 340 b 490 393 543 380 521 393 b 347 348 432 393 377 364 b 312 333 328 338 320 333 b 308 337 310 333 308 334 b 315 359 308 343 312 351 l 387 537 b 392 553 390 544 392 549 b 383 562 392 559 389 562 z m 118 360 b 192 325 134 360 192 347 b 186 307 192 321 189 314 l 180 292 b 148 265 173 274 167 269 b 98 258 130 261 112 258 b 39 301 50 258 39 281 b 118 360 39 327 60 360 z m 272 240 b 292 151 285 240 292 164 b 212 30 292 88 253 30 b 196 48 200 30 196 37 b 207 92 196 59 202 78 b 264 230 207 94 209 94 b 272 240 266 238 268 240 z',\n        },\n        ornamentTurn: {\n            x_min: 0,\n            x_max: 460,\n            y_min: 0,\n            y_max: 218,\n            ha: 218,\n            o: 'm 534 314 b 454 251 490 314 454 294 b 505 199 454 219 475 199 b 579 232 547 199 549 232 b 626 164 603 232 626 202 b 533 72 626 102 583 72 b 377 180 487 72 439 111 b 150 312 307 258 243 312 b 0 148 55 312 0 240 b 128 0 0 45 66 0 b 209 63 173 0 209 20 b 157 115 209 95 187 115 b 84 82 115 115 114 82 b 36 150 59 82 36 112 b 130 242 36 212 79 242 b 285 134 176 242 223 203 b 513 1 356 56 419 1 b 662 166 608 1 662 73 b 534 314 662 269 596 314 z',\n        },\n        ornamentTurnSlash: {\n            x_min: 0,\n            x_max: 460,\n            y_min: -90,\n            y_max: 306,\n            ha: 396,\n            o: 'm 333 441 b 310 418 315 441 310 433 l 310 274 b 302 252 310 258 308 252 b 261 278 294 252 287 262 b 150 311 228 298 192 311 b 0 147 55 311 0 239 b 128 -1 0 43 66 -1 b 209 62 173 -1 209 19 b 157 114 209 94 187 114 b 84 81 115 114 114 81 b 36 148 59 81 36 111 b 130 240 36 210 79 240 b 285 128 176 240 222 197 b 307 79 304 108 307 105 l 307 -107 b 330 -130 307 -122 312 -130 b 353 -107 347 -130 353 -122 l 353 37 b 360 59 353 53 353 59 b 402 33 369 59 376 49 b 513 0 435 13 471 0 b 662 164 608 0 662 72 b 534 312 662 268 596 312 b 454 249 490 312 454 292 b 505 197 454 217 475 197 b 579 230 547 197 549 230 b 626 163 603 230 626 200 b 533 71 626 101 583 71 b 377 183 487 71 441 114 b 356 232 359 203 356 206 l 356 418 b 333 441 356 433 350 441 z',\n        },\n        ornamentMordent: {\n            x_min: 1,\n            x_max: 729,\n            y_min: -73,\n            y_max: 319,\n            ha: 392,\n            o: 'm 546 265 l 546 459 l 501 459 l 501 216 l 459 167 b 439 167 454 160 445 160 b 302 327 387 228 310 317 b 258 353 291 338 282 351 b 226 340 245 353 238 348 l 20 107 b 1 73 12 98 1 84 b 30 59 1 65 9 59 b 88 94 53 59 73 79 b 144 143 107 109 124 127 b 176 161 158 154 168 161 b 197 144 183 161 189 156 l 323 10 b 351 0 328 3 340 0 b 377 9 361 0 372 3 b 498 114 392 17 475 94 l 498 -105 l 544 -105 l 544 153 b 562 160 550 157 556 160 b 585 144 569 160 576 156 b 710 10 590 135 697 24 b 737 0 716 3 727 0 b 765 9 749 0 759 3 b 1030 295 776 17 1011 274 l 1032 300 b 1050 328 1041 308 1050 318 b 1012 353 1050 343 1024 353 b 986 343 1002 353 994 348 b 854 190 971 330 871 206 b 828 176 842 180 835 176 b 802 190 818 176 809 183 b 681 333 791 202 696 320 b 645 353 668 344 657 353 b 613 340 634 353 626 350 b 580 304 600 330 590 315 z',\n        },\n        ornamentShortTrill: {\n            x_min: 0,\n            x_max: 725,\n            y_min: 0,\n            y_max: 245,\n            ha: 245,\n            o: 'm 429 167 l 301 325 b 256 353 291 338 282 350 b 225 340 246 353 238 350 b 16 105 158 268 88 186 b 0 72 9 96 0 86 b 29 58 0 63 7 58 b 71 76 42 58 55 62 l 158 154 b 174 160 163 158 168 160 b 197 143 181 160 187 154 b 321 10 203 135 310 24 b 350 0 327 3 338 0 b 377 7 361 0 372 3 l 533 148 b 554 160 543 158 550 160 b 577 143 562 160 566 156 b 703 10 585 135 690 24 b 732 0 708 3 720 0 b 759 7 743 0 753 3 b 1024 294 769 16 1005 272 b 1044 327 1032 305 1044 321 b 1005 353 1044 341 1018 353 b 979 343 996 353 988 348 b 848 189 963 330 864 204 b 821 174 837 179 828 174 b 796 189 811 174 804 181 b 674 331 783 202 688 318 b 641 351 662 343 651 351 b 606 340 628 351 619 350 b 573 304 593 328 583 315 b 444 167 533 259 491 213 b 429 167 439 161 433 161 z',\n        },\n        ornamentTremblement: {\n            x_min: 1,\n            x_max: 985,\n            y_min: 0,\n            y_max: 244,\n            ha: 244,\n            o: 'm 678 325 b 634 351 667 338 657 350 b 602 338 621 351 613 348 l 448 167 b 439 167 446 164 441 164 l 302 325 b 258 351 291 338 281 350 b 228 338 245 351 238 348 b 193 304 215 328 204 315 l 19 107 b 1 72 13 96 1 76 b 30 58 1 63 9 58 b 89 92 52 58 73 78 l 144 141 b 148 144 145 143 147 143 b 176 160 160 153 170 160 b 199 143 183 160 189 154 b 324 10 204 134 311 23 b 351 0 330 3 340 0 b 379 7 363 0 373 3 l 530 148 b 552 160 536 154 546 160 b 575 143 559 160 564 154 b 698 10 580 134 687 23 b 727 0 704 3 716 0 b 755 7 739 0 749 3 l 907 147 b 930 160 922 158 923 160 b 952 143 937 160 943 154 l 1077 10 b 1107 0 1084 3 1096 0 b 1133 7 1117 0 1128 3 b 1398 294 1143 16 1380 272 b 1418 327 1407 305 1418 321 b 1381 351 1418 343 1394 351 b 1354 341 1371 351 1362 348 b 1223 189 1338 328 1238 204 b 1195 174 1211 179 1202 174 b 1171 189 1185 174 1178 181 b 1048 331 1158 200 1063 318 b 1012 351 1035 343 1024 351 b 981 338 1002 351 994 350 b 948 304 968 328 958 315 b 827 166 907 258 865 212 b 815 166 824 163 818 163 b 678 325 760 226 732 264 z',\n        },\n        ornamentPrecompAppoggTrill: {\n            x_min: 0,\n            x_max: 1119,\n            y_min: 0,\n            y_max: 481,\n            ha: 481,\n            o: 'm 1015 163 b 873 328 963 223 880 318 b 828 354 860 344 847 353 b 796 341 816 354 809 351 b 763 305 783 331 773 317 b 642 168 721 261 681 215 b 636 163 641 167 639 164 b 494 328 585 223 501 318 b 449 354 481 344 468 353 b 418 341 438 354 431 351 b 384 305 405 331 395 317 b 264 168 343 261 302 215 l 242 144 b 144 88 232 124 171 88 b 79 197 81 88 79 189 l 79 648 b 60 693 79 683 71 693 b 52 691 58 693 55 693 b 0 616 3 672 0 625 l 0 207 b 121 0 0 40 68 0 b 249 68 168 0 232 53 b 279 94 262 75 271 86 b 336 144 298 111 315 128 b 367 163 350 156 360 163 b 389 145 374 163 380 157 b 514 12 395 137 501 26 b 543 1 520 4 531 1 b 569 9 553 1 563 4 b 636 73 576 14 605 43 l 658 94 b 714 144 677 111 694 128 b 746 163 729 156 739 163 b 768 145 753 163 759 157 b 893 12 773 137 880 26 b 922 1 899 4 910 1 b 948 9 932 1 942 4 l 1012 71 b 1037 94 1022 78 1030 86 b 1092 144 1054 111 1073 128 b 1123 161 1106 156 1115 161 b 1146 145 1130 161 1136 157 b 1270 12 1152 137 1259 26 b 1299 1 1276 4 1287 1 b 1326 9 1310 1 1320 4 b 1591 297 1336 19 1572 275 b 1611 328 1600 307 1611 320 b 1574 354 1611 343 1585 354 b 1548 344 1565 354 1555 350 b 1416 192 1532 331 1431 206 b 1388 177 1404 181 1395 177 b 1365 190 1380 177 1371 184 b 1243 333 1352 203 1256 321 b 1205 354 1228 346 1217 354 b 1174 341 1195 354 1187 351 b 1140 305 1161 330 1152 317 z',\n        },\n        ornamentPrecompSlideTrillDAnglebert: {\n            x_min: 2,\n            x_max: 1150,\n            y_min: -367,\n            y_max: 245,\n            ha: 612,\n            o: 'm 1058 160 b 916 327 1007 220 923 317 b 871 353 903 343 890 351 b 840 340 860 353 852 350 b 806 304 827 330 816 315 b 685 167 765 259 724 213 l 680 160 l 615 235 b 419 344 582 275 523 344 b 3 -144 258 344 3 26 b 4 -168 3 -153 3 -160 b 246 -482 24 -315 99 -422 b 458 -528 340 -521 410 -528 b 514 -526 485 -528 504 -526 b 552 -508 531 -526 552 -517 b 514 -497 552 -503 541 -498 l 503 -497 b 194 -390 432 -494 298 -488 b 69 -151 194 -390 69 -279 b 184 96 69 -60 128 27 b 328 183 202 118 258 183 b 477 96 413 183 454 118 b 559 10 510 62 552 19 b 588 0 566 3 576 0 b 613 7 598 0 609 3 b 723 112 622 14 681 73 b 789 161 733 122 776 161 b 811 144 796 161 802 156 b 936 10 816 135 923 24 b 965 0 942 3 953 0 b 991 7 975 0 985 3 b 1051 66 996 12 1022 37 b 1081 92 1063 73 1073 84 b 1136 143 1099 109 1117 127 b 1168 160 1151 154 1159 160 b 1191 144 1175 160 1181 156 b 1315 10 1197 135 1303 24 b 1344 0 1320 3 1332 0 b 1371 7 1355 0 1365 3 b 1636 295 1381 17 1617 274 b 1656 327 1644 305 1656 318 b 1619 353 1656 341 1630 353 b 1593 343 1610 353 1600 348 b 1460 190 1577 330 1476 204 b 1433 176 1449 180 1440 176 b 1410 189 1424 176 1416 183 b 1287 331 1397 202 1300 320 b 1250 353 1273 344 1261 353 b 1218 340 1240 353 1231 350 b 1185 304 1205 328 1197 315 z',\n        },\n        ornamentPrecompSlideTrillBach: {\n            x_min: 0,\n            x_max: 1048,\n            y_min: -367,\n            y_max: 331,\n            ha: 698,\n            o: 'm 1038 477 l 979 477 l 979 238 l 912 160 b 769 327 858 220 775 317 b 724 353 756 343 743 351 b 693 340 713 353 706 350 b 660 304 680 330 670 315 b 539 167 618 259 577 213 b 533 161 536 166 534 163 b 390 327 480 220 396 317 b 346 353 377 343 364 351 l 340 353 b 308 340 330 353 321 350 b 275 304 295 330 285 315 b 117 122 220 243 168 186 b 0 -144 68 62 0 -48 b 1 -168 0 -153 0 -160 b 243 -482 22 -315 96 -422 b 455 -528 337 -521 408 -528 b 511 -526 482 -528 501 -526 b 549 -508 528 -526 549 -517 b 511 -497 549 -503 539 -498 l 500 -497 b 192 -390 429 -494 295 -488 b 68 -177 192 -390 84 -298 b 66 -151 66 -168 66 -160 b 189 105 66 -58 127 35 b 232 143 203 118 216 131 b 264 161 246 154 256 161 b 285 144 271 161 276 156 b 410 10 291 135 397 24 b 439 0 416 3 428 0 b 465 7 449 0 459 3 l 531 72 b 554 92 540 78 547 86 b 611 143 573 109 590 127 b 642 161 625 154 635 161 b 664 144 649 161 655 156 b 789 10 670 135 776 24 b 818 0 795 3 806 0 b 844 7 828 0 838 3 b 904 66 850 12 876 37 b 935 92 916 73 924 84 b 979 134 949 107 963 121 l 979 -88 l 1037 -88 l 1037 151 l 1044 144 b 1168 10 1050 135 1156 24 b 1197 0 1174 3 1185 0 b 1224 7 1208 0 1218 3 b 1489 295 1234 17 1470 274 b 1509 327 1498 305 1509 318 b 1472 353 1509 341 1483 353 b 1446 343 1463 353 1453 348 b 1313 190 1430 330 1329 204 b 1286 176 1302 180 1293 176 b 1263 189 1277 176 1269 183 b 1140 331 1250 202 1153 320 b 1103 353 1126 344 1115 353 b 1071 340 1093 353 1084 350 b 1038 304 1058 328 1050 315 z',\n        },\n        ornamentPrecompTrillSuffixDandrieu: {\n            x_min: 0,\n            x_max: 949,\n            y_min: 0,\n            y_max: 381,\n            ha: 381,\n            o: 'm 1367 314 b 1250 521 1367 419 1318 482 b 1107 549 1211 537 1145 549 b 1083 546 1096 549 1087 549 b 1066 528 1071 540 1066 534 b 1079 520 1066 524 1070 520 b 1323 351 1187 517 1323 487 b 1201 171 1323 269 1260 219 b 1194 166 1201 171 1198 168 b 1056 327 1142 226 1063 317 b 1011 353 1043 343 1030 351 b 979 340 999 353 992 350 b 946 304 966 330 956 315 b 825 167 904 259 864 213 l 821 161 b 678 327 768 222 685 317 b 634 353 665 343 652 351 b 602 340 622 353 615 350 b 569 304 589 330 579 315 b 448 167 527 259 487 213 l 444 161 b 301 327 390 222 308 317 b 256 353 288 343 275 351 b 225 340 245 353 238 350 b 192 304 212 330 202 315 b 71 167 150 259 109 213 b 17 105 52 147 36 127 b 0 73 10 98 0 84 b 29 58 0 65 7 58 b 86 92 56 59 72 79 b 143 143 105 109 122 127 b 174 161 157 154 167 161 b 196 144 181 161 187 156 b 321 10 202 135 308 24 b 350 0 327 3 338 0 b 376 7 360 0 370 3 b 485 112 384 14 444 73 b 552 161 495 122 539 161 b 573 144 559 161 564 156 b 698 10 579 135 685 24 b 727 0 704 3 716 0 b 753 7 737 0 747 3 b 863 112 762 14 821 73 b 929 161 873 122 916 161 b 950 144 936 161 942 156 b 1076 10 956 135 1063 24 b 1104 0 1081 3 1093 0 b 1130 7 1115 0 1125 3 b 1236 108 1139 14 1195 69 b 1367 314 1297 160 1367 233 z',\n        },\n        ornamentPrecompDoubleCadenceUpperPrefix: {\n            x_min: 0,\n            x_max: 1278,\n            y_min: 0,\n            y_max: 247,\n            ha: 247,\n            o: 'm 1801 356 b 1776 346 1793 356 1783 351 b 1642 192 1760 333 1659 206 b 1614 177 1630 181 1621 177 b 1591 190 1606 177 1597 184 b 1469 334 1578 203 1482 323 b 1430 356 1453 347 1441 356 b 1398 343 1420 356 1411 353 b 1365 307 1385 331 1377 318 l 1240 164 b 1097 330 1187 226 1104 320 b 1053 356 1084 346 1071 354 b 1021 343 1041 356 1034 353 b 988 307 1008 333 998 318 b 865 168 946 262 904 216 l 861 163 b 717 330 808 223 724 320 b 672 356 704 346 691 354 b 641 343 661 356 654 353 b 608 307 628 333 618 318 b 485 168 566 262 524 216 l 455 134 b 284 46 409 88 351 46 b 16 285 148 46 32 265 b 3 295 9 292 4 295 b 0 291 1 295 0 292 b 1 285 0 288 1 285 b 308 0 42 190 157 0 b 530 120 415 1 482 63 b 559 144 539 128 549 137 b 590 163 573 156 583 163 b 612 145 598 163 603 157 b 739 10 618 137 724 24 b 768 0 744 3 756 0 b 793 7 778 0 788 3 b 903 114 802 14 861 75 l 939 144 b 971 163 953 156 963 163 b 992 145 978 163 984 157 b 1119 10 998 137 1106 24 b 1148 0 1125 3 1136 0 b 1174 7 1158 0 1168 3 b 1284 114 1182 14 1241 75 b 1316 144 1282 115 1312 141 b 1348 161 1331 156 1339 161 b 1371 145 1355 161 1361 157 b 1496 10 1377 137 1485 24 b 1525 0 1502 3 1513 0 b 1552 7 1536 0 1547 3 b 1819 298 1562 17 1800 276 b 1840 330 1829 308 1840 320 b 1832 344 1840 334 1837 340 b 1801 356 1820 351 1810 356 z',\n        },\n        ornamentPrecompDoubleCadenceUpperPrefixTurn: {\n            x_min: 0,\n            x_max: 1277,\n            y_min: -62,\n            y_max: 333,\n            ha: 395,\n            o: 'm 1273 202 l 1273 480 l 1230 480 l 1230 174 l 1097 328 b 1053 354 1084 344 1071 353 b 1021 341 1041 354 1034 351 b 988 305 1008 331 998 317 b 865 167 945 261 904 215 l 861 161 b 717 328 808 222 724 318 b 672 354 704 344 691 353 b 641 341 661 354 654 351 b 608 305 628 331 618 317 b 485 167 564 261 524 215 b 455 132 474 156 465 144 b 284 45 410 88 350 45 b 14 284 148 45 30 264 b 3 294 9 291 4 294 b 0 289 1 294 0 291 b 1 284 0 287 1 284 b 308 -1 42 189 157 -1 b 530 118 415 0 481 62 b 557 143 539 127 547 135 b 590 161 572 154 582 161 b 612 144 598 161 603 156 b 737 9 618 135 724 24 b 768 -1 743 1 755 -1 b 793 6 778 -1 788 1 b 903 112 802 13 861 73 l 937 143 b 971 161 953 154 963 161 b 992 144 978 161 984 156 b 1117 9 998 135 1104 24 b 1148 -1 1123 1 1136 -1 b 1174 6 1158 -1 1168 1 l 1230 60 l 1230 -89 l 1273 -89 l 1273 102 l 1283 112 b 1348 160 1295 125 1332 160 b 1371 144 1355 160 1361 156 b 1496 9 1377 135 1483 24 b 1525 -1 1502 1 1513 -1 b 1552 6 1536 -1 1547 1 b 1819 297 1562 16 1800 275 b 1839 328 1827 307 1839 320 b 1801 354 1839 343 1813 354 b 1776 344 1793 354 1783 350 b 1642 190 1760 331 1657 206 b 1614 176 1630 180 1621 176 b 1591 189 1606 176 1597 183 b 1467 333 1578 203 1480 321 b 1430 354 1453 346 1441 354 b 1398 341 1420 354 1411 351 b 1365 305 1385 330 1377 317 z',\n        },\n        ornamentPrecompTrillLowerSuffix: {\n            x_min: 0,\n            x_max: 859,\n            y_min: -222,\n            y_max: 246,\n            ha: 468,\n            o: 'm 1164 217 b 1031 351 1138 259 1063 351 b 1011 337 1020 351 1024 347 b 828 167 952 291 886 217 l 824 164 b 683 328 772 225 690 318 b 638 354 670 344 657 353 b 606 341 626 354 619 351 b 573 305 593 331 583 317 b 451 167 530 261 490 215 l 446 161 b 302 328 393 222 310 318 b 258 354 289 344 276 353 b 226 341 246 354 239 351 b 193 305 213 331 203 317 b 71 167 150 261 109 215 b 17 105 52 147 36 127 b 0 73 10 98 0 84 b 29 58 0 65 7 58 b 86 92 56 59 72 79 b 143 143 105 109 122 127 b 176 161 157 154 168 161 b 197 144 183 161 189 156 b 323 9 203 135 310 23 b 353 -1 328 1 340 -1 b 379 6 363 -1 373 1 b 488 112 387 13 446 73 l 523 143 b 556 161 539 154 549 161 b 577 144 563 161 569 156 b 703 9 583 135 690 23 b 733 -1 708 1 721 -1 b 759 6 743 -1 753 1 b 868 112 768 13 827 73 b 955 183 878 122 943 183 b 1081 107 965 183 1031 153 b 1156 -89 1128 63 1156 6 l 1156 -102 b 948 -297 1156 -204 1048 -297 b 806 -271 904 -297 850 -282 l 792 -266 b 801 -288 792 -268 795 -282 b 948 -320 809 -297 880 -320 b 1237 -50 1092 -320 1237 -199 b 1164 217 1237 75 1218 122 z',\n        },\n        brassScoop: {\n            x_min: 1,\n            x_max: 320,\n            y_min: -373,\n            y_max: 13,\n            ha: 386,\n            o: 'm 35 -537 b 461 -12 194 -518 461 -289 b 438 19 461 13 451 19 b 410 -9 425 19 413 9 b 35 -425 357 -366 92 -403 b 1 -482 13 -433 1 -438 l 1 -505 b 26 -537 1 -526 3 -537 z',\n        },\n        brassDoitMedium: {\n            x_min: 0,\n            x_max: 489,\n            y_min: -40,\n            y_max: 346,\n            ha: 386,\n            o: 'm 33 -58 b 704 468 255 -58 683 186 b 681 498 704 494 693 498 b 654 471 668 498 658 488 b 33 55 550 118 91 76 b 0 -3 12 46 0 42 l 0 -26 b 24 -58 0 -46 1 -58 z',\n        },\n        brassFallLipShort: {\n            x_min: 1,\n            x_max: 293,\n            y_min: -345,\n            y_max: 42,\n            ha: 387,\n            o: 'm 22 60 b 1 35 4 60 1 52 l 1 6 b 26 -50 3 -40 10 -43 b 32 -52 27 -50 30 -50 b 376 -469 85 -73 327 -111 b 400 -497 379 -487 387 -497 b 422 -467 412 -497 422 -491 b 32 60 422 -187 177 40 z',\n        },\n        brassLiftMedium: {\n            x_min: 0,\n            x_max: 811,\n            y_min: 0,\n            y_max: 852,\n            ha: 852,\n            o: 'm 1138 1220 b 1135 1225 1135 1223 1135 1224 b 1129 1227 1133 1227 1130 1227 b 1117 1207 1122 1227 1117 1212 l 1117 1201 b 1109 1164 1117 1187 1117 1172 b 1100 1156 1107 1161 1104 1158 b 959 1104 1058 1128 995 1140 b 929 1032 936 1081 929 1056 b 932 1007 929 1024 930 1015 b 923 976 932 995 930 985 l 914 971 b 773 919 873 942 809 955 b 743 847 750 896 743 870 b 746 821 743 838 744 829 b 737 791 746 809 744 799 l 729 783 b 588 733 687 756 624 769 b 557 661 564 710 557 684 b 560 635 557 652 559 644 b 552 605 560 624 559 612 l 543 598 b 402 547 501 570 438 583 b 372 475 379 524 372 498 b 374 449 372 467 373 458 b 366 419 374 438 373 426 l 357 412 b 216 361 315 384 252 397 b 186 289 193 338 186 312 b 189 264 186 281 187 272 b 180 233 189 252 187 240 b 171 226 177 232 174 229 b 30 176 130 199 66 212 b 0 104 7 153 0 128 b 33 0 0 88 14 0 b 49 17 40 0 49 10 b 71 63 52 35 56 49 b 212 115 102 95 154 59 b 239 186 230 134 239 160 b 236 210 239 194 238 202 b 256 249 239 225 243 236 b 397 301 288 281 340 245 b 425 372 416 320 425 346 b 422 396 425 380 423 387 b 442 435 425 410 429 422 b 583 487 474 467 526 431 b 611 557 602 505 611 531 b 608 582 611 566 609 573 b 628 621 611 596 615 608 b 769 672 660 652 711 618 b 796 743 788 691 796 717 b 793 768 796 752 795 759 b 814 806 796 782 801 793 b 955 858 845 838 897 804 b 982 929 973 877 982 903 b 979 953 982 937 981 945 b 999 992 982 968 986 979 b 1140 1045 1031 1024 1083 989 b 1168 1116 1161 1066 1168 1090 b 1138 1220 1168 1162 1145 1207 z',\n        },\n        brassFallRoughMedium: {\n            x_min: 0,\n            x_max: 811,\n            y_min: 0,\n            y_max: 852,\n            ha: 852,\n            o: 'm 30 1220 b 0 1116 23 1207 0 1162 b 27 1045 0 1090 7 1066 b 168 992 85 989 137 1024 b 189 953 181 979 186 968 b 186 929 187 945 186 937 b 213 858 186 903 194 877 b 354 806 271 804 323 838 b 374 768 367 793 372 782 b 372 743 373 759 372 752 b 399 672 372 717 380 691 b 540 621 456 618 508 652 b 560 582 553 608 557 596 b 557 557 559 573 557 566 b 585 487 557 531 566 505 b 726 435 642 431 694 467 b 746 396 739 422 743 410 b 743 372 744 387 743 380 b 770 301 743 346 752 320 b 912 249 828 245 880 281 b 932 210 924 236 929 225 b 929 186 930 202 929 194 b 956 115 929 160 937 134 b 1097 63 1014 59 1066 95 b 1119 17 1112 49 1116 35 b 1135 0 1119 10 1128 0 b 1168 104 1153 0 1168 91 b 1138 176 1168 128 1161 153 b 996 226 1102 212 1038 199 b 988 233 994 229 991 232 b 979 264 981 240 979 252 b 982 289 981 272 982 281 b 952 361 982 312 975 338 b 811 412 916 397 852 384 l 802 419 b 793 449 795 426 793 438 b 796 475 795 458 796 467 b 766 547 796 498 789 524 b 625 598 730 583 667 570 l 616 605 b 608 635 609 612 608 624 b 611 661 609 644 611 652 b 580 733 611 684 603 710 b 439 783 544 769 481 756 l 431 791 b 422 821 423 799 422 809 b 425 847 423 829 425 838 b 395 919 425 870 418 896 b 253 971 359 955 295 942 l 245 976 b 236 1007 238 985 236 995 b 239 1032 238 1015 239 1024 b 209 1104 239 1056 232 1081 b 68 1156 173 1140 109 1128 b 59 1164 63 1158 60 1161 b 50 1201 50 1172 50 1187 l 50 1207 b 39 1227 50 1212 46 1227 b 33 1225 37 1227 35 1227 b 30 1220 33 1224 33 1223 z',\n        },\n        brassBend: {\n            x_min: 0,\n            x_max: 392,\n            y_min: 0,\n            y_max: 282,\n            ha: 282,\n            o: 'm 282 0 b 552 72 369 0 456 23 b 564 92 560 75 564 84 l 564 383 b 541 406 564 395 554 406 b 518 383 528 406 518 395 l 518 107 b 282 46 435 65 357 46 b 46 107 207 46 130 65 l 46 383 b 23 406 46 395 36 406 b 0 383 10 406 0 395 l 0 92 b 13 72 0 84 4 75 b 282 0 108 23 196 0 z',\n        },\n        brassMuteClosed: {\n            x_min: 0,\n            x_max: 272,\n            y_min: 0,\n            y_max: 272,\n            ha: 272,\n            o: 'm 392 219 l 219 219 l 219 392 l 173 392 l 173 219 l 0 219 l 0 173 l 173 173 l 173 0 l 219 0 l 219 173 l 392 173 z',\n        },\n        brassMuteOpen: {\n            x_min: 0,\n            x_max: 304,\n            y_min: 0,\n            y_max: 304,\n            ha: 304,\n            o: 'm 219 0 b 438 219 340 0 438 98 b 219 438 438 340 340 438 b 0 219 98 438 0 340 b 219 0 0 98 98 0 z m 219 392 b 392 219 314 392 392 314 b 219 46 392 124 314 46 b 46 219 124 46 46 124 b 219 392 46 314 124 392 z',\n        },\n        brassFlip: {\n            x_min: 0,\n            x_max: 379,\n            y_min: 0,\n            y_max: 282,\n            ha: 282,\n            o: 'm 523 0 b 541 9 530 0 536 3 b 546 22 544 13 546 17 b 536 42 546 29 541 36 l 36 402 b 23 406 33 405 27 406 b 0 383 12 406 0 395 l 0 23 b 23 0 0 10 10 0 b 46 23 36 0 46 10 l 46 337 l 508 4 b 523 0 513 1 517 0 z',\n        },\n        brassJazzTurn: {\n            x_min: 0,\n            x_max: 620,\n            y_min: 0,\n            y_max: 245,\n            ha: 245,\n            o: 'm 792 190 b 765 176 780 179 772 176 b 740 190 755 176 747 183 b 629 325 727 202 644 312 b 593 347 616 338 605 347 b 562 334 583 346 575 344 b 528 298 549 323 539 310 l 406 176 b 389 168 406 176 399 168 b 374 176 384 168 379 170 b 245 325 360 192 245 325 b 200 353 232 343 219 351 b 168 340 190 353 181 350 l 17 156 b 0 121 10 147 0 132 b 16 107 0 114 4 108 b 84 143 26 107 76 137 b 118 160 92 150 108 160 b 141 143 125 160 131 154 b 265 10 147 135 253 24 b 294 0 271 3 282 0 b 321 7 305 0 315 3 b 498 160 321 7 478 158 b 521 143 505 160 513 154 b 647 10 528 135 635 24 b 675 0 652 3 664 0 b 703 7 687 0 697 3 b 874 186 713 16 855 164 b 893 220 881 196 893 212 b 873 245 890 235 883 243 b 796 194 847 245 815 213 z',\n        },\n        brassSmear: {\n            x_min: 1,\n            x_max: 306,\n            y_min: 0,\n            y_max: 170,\n            ha: 170,\n            o: 'm 193 79 b 308 0 219 50 264 0 b 439 117 396 0 438 102 b 439 120 439 118 439 118 l 441 125 b 441 128 441 127 441 127 b 433 141 441 135 439 141 b 416 130 429 141 423 137 b 343 94 390 107 370 94 b 269 153 315 94 294 121 l 265 158 b 144 245 239 190 180 245 b 6 134 62 245 10 143 b 1 114 3 125 1 118 b 7 107 1 108 4 107 b 36 122 13 107 22 112 b 92 151 55 137 65 151 b 183 89 125 151 161 112 b 189 84 184 88 187 86 z',\n        },\n        stringsDownBow: {\n            x_min: 0,\n            x_max: 312,\n            y_min: 0,\n            y_max: 318,\n            ha: 318,\n            o: 'm 37 458 b 0 420 17 458 0 441 l 0 17 b 17 0 0 7 9 0 l 37 0 b 55 17 46 0 55 7 l 55 253 b 225 278 55 269 140 278 b 395 253 310 278 395 269 l 395 17 b 413 0 395 7 403 0 l 432 0 b 449 17 441 0 449 7 l 449 420 b 412 458 449 441 432 458 z',\n        },\n        stringsUpBow: {\n            x_min: 1,\n            x_max: 249,\n            y_min: 1,\n            y_max: 495,\n            ha: 494,\n            o: 'm 181 1 b 206 22 193 1 203 10 l 359 683 l 359 688 b 338 713 359 700 351 710 l 333 713 b 308 694 321 713 311 706 l 180 140 l 53 694 b 27 713 49 706 39 713 l 22 713 b 1 690 10 710 1 700 b 3 683 1 687 1 685 l 154 22 b 181 1 157 10 167 1 z',\n        },\n        stringsHarmonic: {\n            x_min: 0,\n            x_max: 200,\n            y_min: 0,\n            y_max: 200,\n            ha: 200,\n            o: 'm 288 144 b 144 288 288 225 223 288 b 0 144 65 288 0 225 b 144 0 0 65 65 0 b 288 144 223 0 288 65 z m 144 249 b 249 144 203 249 249 203 b 144 39 249 86 203 39 b 39 144 86 39 39 86 b 144 249 39 203 86 249 z',\n        },\n        pluckedSnapPizzicatoAbove: {\n            x_min: 0,\n            x_max: 200,\n            y_min: 0,\n            y_max: 300,\n            ha: 300,\n            o: 'm 0 144 b 144 0 0 63 65 0 b 288 144 223 0 288 63 b 167 285 288 215 235 275 l 167 432 l 121 432 l 121 285 b 0 144 52 275 0 215 z m 121 246 l 121 144 l 167 144 l 167 246 b 249 144 213 236 249 193 b 144 39 249 85 202 39 b 39 144 85 39 39 85 b 121 246 39 193 73 236 z',\n        },\n        pluckedSnapPizzicatoBelow: {\n            x_min: 0,\n            x_max: 200,\n            y_min: 0,\n            y_max: 300,\n            ha: 300,\n            o: 'm 288 288 b 144 432 288 369 223 432 b 0 288 65 432 0 369 b 121 145 0 216 52 157 l 121 0 l 167 0 l 167 145 b 288 288 235 157 288 216 z m 167 186 l 167 288 l 121 288 l 121 186 b 39 288 75 196 39 238 b 144 393 39 347 86 393 b 249 288 203 393 249 347 b 167 186 249 238 215 196 z',\n        },\n        pluckedLeftHandPizzicato: {\n            x_min: 0,\n            x_max: 272,\n            y_min: 0,\n            y_max: 272,\n            ha: 272,\n            o: 'm 392 219 l 219 219 l 219 392 l 173 392 l 173 219 l 0 219 l 0 173 l 173 173 l 173 0 l 219 0 l 219 173 l 392 173 z',\n        },\n        keyboardPedalPed: {\n            x_min: 0,\n            x_max: 1019,\n            y_min: -8,\n            y_max: 555,\n            ha: 563,\n            o: 'm 413 799 b 179 749 327 798 261 789 b 0 517 107 713 0 632 b 122 376 0 454 37 376 b 240 540 189 376 240 452 b 225 586 240 579 233 586 b 204 549 213 586 212 573 b 138 480 199 527 181 480 b 85 549 96 480 85 517 l 85 554 b 353 762 89 690 230 762 b 373 752 364 762 373 760 b 351 708 373 740 360 723 b 274 546 330 675 274 585 b 353 416 274 508 333 444 b 412 304 372 390 412 351 b 382 228 412 275 403 256 b 334 190 363 202 361 200 b 147 29 271 167 147 88 b 196 -12 147 4 171 -12 b 343 108 239 -12 279 33 l 363 132 b 387 150 370 141 376 150 b 543 -4 445 150 467 -4 b 631 42 567 -4 586 0 l 668 78 b 685 89 674 84 680 89 b 696 75 688 89 690 86 b 809 -9 717 29 753 -9 b 946 66 854 -9 894 13 b 988 107 971 92 981 107 b 1002 89 994 107 996 99 b 1152 -4 1030 36 1077 -4 b 1329 248 1238 -4 1329 82 b 792 717 1329 556 1047 665 b 766 720 785 719 775 720 b 747 703 752 720 747 711 b 780 680 747 693 756 685 b 1223 222 1028 621 1223 504 b 1152 39 1223 122 1205 39 b 1073 229 1104 39 1073 132 b 1132 423 1073 314 1086 377 b 1142 442 1140 432 1142 436 b 1126 458 1142 451 1136 458 b 1093 446 1119 458 1109 455 b 975 216 1022 408 975 337 l 975 190 b 943 121 975 160 972 150 b 852 69 899 76 877 69 b 776 148 816 69 786 117 b 773 163 775 154 773 158 b 786 177 773 167 776 170 l 801 187 b 937 366 867 235 937 284 b 844 454 937 422 900 454 b 665 217 711 454 665 331 b 671 153 665 197 667 176 l 671 147 b 662 134 671 143 670 140 b 605 111 639 118 625 111 b 521 160 572 111 546 135 b 451 203 497 184 474 197 b 426 212 435 207 426 206 b 436 230 426 216 429 220 b 510 389 464 269 510 340 b 429 521 510 435 480 462 b 369 629 387 570 369 599 b 402 720 369 648 384 691 b 462 763 425 759 446 763 b 611 624 540 763 611 704 b 564 575 611 592 590 575 b 501 602 540 575 520 582 b 474 622 492 611 487 622 b 459 603 465 622 459 615 b 603 471 459 570 510 471 b 711 588 670 471 711 524 b 422 799 711 742 554 799 z m 815 403 b 848 343 838 403 848 383 b 780 226 848 295 824 261 b 765 217 773 220 768 217 b 759 228 762 217 759 220 b 756 282 757 245 756 262 b 815 403 756 346 772 403 z m 1405 124 b 1344 62 1369 124 1344 98 b 1405 0 1344 26 1369 0 b 1467 62 1441 0 1467 26 b 1405 124 1467 98 1441 124 z',\n        },\n        keyboardPedalUp: {\n            x_min: 0,\n            x_max: 450,\n            y_min: 0,\n            y_max: 450,\n            ha: 450,\n            o: 'm 582 396 b 516 367 554 396 533 384 b 465 340 495 347 487 340 l 458 340 b 412 377 432 340 412 348 b 432 409 412 387 419 396 l 438 415 b 490 429 451 428 464 429 b 575 501 534 429 575 452 b 501 575 575 541 541 575 b 429 490 452 575 429 534 b 415 438 429 464 428 451 l 409 432 b 377 412 396 419 387 412 b 340 458 348 412 340 432 l 340 465 b 367 516 340 487 347 495 b 396 582 384 533 396 554 b 324 648 396 625 363 648 b 252 582 285 648 252 625 b 281 516 252 554 264 533 b 308 465 301 495 308 487 l 308 458 b 271 412 308 432 300 412 b 239 432 261 412 252 419 l 233 438 b 219 490 220 451 219 464 b 147 575 219 534 196 575 b 73 501 107 575 73 541 b 158 429 73 452 114 429 b 210 415 184 429 197 428 l 216 409 b 236 377 229 396 236 387 b 190 340 236 348 216 340 l 183 340 b 132 367 161 340 153 347 b 66 396 115 384 94 396 b 0 324 23 396 0 363 b 66 252 0 285 23 252 b 132 281 94 252 115 264 b 183 308 153 301 161 308 l 190 308 b 236 271 216 308 236 300 b 216 239 236 261 229 252 l 210 233 b 158 219 197 220 184 219 b 73 147 114 219 73 196 b 147 73 73 107 107 73 b 219 158 196 73 219 114 b 233 210 219 184 220 197 l 239 216 b 271 236 252 229 261 236 b 308 190 300 236 308 216 l 308 183 b 281 132 308 161 301 153 b 252 66 264 115 252 94 b 324 0 252 23 285 0 b 396 66 363 0 396 23 b 367 132 396 94 384 115 b 340 183 347 153 340 161 l 340 190 b 377 236 340 216 348 236 b 409 216 387 236 396 229 l 415 210 b 429 158 428 197 429 184 b 501 73 429 114 452 73 b 575 147 541 73 575 107 b 490 219 575 196 534 219 b 438 233 464 219 451 220 l 432 239 b 412 271 419 252 412 261 b 458 308 412 300 432 308 l 465 308 b 516 281 487 308 495 301 b 582 252 533 264 554 252 b 648 324 625 252 648 285 b 582 396 648 363 625 396 z m 324 271 b 271 324 291 271 271 291 b 324 377 271 357 291 377 b 377 324 357 377 377 357 b 324 271 377 291 357 271 z',\n        },\n        pictChokeCymbal: {\n            x_min: 1,\n            x_max: 152,\n            y_min: 2,\n            y_max: 251,\n            ha: 249,\n            o: 'm 104 361 b 1 271 42 361 1 321 b 82 190 1 222 35 190 b 122 160 118 190 122 160 b 125 144 124 154 125 150 b 102 88 125 124 115 105 b 37 32 78 56 40 35 b 26 17 32 29 26 26 l 27 16 b 37 3 29 6 33 3 b 181 102 85 3 158 66 b 219 239 210 147 219 197 l 219 249 b 104 361 219 317 170 361 z',\n        },\n        wiggleArpeggiatoUp: {\n            x_min: -33,\n            x_max: 292,\n            y_min: 0,\n            y_max: 119,\n            ha: 119,\n            o: 'm 130 171 b -39 68 16 171 -14 91 b -48 53 -45 62 -48 58 b -29 42 -48 46 -39 42 b -10 46 -23 42 -16 43 b 56 63 12 56 29 63 b 248 0 121 63 135 0 b 419 127 361 0 410 104 b 420 132 420 130 420 131 b 412 140 420 137 416 140 b 386 130 403 140 392 134 b 334 107 367 117 353 107 b 318 108 330 107 324 107 b 240 138 289 112 265 128 b 130 171 209 153 168 171 z',\n        },\n        arrowheadBlackUp: {\n            x_min: 0,\n            x_max: 228,\n            y_min: 0,\n            y_max: 299,\n            ha: 299,\n            o: 'm 166 431 b 0 20 111 274 0 30 b 16 0 0 12 6 0 l 17 1 b 166 50 43 16 160 50 b 310 1 171 50 289 13 l 311 0 b 328 20 321 0 328 12 b 166 431 328 30 220 274 z',\n        },\n        arrowheadBlackDown: {\n            x_min: 0,\n            x_max: 228,\n            y_min: 0,\n            y_max: 299,\n            ha: 299,\n            o: 'm 166 0 b 328 410 220 157 328 400 b 311 431 328 419 321 431 l 310 429 b 166 380 289 418 171 380 b 17 429 160 380 43 415 l 16 431 b 0 410 6 431 0 419 b 166 0 0 400 111 157 z',\n        },\n        arpeggiatoUp: {\n            x_min: 1,\n            x_max: 229,\n            y_min: 7,\n            y_max: 1511,\n            ha: 1504,\n            o: 'm 219 1848 l 330 1848 l 164 2176 l 1 1848 l 121 1848 b 92 1778 115 1822 101 1800 l 89 1773 b 59 1668 75 1741 59 1702 b 96 1555 59 1614 76 1580 b 99 1551 98 1554 99 1551 l 102 1547 b 124 1496 115 1531 124 1515 b 122 1482 124 1492 124 1488 b 92 1404 118 1453 102 1428 b 59 1293 78 1372 59 1332 b 105 1172 59 1234 81 1198 b 124 1120 118 1155 124 1143 l 122 1113 b 122 1110 122 1113 122 1112 b 92 1032 118 1081 102 1057 b 59 922 78 1001 59 960 b 115 792 59 855 86 816 b 124 760 121 782 124 773 b 122 744 124 756 124 750 b 92 667 118 716 102 693 b 59 556 78 635 59 595 b 108 433 59 495 82 458 b 124 389 117 420 124 408 b 122 374 124 384 124 379 b 92 298 118 346 102 323 l 89 292 b 59 186 75 261 59 222 b 163 19 59 73 140 42 b 177 10 168 13 173 10 b 189 29 184 10 189 19 b 184 48 189 35 187 42 b 167 114 174 69 167 85 b 230 305 167 179 229 193 b 181 423 230 357 209 396 b 167 484 173 442 167 458 b 230 675 167 547 229 563 b 179 796 230 729 206 769 b 167 850 171 812 167 827 b 230 1040 167 913 229 929 b 183 1158 230 1092 209 1130 b 167 1220 173 1178 167 1194 b 230 1411 167 1284 229 1300 b 186 1526 230 1462 210 1499 b 167 1594 176 1529 167 1584 b 230 1786 167 1659 229 1673 b 219 1848 230 1809 226 1829 z',\n        },\n        arpeggiatoDown: {\n            x_min: 1,\n            x_max: 229,\n            y_min: -4,\n            y_max: 1500,\n            ha: 1504,\n            o: 'm 219 323 b 230 384 226 341 230 361 b 167 576 229 497 167 511 b 186 644 167 586 176 641 b 230 759 210 671 230 708 b 167 950 229 870 167 886 b 183 1012 167 976 173 992 b 230 1130 209 1040 230 1079 b 167 1320 229 1241 167 1257 b 179 1374 167 1344 171 1358 b 230 1495 206 1401 230 1441 b 167 1686 229 1607 167 1623 b 181 1747 167 1712 173 1728 b 230 1865 209 1774 230 1813 b 167 2056 229 1977 167 1992 b 184 2123 167 2085 174 2101 b 189 2141 187 2128 189 2136 b 177 2160 189 2151 184 2160 b 163 2151 173 2160 168 2157 b 59 1984 140 2128 59 2097 b 89 1878 59 1948 75 1909 l 92 1872 b 122 1796 102 1848 118 1824 b 124 1781 124 1791 124 1786 b 108 1737 124 1763 117 1750 b 59 1614 82 1712 59 1675 b 92 1503 59 1575 78 1535 b 122 1426 102 1477 118 1454 b 124 1410 124 1420 124 1414 b 115 1378 124 1397 121 1388 b 59 1248 86 1354 59 1315 b 92 1138 59 1210 78 1169 b 122 1060 102 1113 118 1089 b 122 1057 122 1058 122 1058 l 124 1050 b 105 998 124 1027 118 1015 b 59 877 81 972 59 936 b 92 766 59 838 78 798 b 122 688 102 742 118 717 b 124 674 124 683 124 678 b 102 624 124 655 115 639 l 99 619 b 96 615 99 619 98 616 b 59 503 76 590 59 556 b 89 397 59 468 75 429 l 92 392 b 121 323 101 370 115 348 l 1 323 l 164 -6 l 330 323 z',\n        },\n        repeat1Bar: {\n            x_min: 0,\n            x_max: 532,\n            y_min: -250,\n            y_max: 279,\n            ha: 529,\n            o: 'm 759 380 b 766 395 763 386 766 390 b 757 402 766 399 763 402 l 605 402 b 579 380 596 402 589 393 l 4 -340 b 0 -350 1 -343 0 -347 b 12 -360 0 -356 4 -360 l 154 -360 b 184 -340 167 -360 177 -348 z m 89 288 b 0 197 40 288 0 248 b 89 108 0 148 40 108 b 180 197 140 108 180 148 b 89 288 180 248 140 288 z m 675 -71 b 586 -161 626 -71 586 -111 b 675 -251 586 -210 626 -251 b 766 -161 726 -251 766 -210 b 675 -71 766 -111 726 -71 z',\n        },\n        repeat2Bars: {\n            x_min: 0,\n            x_max: 762,\n            y_min: -250,\n            y_max: 279,\n            ha: 529,\n            o: 'm 1090 380 b 1097 395 1094 386 1097 390 b 1089 402 1097 399 1094 402 l 936 402 b 910 380 927 402 920 393 l 336 -340 b 331 -350 333 -343 331 -347 b 343 -360 331 -356 336 -360 l 485 -360 b 516 -340 498 -360 508 -348 z m 759 380 b 766 395 763 386 766 390 b 757 402 766 399 763 402 l 605 402 b 579 380 596 402 589 393 l 4 -340 b 0 -350 1 -343 0 -347 b 12 -360 0 -356 4 -360 l 154 -360 b 184 -340 167 -360 177 -348 z m 89 288 b 0 197 40 288 0 248 b 89 108 0 148 40 108 b 180 197 140 108 180 148 b 89 288 180 248 140 288 z m 1007 -71 b 917 -161 958 -71 917 -111 b 1007 -251 917 -210 958 -251 b 1097 -161 1057 -251 1097 -210 b 1007 -71 1097 -111 1057 -71 z',\n        },\n        repeat4Bars: {\n            x_min: 0,\n            x_max: 1232,\n            y_min: -250,\n            y_max: 279,\n            ha: 529,\n            o: 'm 1767 380 b 1774 395 1771 386 1774 390 b 1765 402 1774 399 1771 402 l 1613 402 b 1587 380 1604 402 1597 393 l 1012 -340 b 1008 -350 1009 -343 1008 -347 b 1020 -360 1008 -356 1012 -360 l 1162 -360 b 1192 -340 1175 -360 1185 -348 z m 1436 380 b 1443 395 1440 386 1443 390 b 1434 402 1443 399 1440 402 l 1282 402 b 1256 380 1273 402 1266 393 l 681 -340 b 677 -350 678 -343 677 -347 b 688 -360 677 -356 681 -360 l 831 -360 b 861 -340 844 -360 854 -348 z m 1090 380 b 1097 395 1094 386 1097 390 b 1089 402 1097 399 1094 402 l 936 402 b 910 380 927 402 920 393 l 336 -340 b 331 -350 333 -343 331 -347 b 343 -360 331 -356 336 -360 l 485 -360 b 516 -340 498 -360 508 -348 z m 759 380 b 766 395 763 386 766 390 b 757 402 766 399 763 402 l 605 402 b 579 380 596 402 589 393 l 4 -340 b 0 -350 1 -343 0 -347 b 12 -360 0 -356 4 -360 l 154 -360 b 184 -340 167 -360 177 -348 z m 89 288 b 0 197 40 288 0 248 b 89 108 0 148 40 108 b 180 197 140 108 180 148 b 89 288 180 248 140 288 z m 1683 -71 b 1594 -161 1634 -71 1594 -111 b 1683 -251 1594 -210 1634 -251 b 1774 -161 1734 -251 1774 -210 b 1683 -71 1774 -111 1734 -71 z',\n        },\n        repeatBarSlash: {\n            x_min: 0,\n            x_max: 532,\n            y_min: -250,\n            y_max: 279,\n            ha: 529,\n            o: 'm 759 380 b 766 395 763 386 766 390 b 757 402 766 399 763 402 l 605 402 b 579 380 596 402 589 393 l 4 -340 b 0 -350 1 -343 0 -347 b 12 -360 0 -356 4 -360 l 154 -360 b 184 -340 167 -360 177 -348 z',\n        },\n        csymDiminished: {\n            x_min: 0,\n            x_max: 473,\n            y_min: 0,\n            y_max: 473,\n            ha: 473,\n            o: 'm 341 681 b 0 341 153 681 0 530 b 341 0 0 153 153 0 b 681 341 530 0 681 153 b 341 681 681 530 530 681 z m 341 618 b 618 341 495 618 618 495 b 341 63 618 189 494 63 b 63 341 187 63 63 187 b 341 618 63 494 189 618 z',\n        },\n        csymHalfDiminished: {\n            x_min: -16,\n            x_max: 488,\n            y_min: -15,\n            y_max: 489,\n            ha: 504,\n            o: 'm 703 660 l 658 704 l 557 603 b 340 681 498 652 422 681 b -1 341 151 681 -1 530 b 78 124 -1 259 29 183 l -23 23 l 22 -22 l 122 79 b 340 0 181 30 258 0 b 680 341 528 0 680 153 b 602 559 680 423 651 500 z m 62 341 b 340 618 62 494 187 618 b 513 559 403 618 464 598 l 122 168 b 62 341 84 217 62 278 z m 616 341 b 340 63 616 189 492 63 b 167 124 276 63 216 85 l 557 514 b 616 341 596 465 616 405 z',\n        },\n        csymAugmented: {\n            x_min: 0,\n            x_max: 395,\n            y_min: 1,\n            y_max: 396,\n            ha: 395,\n            o: 'm 569 318 l 317 318 l 317 570 l 253 570 l 253 318 l 0 318 l 0 255 l 253 255 l 253 1 l 317 1 l 317 255 l 569 255 z',\n        },\n        csymMajorSeventh: {\n            x_min: 0,\n            x_max: 558,\n            y_min: 1,\n            y_max: 477,\n            ha: 476,\n            o: 'm 402 687 l 0 1 l 804 1 z m 402 562 l 693 65 l 111 65 z',\n        },\n        csymMinor: {\n            x_min: 0,\n            x_max: 325,\n            y_min: 216,\n            y_max: 260,\n            ha: 44,\n            o: 'm 468 374 l 0 374 l 0 311 l 468 311 z',\n        },\n        csymParensLeftTall: {\n            x_min: 1,\n            x_max: 185,\n            y_min: 0,\n            y_max: 997,\n            ha: 997,\n            o: 'm 266 48 b 261 65 266 55 264 62 b 92 719 157 212 92 400 b 262 1371 92 1037 154 1228 b 266 1394 266 1378 266 1394 l 266 1424 b 264 1436 266 1431 266 1436 b 259 1434 262 1436 259 1434 b 1 719 84 1261 1 1011 b 259 1 1 429 79 177 b 264 0 261 0 262 0 b 266 9 265 0 266 6 z',\n        },\n        csymParensRightTall: {\n            x_min: -20,\n            x_max: 164,\n            y_min: 0,\n            y_max: 997,\n            ha: 997,\n            o: 'm -29 9 b -26 0 -29 6 -27 0 b -22 1 -24 0 -23 0 b 236 719 158 177 236 429 b -22 1434 236 1011 154 1261 b -26 1436 -22 1434 -24 1436 b -29 1424 -29 1436 -29 1431 l -29 1394 b -24 1371 -29 1394 -29 1378 b 145 719 84 1228 145 1037 b -23 65 145 400 81 212 b -29 48 -26 62 -29 55 z',\n        },\n        csymBracketLeftTall: {\n            x_min: 0,\n            x_max: 155,\n            y_min: 0,\n            y_max: 1000,\n            ha: 1000,\n            o: 'm 217 0 b 223 9 220 0 223 4 l 223 37 b 217 46 223 42 220 46 l 92 46 l 92 1394 l 217 1394 b 223 1403 220 1394 223 1398 l 223 1431 b 217 1440 223 1436 220 1440 l 6 1440 b 0 1436 3 1440 0 1439 l 0 4 b 6 0 0 1 3 0 z',\n        },\n        csymBracketRightTall: {\n            x_min: 1,\n            x_max: 156,\n            y_min: 0,\n            y_max: 1000,\n            ha: 1000,\n            o: 'm 219 0 b 225 4 222 0 225 1 l 225 1436 b 219 1440 225 1439 222 1440 l 7 1440 b 1 1431 4 1440 1 1436 l 1 1403 b 7 1394 1 1398 4 1394 l 132 1394 l 132 46 l 7 46 b 1 37 4 46 1 42 l 1 9 b 7 0 1 4 4 0 z',\n        },\n        csymParensLeftVeryTall: {\n            x_min: 0,\n            x_max: 122,\n            y_min: 0,\n            y_max: 993,\n            ha: 993,\n            o: 'm 176 32 b 171 49 176 39 174 46 b 60 716 104 194 60 399 b 173 1382 60 1032 101 1241 b 176 1405 176 1390 176 1405 l 176 1427 b 173 1430 176 1428 174 1430 b 0 716 40 1297 0 978 b 170 3 0 428 50 179 b 171 0 170 1 170 0 b 176 6 173 0 176 4 z',\n        },\n        csymParensRightVeryTall: {\n            x_min: -15,\n            x_max: 107,\n            y_min: 0,\n            y_max: 993,\n            ha: 993,\n            o: 'm -22 6 b -17 0 -22 4 -19 0 b -16 3 -16 0 -16 1 b 154 716 104 179 154 428 b -19 1430 154 978 114 1297 b -22 1427 -20 1430 -22 1428 l -22 1405 b -19 1382 -22 1405 -22 1390 b 94 716 53 1241 94 1032 b -17 49 94 399 50 194 b -22 32 -20 46 -22 39 z',\n        },\n        csymDiagonalArrangementSlash: {\n            x_min: 0,\n            x_max: 999,\n            y_min: 0,\n            y_max: 1000,\n            ha: 1000,\n            o: 'm 1439 1380 l 1377 1440 l 0 60 l 62 0 z',\n        },\n        accSagittal5v7KleismaUp: {\n            x_min: 0,\n            x_max: 156,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -517 l 45 -517 l 45 -35 b 135 -112 68 -86 99 -112 b 225 68 194 -112 225 -53 l 180 68 b 144 -4 180 20 168 -4 b 122 0 138 -4 131 -3 b 23 248 86 14 52 96 l 0 248 z',\n        },\n        accSagittal5v7KleismaDown: {\n            x_min: 0,\n            x_max: 156,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -248 l 23 -248 b 122 0 52 -96 86 -14 b 144 4 131 3 138 4 b 180 -68 168 4 180 -20 l 225 -68 b 135 112 225 53 194 112 b 45 35 99 112 68 86 l 45 517 l 0 517 z',\n        },\n        accSagittal5CommaUp: {\n            x_min: 0,\n            x_max: 156,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 225 -517 l 225 248 l 203 248 l 0 -112 l 0 -284 l 180 33 l 180 -517 z',\n        },\n        accSagittal5CommaDown: {\n            x_min: 0,\n            x_max: 156,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 180 517 l 180 -33 l 0 284 l 0 112 l 203 -248 l 225 -248 l 225 517 z',\n        },\n        accSagittal7CommaUp: {\n            x_min: 0,\n            x_max: 156,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 248 l 0 -517 l 45 -517 l 45 112 l 89 112 b 180 -68 150 112 180 53 l 180 -248 l 225 -248 l 225 68 b 135 248 225 187 194 248 z',\n        },\n        accSagittal7CommaDown: {\n            x_min: 0,\n            x_max: 156,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 135 -248 b 225 -68 194 -248 225 -187 l 225 248 l 180 248 l 180 68 b 89 -112 180 -53 150 -112 l 45 -112 l 45 517 l 0 517 l 0 -248 z',\n        },\n        accSagittal25SmallDiesisUp: {\n            x_min: 0,\n            x_max: 250,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -157 l 0 -259 l 315 -89 l 315 -517 l 360 -517 l 360 248 l 337 248 l 0 68 l 0 -33 l 315 135 l 315 10 z',\n        },\n        accSagittal25SmallDiesisDown: {\n            x_min: 0,\n            x_max: 250,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 315 -10 l 315 -135 l 0 33 l 0 -68 l 337 -248 l 360 -248 l 360 517 l 315 517 l 315 89 l 0 259 l 0 157 z',\n        },\n        accSagittal35MediumDiesisUp: {\n            x_min: 0,\n            x_max: 281,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -284 l 180 33 l 180 -517 l 225 -517 l 225 112 l 271 112 b 360 -68 330 112 360 53 l 360 -248 l 405 -248 l 405 68 b 315 248 405 187 374 248 l 203 248 l 0 -112 z',\n        },\n        accSagittal35MediumDiesisDown: {\n            x_min: 0,\n            x_max: 281,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 112 l 203 -248 l 315 -248 b 405 -68 374 -248 405 -187 l 405 248 l 360 248 l 360 68 b 271 -112 360 -53 330 -112 l 225 -112 l 225 517 l 180 517 l 180 -33 l 0 284 z',\n        },\n        accSagittal11MediumDiesisUp: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 225 53 l 225 -517 l 271 -517 l 271 53 l 495 -248 l 495 -89 l 248 248 l 0 -89 l 0 -248 z',\n        },\n        accSagittal11MediumDiesisDown: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 248 l 0 89 l 248 -248 l 495 89 l 495 248 l 271 -53 l 271 517 l 225 517 l 225 -53 z',\n        },\n        accSagittal11LargeDiesisUp: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 68 l 0 -248 l 45 -248 l 45 -68 b 180 112 45 53 89 112 l 225 112 l 225 -517 l 271 -517 l 271 112 l 315 112 b 449 -68 405 112 449 53 l 449 -248 l 495 -248 l 495 68 b 360 248 495 187 449 248 l 135 248 b 0 68 45 248 0 187 z',\n        },\n        accSagittal11LargeDiesisDown: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -68 b 135 -248 0 -187 45 -248 l 360 -248 b 495 -68 449 -248 495 -187 l 495 248 l 449 248 l 449 68 b 315 -112 449 -53 405 -112 l 271 -112 l 271 517 l 225 517 l 225 -112 l 180 -112 b 45 68 89 -112 45 -53 l 45 248 l 0 248 z',\n        },\n        accSagittal35LargeDiesisUp: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -68 b 135 -248 0 -187 45 -248 l 248 -248 l 540 112 l 540 274 l 271 -58 l 271 517 l 225 517 l 225 -112 l 180 -112 b 45 68 89 -112 45 -53 l 45 248 l 0 248 z',\n        },\n        accSagittal35LargeDiesisDown: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -68 b 135 -248 0 -187 45 -248 l 248 -248 l 540 112 l 540 274 l 269 -58 l 269 517 l 225 517 l 225 -112 l 180 -112 b 45 68 89 -112 45 -53 l 45 248 l 0 248 z',\n        },\n        accSagittalSharp25SDown: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 68 b 112 -112 0 -53 36 -112 l 135 -112 l 135 -517 l 180 -517 l 180 -89 b 248 26 206 -65 229 -27 b 315 -89 264 -27 287 -65 l 315 -517 l 360 -517 l 360 -112 l 383 -112 b 495 68 458 -112 495 -53 l 449 68 b 399 -4 449 20 433 -4 b 248 248 297 -4 261 171 b 122 0 216 96 176 14 b 94 -4 112 -3 102 -4 b 45 68 60 -4 45 20 z',\n        },\n        accSagittalFlat25SUp: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 45 -68 b 94 4 45 -20 60 4 b 122 0 102 4 112 3 b 248 -248 176 -14 216 -96 b 399 4 261 -171 297 4 b 449 -68 433 4 449 -20 l 495 -68 b 383 112 495 53 458 112 l 360 112 l 360 517 l 315 517 l 315 89 b 248 -26 287 65 264 27 b 180 89 229 27 206 65 l 180 517 l 135 517 l 135 112 l 112 112 b 0 -68 36 112 0 53 z',\n        },\n        accSagittalSharp7CDown: {\n            x_min: 0,\n            x_max: 250,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -517 l 45 -517 l 45 112 l 89 112 b 180 104 124 112 154 109 l 180 -517 l 225 -517 l 225 89 b 315 -68 285 60 315 9 l 315 -248 l 360 -248 l 360 68 b 135 248 360 187 285 248 l 0 248 z',\n        },\n        accSagittalFlat7CUp: {\n            x_min: 0,\n            x_max: 250,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -248 l 135 -248 b 360 -68 285 -248 360 -187 l 360 248 l 315 248 l 315 68 b 225 -89 315 -9 285 -60 l 225 517 l 180 517 l 180 -104 b 89 -112 154 -109 124 -112 l 45 -112 l 45 517 l 0 517 z',\n        },\n        accSagittalSharp5CDown: {\n            x_min: 0,\n            x_max: 281,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 45 -517 l 45 71 l 180 -56 l 180 -517 l 225 -517 l 225 -98 l 405 -268 l 405 -112 l 23 248 l 0 248 l 0 -517 z',\n        },\n        accSagittalFlat5CUp: {\n            x_min: 0,\n            x_max: 281,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 517 l 0 -248 l 23 -248 l 405 112 l 405 268 l 225 98 l 225 517 l 180 517 l 180 56 l 45 -71 l 45 517 z',\n        },\n        accSagittalSharp5v7kDown: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -112 l 0 -276 l 135 -82 l 135 -517 l 180 -517 l 180 -17 l 271 112 l 315 112 l 315 -517 l 360 -517 l 360 107 b 449 -68 420 89 449 30 l 449 -248 l 495 -248 l 495 68 b 360 248 495 189 449 248 l 248 248 z',\n        },\n        accSagittalFlat5v7kUp: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 248 -248 l 360 -248 b 495 -68 449 -248 495 -189 l 495 248 l 449 248 l 449 68 b 360 -107 449 -30 420 -89 l 360 517 l 315 517 l 315 -112 l 271 -112 l 180 17 l 180 517 l 135 517 l 135 82 l 0 276 l 0 112 z',\n        },\n        accSagittalSharp: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 180 -53 l 180 -517 l 225 -517 l 225 0 l 292 85 l 360 0 l 360 -517 l 405 -517 l 405 -53 l 585 -274 l 585 -112 l 292 248 l 0 -112 l 0 -274 z',\n        },\n        accSagittalFlat: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 274 l 0 112 l 292 -248 l 585 112 l 585 274 l 405 53 l 405 517 l 360 517 l 360 0 l 292 -85 l 225 0 l 225 517 l 180 517 l 180 53 z',\n        },\n        accSagittalSharp5v7kUp: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -361,\n            y_max: 172,\n            ha: 533,\n            o: 'm 45 -517 l 45 -10 b 135 -92 68 -48 98 -75 l 135 -520 l 180 -520 l 180 -108 b 248 -115 203 -112 225 -115 b 271 -112 256 -115 264 -115 l 271 -517 l 315 -517 l 315 -107 b 449 68 405 -89 449 -30 l 405 68 b 297 -4 405 19 369 -4 b 23 248 131 -4 56 85 l 0 248 l 0 -517 z',\n        },\n        accSagittalFlat5v7kDown: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -172,\n            y_max: 361,\n            ha: 533,\n            o: 'm 0 517 l 0 -248 l 23 -248 b 297 4 56 -85 131 4 b 405 -68 369 4 405 -19 l 449 -68 b 315 107 449 30 405 89 l 315 517 l 271 517 l 271 112 b 248 115 264 115 256 115 b 180 108 225 115 203 112 l 180 520 l 135 520 l 135 92 b 45 10 98 75 68 48 l 45 517 z',\n        },\n        accSagittalSharp5CUp: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -266 l 135 -153 l 135 -517 l 180 -517 l 180 -115 l 271 -39 l 271 -517 l 315 -517 l 315 0 l 405 75 l 405 -517 l 449 -517 l 449 248 l 428 248 l 0 -112 z',\n        },\n        accSagittalFlat5CDown: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 112 l 428 -248 l 449 -248 l 449 517 l 405 517 l 405 -75 l 315 0 l 315 517 l 271 517 l 271 39 l 180 115 l 180 517 l 135 517 l 135 153 l 0 266 z',\n        },\n        accSagittalSharp7CUp: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -517 l 45 -517 l 45 112 l 135 112 l 135 -517 l 180 -517 l 180 108 b 271 89 213 105 243 99 l 271 -517 l 315 -517 l 315 73 b 405 -68 374 45 405 -3 l 405 -248 l 449 -248 l 449 68 b 135 248 449 187 346 248 l 0 248 z',\n        },\n        accSagittalFlat7CDown: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -248 l 135 -248 b 449 -68 346 -248 449 -187 l 449 248 l 405 248 l 405 68 b 315 -73 405 3 374 -45 l 315 517 l 271 517 l 271 -89 b 180 -108 243 -99 213 -105 l 180 517 l 135 517 l 135 -112 l 45 -112 l 45 517 l 0 517 z',\n        },\n        accSagittalSharp25SUp: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -30 l 495 143 l 495 14 l 0 -157 l 0 -255 l 225 -177 l 225 -517 l 271 -517 l 271 -161 l 360 -130 l 360 -517 l 405 -517 l 405 -115 l 495 -84 l 495 -517 l 540 -517 l 540 248 l 517 248 l 0 68 z',\n        },\n        accSagittalFlat25SDown: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -68 l 517 -248 l 540 -248 l 540 517 l 495 517 l 495 84 l 405 115 l 405 517 l 360 517 l 360 130 l 271 161 l 271 517 l 225 517 l 225 177 l 0 255 l 0 157 l 495 -14 l 495 -143 l 0 30 z',\n        },\n        accSagittalSharp35MUp: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -112 l 0 -274 l 135 -108 l 135 -517 l 180 -517 l 180 -53 l 271 58 l 271 -517 l 315 -517 l 315 112 l 360 112 b 405 109 376 112 390 112 l 405 -517 l 449 -517 l 449 96 b 540 -68 510 72 540 17 l 540 -248 l 585 -248 l 585 68 b 405 248 585 187 526 248 l 292 248 z',\n        },\n        accSagittalFlat35MDown: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 292 -248 l 405 -248 b 585 -68 526 -248 585 -187 l 585 248 l 540 248 l 540 68 b 449 -96 540 -17 510 -72 l 449 517 l 405 517 l 405 -109 b 360 -112 390 -112 376 -112 l 315 -112 l 315 517 l 271 517 l 271 -58 l 180 53 l 180 517 l 135 517 l 135 108 l 0 274 l 0 112 z',\n        },\n        accSagittalSharp11MUp: {\n            x_min: 0,\n            x_max: 469,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -112 l 0 -271 l 180 -79 l 180 -517 l 225 -517 l 225 -30 l 315 65 l 315 -517 l 360 -517 l 360 65 l 449 -30 l 449 -517 l 495 -517 l 495 -79 l 675 -271 l 675 -112 l 337 248 z',\n        },\n        accSagittalFlat11MDown: {\n            x_min: 0,\n            x_max: 469,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 337 -248 l 675 112 l 675 271 l 495 79 l 495 517 l 449 517 l 449 30 l 360 -65 l 360 517 l 315 517 l 315 -65 l 225 30 l 225 517 l 180 517 l 180 79 l 0 271 l 0 112 z',\n        },\n        accSagittalSharp11LUp: {\n            x_min: 0,\n            x_max: 469,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 68 l 0 -248 l 45 -248 l 45 -68 b 180 104 45 26 89 82 l 180 -517 l 225 -517 l 225 112 l 315 112 l 315 -517 l 360 -517 l 360 112 l 449 112 l 449 -517 l 495 -517 l 495 104 b 631 -68 585 82 631 26 l 631 -248 l 675 -248 l 675 68 b 449 248 675 187 600 248 l 225 248 b 0 68 75 248 0 187 z',\n        },\n        accSagittalFlat11LDown: {\n            x_min: 0,\n            x_max: 469,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -68 b 225 -248 0 -187 75 -248 l 449 -248 b 675 -68 600 -248 675 -187 l 675 248 l 631 248 l 631 68 b 495 -104 631 -26 585 -82 l 495 517 l 449 517 l 449 -112 l 360 -112 l 360 517 l 315 517 l 315 -112 l 225 -112 l 225 517 l 180 517 l 180 -104 b 45 68 89 -82 45 -26 l 45 248 l 0 248 z',\n        },\n        accSagittalSharp35LUp: {\n            x_min: 0,\n            x_max: 500,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -248 l 45 -248 l 45 -68 b 180 104 45 26 89 82 l 180 -517 l 225 -517 l 225 112 l 315 112 l 315 -517 l 360 -517 l 360 71 l 452 -17 l 452 -517 l 495 -517 l 495 -56 l 720 -268 l 720 -112 l 337 248 l 225 248 b 0 68 75 248 0 187 z',\n        },\n        accSagittalFlat35LDown: {\n            x_min: 0,\n            x_max: 500,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -68 b 225 -248 0 -187 75 -248 l 337 -248 l 720 112 l 720 268 l 495 56 l 495 517 l 452 517 l 452 17 l 360 -71 l 360 517 l 315 517 l 315 -112 l 225 -112 l 225 517 l 180 517 l 180 -104 b 45 68 89 -82 45 -26 l 45 248 l 0 248 z',\n        },\n        accSagittalDoubleSharp25SDown: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 68 b 135 -112 0 -53 45 -112 b 243 -62 180 -112 215 -95 l 89 -503 l 143 -517 l 292 -82 l 445 -517 l 495 -503 l 343 -62 b 449 -112 372 -95 408 -112 b 585 68 540 -112 585 -53 l 540 68 b 475 -4 540 20 517 -4 b 292 248 350 -4 315 148 b 112 -4 274 148 236 -4 b 45 68 68 -4 45 20 z',\n        },\n        accSagittalDoubleFlat25SUp: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 45 -68 b 112 4 45 -20 68 4 b 292 -248 236 4 274 -148 b 475 4 315 -148 350 4 b 540 -68 517 4 540 -20 l 585 -68 b 449 112 585 53 540 112 b 343 62 408 112 372 95 l 495 503 l 445 517 l 292 82 l 143 517 l 89 503 l 243 62 b 135 112 215 95 180 112 b 0 -68 45 112 0 53 z',\n        },\n        accSagittalDoubleSharp7CDown: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -503 l 52 -517 l 203 -82 l 354 -517 l 405 -503 l 230 0 l 271 108 b 495 -68 420 92 495 35 l 495 -248 l 540 -248 l 540 68 b 225 248 540 187 435 248 l 89 248 l 89 112 l 135 112 l 174 0 z m 213 112 l 203 82 l 192 112 z',\n        },\n        accSagittalDoubleFlat7CUp: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 174 0 l 135 -112 l 89 -112 l 89 -248 l 225 -248 b 540 -68 435 -248 540 -187 l 540 248 l 495 248 l 495 68 b 271 -108 495 -35 420 -92 l 230 0 l 405 503 l 354 517 l 203 82 l 52 517 l 0 503 z m 192 -112 l 203 -82 l 213 -112 z',\n        },\n        accSagittalDoubleSharp5CDown: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 405 -503 l 230 0 l 232 4 l 585 -264 l 585 -112 l 112 248 l 89 248 l 89 112 l 151 68 l 174 0 l 0 -503 l 52 -517 l 203 -82 l 354 -517 z',\n        },\n        accSagittalDoubleFlat5CUp: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 354 517 l 203 82 l 52 517 l 0 503 l 174 0 l 151 -68 l 89 -112 l 89 -248 l 112 -248 l 585 112 l 585 264 l 232 -4 l 230 0 l 405 503 z',\n        },\n        accSagittalDoubleSharp5v7kDown: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -274 l 252 35 l 265 0 l 89 -503 l 141 -517 l 292 -82 l 444 -517 l 495 -503 l 321 0 l 360 112 b 540 -68 480 112 540 53 l 540 -248 l 585 -248 l 585 68 b 405 248 585 187 526 248 l 292 248 l 0 -112 z',\n        },\n        accSagittalDoubleFlat5v7kUp: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 112 l 292 -248 l 405 -248 b 585 -68 526 -248 585 -187 l 585 248 l 540 248 l 540 68 b 360 -112 540 -53 480 -112 l 321 0 l 495 503 l 444 517 l 292 82 l 141 517 l 89 503 l 265 0 l 252 -35 l 0 274 z',\n        },\n        accSagittalDoubleSharp: {\n            x_min: 0,\n            x_max: 469,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 540 -503 l 366 0 l 380 45 l 675 -271 l 675 -112 l 337 248 l 0 -112 l 0 -271 l 295 45 l 310 0 l 135 -503 l 186 -517 l 337 -82 l 488 -517 z',\n        },\n        accSagittalDoubleFlat: {\n            x_min: 0,\n            x_max: 469,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 488 517 l 337 82 l 186 517 l 135 503 l 310 0 l 295 -45 l 0 271 l 0 112 l 337 -248 l 675 112 l 675 271 l 380 -45 l 366 0 l 540 503 z',\n        },\n        accSagittal7v11KleismaUp: {\n            x_min: 0,\n            x_max: 219,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 68 -112 b 135 -45 89 -112 112 -89 l 135 -517 l 180 -517 l 180 -45 b 248 -112 200 -89 225 -112 b 315 68 292 -112 315 -53 l 271 68 b 248 -4 271 20 264 -4 b 236 0 245 -4 240 -3 b 157 248 213 14 187 96 b 78 0 127 96 101 14 b 65 -4 73 -3 68 -4 b 45 68 50 -4 45 20 l 0 68 b 68 -112 0 -53 23 -112 z',\n        },\n        accSagittal7v11KleismaDown: {\n            x_min: 0,\n            x_max: 219,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 68 112 b 0 -68 23 112 0 53 l 45 -68 b 65 4 45 -20 50 4 b 78 0 68 4 73 3 b 157 -248 101 -14 127 -96 b 236 0 187 -96 213 -14 b 248 4 240 3 245 4 b 271 -68 264 4 271 -20 l 315 -68 b 248 112 315 53 292 112 b 180 45 225 112 200 89 l 180 517 l 135 517 l 135 45 b 68 112 112 89 89 112 z',\n        },\n        accSagittal17CommaUp: {\n            x_min: 0,\n            x_max: 281,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 45 -203 b 89 -23 45 -82 60 -23 l 157 -23 b 180 -4 164 -23 173 -17 l 180 -517 l 225 -517 l 225 -40 b 315 -118 248 -92 279 -118 b 405 62 374 -118 405 -59 l 360 62 b 324 -10 360 14 348 -10 b 302 -6 318 -10 311 -9 b 206 217 268 9 235 84 l 203 248 b 135 68 177 127 154 68 l 68 68 b 0 -203 23 68 0 -23 z',\n        },\n        accSagittal17CommaDown: {\n            x_min: 0,\n            x_max: 281,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 203 b 68 -68 0 23 23 -68 l 135 -68 b 203 -248 154 -68 177 -127 l 206 -217 b 302 6 235 -84 268 -9 b 324 10 311 9 318 10 b 360 -62 348 10 360 -14 l 405 -62 b 315 118 405 59 374 118 b 225 40 279 118 248 92 l 225 517 l 180 517 l 180 4 b 157 23 173 17 164 23 l 89 23 b 45 203 60 23 45 82 z',\n        },\n        accSagittal55CommaUp: {\n            x_min: 0,\n            x_max: 219,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 248 l 0 -517 l 45 -517 l 45 58 l 315 -274 l 315 -112 l 23 248 z',\n        },\n        accSagittal55CommaDown: {\n            x_min: 0,\n            x_max: 219,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 23 -248 l 315 112 l 315 274 l 45 -58 l 45 517 l 0 517 l 0 -248 z',\n        },\n        accSagittal7v11CommaUp: {\n            x_min: 0,\n            x_max: 188,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -248 l 45 -248 l 45 -68 b 180 112 45 53 89 112 l 225 112 l 225 -517 l 271 -517 l 271 248 l 135 248 b 0 68 45 248 0 187 z',\n        },\n        accSagittal7v11CommaDown: {\n            x_min: 0,\n            x_max: 188,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -68 b 135 -248 0 -187 45 -248 l 271 -248 l 271 517 l 225 517 l 225 -112 l 180 -112 b 45 68 89 -112 45 -53 l 45 248 l 0 248 z',\n        },\n        accSagittal5v11SmallDiesisUp: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 73 l 0 -248 l 45 -248 l 45 -68 b 180 112 45 53 89 112 l 225 112 l 225 -517 l 271 -517 l 271 -40 b 360 -118 295 -92 325 -118 b 449 62 420 -118 449 -59 l 405 62 b 369 -10 405 14 393 -10 b 348 -6 363 -10 356 -9 b 251 217 312 9 279 84 l 248 248 l 135 248 b 0 73 45 248 0 189 z',\n        },\n        accSagittal5v11SmallDiesisDown: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -73 b 135 -248 0 -189 45 -248 l 248 -248 l 251 -217 b 348 6 279 -84 312 -9 b 369 10 356 9 363 10 b 405 -62 393 10 405 -14 l 449 -62 b 360 118 449 59 420 118 b 271 40 325 118 295 92 l 271 517 l 225 517 l 225 -112 l 180 -112 b 45 68 89 -112 45 -53 l 45 248 l 0 248 z',\n        },\n        accSagittalSharp5v11SDown: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 45 -203 b 112 -23 45 -84 68 -23 l 135 -23 l 135 -517 l 180 -517 l 180 -23 b 242 37 203 -23 225 -3 b 315 -89 262 -23 285 -63 l 315 -517 l 360 -517 l 360 -112 l 383 -112 b 495 68 458 -112 495 -53 l 449 68 b 399 -4 449 20 433 -4 b 248 248 297 -4 261 171 b 157 68 222 127 192 68 l 89 68 b 0 -203 30 68 0 -23 z',\n        },\n        accSagittalFlat5v11SUp: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 203 b 89 -68 0 23 30 -68 l 157 -68 b 248 -248 192 -68 222 -127 b 399 4 261 -171 297 4 b 449 -68 433 4 449 -20 l 495 -68 b 383 112 495 53 458 112 l 360 112 l 360 517 l 315 517 l 315 89 b 242 -37 285 63 262 23 b 180 23 225 3 203 23 l 180 517 l 135 517 l 135 23 l 112 23 b 45 203 68 23 45 84 z',\n        },\n        accSagittalSharp7v11CDown: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 89 -112 l 89 -517 l 135 -517 l 135 -95 b 206 37 163 -73 187 -30 b 271 -23 225 -3 248 -23 l 271 -517 l 315 -517 l 315 -23 l 383 -23 b 449 -203 428 -23 449 -84 l 495 -203 b 405 68 495 -23 465 68 l 292 68 b 203 248 258 68 228 127 b 101 0 173 98 138 16 b 81 -3 94 0 86 -3 b 45 68 56 -3 45 20 l 0 68 b 89 -112 0 -52 30 -112 z',\n        },\n        accSagittalFlat7v11CUp: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 89 112 b 0 -68 30 112 0 52 l 45 -68 b 81 3 45 -20 56 3 b 101 0 86 3 94 0 b 203 -248 138 -16 173 -98 b 292 -68 228 -127 258 -68 l 405 -68 b 495 203 465 -68 495 23 l 449 203 b 383 23 449 84 428 23 l 315 23 l 315 517 l 271 517 l 271 23 b 206 -37 248 23 225 3 b 135 95 187 30 163 73 l 135 517 l 89 517 z',\n        },\n        accSagittalSharp55CDown: {\n            x_min: 0,\n            x_max: 250,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -271 l 135 -125 l 135 -517 l 180 -517 l 180 -78 l 315 65 l 315 -517 l 360 -517 l 360 248 l 337 248 l 0 -112 z',\n        },\n        accSagittalFlat55CUp: {\n            x_min: 0,\n            x_max: 250,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 112 l 337 -248 l 360 -248 l 360 517 l 315 517 l 315 -65 l 180 78 l 180 517 l 135 517 l 135 125 l 0 271 z',\n        },\n        accSagittalSharp17CDown: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 45 -248 l 45 -68 b 180 109 45 36 89 95 l 180 -517 l 225 -517 l 225 112 l 271 112 b 360 -89 292 13 321 -55 l 360 -517 l 405 -517 l 405 -112 l 428 -112 b 540 68 504 -112 540 -53 l 495 68 b 445 -4 495 20 480 -4 b 292 248 343 -4 307 171 l 180 248 b 0 68 60 248 0 187 l 0 -248 z',\n        },\n        accSagittalFlat17CUp: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 248 l 0 -68 b 180 -248 0 -187 60 -248 l 292 -248 b 445 4 307 -171 343 4 b 495 -68 480 4 495 -20 l 540 -68 b 428 112 540 53 504 112 l 405 112 l 405 517 l 360 517 l 360 89 b 271 -112 321 55 292 -13 l 225 -112 l 225 517 l 180 517 l 180 -109 b 45 68 89 -95 45 -36 l 45 248 z',\n        },\n        accSagittalSharp7v11kDown: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -32 l 405 138 l 405 13 l 0 -157 l 0 -256 l 225 -161 l 225 -517 l 271 -517 l 271 -144 l 405 -86 l 405 -517 l 449 -517 l 449 248 l 428 248 l 0 68 z',\n        },\n        accSagittalFlat7v11kUp: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -68 l 428 -248 l 449 -248 l 449 517 l 405 517 l 405 86 l 271 144 l 271 517 l 225 517 l 225 161 l 0 256 l 0 157 l 405 -13 l 405 -138 l 0 32 z',\n        },\n        accSagittalSharp7v11kUp: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 135 -112 l 135 -517 l 180 -517 l 180 -105 b 271 -23 217 -94 248 -65 l 271 -517 l 315 -517 l 315 -23 b 405 -105 337 -65 369 -94 l 405 -517 l 449 -517 l 449 -112 b 585 68 540 -112 585 -53 l 540 68 b 475 -4 540 20 517 -4 b 292 248 350 -4 315 148 b 112 -4 274 148 236 -4 b 45 68 68 -4 45 20 l 0 68 b 135 -112 0 -53 45 -112 z',\n        },\n        accSagittalFlat7v11kDown: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 135 112 b 0 -68 45 112 0 53 l 45 -68 b 112 4 45 -20 68 4 b 292 -248 236 4 274 -148 b 475 4 315 -148 350 4 b 540 -68 517 4 540 -20 l 585 -68 b 449 112 585 53 540 112 l 449 517 l 405 517 l 405 105 b 315 23 369 94 337 65 l 315 517 l 271 517 l 271 23 b 180 105 248 65 217 94 l 180 517 l 135 517 z',\n        },\n        accSagittalSharp17CUp: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 45 -203 b 135 -23 45 -84 75 -23 l 135 -517 l 180 -517 l 180 -23 l 203 -23 b 271 14 229 -23 251 -10 l 271 -517 l 315 -517 l 315 -23 b 405 -105 337 -65 369 -94 l 405 -517 l 449 -517 l 449 -112 b 585 68 540 -112 585 -53 l 540 68 b 475 -4 540 20 517 -4 b 292 248 350 -4 312 150 b 180 68 268 127 230 68 l 112 68 b 0 -203 37 68 0 -23 z',\n        },\n        accSagittalFlat17CDown: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 203 b 112 -68 0 23 37 -68 l 180 -68 b 292 -248 230 -68 268 -127 b 475 4 312 -150 350 4 b 540 -68 517 4 540 -20 l 585 -68 b 449 112 585 53 540 112 l 449 517 l 405 517 l 405 105 b 315 23 369 94 337 65 l 315 517 l 271 517 l 271 -14 b 203 23 251 10 229 23 l 180 23 l 180 517 l 135 517 l 135 23 b 45 203 75 23 45 84 z',\n        },\n        accSagittalSharp55CUp: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 45 -517 l 45 78 l 135 10 l 135 -517 l 180 -517 l 180 -23 l 271 -92 l 271 -517 l 315 -517 l 315 -127 l 495 -264 l 495 -112 l 23 248 l 0 248 l 0 -517 z',\n        },\n        accSagittalFlat55CDown: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 517 l 0 -248 l 23 -248 l 495 112 l 495 264 l 315 127 l 315 517 l 271 517 l 271 92 l 180 23 l 180 517 l 135 517 l 135 -10 l 45 -78 l 45 517 z',\n        },\n        accSagittalSharp7v11CUp: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 68 l 0 -248 l 45 -248 l 45 -68 b 180 86 45 6 89 58 l 180 -517 l 225 -517 l 225 98 b 315 109 252 104 282 108 l 315 -517 l 360 -517 l 360 112 l 449 112 l 449 -517 l 495 -517 l 495 248 l 360 248 b 0 68 121 248 0 189 z',\n        },\n        accSagittalFlat7v11CDown: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -68 b 360 -248 0 -189 121 -248 l 495 -248 l 495 517 l 449 517 l 449 -112 l 360 -112 l 360 517 l 315 517 l 315 -109 b 225 -98 282 -108 252 -104 l 225 517 l 180 517 l 180 -86 b 45 68 89 -58 45 -6 l 45 248 l 0 248 z',\n        },\n        accSagittalSharp5v11SUp: {\n            x_min: 0,\n            x_max: 438,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -248 l 45 -248 l 45 -68 b 180 104 45 26 89 82 l 180 -517 l 225 -517 l 225 112 l 315 112 l 315 -517 l 360 -517 l 360 -23 b 449 -105 383 -65 415 -94 l 449 -517 l 495 -517 l 495 -112 b 631 68 585 -112 631 -53 l 585 68 b 520 -4 585 20 563 -4 b 337 248 396 -4 360 150 l 225 248 b 0 68 76 248 0 187 z',\n        },\n        accSagittalFlat5v11SDown: {\n            x_min: 0,\n            x_max: 438,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -68 b 225 -248 0 -187 76 -248 l 337 -248 b 520 4 360 -150 396 4 b 585 -68 563 4 585 -20 l 631 -68 b 495 112 631 53 585 112 l 495 517 l 449 517 l 449 105 b 360 23 415 94 383 65 l 360 517 l 315 517 l 315 -112 l 225 -112 l 225 517 l 180 517 l 180 -104 b 45 68 89 -82 45 -26 l 45 248 l 0 248 z',\n        },\n        accSagittalDoubleSharp5v11SDown: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 45 -203 b 135 -23 45 -84 75 -23 l 203 -23 b 262 4 225 -23 245 -13 l 265 0 l 89 -503 l 141 -517 l 292 -82 l 444 -517 l 495 -503 l 341 -60 b 449 -112 370 -95 405 -112 b 585 68 540 -112 585 -53 l 540 68 b 475 -4 540 20 517 -4 b 292 248 350 -4 312 150 b 180 68 268 127 230 68 l 112 68 b 0 -203 37 68 0 -23 z',\n        },\n        accSagittalDoubleFlat5v11SUp: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 203 b 112 -68 0 23 37 -68 l 180 -68 b 292 -248 230 -68 268 -127 b 475 4 312 -150 350 4 b 540 -68 517 4 540 -20 l 585 -68 b 449 112 585 53 540 112 b 341 60 405 112 370 95 l 495 503 l 444 517 l 292 82 l 141 517 l 89 503 l 265 0 l 262 -4 b 203 23 245 13 225 23 l 135 23 b 45 203 75 23 45 84 z',\n        },\n        accSagittalDoubleSharp7v11CDown: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 112 -112 b 193 -73 143 -112 170 -99 l 45 -501 l 95 -517 l 248 -81 l 397 -517 l 449 -503 l 275 0 l 278 4 b 337 -23 295 -13 315 -23 l 405 -23 b 495 -203 465 -23 495 -84 l 540 -203 b 428 68 540 -23 503 68 l 360 68 b 248 248 310 68 271 127 b 122 0 217 98 176 16 b 95 -3 112 0 104 -3 b 45 68 60 -3 45 20 l 0 68 b 112 -112 0 -52 36 -112 z',\n        },\n        accSagittalDoubleFlat7v11CUp: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 112 112 b 0 -68 36 112 0 52 l 45 -68 b 95 3 45 -20 60 3 b 122 0 104 3 112 0 b 248 -248 176 -16 217 -98 b 360 -68 271 -127 310 -68 l 428 -68 b 540 203 503 -68 540 23 l 495 203 b 405 23 495 84 465 23 l 337 23 b 278 -4 315 23 295 13 l 275 0 l 449 503 l 397 517 l 248 81 l 95 517 l 45 501 l 193 73 b 112 112 170 99 143 112 z',\n        },\n        accSagittalDoubleSharp55CDown: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 428 248 l 0 -112 l 0 -266 l 307 -7 l 135 -503 l 186 -517 l 337 -82 l 488 -517 l 540 -503 l 366 0 l 386 59 l 449 112 l 449 248 z',\n        },\n        accSagittalDoubleFlat55CUp: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 449 -248 l 449 -112 l 386 -59 l 366 0 l 540 503 l 488 517 l 337 82 l 186 517 l 135 503 l 307 7 l 0 266 l 0 112 l 428 -248 z',\n        },\n        accSagittalDoubleSharp17CDown: {\n            x_min: 0,\n            x_max: 438,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 45 -248 l 45 -68 b 271 112 45 53 120 112 l 310 0 l 135 -503 l 186 -517 l 337 -82 l 488 -517 l 540 -503 l 387 -62 b 495 -112 416 -95 452 -112 b 631 68 585 -112 631 -53 l 585 68 b 520 -4 585 20 563 -4 b 337 248 396 -4 360 150 l 225 248 b 0 68 76 248 0 187 l 0 -248 z',\n        },\n        accSagittalDoubleFlat17CUp: {\n            x_min: 0,\n            x_max: 438,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 248 l 0 -68 b 225 -248 0 -187 76 -248 l 337 -248 b 520 4 360 -150 396 4 b 585 -68 563 4 585 -20 l 631 -68 b 495 112 631 53 585 112 b 387 62 452 112 416 95 l 540 503 l 488 517 l 337 82 l 186 517 l 135 503 l 310 0 l 271 -112 b 45 68 120 -112 45 -53 l 45 248 z',\n        },\n        accSagittalDoubleSharp7v11kDown: {\n            x_min: 0,\n            x_max: 438,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 68 l 0 -30 l 366 96 l 399 0 l 392 -23 l 0 -157 l 0 -255 l 353 -135 l 225 -503 l 276 -517 l 428 -82 l 579 -517 l 631 -503 l 455 0 l 507 145 l 540 157 l 540 248 l 517 248 z m 416 115 l 442 124 l 428 82 z',\n        },\n        accSagittalDoubleFlat7v11kUp: {\n            x_min: 0,\n            x_max: 438,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 517 -248 l 540 -248 l 540 -157 l 507 -145 l 455 0 l 631 503 l 579 517 l 428 82 l 276 517 l 225 503 l 353 135 l 0 255 l 0 157 l 392 23 l 399 0 l 366 -96 l 0 30 l 0 -68 z m 428 -82 l 442 -124 l 416 -115 z',\n        },\n        accSagittal23CommaUp: {\n            x_min: 0,\n            x_max: 188,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -517 l 45 -517 l 45 -4 b 68 -23 53 -17 60 -23 l 180 -23 b 225 -203 210 -23 225 -82 l 271 -203 b 206 68 271 -23 248 68 l 89 68 b 23 248 71 68 48 127 l 0 248 z',\n        },\n        accSagittal23CommaDown: {\n            x_min: 0,\n            x_max: 188,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -248 l 23 -248 b 89 -68 48 -127 71 -68 l 206 -68 b 271 203 248 -68 271 23 l 225 203 b 180 23 225 82 210 23 l 68 23 b 45 4 60 23 53 17 l 45 517 l 0 517 z',\n        },\n        accSagittal5v19CommaUp: {\n            x_min: 0,\n            x_max: 156,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -284 l 180 33 l 180 -517 l 225 -517 l 225 248 l 203 248 b 86 112 151 157 112 112 b 45 157 59 112 45 127 l 0 157 b 76 23 0 72 26 27 l 0 -112 z',\n        },\n        accSagittal5v19CommaDown: {\n            x_min: 0,\n            x_max: 156,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 112 l 76 -23 b 0 -157 26 -27 0 -72 l 45 -157 b 86 -112 45 -127 59 -112 b 203 -248 112 -112 151 -157 l 225 -248 l 225 517 l 180 517 l 180 -33 l 0 284 z',\n        },\n        accSagittal5v23SmallDiesisUp: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -284 l 180 33 l 180 -517 l 225 -517 l 225 -4 b 248 -23 233 -17 240 -23 l 360 -23 b 405 -203 390 -23 405 -82 l 449 -203 b 386 68 449 -23 428 68 l 271 68 b 203 248 251 68 228 127 l 0 -112 z',\n        },\n        accSagittal5v23SmallDiesisDown: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 112 l 203 -248 b 271 -68 228 -127 251 -68 l 386 -68 b 449 203 428 -68 449 23 l 405 203 b 360 23 405 82 390 23 l 248 23 b 225 4 240 23 233 17 l 225 517 l 180 517 l 180 -33 l 0 284 z',\n        },\n        accSagittalSharp5v23SDown: {\n            x_min: 0,\n            x_max: 281,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -517 l 45 -517 l 45 6 b 89 -23 59 -13 73 -23 l 180 -23 l 180 -517 l 225 -517 l 225 -23 l 292 -23 b 360 -203 337 -23 360 -84 l 405 -203 b 315 68 405 -23 374 68 l 112 68 b 23 248 78 68 48 127 l 0 248 z',\n        },\n        accSagittalFlat5v23SUp: {\n            x_min: 0,\n            x_max: 281,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -248 l 23 -248 b 112 -68 48 -127 78 -68 l 315 -68 b 405 203 374 -68 405 23 l 360 203 b 292 23 360 84 337 23 l 225 23 l 225 517 l 180 517 l 180 23 l 89 23 b 45 -6 73 23 59 13 l 45 517 l 0 517 z',\n        },\n        accSagittalSharp5v19CDown: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 68 b 89 -112 0 -52 30 -112 l 89 -517 l 135 -517 l 135 -95 b 225 112 173 -65 203 4 l 271 112 l 271 -517 l 315 -517 l 315 107 b 405 -68 374 89 405 30 l 405 -248 l 449 -248 l 449 68 b 315 248 449 189 405 248 l 203 248 b 101 0 173 98 138 16 b 81 -3 94 0 86 -3 b 45 68 56 -3 45 23 z',\n        },\n        accSagittalFlat5v19CUp: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 45 -68 b 81 3 45 -23 56 3 b 101 0 86 3 94 0 b 203 -248 138 -16 173 -98 l 315 -248 b 449 -68 405 -248 449 -189 l 449 248 l 405 248 l 405 68 b 315 -107 405 -30 374 -89 l 315 517 l 271 517 l 271 -112 l 225 -112 b 135 95 203 -4 173 65 l 135 517 l 89 517 l 89 112 b 0 -68 30 112 0 52 z',\n        },\n        accSagittalSharp23CDown: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 135 -82 l 135 -517 l 180 -517 l 180 -17 l 239 68 b 315 -23 261 7 287 -23 l 315 -517 l 360 -517 l 360 -23 l 428 -23 b 495 -203 472 -23 495 -84 l 540 -203 b 449 68 540 -23 510 68 l 337 68 b 248 248 302 68 271 127 l 0 -112 l 0 -276 z',\n        },\n        accSagittalFlat23CUp: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 276 l 0 112 l 248 -248 b 337 -68 271 -127 302 -68 l 449 -68 b 540 203 510 -68 540 23 l 495 203 b 428 23 495 84 472 23 l 360 23 l 360 517 l 315 517 l 315 23 b 239 -68 287 23 261 -7 l 180 17 l 180 517 l 135 517 l 135 82 z',\n        },\n        accSagittalSharp23CUp: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -517 l 45 -517 l 45 14 b 112 -23 63 -10 86 -23 l 135 -23 l 135 -517 l 180 -517 l 180 -23 l 271 -23 l 271 -517 l 315 -517 l 315 -23 l 360 -23 b 449 -203 420 -23 449 -84 l 495 -203 b 383 68 495 -23 458 68 l 135 68 b 23 248 85 68 48 127 l 0 248 z',\n        },\n        accSagittalFlat23CDown: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -248 l 23 -248 b 135 -68 48 -127 85 -68 l 383 -68 b 495 203 458 -68 495 23 l 449 203 b 360 23 449 84 420 23 l 315 23 l 315 517 l 271 517 l 271 23 l 180 23 l 180 517 l 135 517 l 135 23 l 112 23 b 45 -14 86 23 63 10 l 45 517 l 0 517 z',\n        },\n        accSagittalSharp5v19CUp: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -112 l 0 -266 l 135 -153 l 135 -517 l 180 -517 l 180 -115 l 271 -39 l 271 -517 l 315 -517 l 315 0 l 405 75 l 405 -517 l 449 -517 l 449 248 l 428 248 b 130 68 285 127 186 68 b 45 157 73 68 45 98 l 0 157 b 112 -20 0 53 37 -6 z',\n        },\n        accSagittalFlat5v19CDown: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 112 20 b 0 -157 37 6 0 -53 l 45 -157 b 130 -68 45 -98 73 -68 b 428 -248 186 -68 285 -127 l 449 -248 l 449 517 l 405 517 l 405 -75 l 315 0 l 315 517 l 271 517 l 271 39 l 180 115 l 180 517 l 135 517 l 135 153 l 0 266 l 0 112 z',\n        },\n        accSagittalSharp5v23SUp: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 135 -108 l 135 -517 l 180 -517 l 180 -53 l 271 58 l 271 -517 l 315 -517 l 315 14 b 383 -23 334 -10 357 -23 l 405 -23 l 405 -517 l 449 -517 l 449 -23 b 540 -203 510 -23 540 -84 l 585 -203 b 472 68 585 -23 547 68 l 405 68 b 292 248 356 68 318 127 l 0 -112 l 0 -274 z',\n        },\n        accSagittalFlat5v23SDown: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 274 l 0 112 l 292 -248 b 405 -68 318 -127 356 -68 l 472 -68 b 585 203 547 -68 585 23 l 540 203 b 449 23 540 84 510 23 l 449 517 l 405 517 l 405 23 l 383 23 b 315 -14 357 23 334 10 l 315 517 l 271 517 l 271 -58 l 180 53 l 180 517 l 135 517 l 135 108 z',\n        },\n        accSagittalDoubleSharp5v23SDown: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 52 -517 l 203 -81 l 354 -517 l 405 -503 l 239 -23 l 449 -23 b 540 -203 510 -23 540 -84 l 585 -203 b 472 68 585 -23 547 68 l 225 68 b 112 248 176 68 138 127 l 89 248 l 89 112 b 170 -14 109 45 135 0 l 0 -501 z',\n        },\n        accSagittalDoubleFlat5v23SUp: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 501 l 170 14 b 89 -112 135 0 109 -45 l 89 -248 l 112 -248 b 225 -68 138 -127 176 -68 l 472 -68 b 585 203 547 -68 585 23 l 540 203 b 449 23 540 84 510 23 l 239 23 l 405 503 l 354 517 l 203 81 l 52 517 z',\n        },\n        accSagittalDoubleSharp5v19CDown: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 68 b 112 -112 0 -52 36 -112 b 193 -73 143 -112 170 -99 l 45 -501 l 95 -517 l 248 -81 l 397 -517 l 449 -501 l 275 0 l 315 112 b 495 -68 435 112 495 53 l 495 -248 l 540 -248 l 540 68 b 360 248 540 189 480 248 l 248 248 b 122 0 217 98 176 16 b 95 -3 112 0 104 -3 b 45 68 60 -3 45 20 z',\n        },\n        accSagittalDoubleFlat5v19CUp: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 45 -68 b 95 3 45 -20 60 3 b 122 0 104 3 112 0 b 248 -248 176 -16 217 -98 l 360 -248 b 540 -68 480 -248 540 -189 l 540 248 l 495 248 l 495 68 b 315 -112 495 -53 435 -112 l 275 0 l 449 501 l 397 517 l 248 81 l 95 517 l 45 501 l 193 73 b 112 112 170 99 143 112 b 0 -68 36 112 0 52 z',\n        },\n        accSagittalDoubleSharp23CDown: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 252 35 l 265 0 l 89 -503 l 141 -517 l 292 -82 l 444 -517 l 495 -503 l 321 0 l 323 4 b 383 -23 340 -13 360 -23 l 449 -23 b 540 -203 510 -23 540 -84 l 585 -203 b 472 68 585 -23 547 68 l 405 68 b 292 248 356 68 318 127 l 0 -112 l 0 -274 z',\n        },\n        accSagittalDoubleFlat23CUp: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 274 l 0 112 l 292 -248 b 405 -68 318 -127 356 -68 l 472 -68 b 585 203 547 -68 585 23 l 540 203 b 449 23 540 84 510 23 l 383 23 b 323 -4 360 23 340 13 l 321 0 l 495 503 l 444 517 l 292 82 l 141 517 l 89 503 l 265 0 l 252 -35 z',\n        },\n        accSagittal19SchismaUp: {\n            x_min: 0,\n            x_max: 125,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 68 -112 b 135 -45 89 -112 112 -89 l 135 -517 l 180 -517 l 180 248 l 157 248 b 79 0 127 98 101 16 b 68 -3 73 0 68 -3 b 45 68 52 -3 45 20 l 0 68 b 68 -112 0 -52 23 -112 z',\n        },\n        accSagittal19SchismaDown: {\n            x_min: 0,\n            x_max: 125,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 68 112 b 0 -68 23 112 0 52 l 45 -68 b 68 3 45 -20 52 3 b 79 0 68 3 73 0 b 157 -248 101 -16 127 -98 l 180 -248 l 180 517 l 135 517 l 135 45 b 68 112 112 89 89 112 z',\n        },\n        accSagittal17KleismaUp: {\n            x_min: 0,\n            x_max: 156,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 45 -203 b 89 -23 45 -82 60 -23 l 157 -23 b 180 -4 164 -23 173 -17 l 180 -517 l 225 -517 l 225 248 l 203 248 b 135 68 177 127 154 68 l 68 68 b 0 -203 23 68 0 -23 z',\n        },\n        accSagittal17KleismaDown: {\n            x_min: 0,\n            x_max: 156,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 203 b 68 -68 0 23 23 -68 l 135 -68 b 203 -248 154 -68 177 -127 l 225 -248 l 225 517 l 180 517 l 180 4 b 157 23 173 17 164 23 l 89 23 b 45 203 60 23 45 82 z',\n        },\n        accSagittal143CommaUp: {\n            x_min: 0,\n            x_max: 156,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -203 l 45 -203 b 89 -23 45 -82 60 -23 l 157 -23 b 180 -4 164 -23 173 -17 l 180 -517 l 225 -517 l 225 248 l 203 248 b 135 68 177 127 154 68 l 105 68 b 45 157 65 68 45 98 l 0 157 b 23 20 0 95 7 50 b 0 -203 7 -23 0 -98 z',\n        },\n        accSagittal143CommaDown: {\n            x_min: 0,\n            x_max: 156,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 203 b 23 -20 0 98 7 23 b 0 -157 7 -50 0 -95 l 45 -157 b 105 -68 45 -98 65 -68 l 135 -68 b 203 -248 154 -68 177 -127 l 225 -248 l 225 517 l 180 517 l 180 4 b 157 23 173 17 164 23 l 89 23 b 45 203 60 23 45 82 z',\n        },\n        accSagittal11v49CommaUp: {\n            x_min: 0,\n            x_max: 188,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 45 -292 b 89 -157 45 -203 60 -157 l 203 -157 b 225 -143 210 -157 217 -153 l 225 -517 l 271 -517 l 271 248 l 248 248 b 180 157 233 187 210 157 l 68 157 b 0 -68 23 157 0 82 l 45 -68 b 89 68 45 23 60 68 l 203 68 b 225 84 209 68 216 72 l 225 -36 b 180 -68 213 -58 199 -68 l 68 -68 b 0 -292 23 -68 0 -143 z',\n        },\n        accSagittal11v49CommaDown: {\n            x_min: 0,\n            x_max: 188,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 292 b 68 68 0 143 23 68 l 180 68 b 225 36 199 68 213 58 l 225 -84 b 203 -68 216 -72 209 -68 l 89 -68 b 45 68 60 -68 45 -23 l 0 68 b 68 -157 0 -82 23 -157 l 180 -157 b 248 -248 210 -157 233 -187 l 271 -248 l 271 517 l 225 517 l 225 143 b 203 157 217 153 210 157 l 89 157 b 45 292 60 157 45 203 z',\n        },\n        accSagittal19CommaUp: {\n            x_min: 0,\n            x_max: 281,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 68 b 68 -112 0 -52 23 -112 b 135 -45 89 -112 112 -89 l 135 -517 l 180 -517 l 180 -4 b 203 -23 187 -17 196 -23 l 315 -23 b 360 -203 346 -23 360 -82 l 405 -203 b 341 68 405 -23 383 68 l 225 68 b 157 248 206 68 183 127 b 79 0 127 98 101 16 b 68 -3 73 0 68 -3 b 45 68 52 -3 45 20 z',\n        },\n        accSagittal19CommaDown: {\n            x_min: 0,\n            x_max: 281,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 45 -68 b 68 3 45 -20 52 3 b 79 0 68 3 73 0 b 157 -248 101 -16 127 -98 b 225 -68 183 -127 206 -68 l 341 -68 b 405 203 383 -68 405 23 l 360 203 b 315 23 360 82 346 23 l 203 23 b 180 4 196 23 187 17 l 180 517 l 135 517 l 135 45 b 68 112 112 89 89 112 b 0 -68 23 112 0 52 z',\n        },\n        accSagittal7v19CommaUp: {\n            x_min: 0,\n            x_max: 250,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 68 b 68 -112 0 -52 23 -112 b 135 -45 89 -112 112 -89 l 135 -517 l 180 -517 l 180 112 l 225 112 b 315 -68 285 112 315 53 l 315 -248 l 360 -248 l 360 68 b 271 248 360 187 330 248 l 157 248 b 79 0 127 98 101 16 b 68 -3 73 0 68 -3 b 45 68 52 -3 45 20 z',\n        },\n        accSagittal7v19CommaDown: {\n            x_min: 0,\n            x_max: 250,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 45 -68 b 68 3 45 -20 52 3 b 79 0 68 3 73 0 b 157 -248 101 -16 127 -98 l 271 -248 b 360 -68 330 -248 360 -187 l 360 248 l 315 248 l 315 68 b 225 -112 315 -53 285 -112 l 180 -112 l 180 517 l 135 517 l 135 45 b 68 112 112 89 89 112 b 0 -68 23 112 0 52 z',\n        },\n        accSagittal49SmallDiesisUp: {\n            x_min: 0,\n            x_max: 281,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -203 l 45 -203 b 89 -23 45 -82 60 -23 l 157 -23 b 180 -4 164 -23 173 -17 l 180 -517 l 225 -517 l 225 112 l 271 112 b 360 -68 330 112 360 53 l 360 -248 l 405 -248 l 405 68 b 315 248 405 187 374 248 l 203 248 b 135 68 177 127 154 68 l 68 68 b 0 -203 23 68 0 -23 z',\n        },\n        accSagittal49SmallDiesisDown: {\n            x_min: 0,\n            x_max: 281,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 203 b 68 -68 0 23 23 -68 l 135 -68 b 203 -248 154 -68 177 -127 l 315 -248 b 405 -68 374 -248 405 -187 l 405 248 l 360 248 l 360 68 b 271 -112 360 -53 330 -112 l 225 -112 l 225 517 l 180 517 l 180 4 b 157 23 173 17 164 23 l 89 23 b 45 203 60 23 45 82 z',\n        },\n        accSagittal23SmallDiesisUp: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 45 -203 b 89 -23 45 -82 60 -23 l 157 -23 b 180 -4 164 -23 173 -17 l 180 -517 l 225 -517 l 225 58 l 495 -274 l 495 -112 l 203 248 b 135 68 177 127 154 68 l 68 68 b 0 -203 23 68 0 -23 z',\n        },\n        accSagittal23SmallDiesisDown: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 203 b 68 -68 0 23 23 -68 l 135 -68 b 203 -248 154 -68 177 -127 l 495 112 l 495 274 l 225 -58 l 225 517 l 180 517 l 180 4 b 157 23 173 17 164 23 l 89 23 b 45 203 60 23 45 82 z',\n        },\n        accSagittal5v13MediumDiesisUp: {\n            x_min: 0,\n            x_max: 250,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -259 l 315 -89 l 315 -517 l 360 -517 l 360 248 l 337 248 b 128 180 253 203 184 180 b 45 248 73 180 45 203 l 0 248 b 52 95 0 170 17 120 l 0 68 l 0 -33 l 315 135 l 315 10 l 0 -157 z',\n        },\n        accSagittal5v13MediumDiesisDown: {\n            x_min: 0,\n            x_max: 250,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 157 l 315 -10 l 315 -135 l 0 33 l 0 -68 l 52 -95 b 0 -248 17 -120 0 -170 l 45 -248 b 128 -180 45 -203 73 -180 b 337 -248 184 -180 253 -203 l 360 -248 l 360 517 l 315 517 l 315 89 l 0 259 z',\n        },\n        accSagittal11v19MediumDiesisUp: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 45 -248 l 45 -68 b 180 112 45 53 89 112 l 225 112 l 225 -517 l 271 -517 l 271 -4 b 292 -23 278 -17 285 -23 l 405 -23 b 449 -203 435 -23 449 -82 l 495 -203 b 431 68 495 -23 472 68 l 315 68 b 248 248 295 68 271 127 l 135 248 b 0 68 45 248 0 187 l 0 -248 z',\n        },\n        accSagittal11v19MediumDiesisDown: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 248 l 0 -68 b 135 -248 0 -187 45 -248 l 248 -248 b 315 -68 271 -127 295 -68 l 431 -68 b 495 203 472 -68 495 23 l 449 203 b 405 23 449 82 435 23 l 292 23 b 271 4 285 23 278 17 l 271 517 l 225 517 l 225 -112 l 180 -112 b 45 68 89 -112 45 -53 l 45 248 z',\n        },\n        accSagittal49MediumDiesisUp: {\n            x_min: 0,\n            x_max: 250,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -68 l 0 -248 l 45 -248 l 315 -94 l 315 -517 l 360 -517 l 360 248 l 225 248 b 0 -68 75 248 0 143 z m 45 -68 b 225 112 45 53 105 112 l 315 112 l 315 10 l 45 -145 z',\n        },\n        accSagittal49MediumDiesisDown: {\n            x_min: 0,\n            x_max: 250,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 68 b 225 -248 0 -143 75 -248 l 360 -248 l 360 517 l 315 517 l 315 94 l 45 248 l 0 248 z m 45 145 l 315 -10 l 315 -112 l 225 -112 b 45 68 105 -112 45 -53 z',\n        },\n        accSagittal5v49MediumDiesisUp: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -89 l 0 -248 l 225 53 l 225 -517 l 271 -517 l 271 53 l 495 -248 l 495 -89 l 248 248 b 89 89 170 143 118 89 b 45 157 60 89 45 112 l 0 157 b 68 3 0 68 23 16 z',\n        },\n        accSagittal5v49MediumDiesisDown: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 68 -3 b 0 -157 23 -16 0 -68 l 45 -157 b 89 -89 45 -112 60 -89 b 248 -248 118 -89 170 -143 l 495 89 l 495 248 l 271 -53 l 271 517 l 225 517 l 225 -53 l 0 248 l 0 89 z',\n        },\n        accSagittal49LargeDiesisUp: {\n            x_min: 0,\n            x_max: 281,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -517 l 45 -517 l 45 -89 l 360 -248 l 405 -248 l 405 -68 b 180 248 405 143 330 248 l 0 248 z m 45 12 l 45 112 l 180 112 b 360 -68 300 112 360 53 l 360 -147 z',\n        },\n        accSagittal49LargeDiesisDown: {\n            x_min: 0,\n            x_max: 281,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -248 l 180 -248 b 405 68 330 -248 405 -143 l 405 248 l 360 248 l 45 89 l 45 517 l 0 517 z m 360 147 l 360 68 b 180 -112 360 -53 300 -112 l 45 -112 l 45 -12 z',\n        },\n        accSagittal11v19LargeDiesisUp: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -517 l 45 -517 l 45 -86 l 449 -256 l 449 -157 l 45 13 l 45 138 l 449 -30 l 449 68 l 23 248 l 0 248 z',\n        },\n        accSagittal11v19LargeDiesisDown: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -248 l 23 -248 l 449 -68 l 449 30 l 45 -138 l 45 -13 l 449 157 l 449 256 l 45 86 l 45 517 l 0 517 z',\n        },\n        accSagittal5v13LargeDiesisUp: {\n            x_min: 0,\n            x_max: 438,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 68 b 89 -112 0 -52 30 -112 b 180 -35 125 -112 157 -86 l 180 -517 l 225 -517 l 225 -86 l 631 -256 l 631 -157 l 225 13 l 225 138 l 631 -30 l 631 68 l 203 248 b 101 0 173 98 138 16 b 81 -3 94 0 86 -3 b 45 68 56 -3 45 20 z',\n        },\n        accSagittal5v13LargeDiesisDown: {\n            x_min: 0,\n            x_max: 438,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 45 -68 b 81 3 45 -20 56 3 b 101 0 86 3 94 0 b 203 -248 138 -16 173 -98 l 631 -68 l 631 30 l 225 -138 l 225 -13 l 631 157 l 631 256 l 225 86 l 225 517 l 180 517 l 180 35 b 89 112 157 86 125 112 b 0 -68 30 112 0 52 z',\n        },\n        accSagittalSharp23SDown: {\n            x_min: 0,\n            x_max: 250,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -203 l 45 -203 b 112 -23 45 -84 68 -23 l 135 -23 l 135 -517 l 180 -517 l 180 -23 l 271 -23 b 315 6 287 -23 301 -13 l 315 -517 l 360 -517 l 360 248 l 337 248 b 248 68 312 127 282 68 l 194 68 b 89 157 125 68 89 98 l 45 157 b 60 59 45 118 50 85 b 0 -203 20 30 0 -56 z',\n        },\n        accSagittalFlat23SUp: {\n            x_min: 0,\n            x_max: 250,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 203 b 60 -59 0 56 20 -30 b 45 -157 50 -85 45 -118 l 89 -157 b 194 -68 89 -98 125 -68 l 248 -68 b 337 -248 282 -68 312 -127 l 360 -248 l 360 517 l 315 517 l 315 -6 b 271 23 301 13 287 23 l 180 23 l 180 517 l 135 517 l 135 23 l 112 23 b 45 203 68 23 45 84 z',\n        },\n        accSagittalSharp49SDown: {\n            x_min: 0,\n            x_max: 250,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -292 l 45 -292 b 112 -157 45 -203 68 -157 l 135 -157 l 135 -517 l 180 -517 l 180 -157 l 271 -157 b 315 -135 285 -157 300 -150 l 315 -517 l 360 -517 l 360 248 l 337 248 b 248 157 323 187 292 157 l 89 157 b 0 -68 30 157 0 82 l 45 -68 b 112 68 45 23 68 68 l 271 68 b 315 89 284 68 300 75 l 315 -32 b 248 -68 298 -56 275 -68 l 89 -68 b 0 -292 29 -68 0 -143 z',\n        },\n        accSagittalFlat49SUp: {\n            x_min: 0,\n            x_max: 250,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 292 b 89 68 0 143 29 68 l 248 68 b 315 32 275 68 298 56 l 315 -89 b 271 -68 300 -75 284 -68 l 112 -68 b 45 68 68 -68 45 -23 l 0 68 b 89 -157 0 -82 30 -157 l 248 -157 b 337 -248 292 -157 323 -187 l 360 -248 l 360 517 l 315 517 l 315 135 b 271 157 300 150 285 157 l 180 157 l 180 517 l 135 517 l 135 157 l 112 157 b 45 292 68 157 45 203 z',\n        },\n        accSagittalSharp7v19CDown: {\n            x_min: 0,\n            x_max: 250,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -112 l 0 -271 l 135 -125 l 135 -517 l 180 -517 l 180 -78 l 315 65 l 315 -517 l 360 -517 l 360 248 l 337 248 b 118 89 239 143 166 89 b 45 157 68 89 45 112 l 0 157 b 89 -20 0 53 29 -6 z',\n        },\n        accSagittalFlat7v19CUp: {\n            x_min: 0,\n            x_max: 250,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 89 20 b 0 -157 29 6 0 -53 l 45 -157 b 118 -89 45 -112 68 -89 b 337 -248 166 -89 239 -143 l 360 -248 l 360 517 l 315 517 l 315 -65 l 180 78 l 180 517 l 135 517 l 135 125 l 0 271 l 0 112 z',\n        },\n        accSagittalSharp19CDown: {\n            x_min: 0,\n            x_max: 281,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -248 l 45 -248 l 45 -68 b 180 96 45 17 89 72 l 180 -517 l 225 -517 l 225 107 b 315 112 252 112 282 112 l 360 112 l 360 -517 l 405 -517 l 405 248 l 271 248 b 0 68 89 248 0 187 z',\n        },\n        accSagittalFlat19CUp: {\n            x_min: 0,\n            x_max: 281,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -68 b 271 -248 0 -187 89 -248 l 405 -248 l 405 517 l 360 517 l 360 -112 l 315 -112 b 225 -107 282 -112 252 -112 l 225 517 l 180 517 l 180 -96 b 45 68 89 -72 45 -17 l 45 248 l 0 248 z',\n        },\n        accSagittalSharp11v49CDown: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 45 -203 b 112 -23 45 -82 68 -23 l 135 -23 l 135 -517 l 180 -517 l 180 -23 b 271 112 215 -23 245 23 l 315 112 l 315 -517 l 360 -517 l 360 107 b 449 -68 420 89 449 30 l 449 -248 l 495 -248 l 495 68 b 360 248 495 189 449 248 l 248 248 b 157 68 222 128 192 68 l 89 68 b 0 -203 30 68 0 -23 z',\n        },\n        accSagittalFlat11v49CUp: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 203 b 89 -68 0 23 30 -68 l 157 -68 b 248 -248 192 -68 222 -128 l 360 -248 b 495 -68 449 -248 495 -189 l 495 248 l 449 248 l 449 68 b 360 -107 449 -30 420 -89 l 360 517 l 315 517 l 315 -112 l 271 -112 b 180 23 245 -23 215 23 l 180 517 l 135 517 l 135 23 l 112 23 b 45 203 68 23 45 82 z',\n        },\n        accSagittalSharp143CDown: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 45 -203 b 112 -23 45 -84 68 -23 l 135 -23 l 135 -517 l 180 -517 l 180 -23 b 259 76 210 -23 236 10 l 315 17 l 315 -517 l 360 -517 l 360 -30 l 585 -271 l 585 -112 l 248 248 b 157 68 222 127 192 68 l 89 68 b 0 -203 30 68 0 -23 z',\n        },\n        accSagittalFlat143CUp: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 203 b 89 -68 0 23 30 -68 l 157 -68 b 248 -248 192 -68 222 -127 l 585 112 l 585 271 l 360 30 l 360 517 l 315 517 l 315 -17 l 259 -76 b 180 23 236 -10 210 23 l 180 517 l 135 517 l 135 23 l 112 23 b 45 203 68 23 45 84 z',\n        },\n        accSagittalSharp17kDown: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -157 l 0 -256 l 225 -161 l 225 -517 l 271 -517 l 271 -144 l 405 -86 l 405 -517 l 449 -517 l 449 248 l 428 248 b 145 171 305 196 210 171 b 45 248 78 171 45 196 l 0 248 b 79 101 0 170 26 121 l 0 68 l 0 -32 l 405 138 l 405 13 z',\n        },\n        accSagittalFlat17kUp: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 405 -13 l 405 -138 l 0 32 l 0 -68 l 79 -101 b 0 -248 26 -121 0 -170 l 45 -248 b 145 -171 45 -196 78 -171 b 428 -248 210 -171 305 -196 l 449 -248 l 449 517 l 405 517 l 405 86 l 271 144 l 271 517 l 225 517 l 225 161 l 0 256 l 0 157 z',\n        },\n        accSagittalSharp19sDown: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -248 l 45 -248 l 45 -68 b 180 109 45 36 89 95 l 180 -517 l 225 -517 l 225 112 l 271 112 b 360 -23 295 23 325 -23 l 360 -517 l 405 -517 l 405 -23 l 472 -23 b 540 -203 517 -23 540 -84 l 585 -203 b 495 68 585 -23 554 68 l 383 68 b 292 248 348 68 318 127 l 180 248 b 0 68 60 248 0 187 z',\n        },\n        accSagittalFlat19sUp: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -68 b 180 -248 0 -187 60 -248 l 292 -248 b 383 -68 318 -127 348 -68 l 495 -68 b 585 203 554 -68 585 23 l 540 203 b 472 23 540 84 517 23 l 405 23 l 405 517 l 360 517 l 360 23 b 271 -112 325 23 295 -23 l 225 -112 l 225 517 l 180 517 l 180 -109 b 45 68 89 -95 45 -36 l 45 248 l 0 248 z',\n        },\n        accSagittalSharp19sUp: {\n            x_min: 0,\n            x_max: 281,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 89 -96 l 89 -517 l 135 -517 l 135 -108 b 180 -112 148 -112 163 -112 b 225 -108 196 -112 210 -112 l 225 -517 l 271 -517 l 271 -94 b 360 -12 305 -78 337 -50 l 360 -517 l 405 -517 l 405 248 l 383 248 b 190 0 353 98 288 16 b 138 -3 171 0 153 -3 b 45 68 75 -3 45 20 l 0 68 b 89 -96 0 -17 30 -72 z',\n        },\n        accSagittalFlat19sDown: {\n            x_min: 0,\n            x_max: 281,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 89 96 b 0 -68 30 72 0 17 l 45 -68 b 138 3 45 -20 75 3 b 190 0 153 3 171 0 b 383 -248 288 -16 353 -98 l 405 -248 l 405 517 l 360 517 l 360 12 b 271 94 337 50 305 78 l 271 517 l 225 517 l 225 108 b 180 112 210 112 196 112 b 135 108 163 112 148 112 l 135 517 l 89 517 z',\n        },\n        accSagittalSharp17kUp: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 45 -203 b 135 -23 45 -84 75 -23 l 135 -517 l 180 -517 l 180 -23 l 271 -23 l 271 -517 l 315 -517 l 315 -23 l 337 -23 b 405 14 363 -23 386 -10 l 405 -517 l 449 -517 l 449 248 l 428 248 b 315 68 402 127 364 68 l 112 68 b 0 -203 37 68 0 -23 z',\n        },\n        accSagittalFlat17kDown: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 203 b 112 -68 0 23 37 -68 l 315 -68 b 428 -248 364 -68 402 -127 l 449 -248 l 449 517 l 405 517 l 405 -14 b 337 23 386 10 363 23 l 315 23 l 315 517 l 271 517 l 271 23 l 180 23 l 180 517 l 135 517 l 135 23 b 45 203 75 23 45 84 z',\n        },\n        accSagittalSharp143CUp: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 45 -203 b 135 -23 45 -84 75 -23 l 135 -517 l 180 -517 l 180 -23 l 271 -23 l 271 -517 l 315 -517 l 315 -23 l 337 -23 b 405 14 363 -23 386 -10 l 405 -517 l 449 -517 l 449 248 l 428 248 b 315 68 402 127 364 68 l 240 68 b 89 157 140 68 89 98 l 45 157 b 68 53 45 115 52 81 b 0 -203 23 23 0 -63 z',\n        },\n        accSagittalFlat143CDown: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 203 b 68 -53 0 63 23 -23 b 45 -157 52 -81 45 -115 l 89 -157 b 240 -68 89 -98 140 -68 l 315 -68 b 428 -248 364 -68 402 -127 l 449 -248 l 449 517 l 405 517 l 405 -14 b 337 23 386 10 363 23 l 315 23 l 315 517 l 271 517 l 271 23 l 180 23 l 180 517 l 135 517 l 135 23 b 45 203 75 23 45 84 z',\n        },\n        accSagittalSharp11v49CUp: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 45 -68 b 135 68 45 23 76 68 l 337 68 b 405 95 363 68 386 76 l 405 -27 b 315 -68 386 -55 356 -68 l 112 -68 b 0 -292 37 -68 0 -143 l 45 -292 b 135 -157 45 -203 75 -157 l 135 -517 l 180 -517 l 180 -157 l 271 -157 l 271 -517 l 315 -517 l 315 -157 l 337 -157 b 405 -130 360 -157 383 -148 l 405 -517 l 449 -517 l 449 248 l 428 248 b 315 157 413 187 376 157 l 112 157 b 0 -68 37 157 0 82 z',\n        },\n        accSagittalFlat11v49CDown: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 68 b 112 -157 0 -82 37 -157 l 315 -157 b 428 -248 376 -157 413 -187 l 449 -248 l 449 517 l 405 517 l 405 130 b 337 157 383 148 360 157 l 315 157 l 315 517 l 271 517 l 271 157 l 180 157 l 180 517 l 135 517 l 135 157 b 45 292 75 157 45 203 l 0 292 b 112 68 0 143 37 68 l 315 68 b 405 27 356 68 386 55 l 405 -95 b 337 -68 386 -76 363 -68 l 135 -68 b 45 68 76 -68 45 -23 z',\n        },\n        accSagittalSharp19CUp: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 89 -109 l 89 -517 l 135 -517 l 135 -109 b 225 -27 170 -102 200 -75 l 225 -517 l 271 -517 l 271 14 b 337 -23 289 -10 311 -23 l 360 -23 l 360 -517 l 405 -517 l 405 -23 b 495 -203 465 -23 495 -82 l 540 -203 b 428 68 540 -23 503 68 l 360 68 b 248 248 310 68 271 128 b 122 0 217 98 176 16 b 95 -3 112 0 104 -3 b 45 68 60 -3 45 20 l 0 68 b 89 -109 0 -39 30 -98 z',\n        },\n        accSagittalFlat19CDown: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 89 109 b 0 -68 30 98 0 39 l 45 -68 b 95 3 45 -20 60 3 b 122 0 104 3 112 0 b 248 -248 176 -16 217 -98 b 360 -68 271 -128 310 -68 l 428 -68 b 540 203 503 -68 540 23 l 495 203 b 405 23 495 82 465 23 l 405 517 l 360 517 l 360 23 l 337 23 b 271 -14 311 23 289 10 l 271 517 l 225 517 l 225 27 b 135 109 200 75 170 102 l 135 517 l 89 517 z',\n        },\n        accSagittalSharp7v19CUp: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 89 -109 l 89 -517 l 135 -517 l 135 -109 b 225 -27 170 -102 200 -75 l 225 -517 l 271 -517 l 271 112 l 315 112 b 360 109 331 112 346 112 l 360 -517 l 405 -517 l 405 98 b 495 -68 465 73 495 19 l 495 -248 l 540 -248 l 540 68 b 360 248 540 189 480 248 l 248 248 b 122 0 217 98 176 16 b 95 -3 112 0 104 -3 b 45 68 60 -3 45 20 l 0 68 b 89 -109 0 -39 30 -98 z',\n        },\n        accSagittalFlat7v19CDown: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 89 109 b 0 -68 30 98 0 39 l 45 -68 b 95 3 45 -20 60 3 b 122 0 104 3 112 0 b 248 -248 176 -16 217 -98 l 360 -248 b 540 -68 480 -248 540 -189 l 540 248 l 495 248 l 495 68 b 405 -98 495 -19 465 -73 l 405 517 l 360 517 l 360 -109 b 315 -112 346 -112 331 -112 l 271 -112 l 271 517 l 225 517 l 225 27 b 135 109 200 75 170 102 l 135 517 l 89 517 z',\n        },\n        accSagittalSharp49SUp: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 45 -203 b 135 -23 45 -84 75 -23 l 135 -517 l 180 -517 l 180 -23 l 203 -23 b 271 14 229 -23 251 -10 l 271 -517 l 315 -517 l 315 112 l 360 112 b 405 109 376 112 390 112 l 405 -517 l 449 -517 l 449 96 b 540 -68 510 72 540 17 l 540 -248 l 585 -248 l 585 68 b 405 248 585 187 526 248 l 292 248 b 180 68 268 127 230 68 l 112 68 b 0 -203 37 68 0 -23 z',\n        },\n        accSagittalFlat49SDown: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 203 b 112 -68 0 23 37 -68 l 180 -68 b 292 -248 230 -68 268 -127 l 405 -248 b 585 -68 526 -248 585 -187 l 585 248 l 540 248 l 540 68 b 449 -96 540 -17 510 -72 l 449 517 l 405 517 l 405 -109 b 360 -112 390 -112 376 -112 l 315 -112 l 315 517 l 271 517 l 271 -14 b 203 23 251 10 229 23 l 180 23 l 180 517 l 135 517 l 135 23 b 45 203 75 23 45 84 z',\n        },\n        accSagittalSharp23SUp: {\n            x_min: 0,\n            x_max: 469,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 45 -203 b 135 -23 45 -84 75 -23 l 135 -517 l 180 -517 l 180 -23 l 203 -23 b 271 14 229 -23 251 -10 l 271 -517 l 315 -517 l 315 71 l 405 -14 l 405 -517 l 449 -517 l 449 -56 l 675 -268 l 675 -112 l 292 248 b 180 68 268 127 230 68 l 112 68 b 0 -203 37 68 0 -23 z',\n        },\n        accSagittalFlat23SDown: {\n            x_min: 0,\n            x_max: 469,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 203 b 112 -68 0 23 37 -68 l 180 -68 b 292 -248 230 -68 268 -127 l 675 112 l 675 268 l 449 56 l 449 517 l 405 517 l 405 14 l 315 -71 l 315 517 l 271 517 l 271 -14 b 203 23 251 10 229 23 l 180 23 l 180 517 l 135 517 l 135 23 b 45 203 75 23 45 84 z',\n        },\n        accSagittalSharp5v13MUp: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 495 141 l 495 14 l 0 -157 l 0 -256 l 225 -180 l 225 -517 l 271 -517 l 271 -161 l 360 -130 l 360 -517 l 405 -517 l 405 -115 l 495 -84 l 495 -517 l 540 -517 l 540 248 l 517 248 b 167 168 366 194 248 168 b 45 248 85 168 45 194 l 0 248 b 95 99 0 170 30 120 l 0 68 l 0 -30 z',\n        },\n        accSagittalFlat5v13MDown: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 30 l 0 -68 l 95 -99 b 0 -248 30 -120 0 -170 l 45 -248 b 167 -168 45 -194 85 -168 b 517 -248 248 -168 366 -194 l 540 -248 l 540 517 l 495 517 l 495 84 l 405 115 l 405 517 l 360 517 l 360 130 l 271 161 l 271 517 l 225 517 l 225 180 l 0 256 l 0 157 l 495 -14 l 495 -141 z',\n        },\n        accSagittalSharp11v19MUp: {\n            x_min: 0,\n            x_max: 438,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 68 l 0 -248 l 45 -248 l 45 -68 b 180 104 45 26 89 82 l 180 -517 l 225 -517 l 225 112 l 315 112 l 315 -517 l 360 -517 l 360 14 b 428 -23 379 -10 402 -23 l 449 -23 l 449 -517 l 495 -517 l 495 -23 b 585 -203 554 -23 585 -84 l 631 -203 b 517 68 631 -23 593 68 l 449 68 b 337 248 400 68 363 127 l 225 248 b 0 68 75 248 0 187 z',\n        },\n        accSagittalFlat11v19MDown: {\n            x_min: 0,\n            x_max: 438,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -68 b 225 -248 0 -187 75 -248 l 337 -248 b 449 -68 363 -127 400 -68 l 517 -68 b 631 203 593 -68 631 23 l 585 203 b 495 23 585 84 554 23 l 495 517 l 449 517 l 449 23 l 428 23 b 360 -14 402 23 379 10 l 360 517 l 315 517 l 315 -112 l 225 -112 l 225 517 l 180 517 l 180 -104 b 45 68 89 -82 45 -26 l 45 248 l 0 248 z',\n        },\n        accSagittalSharp49MUp: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -248 l 45 -248 l 225 -180 l 225 -517 l 271 -517 l 271 -166 l 360 -132 l 360 -517 l 405 -517 l 405 -117 l 495 -84 l 495 -517 l 540 -517 l 540 248 l 360 248 b 0 -68 120 248 0 143 z m 45 -145 l 45 -68 b 360 112 45 53 150 112 l 495 112 l 495 14 z',\n        },\n        accSagittalFlat49MDown: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 68 b 360 -248 0 -143 120 -248 l 540 -248 l 540 517 l 495 517 l 495 84 l 405 117 l 405 517 l 360 517 l 360 132 l 271 166 l 271 517 l 225 517 l 225 180 l 45 248 l 0 248 z m 495 -14 l 495 -112 l 360 -112 b 45 68 150 -112 45 -53 l 45 145 z',\n        },\n        accSagittalSharp5v49MUp: {\n            x_min: 0,\n            x_max: 469,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -271 l 180 -79 l 180 -517 l 225 -517 l 225 -30 l 315 65 l 315 -517 l 360 -517 l 360 65 l 449 -30 l 449 -517 l 495 -517 l 495 -79 l 675 -271 l 675 -112 l 337 248 b 118 89 239 143 166 89 b 45 157 68 89 45 112 l 0 157 b 107 0 0 62 36 10 l 0 -112 z',\n        },\n        accSagittalFlat5v49MDown: {\n            x_min: 0,\n            x_max: 469,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 112 l 107 0 b 0 -157 36 -10 0 -62 l 45 -157 b 118 -89 45 -112 68 -89 b 337 -248 166 -89 239 -143 l 675 112 l 675 271 l 495 79 l 495 517 l 449 517 l 449 30 l 360 -65 l 360 517 l 315 517 l 315 -65 l 225 30 l 225 517 l 180 517 l 180 79 l 0 271 z',\n        },\n        accSagittalSharp49LUp: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -517 l 45 -517 l 45 -82 l 135 -112 l 135 -517 l 180 -517 l 180 -127 l 271 -157 l 271 -517 l 315 -517 l 315 -173 l 540 -248 l 585 -248 l 585 -68 b 180 248 585 143 449 248 l 0 248 z m 45 112 l 180 112 b 540 -68 420 112 540 53 l 540 -145 l 45 16 z',\n        },\n        accSagittalFlat49LDown: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -248 l 180 -248 b 585 68 449 -248 585 -143 l 585 248 l 540 248 l 315 173 l 315 517 l 271 517 l 271 157 l 180 127 l 180 517 l 135 517 l 135 112 l 45 82 l 45 517 l 0 517 z m 45 -16 l 540 145 l 540 68 b 180 -112 540 -53 420 -112 l 45 -112 z',\n        },\n        accSagittalSharp11v19LUp: {\n            x_min: 0,\n            x_max: 438,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -517 l 45 -517 l 45 -81 l 135 -108 l 135 -517 l 180 -517 l 180 -121 l 271 -148 l 271 -517 l 315 -517 l 315 -161 l 631 -255 l 631 -157 l 45 16 l 45 144 l 631 -30 l 631 68 l 23 248 l 0 248 z',\n        },\n        accSagittalFlat11v19LDown: {\n            x_min: 0,\n            x_max: 438,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -248 l 23 -248 l 631 -68 l 631 30 l 45 -144 l 45 -16 l 631 157 l 631 255 l 315 161 l 315 517 l 271 517 l 271 148 l 180 121 l 180 517 l 135 517 l 135 108 l 45 81 l 45 517 l 0 517 z',\n        },\n        accSagittalSharp5v13LUp: {\n            x_min: 0,\n            x_max: 500,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 89 -109 l 89 -517 l 135 -517 l 135 -109 b 225 -27 170 -102 200 -75 l 225 -517 l 271 -517 l 271 -85 l 360 -120 l 360 -517 l 405 -517 l 405 -135 l 720 -256 l 720 -157 l 271 14 l 271 141 l 720 -30 l 720 68 l 248 248 b 122 0 217 98 176 16 b 95 -3 112 0 104 -3 b 45 68 60 -3 45 20 l 0 68 b 89 -109 0 -39 30 -98 z',\n        },\n        accSagittalFlat5v13LDown: {\n            x_min: 0,\n            x_max: 500,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 89 109 b 0 -68 30 98 0 39 l 45 -68 b 95 3 45 -20 60 3 b 122 0 104 3 112 0 b 248 -248 176 -16 217 -98 l 720 -68 l 720 30 l 271 -141 l 271 -14 l 720 157 l 720 256 l 405 135 l 405 517 l 360 517 l 360 120 l 271 85 l 271 517 l 225 517 l 225 27 b 135 109 200 75 170 102 l 135 517 l 89 517 z',\n        },\n        accSagittalDoubleSharp23SDown: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -203 l 45 -203 b 135 -23 45 -82 76 -23 l 301 -23 l 135 -503 l 186 -517 l 337 -82 l 488 -517 l 540 -503 l 370 -14 b 449 112 423 10 449 53 l 449 248 l 428 248 b 315 68 402 127 364 68 l 240 68 b 89 157 140 68 89 98 l 45 157 b 68 53 45 115 52 81 b 0 -203 23 23 0 -63 z',\n        },\n        accSagittalDoubleFlat23SUp: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 203 b 68 -53 0 63 23 -23 b 45 -157 52 -81 45 -115 l 89 -157 b 240 -68 89 -98 140 -68 l 315 -68 b 428 -248 364 -68 402 -127 l 449 -248 l 449 -112 b 370 14 449 -53 423 -10 l 540 503 l 488 517 l 337 82 l 186 517 l 135 503 l 301 23 l 135 23 b 45 203 76 23 45 82 z',\n        },\n        accSagittalDoubleSharp49SDown: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -292 l 45 -292 b 112 -157 45 -203 68 -157 l 256 -157 l 135 -503 l 187 -517 l 337 -82 l 490 -517 l 540 -503 l 366 0 l 396 89 b 449 157 416 102 435 125 l 449 248 l 428 248 b 315 157 413 187 376 157 l 112 157 b 0 -68 39 157 0 82 l 45 -68 b 135 68 45 23 76 68 l 287 68 l 311 0 l 288 -68 l 89 -68 b 0 -292 32 -68 0 -144 z',\n        },\n        accSagittalDoubleFlat49SUp: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 292 b 89 68 0 144 32 68 l 288 68 l 311 0 l 287 -68 l 135 -68 b 45 68 76 -68 45 -23 l 0 68 b 112 -157 0 -82 39 -157 l 315 -157 b 428 -248 376 -157 413 -187 l 449 -248 l 449 -157 b 396 -89 435 -125 416 -102 l 366 0 l 540 503 l 490 517 l 337 82 l 187 517 l 135 503 l 256 157 l 112 157 b 45 292 68 157 45 203 z',\n        },\n        accSagittalDoubleSharp7v19CDown: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -112 l 0 -266 l 307 -7 l 135 -503 l 186 -517 l 337 -82 l 488 -517 l 540 -503 l 366 0 l 386 59 l 449 112 l 449 248 l 428 248 b 130 68 285 127 186 68 b 45 157 73 68 45 98 l 0 157 b 112 -20 0 53 37 -6 z',\n        },\n        accSagittalDoubleFlat7v19CUp: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 112 20 b 0 -157 37 6 0 -53 l 45 -157 b 130 -68 45 -98 73 -68 b 428 -248 186 -68 285 -127 l 449 -248 l 449 -112 l 386 -59 l 366 0 l 540 503 l 488 517 l 337 82 l 186 517 l 135 503 l 307 7 l 0 266 l 0 112 z',\n        },\n        accSagittalDoubleSharp19CDown: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 68 l 0 -248 l 45 -248 l 45 -68 b 315 109 45 36 135 95 l 354 0 l 180 -503 l 232 -517 l 383 -82 l 534 -517 l 585 -503 l 410 0 l 449 112 l 495 112 l 495 248 l 360 248 b 0 68 120 248 0 187 z m 372 112 l 393 112 l 383 82 z',\n        },\n        accSagittalDoubleFlat19CUp: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -68 b 360 -248 0 -187 120 -248 l 495 -248 l 495 -112 l 449 -112 l 410 0 l 585 503 l 534 517 l 383 82 l 232 517 l 180 503 l 354 0 l 315 -109 b 45 68 135 -95 45 -36 l 45 248 l 0 248 z m 383 -82 l 393 -112 l 372 -112 z',\n        },\n        accSagittalDoubleSharp11v49CDown: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 45 -203 b 135 -23 45 -84 75 -23 l 203 -23 b 262 4 225 -23 245 -13 l 265 0 l 89 -503 l 141 -517 l 292 -82 l 444 -517 l 495 -503 l 321 0 l 360 112 b 540 -68 480 112 540 53 l 540 -248 l 585 -248 l 585 68 b 405 248 585 187 526 248 l 292 248 b 180 68 268 127 230 68 l 112 68 b 0 -203 37 68 0 -23 z',\n        },\n        accSagittalDoubleFlat11v49CUp: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 203 b 112 -68 0 23 37 -68 l 180 -68 b 292 -248 230 -68 268 -127 l 405 -248 b 585 -68 526 -248 585 -187 l 585 248 l 540 248 l 540 68 b 360 -112 540 -53 480 -112 l 321 0 l 495 503 l 444 517 l 292 82 l 141 517 l 89 503 l 265 0 l 262 -4 b 203 23 245 13 225 23 l 135 23 b 45 203 75 23 45 84 z',\n        },\n        accSagittalDoubleSharp143CDown: {\n            x_min: 0,\n            x_max: 469,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 45 -203 b 135 -23 45 -84 75 -23 l 203 -23 b 262 4 225 -23 245 -13 l 265 0 l 89 -503 l 141 -517 l 292 -82 l 444 -517 l 495 -503 l 321 0 l 337 49 l 675 -268 l 675 -112 l 292 248 b 180 68 268 127 230 68 l 112 68 b 0 -203 37 68 0 -23 z',\n        },\n        accSagittalDoubleFlat143CUp: {\n            x_min: 0,\n            x_max: 469,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 203 b 112 -68 0 23 37 -68 l 180 -68 b 292 -248 230 -68 268 -127 l 675 112 l 675 268 l 337 -49 l 321 0 l 495 503 l 444 517 l 292 82 l 141 517 l 89 503 l 265 0 l 262 -4 b 203 23 245 13 225 23 l 135 23 b 45 203 75 23 45 84 z',\n        },\n        accSagittalDoubleSharp17kDown: {\n            x_min: 0,\n            x_max: 438,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 248 b 95 101 0 170 30 121 l 0 68 l 0 -30 l 364 96 l 399 0 l 390 -23 l 0 -157 l 0 -255 l 353 -135 l 225 -503 l 275 -517 l 428 -82 l 577 -517 l 631 -503 l 455 0 l 507 145 l 540 157 l 540 248 l 517 248 b 167 168 366 194 248 168 b 45 248 85 168 45 194 z m 416 115 l 442 124 l 428 82 z',\n        },\n        accSagittalDoubleFlat17kUp: {\n            x_min: 0,\n            x_max: 438,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 45 -248 b 167 -168 45 -194 85 -168 b 517 -248 248 -168 366 -194 l 540 -248 l 540 -157 l 507 -145 l 455 0 l 631 503 l 577 517 l 428 82 l 275 517 l 225 503 l 353 135 l 0 255 l 0 157 l 390 23 l 399 0 l 364 -96 l 0 30 l 0 -68 l 95 -101 b 0 -248 30 -121 0 -170 z m 428 -82 l 442 -124 l 416 -115 z',\n        },\n        accSagittalDoubleSharp19sDown: {\n            x_min: 0,\n            x_max: 438,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -248 l 45 -248 l 45 -68 b 271 112 45 53 120 112 l 310 0 l 135 -503 l 186 -517 l 337 -82 l 488 -517 l 540 -503 l 366 0 l 367 4 b 428 -23 386 -13 405 -23 l 495 -23 b 585 -203 554 -23 585 -84 l 631 -203 b 517 68 631 -23 593 68 l 449 68 b 337 248 400 68 363 127 l 225 248 b 0 68 75 248 0 187 z',\n        },\n        accSagittalDoubleFlat19sUp: {\n            x_min: 0,\n            x_max: 438,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -68 b 225 -248 0 -187 75 -248 l 337 -248 b 449 -68 363 -127 400 -68 l 517 -68 b 631 203 593 -68 631 23 l 585 203 b 495 23 585 84 554 23 l 428 23 b 367 -4 405 23 386 13 l 366 0 l 540 503 l 488 517 l 337 82 l 186 517 l 135 503 l 310 0 l 271 -112 b 45 68 120 -112 45 -53 l 45 248 l 0 248 z',\n        },\n        accSagittalShaftUp: {\n            x_min: 0,\n            x_max: 31,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 112 l 0 -517 l 45 -517 l 45 112 l 23 248 z',\n        },\n        accSagittalShaftDown: {\n            x_min: 0,\n            x_max: 31,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 23 -248 l 45 -112 l 45 517 l 0 517 l 0 -112 z',\n        },\n        accSagittalAcute: {\n            x_min: 0,\n            x_max: 125,\n            y_min: -62,\n            y_max: 125,\n            ha: 187,\n            o: 'm 0 0 l 0 -89 l 180 89 l 180 180 z',\n        },\n        accSagittalGrave: {\n            x_min: 0,\n            x_max: 125,\n            y_min: -125,\n            y_max: 62,\n            ha: 187,\n            o: 'm 180 -180 l 180 -89 l 0 89 l 0 0 z',\n        },\n        accSagittal1MinaUp: {\n            x_min: -7,\n            x_max: 124,\n            y_min: 16,\n            y_max: 106.31676725154982,\n            ha: 90.31676725154982,\n            o: 'm -10 23 l 43 23 b 72 65 43 23 65 55 b 117 107 88 86 105 107 b 135 23 128 107 137 86 l 179 23 b 134 150 179 112 163 135 b 68 130 117 158 85 150 b -10 23 43 101 13 58 z',\n        },\n        accSagittal1MinaDown: {\n            x_min: -7,\n            x_max: 124,\n            y_min: -106.31676725154983,\n            y_max: -16,\n            ha: 90.31676725154983,\n            o: 'm -10 -23 b 68 -130 13 -58 43 -101 b 134 -150 85 -150 117 -158 b 179 -23 163 -135 179 -112 l 135 -23 b 117 -107 137 -86 128 -107 b 72 -65 105 -107 88 -86 b 43 -23 65 -55 43 -23 z',\n        },\n        accSagittal2MinasUp: {\n            x_min: -7,\n            x_max: 218,\n            y_min: 16,\n            y_max: 106.31676725154982,\n            ha: 90.31676725154982,\n            o: 'm -10 23 l 43 23 b 72 65 43 23 65 55 b 117 107 88 86 105 107 b 135 23 128 107 137 86 l 179 23 b 207 65 179 23 200 55 b 252 107 223 86 240 107 b 271 23 264 107 272 86 l 314 23 b 269 150 314 112 298 135 b 203 130 252 158 220 150 b 173 92 190 115 181 104 b 134 150 167 127 154 140 b 68 130 117 158 85 150 b -10 23 43 101 13 58 z',\n        },\n        accSagittal2MinasDown: {\n            x_min: -7,\n            x_max: 218,\n            y_min: -106.31676725154983,\n            y_max: -16,\n            ha: 90.31676725154983,\n            o: 'm -10 -23 b 68 -130 13 -58 43 -101 b 134 -150 85 -150 117 -158 b 173 -92 154 -140 167 -127 b 203 -130 181 -104 190 -115 b 269 -150 220 -150 252 -158 b 314 -23 298 -135 314 -112 l 271 -23 b 252 -107 272 -86 264 -107 b 207 -65 240 -107 223 -86 b 179 -23 200 -55 179 -23 l 135 -23 b 117 -107 137 -86 128 -107 b 72 -65 105 -107 88 -86 b 43 -23 65 -55 43 -23 z',\n        },\n        accSagittal1TinaUp: {\n            x_min: 0,\n            x_max: 93,\n            y_min: 16,\n            y_max: 107,\n            ha: 91,\n            o: 'm 134 154 l 91 154 b 81 76 91 101 91 86 b 0 68 73 69 48 68 l 0 23 b 134 154 122 23 134 36 z',\n        },\n        accSagittal1TinaDown: {\n            x_min: 0,\n            x_max: 93,\n            y_min: -107,\n            y_max: -16,\n            ha: 91,\n            o: 'm 134 -154 b 0 -23 134 -36 122 -23 l 0 -68 b 81 -76 48 -68 73 -69 b 91 -154 91 -86 91 -101 z',\n        },\n        accSagittal2TinasUp: {\n            x_min: 0,\n            x_max: 94,\n            y_min: 16,\n            y_max: 107,\n            ha: 91,\n            o: 'm 135 68 b 89 154 94 68 89 124 l 46 154 b 36 92 45 131 42 105 b 0 68 32 82 23 68 l 0 23 b 68 63 29 23 53 40 b 135 23 84 39 104 23 z',\n        },\n        accSagittal2TinasDown: {\n            x_min: 0,\n            x_max: 94,\n            y_min: -107,\n            y_max: -16,\n            ha: 91,\n            o: 'm 135 -23 b 68 -63 104 -23 84 -39 b 0 -23 53 -40 29 -23 l 0 -68 b 36 -92 23 -68 32 -82 b 46 -154 42 -105 45 -131 l 89 -154 b 135 -68 89 -124 94 -68 z',\n        },\n        accSagittal3TinasUp: {\n            x_min: -7,\n            x_max: 124,\n            y_min: 16,\n            y_max: 106.31676725154982,\n            ha: 90.31676725154982,\n            o: 'm -10 23 l 43 23 b 72 65 43 23 65 55 b 117 107 88 86 105 107 b 135 23 128 107 137 86 l 179 23 b 134 150 179 112 163 135 b 68 130 117 158 85 150 b -10 23 43 101 13 58 z',\n        },\n        accSagittal3TinasDown: {\n            x_min: -7,\n            x_max: 124,\n            y_min: -106.31676725154983,\n            y_max: -16,\n            ha: 90.31676725154983,\n            o: 'm -10 -23 b 68 -130 13 -58 43 -101 b 134 -150 85 -150 117 -158 b 179 -23 163 -135 179 -112 l 135 -23 b 117 -107 137 -86 128 -107 b 72 -65 105 -107 88 -86 b 43 -23 65 -55 43 -23 z',\n        },\n        accSagittal4TinasUp: {\n            x_min: 0,\n            x_max: 187,\n            y_min: 16,\n            y_max: 106.69999999999997,\n            ha: 90.69999999999997,\n            o: 'm 0 68 l 0 23 b 143 45 105 23 124 26 b 203 107 153 55 183 107 b 226 23 216 107 226 86 l 269 23 b 225 150 269 112 253 135 b 160 132 207 158 181 153 b 115 81 138 112 124 88 b 0 68 104 71 94 68 z',\n        },\n        accSagittal4TinasDown: {\n            x_min: 0,\n            x_max: 187,\n            y_min: -106.69999999999999,\n            y_max: -16,\n            ha: 90.69999999999999,\n            o: 'm 0 -68 b 115 -81 94 -68 104 -71 b 160 -132 124 -88 138 -112 b 225 -150 181 -153 207 -158 b 269 -23 253 -135 269 -112 l 226 -23 b 203 -107 226 -86 216 -107 b 143 -45 183 -107 153 -55 b 0 -23 124 -26 105 -23 z',\n        },\n        accSagittal5TinasUp: {\n            x_min: 0,\n            x_max: 218,\n            y_min: 16,\n            y_max: 107,\n            ha: 91,\n            o: 'm 135 23 b 187 45 156 23 168 26 b 249 107 197 55 228 107 b 271 23 262 107 271 86 l 314 23 b 269 150 314 112 298 135 b 204 132 252 158 226 153 b 160 81 183 112 168 88 b 135 68 148 71 147 68 b 89 154 94 68 89 124 l 46 154 b 36 92 45 131 42 105 b 0 68 32 82 23 68 l 0 23 b 68 63 29 23 53 40 b 135 23 84 39 104 23 z',\n        },\n        accSagittal5TinasDown: {\n            x_min: 0,\n            x_max: 218,\n            y_min: -107,\n            y_max: -16,\n            ha: 91,\n            o: 'm 135 -23 b 68 -63 104 -23 84 -39 b 0 -23 53 -40 29 -23 l 0 -68 b 36 -92 23 -68 32 -82 b 46 -154 42 -105 45 -131 l 89 -154 b 135 -68 89 -124 94 -68 b 160 -81 147 -68 148 -71 b 204 -132 168 -88 183 -112 b 269 -150 226 -153 252 -158 b 314 -23 298 -135 314 -112 l 271 -23 b 249 -107 271 -86 262 -107 b 187 -45 228 -107 197 -55 b 135 -23 168 -26 156 -23 z',\n        },\n        accSagittal6TinasUp: {\n            x_min: -7,\n            x_max: 218,\n            y_min: 16,\n            y_max: 106.31676725154982,\n            ha: 90.31676725154982,\n            o: 'm -10 23 l 43 23 b 72 65 43 23 65 55 b 117 107 88 86 105 107 b 135 23 128 107 137 86 l 179 23 b 207 65 179 23 200 55 b 252 107 223 86 240 107 b 271 23 264 107 272 86 l 314 23 b 269 150 314 112 298 135 b 203 130 252 158 220 150 b 173 92 190 115 181 104 b 134 150 167 127 154 140 b 68 130 117 158 85 150 b -10 23 43 101 13 58 z',\n        },\n        accSagittal6TinasDown: {\n            x_min: -7,\n            x_max: 218,\n            y_min: -106.31676725154983,\n            y_max: -16,\n            ha: 90.31676725154983,\n            o: 'm -10 -23 b 68 -130 13 -58 43 -101 b 134 -150 85 -150 117 -158 b 173 -92 154 -140 167 -127 b 203 -130 181 -104 190 -115 b 269 -150 220 -150 252 -158 b 314 -23 298 -135 314 -112 l 271 -23 b 252 -107 272 -86 264 -107 b 207 -65 240 -107 223 -86 b 179 -23 200 -55 179 -23 l 135 -23 b 117 -107 137 -86 128 -107 b 72 -65 105 -107 88 -86 b 43 -23 65 -55 43 -23 z',\n        },\n        accSagittal7TinasUp: {\n            x_min: 0,\n            x_max: 281,\n            y_min: 16,\n            y_max: 106.69999999999997,\n            ha: 90.69999999999997,\n            o: 'm 0 68 l 0 23 b 143 45 105 23 124 26 b 203 107 153 55 183 107 b 226 23 216 107 226 86 l 269 23 b 298 65 269 23 291 55 b 343 107 314 86 331 107 b 361 23 354 107 363 86 l 405 23 b 360 150 405 112 389 135 b 294 130 343 158 311 150 b 264 92 281 115 272 104 b 225 150 258 127 245 140 b 160 132 207 158 181 153 b 115 81 138 112 124 88 b 0 68 104 71 94 68 z',\n        },\n        accSagittal7TinasDown: {\n            x_min: 0,\n            x_max: 281,\n            y_min: -106.69999999999999,\n            y_max: -16,\n            ha: 90.69999999999999,\n            o: 'm 0 -68 b 115 -81 94 -68 104 -71 b 160 -132 124 -88 138 -112 b 225 -150 181 -153 207 -158 b 264 -92 245 -140 258 -127 b 294 -130 272 -104 281 -115 b 360 -150 311 -150 343 -158 b 405 -23 389 -135 405 -112 l 361 -23 b 343 -107 363 -86 354 -107 b 298 -65 331 -107 314 -86 b 269 -23 291 -55 269 -23 l 226 -23 b 203 -107 226 -86 216 -107 b 143 -45 183 -107 153 -55 b 0 -23 124 -26 105 -23 z',\n        },\n        accSagittal8TinasUp: {\n            x_min: 0,\n            x_max: 312,\n            y_min: 16,\n            y_max: 107,\n            ha: 91,\n            o: 'm 135 23 b 187 45 156 23 168 26 b 249 107 197 55 228 107 b 271 23 262 107 271 86 l 314 23 b 343 65 314 23 336 55 b 387 107 359 86 376 107 b 406 23 399 107 408 86 l 449 23 b 405 150 449 112 433 135 b 338 130 387 158 356 150 b 308 92 325 115 317 104 b 269 150 302 127 289 140 b 204 132 252 158 226 153 b 160 81 183 112 168 88 b 135 68 148 71 147 68 b 89 154 94 68 89 124 l 46 154 b 36 92 45 131 42 105 b 0 68 32 82 23 68 l 0 23 b 68 63 29 23 53 40 b 135 23 84 39 104 23 z',\n        },\n        accSagittal8TinasDown: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -107,\n            y_max: -16,\n            ha: 91,\n            o: 'm 135 -23 b 68 -63 104 -23 84 -39 b 0 -23 53 -40 29 -23 l 0 -68 b 36 -92 23 -68 32 -82 b 46 -154 42 -105 45 -131 l 89 -154 b 135 -68 89 -124 94 -68 b 160 -81 147 -68 148 -71 b 204 -132 168 -88 183 -112 b 269 -150 226 -153 252 -158 b 308 -92 289 -140 302 -127 b 338 -130 317 -104 325 -115 b 405 -150 356 -150 387 -158 b 449 -23 433 -135 449 -112 l 406 -23 b 387 -107 408 -86 399 -107 b 343 -65 376 -107 359 -86 b 314 -23 336 -55 314 -23 l 271 -23 b 249 -107 271 -86 262 -107 b 187 -45 228 -107 197 -55 b 135 -23 168 -26 156 -23 z',\n        },\n        accSagittal9TinasUp: {\n            x_min: -7,\n            x_max: 312,\n            y_min: 16,\n            y_max: 106.31676725154982,\n            ha: 90.31676725154982,\n            o: 'm -10 23 l 43 23 b 72 65 43 23 65 55 b 117 107 88 86 105 107 b 135 23 128 107 137 86 l 179 23 b 207 65 179 23 200 55 b 252 107 223 86 240 107 b 271 23 264 107 272 86 l 314 23 b 343 65 314 23 336 55 b 387 107 359 86 376 107 b 406 23 399 107 408 86 l 449 23 b 405 150 449 112 433 135 b 338 130 387 158 356 150 b 308 92 325 115 317 104 b 269 150 302 127 289 140 b 203 130 252 158 220 150 b 173 92 190 115 181 104 b 134 150 167 127 154 140 b 68 130 117 158 85 150 b -10 23 43 101 13 58 z',\n        },\n        accSagittal9TinasDown: {\n            x_min: -7,\n            x_max: 312,\n            y_min: -106.31676725154983,\n            y_max: -16,\n            ha: 90.31676725154983,\n            o: 'm -10 -23 b 68 -130 13 -58 43 -101 b 134 -150 85 -150 117 -158 b 173 -92 154 -140 167 -127 b 203 -130 181 -104 190 -115 b 269 -150 220 -150 252 -158 b 308 -92 289 -140 302 -127 b 338 -130 317 -104 325 -115 b 405 -150 356 -150 387 -158 b 449 -23 433 -135 449 -112 l 406 -23 b 387 -107 408 -86 399 -107 b 343 -65 376 -107 359 -86 b 314 -23 336 -55 314 -23 l 271 -23 b 252 -107 272 -86 264 -107 b 207 -65 240 -107 223 -86 b 179 -23 200 -55 179 -23 l 135 -23 b 117 -107 137 -86 128 -107 b 72 -65 105 -107 88 -86 b 43 -23 65 -55 43 -23 z',\n        },\n        accSagittalFractionalTinaUp: {\n            x_min: -3,\n            x_max: 35,\n            y_min: 73,\n            y_max: 111,\n            ha: 38,\n            o: 'm -4 132 b 23 105 -4 118 9 105 b 50 132 37 105 50 118 b 23 160 50 147 37 160 b -4 132 9 160 -4 147 z',\n        },\n        accSagittalFractionalTinaDown: {\n            x_min: -3,\n            x_max: 35,\n            y_min: -111,\n            y_max: -73,\n            ha: 38,\n            o: 'm -4 -132 b 23 -160 -4 -147 9 -160 b 50 -132 37 -160 50 -147 b 23 -105 50 -118 37 -105 b -4 -132 9 -105 -4 -118 z',\n        },\n        accidentalNarrowReversedFlat: {\n            x_min: 0,\n            x_max: 164,\n            y_min: -194,\n            y_max: 421,\n            ha: 615,\n            o: 'm 236 -279 l 236 606 l 192 606 l 192 179 b 85 243 150 222 114 243 b 0 84 23 243 0 134 b 112 -158 0 3 37 -78 z m 192 112 l 192 -163 l 135 -98 b 82 40 101 -50 82 -3 b 138 144 82 73 96 144 b 192 112 153 144 170 132 z',\n        },\n        accidentalNarrowReversedFlatAndFlat: {\n            x_min: 0,\n            x_max: 414,\n            y_min: -194,\n            y_max: 421,\n            ha: 615,\n            o: 'm 281 606 l 281 -268 l 438 -158 b 596 84 547 -82 596 3 b 475 243 596 154 556 243 b 325 179 435 243 384 222 l 325 606 z m 235 -279 l 235 606 l 190 606 l 190 179 b 85 243 148 222 114 243 b 12 158 52 243 27 215 b 0 84 3 134 0 108 b 112 -158 0 3 37 -78 z m 325 111 b 410 144 359 132 386 144 b 498 36 462 144 498 84 b 413 -107 498 -9 469 -58 l 325 -173 z m 192 112 l 192 -163 l 135 -98 b 81 40 99 -50 81 -3 b 91 94 81 59 84 76 b 137 144 102 127 118 144 b 192 112 153 144 170 132 z',\n        },\n        accidentalWilsonPlus: {\n            x_min: 0,\n            x_max: 281,\n            y_min: -203,\n            y_max: 203,\n            ha: 406,\n            o: 'm 405 268 l 225 98 l 225 292 l 180 292 l 180 56 l 0 -112 l 0 -268 l 180 -98 l 180 -292 l 225 -292 l 225 -56 l 405 112 z',\n        },\n        accidentalWilsonMinus: {\n            x_min: 0,\n            x_max: 281,\n            y_min: -186,\n            y_max: 186,\n            ha: 372,\n            o: 'm 0 112 l 405 -268 l 405 -112 l 0 268 z',\n        },\n    },\n    fontFamily: 'Bravura',\n    resolution: 1000,\n    generatedOn: '2021-12-06T21:04:30.234Z',\n};\n","/**\n * The Bravura font was created by Daniel Spreadbury @ Steinberg.\n * https://github.com/steinbergmedia/bravura/\n */\nexport const BravuraMetrics = {\n    name: 'Bravura',\n    smufl: true,\n    stave: {\n        padding: 12,\n        endPaddingMax: 10,\n        endPaddingMin: 5,\n        unalignedNotePadding: 10,\n    },\n    accidental: {\n        noteheadAccidentalPadding: 1,\n        leftPadding: 2,\n        accidentalSpacing: 3,\n    },\n    clef: {\n        default: {\n            point: 32,\n            width: 26,\n        },\n        small: {\n            point: 26,\n            width: 20,\n        },\n        annotations: {\n            '8va': {\n                smuflCode: 'timeSig8',\n                default: {\n                    point: 18,\n                    treble: {\n                        line: -1.4,\n                        shiftX: 12,\n                    },\n                },\n                small: {\n                    point: 16,\n                    treble: {\n                        line: -0.2,\n                        shiftX: 8,\n                    },\n                },\n            },\n            '8vb': {\n                smuflCode: 'timeSig8',\n                default: {\n                    point: 18,\n                    treble: {\n                        line: 6,\n                        shiftX: 10,\n                    },\n                    bass: {\n                        line: 3.5,\n                        shiftX: 1,\n                    },\n                },\n                small: {\n                    point: 16,\n                    treble: {\n                        line: 5.3,\n                        shiftX: 6,\n                    },\n                    bass: {\n                        line: 3.1,\n                        shiftX: 0.5,\n                    },\n                },\n            },\n        },\n        // These may no longer be necessary\n        lineCount: {\n            '8': { point: 55, shiftY: 14 },\n            '7': { point: 47, shiftY: 8 },\n            '6': { point: 32, shiftY: 1 },\n            '5': { point: 30, shiftY: -6 },\n            '4': { point: 23, shiftY: -12 },\n        },\n    },\n    parenthesis: {\n        default: {\n            point: 39,\n            width: 7,\n        },\n        gracenote: {\n            point: (39 * 3) / 5,\n            width: 3,\n        },\n    },\n    pedalMarking: {\n        up: {\n            point: 40,\n        },\n        down: {\n            point: 34,\n        },\n    },\n    // These are for numeric digits, such as in time signatures\n    digits: {\n        // used by timesig\n        shiftLine: -1,\n        point: 34,\n        // used by tuplets\n        tupletPoint: 22,\n        shiftY: -6,\n    },\n    articulation: {\n        articStaccatissimoAbove: {\n            padding: 2,\n        },\n        articStaccatissimoBelow: {\n            padding: 2,\n        },\n    },\n    tremolo: {\n        default: {\n            point: 25,\n            spacing: 5,\n            offsetYStemUp: -5,\n            offsetYStemDown: 5,\n            offsetXStemUp: 11,\n            offsetXStemDown: 1,\n        },\n        grace: {\n            point: 18,\n            spacing: 4,\n            offsetYStemUp: -5,\n            offsetYStemDown: 5,\n            offsetXStemUp: 7,\n            offsetXStemDown: 1,\n        },\n    },\n    staveRepetition: {\n        symbolText: {\n            offsetX: 12,\n            offsetY: 25,\n            spacing: 5,\n        },\n        coda: {\n            offsetY: 25,\n        },\n        segno: {\n            offsetY: 10,\n        },\n    },\n    // noteHead: {\n    // },\n    stem: {\n        heightAdjustmentForFlag: -3,\n        // These are stem (Y) offsets to the note heads. To shift the\n        // noteheads (x-position) themselves, see glyphs.notehead.custom.\n        noteHead: {\n            noteheadTriangleUpHalf: {\n                offsetYBaseStemUp: 5,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadTriangleUpBlack: {\n                offsetYBaseStemUp: 5,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadTriangleUpWhole: {\n                offsetYBaseStemUp: 5,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadXHalf: {\n                offsetYBaseStemUp: -4,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadXBlack: {\n                offsetYBaseStemUp: -4,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadXWhole: {\n                offsetYBaseStemUp: -4,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadHalf: {\n                offsetYBaseStemUp: -2.55,\n                offsetYBaseStemDown: 2.65,\n            },\n            noteheadBlack: {\n                offsetYBaseStemUp: -2,\n                offsetYBaseStemDown: 2,\n            },\n            noteheadSquareWhite: {\n                offsetYBaseStemDown: -5,\n                offsetYBaseStemUp: 5,\n            },\n        },\n    },\n    // Values under here are used by the Glyph class to reposition and rescale\n    // glyphs based on their category. This should be the first stop for\n    // custom font glyph repositioning.\n    //\n    // The glyph loader first looks up a specific set of settings based on the\n    // glyph code, and if not found, uses the defaults from the category. See\n    // glyphs.textNote for an example of this.\n    //\n    // Details in Glyph.lookupFontMetrics.\n    glyphs: {\n        coda: {\n            point: 20,\n            shiftX: -7,\n            shiftY: 8,\n        },\n        segno: {\n            shiftX: -7,\n        },\n        flag: {\n            shiftX: -0.75,\n            staveTempo: {\n                shiftX: -1,\n            },\n        },\n        clef: {\n            gClef: {\n                default: { scale: 1.1, shiftY: 1 },\n                small: { shiftY: 1.5 },\n            },\n            fClef: {\n                default: { shiftY: -0.5 },\n            },\n        },\n        ornament: {\n            ornamentTurn: {\n                scale: 1.2,\n            },\n            ornamentTurnSlash: {\n                scale: 1.2,\n            },\n        },\n        stringNumber: {\n            verticalPadding: 8,\n            stemPadding: 2,\n            leftPadding: 5,\n            rightPadding: 6,\n        },\n        stroke: {\n            arrowheadBlackDown: {\n                straight: {\n                    shiftX: -4.5,\n                },\n                wiggly: {\n                    shiftX: -1,\n                    shiftY: 1,\n                },\n            },\n            arrowheadBlackUp: {\n                straight: {\n                    shiftX: -0.85,\n                },\n                wiggly: {\n                    shiftX: -1,\n                    shiftY: 1,\n                },\n            },\n        },\n        textNote: {\n            point: 34,\n            breathMarkTick: {\n                point: 36,\n                shiftY: 9,\n            },\n            breathMarkComma: {\n                point: 36,\n            },\n            segno: {\n                point: 30,\n                shiftX: -7,\n                shiftY: 8,\n            },\n            coda: {\n                point: 20,\n                shiftX: -7,\n                shiftY: 8,\n            },\n            ornamentTrill: {\n                shiftX: -8,\n                shiftY: 8,\n            },\n            ornamentTurn: {\n                point: 42,\n            },\n            ornamentTurnSlash: {\n                point: 42,\n            },\n            ornamentMordent: {\n                shiftX: -8,\n            },\n            ornamentShortTrill: {\n                shiftX: -8,\n            },\n        },\n        noteHead: {\n            minPadding: 2,\n            standard: {\n                restQuarterStemUp: {\n                    point: 35,\n                },\n                restQuarterStemDown: {\n                    point: 35,\n                },\n            },\n            custom: {\n                noteheadCircleXStemUp: {\n                    shiftX: 1.5,\n                },\n                noteheadCircleXStemDown: {\n                    shiftX: 0.25,\n                },\n                noteheadDiamondHalfStemUp: {\n                    shiftX: 1.5,\n                },\n                noteheadDiamondBlackStemUp: {\n                    shiftX: 1.5,\n                },\n                noteheadDiamondWholeStemUp: {\n                    shiftX: 1,\n                },\n                noteheadXHalfStemUp: {\n                    shiftX: -2,\n                },\n                noteheadXHalfStemDown: {\n                    shiftX: 1,\n                },\n                noteheadXWholeStemUp: {\n                    shiftX: -4,\n                },\n                noteheadXWholeStemDown: {\n                    shiftX: 1,\n                },\n                noteheadSquareWhiteStemDown: {\n                    shiftX: 0.25,\n                },\n                noteheadSquareWhiteStemUp: {\n                    shiftX: -0.75,\n                },\n                noteheadSquareBlackStemUp: {\n                    shiftX: -0.75,\n                },\n                noteheadTriangleUpWholeStemUp: {\n                    shiftX: -0.75,\n                },\n            },\n        },\n        chordSymbol: {\n            global: {\n                superscriptOffset: -400,\n                subscriptOffset: 300,\n                kerningOffset: -250,\n                lowerKerningText: ['D', 'F', 'P', 'T', 'V', 'Y'],\n                upperKerningText: ['A', 'L'],\n                spacing: 100,\n                superSubRatio: 0.66,\n            },\n            csymDiminished: {\n                scale: 0.8,\n                leftSideBearing: -32,\n                advanceWidth: 506,\n                yOffset: 0,\n            },\n            csymHalfDiminished: {\n                scale: 0.8,\n                leftSideBearing: -32,\n                advanceWidth: 506,\n                yOffset: 0,\n            },\n            csymAugmented: {\n                scale: 1,\n                leftSideBearing: 0,\n                advanceWidth: 530,\n                yOffset: 0,\n            },\n            csymParensLeftTall: {\n                scale: 0.8,\n                leftSideBearing: -20,\n                advanceWidth: 184,\n                yOffset: 250,\n            },\n            csymParensRightTall: {\n                scale: 0.8,\n                leftSideBearing: 0,\n                advanceWidth: 189,\n                yOffset: 250,\n            },\n            csymBracketLeftTall: {\n                scale: 0.8,\n                leftSideBearing: 0,\n                advanceWidth: 328,\n                yOffset: 0,\n            },\n            csymBracketRightTall: {\n                scale: 0.8,\n                leftSideBearing: 1,\n                advanceWidth: 600,\n                yOffset: 0,\n            },\n            csymParensLeftVeryTall: {\n                scale: 0.9,\n                leftSideBearing: 50,\n                advanceWidth: 121,\n                yOffset: 350,\n            },\n            csymParensRightVeryTall: {\n                scale: 0.9,\n                leftSideBearing: 0,\n                advanceWidth: 111,\n                yOffset: 350,\n            },\n            csymDiagonalArrangementSlash: {\n                scale: 0.6,\n                leftSideBearing: -1,\n                advanceWidth: 990,\n                yOffset: 0,\n            },\n            csymMinor: {\n                scale: 0.8,\n                leftSideBearing: 0,\n                advanceWidth: 482,\n                yOffset: 0,\n            },\n            csymMajorSeventh: {\n                scale: 0.9,\n                leftSideBearing: 200,\n                yOffset: 0,\n                advanceWidth: 600,\n            },\n            accidentalSharp: {\n                scale: 0.75,\n                leftSideBearing: 20,\n                advanceWidth: 250,\n                yOffset: -302,\n            },\n            accidentalFlat: {\n                scale: 0.9,\n                leftSideBearing: -20,\n                advanceWidth: 226,\n                yOffset: -184,\n            },\n        },\n        jazzOrnaments: {\n            brassScoop: {\n                scale: 1.0,\n                xOffset: -12,\n                yOffset: 0,\n                stemUpYOffset: 0,\n                reportedWidth: 10,\n            },\n            brassDoitMedium: {\n                scale: 1.0,\n                xOffset: 16,\n                yOffset: 0,\n                stemUpYOffset: 0,\n                reportedWidth: 15,\n            },\n            brassFallLipShort: {\n                scale: 1.0,\n                xOffset: 16,\n                yOffset: 0,\n                stemUpYOffset: 0,\n                reportedWidth: 5,\n            },\n            brassLiftMedium: {\n                scale: 1.0,\n                xOffset: 16,\n                yOffset: 5,\n                stemUpYOffset: 0,\n                reportedWidth: 5,\n            },\n            brassFallRoughMedium: {\n                scale: 1.0,\n                xOffset: 16,\n                yOffset: 28,\n                stemUpYOffset: 0,\n                reportedWidth: 5,\n            },\n            brassBend: {\n                scale: 1.0,\n                xOffset: 2,\n                yOffset: -8,\n                stemUpYOffset: 25,\n                reportedWidth: 5,\n            },\n            brassMuteClosed: {\n                scale: 1.0,\n                xOffset: 3,\n                yOffset: -8,\n                stemUpYOffset: 25,\n                reportedWidth: 5,\n            },\n            brassMuteOpen: {\n                scale: 1.0,\n                xOffset: 3,\n                yOffset: -7,\n                stemUpYOffset: 25,\n                reportedWidth: 5,\n            },\n            brassFlip: {\n                scale: 1.0,\n                xOffset: 10,\n                yOffset: -4,\n                stemUpYOffset: 0,\n                reportedWidth: 5,\n            },\n            brassJazzTurn: {\n                scale: 1.0,\n                xOffset: 6,\n                yOffset: -4,\n                stemUpYOffset: 0,\n                reportedWidth: 5,\n            },\n            brassSmear: {\n                scale: 1.0,\n                xOffset: 10,\n                yOffset: -4,\n                stemUpYOffset: 0,\n                reportedWidth: 5,\n            },\n        },\n        tuplet: {\n            noteHeadOffset: 20,\n            stemOffset: 10,\n            bottomLine: 4,\n            topModifierOffset: 15,\n        },\n    },\n};\n","export const CustomFont = {\n    resolution: 1000,\n    fontFamily: 'VexFlowCustom',\n    glyphs: {\n        noteheadSquareWhite: {\n            x_min: 0,\n            x_max: 430.75,\n            ha: 386,\n            o: 'm 0 200 l 0 -200 l 430 -200 l 430 200 l 0 200 l 50 150 l 380 150 l 380 -150 l 50 -150 l 50 150 ',\n        },\n        noteheadSquareBlack: {\n            x_min: 0,\n            x_max: 430.75,\n            ha: 386,\n            o: 'm 0 200 l 0 -200 l 430 -200 l 430 200 l 0 200 ',\n        },\n        accidentalBuyukMucennebFlat: {\n            x_min: -171.5,\n            x_max: 251.8125,\n            ha: 257,\n            o: 'm -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 553 20 616 20 614 b 20 491 20 503 20 491 l 20 491 b 153 535 47 501 149 535 b 174 514 167 535 174 524 b 164 496 174 508 171 501 b 92 470 164 495 132 484 l 20 445 l 20 390 b 20 363 20 378 20 370 b 20 333 20 340 20 333 l 20 333 b 153 377 47 344 149 377 b 174 356 167 377 174 367 b 164 338 174 349 171 342 b 92 312 164 338 132 326 l 20 288 l 20 219 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 30 -21 -212 -21 -212 b -21 273 -21 163 -21 273 b -84 252 -21 273 -50 263 b -152 230 -133 234 -145 230 b -157 231 -155 230 -156 231 b -171 252 -166 234 -171 244 b -160 270 -171 259 -167 266 b -27 316 -159 270 -93 294 l -21 319 l -21 374 b -21 431 -21 406 -21 431 b -84 409 -21 431 -50 421 b -152 388 -133 392 -145 388 b -157 390 -155 388 -156 388 b -171 409 -166 392 -171 401 b -160 428 -171 417 -167 424 b -27 474 -159 428 -93 451 l -21 476 l -21 546 b -20 620 -21 614 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 ',\n        },\n        accidentalBakiyeFlat: {\n            x_min: -176.9375,\n            x_max: 251.8125,\n            ha: 257,\n            o: 'm -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 503 20 616 20 614 b 20 391 20 442 20 391 b 84 424 20 391 49 406 l 147 456 l 152 456 b 153 456 153 456 153 456 b 175 435 166 456 175 446 b 172 427 175 433 174 430 b 92 380 170 420 172 421 l 20 342 l 20 245 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 54 -21 -212 -21 -212 b -21 322 -21 201 -21 322 b -85 290 -21 322 -50 308 l -148 256 l -153 256 b -155 256 -155 256 -155 256 b -176 277 -167 256 -176 266 b -174 285 -176 280 -175 283 b -93 333 -171 294 -174 292 l -21 370 l -21 494 b -20 620 -21 616 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 ',\n        },\n        accidentalKucukMucennebSharp: {\n            x_min: -1.359375,\n            x_max: 255.890625,\n            ha: 261,\n            o: 'm 118 514 b 127 517 121 517 122 517 b 147 505 136 517 142 513 l 148 502 l 148 403 b 148 306 148 351 148 306 b 174 315 149 306 160 310 l 200 324 l 205 323 b 223 312 213 323 220 319 l 225 308 l 225 260 b 225 245 225 255 225 249 b 220 204 225 208 224 209 b 179 188 216 199 215 199 l 148 177 l 148 124 l 148 70 l 189 84 b 236 98 219 94 230 98 b 247 94 240 98 243 97 b 255 52 254 88 255 87 b 255 33 255 47 255 40 l 254 -12 l 253 -15 b 249 -22 253 -18 250 -20 l 245 -24 l 196 -41 l 148 -58 l 148 -108 b 148 -158 148 -136 148 -158 b 174 -148 148 -158 160 -154 b 204 -140 198 -140 200 -140 l 204 -140 b 224 -152 213 -140 221 -145 b 225 -201 224 -155 225 -177 b 224 -254 225 -226 224 -251 b 157 -284 220 -262 220 -262 l 148 -288 l 148 -395 l 148 -503 l 147 -506 b 127 -519 142 -514 134 -519 b 107 -506 119 -519 111 -514 l 106 -503 l 106 -403 b 106 -303 106 -316 106 -303 b 104 -303 104 -303 104 -303 b 88 -310 104 -303 96 -306 l 63 -319 b 51 -322 59 -320 55 -322 b 36 -315 46 -322 40 -319 b 31 -273 32 -309 31 -312 b 31 -258 31 -269 31 -263 l 31 -210 l 34 -206 b 40 -198 35 -204 38 -199 b 74 -186 42 -197 57 -191 l 106 -173 l 106 -123 b 106 -97 106 -112 106 -104 b 106 -72 106 -76 106 -72 b 104 -72 106 -72 106 -72 b 20 -99 89 -79 23 -99 b 0 -84 10 -99 2 -93 b -1 -37 0 -81 -1 -59 b 0 11 -1 -15 0 9 b 58 40 4 22 2 22 l 106 56 l 106 109 b 106 123 106 115 106 119 b 106 162 106 147 106 162 b 81 155 106 162 93 159 b 50 147 65 149 55 147 b 36 152 43 147 40 148 b 31 194 32 158 31 156 b 31 209 31 198 31 204 l 31 256 l 34 260 b 76 281 38 269 38 269 l 106 292 l 106 396 l 106 502 l 107 505 b 118 514 110 509 114 513 ',\n        },\n        accidentalKoron: {\n            x_min: -20,\n            x_max: 320,\n            ha: 257,\n            o: 'm -8 200 b -8 210 8 200 16 200 l 20 148 -199 l 23 -615 b 0 -629 9 -629 6 -629 l -21 -612 l -21 -201 l -21 216 l -20 200 m 16 200 l 310 0 l 240 0 l 16 140 l 16 -120 l 240 0 l 310 0 l 16 -200 ',\n        },\n        accidentalSori: {\n            x_min: -10.890625,\n            x_max: 299.4375,\n            ha: 294,\n            o: 'm 44 174 b 51 174 47 174 49 174 b 68 173 55 174 61 174 l 287 112 l 551 40 b 615 20 617 22 609 23 b 626 0 622 16 626 8 b 615 -22 626 -9 622 -18 b 613 -23 613 -23 613 -23 b 613 -23 613 -23 613 -23 b 287 -113 613 -24 597 -29 l 68 -174 b 53 -176 61 -176 57 -176 b 39 -172 47 -176 43 -174 b 27 -151 31 -167 27 -159 b 39 -129 27 -141 31 -133 b 230 -74 43 -124 20 -131 l 370 -36 l 468 -9 b 498 0 484 -4 498 -1 b 468 8 498 0 484 2 l 370 34 l 230 73 b 40 126 28 129 43 124 b 27 149 31 131 27 140 b 44 174 27 161 34 170 m 205 110 l 205 300 b 205 330 245 330 245 300 l 245 300 l 245 -300 b 245 -330 205 -330 205 -300 l 205 -300 l 205 110 l 345 90 m 345 90 l 345 330 b 345 360 385 360 385 330 l 385 330 l 385 -270 b 385 -300 345 -300 345 -270 l 345 -270 l 345 90 ',\n        },\n        vexAccidentalMicrotonal2: {\n            x_min: -1.359375,\n            x_max: 386.5625,\n            ha: 394,\n            o: 'm 249 535 b 257 537 251 537 253 537 b 276 524 266 537 273 533 l 277 521 l 279 419 l 279 316 l 304 323 b 337 328 319 326 330 328 b 353 316 347 328 349 324 b 355 266 355 315 355 290 b 353 215 355 241 355 217 b 319 198 349 206 347 205 b 279 187 284 190 279 188 b 279 156 279 187 279 174 b 279 136 279 151 279 144 l 279 84 l 289 87 l 330 98 b 367 105 352 102 362 105 b 378 101 372 105 375 104 b 386 61 385 95 386 94 b 386 40 386 55 386 48 l 386 -5 l 385 -8 b 374 -19 383 -12 378 -18 b 291 -40 372 -19 347 -26 b 279 -43 284 -41 279 -43 b 279 -83 279 -43 279 -59 b 279 -95 279 -87 279 -91 l 279 -145 l 304 -140 b 337 -133 321 -136 330 -133 b 349 -140 343 -133 347 -136 b 355 -181 355 -145 355 -142 l 355 -197 l 355 -210 b 349 -252 355 -249 355 -247 b 300 -269 345 -258 347 -258 b 280 -274 291 -272 281 -273 l 279 -274 l 277 -378 l 277 -483 l 276 -487 b 257 -499 273 -495 265 -499 b 238 -487 249 -499 242 -495 l 236 -483 l 236 -384 l 236 -285 l 235 -285 l 212 -291 l 170 -301 b 148 -308 159 -305 148 -306 b 147 -415 147 -308 147 -313 l 147 -523 l 145 -526 b 126 -538 141 -534 133 -538 b 106 -526 118 -538 110 -534 l 104 -523 l 104 -420 b 103 -317 104 -326 104 -317 b 103 -317 103 -317 103 -317 b 50 -330 92 -322 54 -330 b 31 -317 42 -330 35 -326 b 29 -267 29 -315 29 -315 l 29 -219 l 32 -216 b 92 -192 36 -206 36 -206 l 104 -190 l 104 -138 b 103 -87 104 -91 104 -87 b 103 -87 103 -87 103 -87 b 88 -91 103 -87 96 -88 l 49 -101 b 17 -106 32 -105 23 -106 b 6 -102 13 -106 10 -105 b -1 -62 0 -97 -1 -95 b 0 -41 -1 -56 0 -49 l 0 4 l 1 6 b 10 16 2 11 6 15 b 91 37 12 18 38 24 l 104 41 l 104 93 b 103 144 104 140 104 144 b 103 144 103 144 103 144 b 50 131 92 141 54 131 b 31 144 42 131 35 137 b 29 195 29 147 29 148 l 29 242 l 32 245 b 92 269 36 255 36 255 l 104 273 l 104 377 l 104 481 l 106 485 b 126 498 110 492 118 498 b 134 495 129 498 132 496 b 145 485 138 494 142 489 l 147 481 l 147 383 l 147 283 l 152 284 b 190 294 155 285 171 290 l 230 303 l 236 305 l 236 413 l 236 521 l 238 524 b 249 535 240 528 243 533 m 236 126 b 235 177 236 154 236 177 l 235 177 b 213 172 235 177 225 174 l 170 161 b 147 155 157 158 147 155 b 147 124 147 155 147 142 b 147 102 147 117 147 111 l 147 52 l 153 54 l 228 72 l 236 74 l 236 126 m 236 -105 b 235 -54 236 -65 236 -54 l 235 -54 b 231 -55 235 -54 234 -54 b 172 -69 227 -55 204 -62 l 149 -76 l 147 -76 l 147 -127 l 147 -179 l 152 -177 b 190 -167 155 -177 171 -173 l 230 -158 l 236 -156 l 236 -105 ',\n        },\n        vexAccidentalMicrotonal3: {\n            x_min: 0,\n            x_max: 430.75,\n            ha: 360,\n            o: 'm -146 537 b -138 538 -143 538 -141 538 b -118 525 -129 538 -121 533 b -117 390 -117 522 -117 521 b -115 259 -117 268 -117 259 b -115 259 -115 259 -115 259 b -59 272 -104 263 -62 272 b -39 259 -50 272 -42 267 b -37 209 -38 257 -37 233 b -39 159 -37 185 -38 162 b -85 138 -43 149 -44 149 l -117 131 l -117 21 b -115 -88 -117 -80 -117 -88 b -115 -88 -115 -88 -115 -88 b -59 -75 -104 -84 -62 -75 b -44 -81 -52 -75 -48 -77 b -38 -124 -38 -87 -38 -85 b -38 -138 -38 -124 -38 -138 b -38 -152 -38 -138 -38 -152 b -44 -195 -38 -191 -38 -190 b -85 -209 -48 -200 -48 -200 l -117 -217 l -117 -349 b -118 -486 -117 -481 -117 -482 b -138 -499 -121 -494 -129 -499 b -153 -493 -143 -499 -149 -497 b -159 -415 -158 -487 -159 -496 b -159 -355 -159 -398 -159 -379 b -159 -227 -159 -284 -159 -227 b -205 -238 -159 -227 -180 -232 b -250 -249 -230 -244 -250 -249 b -251 -386 -251 -249 -251 -311 b -252 -525 -251 -521 -251 -522 b -272 -538 -255 -534 -264 -538 b -287 -532 -277 -538 -283 -536 b -293 -452 -292 -527 -293 -536 b -293 -391 -293 -436 -293 -415 b -294 -260 -293 -269 -293 -260 b -294 -260 -294 -260 -294 -260 b -348 -272 -306 -264 -345 -272 b -368 -259 -357 -272 -365 -267 b -369 -209 -369 -257 -369 -233 b -368 -159 -369 -185 -369 -162 b -323 -139 -364 -149 -362 -148 l -293 -131 l -293 -22 b -294 87 -293 80 -293 87 b -294 87 -294 87 -294 87 b -348 75 -306 84 -345 75 b -368 88 -357 75 -365 80 b -369 138 -369 91 -369 114 b -368 188 -369 162 -369 186 b -323 209 -364 198 -362 199 l -293 216 l -293 349 b -292 486 -293 481 -293 482 b -272 499 -288 494 -280 499 b -257 493 -266 499 -261 497 b -251 414 -251 487 -251 496 b -251 354 -251 398 -251 378 b -251 226 -251 284 -251 226 b -205 238 -250 226 -230 231 b -159 249 -180 244 -159 249 b -159 385 -159 249 -159 310 b -157 525 -159 521 -159 522 b -146 537 -156 530 -151 535 z m -159 11 b -159 120 -159 98 -159 120 l -159 120 b -175 116 -160 120 -167 119 b -221 105 -184 114 -204 109 l -251 98 l -251 -12 b -251 -121 -251 -72 -251 -121 b -205 -110 -250 -121 -230 -116 b -159 -99 -180 -104 -159 -99 b -159 11 -159 -99 -159 -49 z m 89 517 b 97 519 92 518 94 519 b 117 505 106 519 114 513 b 119 376 119 502 119 501 l 119 249 l 145 258 b 176 267 169 266 172 267 b 177 267 176 267 177 267 b 196 255 186 267 192 263 l 197 252 l 197 205 b 197 181 197 195 197 187 b 193 149 197 153 197 153 b 152 131 190 144 187 143 l 119 120 l 119 10 b 119 -100 119 -62 119 -100 b 145 -91 120 -100 131 -96 b 173 -82 159 -86 171 -82 b 176 -81 174 -81 175 -81 b 196 -94 185 -81 193 -87 b 198 -151 197 -97 198 -125 b 197 -194 198 -172 197 -192 b 153 -218 193 -203 192 -204 l 119 -230 l 119 -367 l 118 -504 l 117 -507 b 97 -519 113 -514 105 -519 b 82 -512 92 -519 87 -517 b 76 -434 77 -507 76 -516 b 76 -374 76 -418 76 -398 b 76 -245 76 -303 76 -245 b 52 -254 76 -245 65 -249 b 19 -263 34 -260 25 -263 b 6 -257 13 -263 10 -261 b 0 -214 0 -251 0 -253 b 0 -200 0 -210 0 -205 b 0 -188 0 -196 0 -192 b 6 -143 0 -147 0 -149 b 46 -126 10 -139 10 -139 l 76 -115 l 76 -5 b 76 106 76 56 76 106 b 51 98 76 106 64 102 b 18 89 34 92 25 89 b 6 95 13 89 10 91 b 0 139 0 101 0 99 b 0 153 0 143 0 148 b 0 179 0 163 0 172 b 44 225 0 215 3 211 l 76 236 l 76 369 b 78 505 76 501 76 502 b 89 517 80 510 85 515 z ',\n        },\n        vexAccidentalMicrotonal4: {\n            x_min: 0,\n            x_max: 430.75,\n            ha: 360,\n            o: 'm 283 633 b 291 634 286 634 289 634 b 311 621 300 634 308 629 b 313 505 313 618 313 617 b 313 393 313 443 313 393 b 378 425 313 393 343 407 l 443 458 l 448 458 b 449 458 449 458 449 458 b 471 437 462 458 471 448 b 469 429 471 434 470 432 b 387 382 466 421 469 423 l 313 344 l 313 247 l 313 150 l 315 152 b 433 201 353 184 394 201 b 479 193 448 201 464 198 b 549 86 524 177 549 135 b 526 1 549 59 541 29 b 395 -143 504 -39 475 -71 b 316 -214 351 -182 341 -191 b 292 -229 302 -228 300 -229 b 272 -216 283 -229 275 -224 b 271 55 271 -212 271 -212 b 270 323 271 203 270 323 b 205 291 270 323 241 308 l 140 258 l 135 258 b 134 258 135 258 134 258 b 112 279 121 258 112 267 b 114 287 112 281 113 284 b 196 334 117 295 114 293 l 271 371 l 271 495 b 272 621 271 617 271 618 b 283 633 274 626 279 631 z m 404 133 b 391 134 400 134 395 134 b 384 134 388 134 386 134 b 318 88 358 130 335 114 l 313 81 l 313 -37 l 313 -156 l 316 -152 b 439 83 391 -71 439 22 l 439 84 b 404 133 439 115 430 128 z m -8 633 l -8 633 b 0 634 -6 634 -3 634 b 20 621 8 634 17 629 b 21 384 21 618 21 617 l 21 150 l 24 152 b 141 201 62 184 102 201 b 187 193 157 201 172 198 b 257 86 232 177 257 135 b 234 1 257 59 250 29 b 103 -143 212 -39 183 -71 b 24 -214 60 -182 49 -191 b 0 -229 10 -228 8 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 203 l -21 618 l -20 621 b -8 633 -18 626 -13 631 z m 113 133 l 113 133 b 99 134 109 134 103 134 b 93 134 97 134 94 134 b 26 88 66 130 43 114 l 21 81 l 21 -37 l 21 -156 l 25 -152 b 148 83 99 -71 148 22 l 148 84 b 113 133 148 115 138 128 z ',\n        },\n        vexNoteHeadRectBlack: {\n            x_min: 0,\n            x_max: 430.75,\n            ha: 360,\n            o: 'm 0 150 l 0 -150 l 430 -150 l 430 150 l 0 150 ',\n        },\n        vexNoteHeadRectWhite: {\n            x_min: 0,\n            x_max: 430.75,\n            ha: 360,\n            o: 'm 0 150 l 0 -150 l 430 -150 l 430 150 l 0 150 l 50 100 l 380 100 l 380 -100 l 50 -100 l 50 100',\n        },\n    },\n};\n","export const CustomMetrics = {\n    name: 'VexFlowCustom',\n    smufl: false,\n    glyphs: {},\n};\n","export const GonvilleFont = {\n    glyphs: {\n        bracketTop: {\n            x_min: 0,\n            x_max: 559.421875,\n            ha: 571,\n            o: 'm 544 204 b 548 204 545 204 547 204 b 559 194 555 204 559 199 b 559 190 559 192 559 191 b 530 156 559 188 556 184 b 462 86 510 134 481 104 b 453 76 458 81 454 77 l 446 70 l 441 65 b 434 59 439 63 436 61 l 427 54 b 409 37 426 51 416 44 b 392 23 398 29 394 26 b 387 19 389 22 387 20 b 379 13 386 19 383 16 l 371 8 l 367 5 l 359 -1 l 337 -16 b 285 -48 319 -29 298 -41 l 279 -52 b 186 -95 255 -66 210 -87 l 175 -99 b 23 -129 127 -117 68 -129 b 17 -129 20 -129 19 -129 b 1 -123 2 -129 2 -129 b 0 -49 0 -122 0 -83 b 0 4 0 -22 0 1 b 27 11 2 9 4 9 b 185 31 78 12 145 20 b 198 34 186 31 193 33 b 314 73 234 44 277 58 b 349 88 328 79 340 84 b 353 90 352 90 353 90 b 363 94 353 90 357 93 b 371 98 367 97 371 98 b 428 129 372 98 413 120 b 461 148 441 136 454 144 b 468 151 464 149 466 151 b 472 154 469 152 470 154 b 481 161 473 155 477 158 b 525 190 490 166 518 186 l 534 197 b 540 201 536 198 539 199 b 544 204 541 202 544 204 ',\n        },\n        bracketBottom: {\n            x_min: 0,\n            x_max: 559.421875,\n            ha: 571,\n            o: 'm 5 127 b 14 127 6 127 9 127 b 51 126 25 127 43 127 b 175 98 93 122 138 112 l 186 94 b 279 51 210 86 255 65 b 285 47 280 51 283 48 b 319 27 291 44 311 31 l 326 22 b 359 0 332 19 352 4 l 367 -6 b 371 -9 368 -6 370 -8 l 379 -15 b 387 -22 383 -18 386 -20 l 398 -30 l 411 -40 l 417 -47 l 427 -55 l 434 -61 b 441 -66 436 -62 439 -65 l 446 -72 l 453 -77 l 462 -87 b 558 -188 490 -113 549 -176 b 559 -195 559 -191 559 -194 b 548 -205 559 -201 555 -205 b 541 -204 547 -205 544 -205 b 534 -198 539 -201 536 -199 l 525 -191 b 481 -162 518 -187 490 -167 b 472 -155 477 -159 472 -156 b 468 -152 470 -155 469 -154 b 461 -149 466 -152 464 -151 b 428 -130 454 -145 441 -137 b 371 -99 413 -122 372 -99 b 363 -95 371 -99 367 -98 b 353 -91 357 -94 353 -91 b 348 -90 353 -91 352 -91 b 332 -81 343 -87 341 -86 b 27 -12 230 -37 127 -13 b 0 -5 4 -11 2 -11 b 0 58 0 -2 0 27 b 0 122 0 88 0 120 b 5 127 1 124 4 126 ',\n        },\n        barlineTick: {\n            x_min: -80.3125,\n            x_max: 78.9375,\n            ha: 81,\n            o: 'm 63 191 b 69 192 65 192 66 192 b 77 188 72 192 76 191 b 78 183 78 187 78 186 b 74 158 78 179 77 172 l 66 115 b 9 -161 49 30 10 -158 b -10 -187 6 -172 -1 -181 b -34 -194 -17 -191 -25 -194 b -80 -147 -58 -194 -80 -174 b -80 -141 -80 -144 -80 -142 b 9 70 -80 -134 -73 -117 l 49 163 b 63 191 59 188 61 190 ',\n        },\n        breathMarkTick: {\n            x_min: -80.3125,\n            x_max: 78.9375,\n            ha: 81,\n            o: 'm 63 191 b 69 192 65 192 66 192 b 77 188 72 192 76 191 b 78 183 78 187 78 186 b 74 158 78 179 77 172 l 66 115 b 9 -161 49 30 10 -158 b -10 -187 6 -172 -1 -181 b -34 -194 -17 -191 -25 -194 b -80 -147 -58 -194 -80 -174 b -80 -141 -80 -144 -80 -142 b 9 70 -80 -134 -73 -117 l 49 163 b 63 191 59 188 61 190 ',\n        },\n        segno: {\n            x_min: -330.75,\n            x_max: 329.390625,\n            ha: 336,\n            o: 'm -133 483 b -117 484 -127 484 -122 484 b 31 373 -51 484 9 440 b 35 348 34 365 35 356 b -25 285 35 313 10 285 b -87 331 -55 285 -76 302 b -167 402 -100 376 -133 402 b -191 398 -175 402 -183 401 b -227 341 -215 388 -227 369 b -225 320 -227 334 -227 327 b -13 74 -209 230 -125 133 b 6 65 -4 70 5 66 l 9 63 l 10 65 b 117 231 12 68 40 112 l 189 341 l 242 424 b 268 460 262 456 264 458 b 283 464 273 463 277 464 b 308 438 296 464 308 453 l 308 437 b 287 396 308 430 308 428 l 95 98 l 59 43 l 58 41 l 65 37 b 253 -156 151 -8 217 -77 b 281 -285 272 -199 281 -244 b 148 -481 281 -381 231 -463 b 115 -485 137 -484 126 -485 b -32 -376 51 -485 -9 -442 b -36 -349 -35 -366 -36 -358 b 25 -287 -36 -315 -12 -287 b 85 -333 54 -287 74 -302 b 166 -403 99 -377 133 -403 b 190 -399 174 -403 182 -402 b 225 -342 215 -390 225 -370 b 224 -322 225 -335 225 -328 b 12 -76 208 -231 125 -134 b -8 -66 2 -72 -6 -68 l -10 -65 l -12 -66 b -118 -231 -13 -68 -42 -113 l -190 -342 l -243 -426 b -269 -462 -264 -458 -265 -458 b -284 -466 -274 -464 -279 -466 b -310 -440 -298 -466 -310 -455 l -310 -438 b -288 -398 -310 -430 -308 -430 l -96 -99 l -59 -44 l -59 -43 l -66 -38 b -281 284 -198 33 -281 158 l -281 284 b -133 483 -281 392 -220 474 m 254 177 b 266 179 258 177 262 179 b 319 149 287 179 307 167 b 329 115 326 140 329 127 b 319 79 329 102 326 90 b 268 51 307 61 287 51 b 221 72 250 51 234 58 b 205 115 210 84 205 99 b 254 177 205 142 223 170 m -281 -54 b -269 -52 -277 -52 -273 -52 b -223 -73 -253 -52 -235 -59 b -206 -116 -212 -84 -206 -101 b -216 -151 -206 -129 -209 -141 b -269 -179 -228 -170 -249 -179 b -314 -159 -285 -179 -302 -173 b -330 -116 -325 -147 -330 -131 b -281 -54 -330 -88 -313 -61 ',\n        },\n        coda: {\n            x_min: -311.6875,\n            x_max: 310.328125,\n            ha: 317,\n            o: 'm -9 388 b -2 390 -8 390 -5 390 b 5 388 1 390 4 390 b 19 378 10 387 16 383 b 23 333 23 371 23 371 b 24 298 23 299 24 298 b 81 276 34 298 65 285 b 213 91 145 240 190 177 b 224 24 217 76 224 36 b 257 24 224 24 235 24 b 299 19 292 24 292 24 b 310 -1 306 15 310 6 b 299 -23 310 -11 306 -19 b 257 -27 292 -27 292 -27 b 224 -29 235 -27 224 -29 b 213 -95 224 -40 217 -80 b 81 -280 190 -181 145 -244 b 24 -301 65 -290 34 -301 b 23 -335 24 -301 23 -303 l 23 -340 b 17 -381 23 -374 23 -374 b -1 -391 13 -388 5 -391 b -21 -381 -9 -391 -17 -388 b -27 -340 -27 -374 -27 -374 l -27 -335 b -28 -301 -27 -303 -27 -301 b -85 -280 -38 -301 -69 -290 b -217 -95 -149 -244 -194 -181 b -228 -29 -221 -80 -228 -40 b -259 -27 -228 -29 -238 -27 b -300 -23 -294 -27 -294 -27 b -311 -2 -307 -19 -311 -11 b -294 23 -311 8 -304 19 b -259 24 -291 23 -284 24 b -228 24 -239 24 -228 24 b -217 91 -228 36 -221 76 b -85 276 -194 177 -149 240 b -28 298 -69 285 -38 298 b -27 333 -27 298 -27 299 b -27 371 -27 362 -27 369 b -9 388 -24 378 -17 385 m -27 136 b -28 247 -27 197 -28 247 b -61 216 -31 247 -53 226 b -123 33 -95 172 -121 98 l -125 24 l -76 24 l -27 24 l -27 136 m 29 242 b 24 247 27 245 24 247 b 23 136 24 247 23 197 l 23 24 l 72 24 l 121 24 l 119 33 b 29 242 115 116 77 206 m -27 -140 l -27 -27 l -76 -27 l -125 -27 l -123 -36 b -61 -220 -121 -102 -95 -176 b -28 -251 -53 -230 -31 -251 b -27 -140 -28 -251 -27 -201 m 119 -36 l 121 -27 l 72 -27 l 23 -27 l 23 -140 b 24 -251 23 -201 24 -251 b 57 -220 27 -251 49 -230 b 119 -36 91 -176 117 -102 ',\n        },\n        gClef: {\n            x_min: -1.359375,\n            x_max: 847.96875,\n            ha: 865,\n            o: 'm 488 1499 b 495 1500 490 1500 492 1500 b 541 1465 507 1500 521 1490 b 679 1078 622 1372 679 1210 b 677 1050 679 1068 677 1060 b 477 642 668 893 604 764 l 443 609 l 431 596 l 431 592 l 438 562 l 449 508 l 460 458 b 481 355 475 390 481 355 b 481 355 481 355 481 355 b 490 356 481 355 485 355 b 528 358 495 356 511 358 b 558 356 540 358 552 356 b 839 95 699 338 808 237 b 847 22 845 72 847 47 b 631 -303 847 -113 766 -242 b 620 -309 623 -308 620 -309 l 620 -310 b 631 -359 620 -310 626 -333 l 646 -435 l 660 -496 b 672 -588 668 -535 672 -563 b 664 -653 672 -610 669 -630 b 383 -875 630 -792 509 -875 b 201 -810 321 -875 257 -855 b 129 -680 151 -768 129 -730 b 274 -530 129 -592 200 -530 b 351 -553 300 -530 326 -538 b 412 -669 393 -582 412 -626 b 287 -805 412 -735 366 -800 l 279 -805 l 285 -809 b 383 -830 318 -823 351 -830 b 586 -718 464 -830 540 -789 b 626 -584 612 -678 626 -631 b 619 -528 626 -566 623 -548 b 612 -495 619 -526 616 -510 b 577 -324 590 -387 577 -324 b 577 -324 577 -324 577 -324 b 568 -326 575 -324 571 -324 b 528 -334 558 -328 537 -333 b 465 -338 506 -337 485 -338 b 24 -11 269 -338 87 -206 b -1 145 8 41 -1 93 b 96 442 -1 249 32 351 b 322 714 166 541 236 626 l 352 745 l 345 782 l 332 843 l 315 921 b 303 984 310 950 304 978 b 295 1082 298 1017 295 1049 b 413 1426 295 1208 336 1329 b 488 1499 436 1456 477 1496 m 549 1301 b 541 1301 547 1301 544 1301 b 411 1207 500 1301 447 1263 b 355 1004 374 1152 355 1079 b 359 942 355 984 356 963 b 371 881 362 927 363 917 l 385 818 b 392 782 389 799 392 784 l 392 782 b 434 828 393 782 424 816 b 607 1165 534 941 594 1060 b 608 1193 608 1175 608 1183 b 597 1270 608 1224 604 1254 b 549 1301 589 1286 571 1299 m 398 528 b 393 555 396 542 393 553 b 392 555 393 555 393 555 b 317 470 390 555 347 505 b 190 298 266 408 212 334 b 127 70 148 227 127 148 b 155 -77 127 19 137 -30 b 468 -303 209 -216 333 -303 b 519 -299 484 -303 502 -302 b 568 -284 541 -295 568 -287 l 568 -284 b 563 -263 568 -284 566 -274 l 534 -120 l 511 -13 l 496 61 l 480 133 b 469 187 472 176 469 187 b 468 188 469 187 469 188 b 416 162 462 188 430 172 b 337 13 364 126 337 69 b 413 -124 337 -40 363 -93 b 428 -144 424 -131 428 -137 b 428 -149 428 -145 428 -148 b 409 -166 426 -161 419 -166 b 394 -162 405 -166 400 -165 b 240 77 302 -122 240 -27 l 240 77 b 430 342 240 197 315 301 l 436 344 l 426 394 l 398 528 m 548 194 b 526 195 540 195 532 195 b 519 195 524 195 521 195 l 514 195 l 518 177 l 539 79 l 552 15 l 566 -48 l 594 -187 l 605 -240 b 612 -266 609 -254 611 -266 b 612 -266 612 -266 612 -266 b 641 -248 613 -266 630 -256 b 744 -98 692 -212 730 -156 b 751 -40 749 -79 751 -59 b 548 194 751 76 665 181 ',\n        },\n        cClef: {\n            x_min: 0,\n            x_max: 873.828125,\n            ha: 892,\n            o: 'm 0 0 l 0 703 l 81 703 l 164 703 l 164 0 l 164 -705 l 81 -705 l 0 -705 l 0 0 m 225 0 l 225 703 l 246 703 l 268 703 l 268 366 l 268 30 l 274 36 b 314 79 284 44 302 63 b 413 302 357 137 392 213 b 432 327 419 324 421 327 b 449 306 443 327 447 322 b 611 115 457 195 529 115 b 651 122 624 115 638 117 b 728 316 705 140 724 188 b 729 388 728 342 729 366 b 671 635 729 533 711 602 b 581 662 649 652 616 662 b 477 637 545 662 510 653 l 475 635 l 477 634 b 503 627 488 632 495 631 b 545 556 532 612 545 584 b 491 480 545 524 526 491 b 465 474 481 476 473 474 b 379 563 417 474 379 516 b 389 602 379 576 382 588 b 541 691 409 641 479 681 b 582 694 555 692 568 694 b 865 462 714 694 834 598 b 873 392 871 440 873 416 b 865 317 873 367 871 341 b 639 84 839 194 748 101 b 612 83 630 83 620 83 b 511 116 577 83 543 94 b 504 120 509 119 506 120 b 504 120 504 120 504 120 b 469 59 504 120 488 93 l 432 -1 l 469 -61 b 504 -122 488 -94 504 -122 b 504 -122 504 -122 504 -122 b 511 -117 506 -122 509 -120 b 612 -84 543 -95 577 -84 b 665 -91 630 -84 647 -87 b 869 -338 771 -122 850 -216 b 873 -392 872 -356 873 -374 b 798 -595 873 -469 847 -539 b 581 -695 741 -662 660 -695 b 406 -626 517 -695 454 -671 b 381 -563 389 -607 381 -585 b 465 -477 381 -519 413 -477 b 545 -559 514 -477 545 -519 b 503 -628 545 -587 532 -613 b 477 -635 495 -632 488 -634 l 475 -637 l 477 -638 b 581 -663 510 -655 545 -663 b 671 -637 616 -663 649 -653 b 729 -391 711 -603 729 -534 b 728 -317 729 -367 728 -344 b 623 -117 722 -173 698 -124 b 611 -116 619 -116 615 -116 b 449 -308 528 -116 457 -198 b 432 -328 447 -323 443 -328 b 413 -303 421 -328 419 -326 b 314 -80 392 -215 357 -138 b 274 -37 302 -65 284 -45 l 268 -31 l 268 -367 l 268 -705 l 246 -705 l 225 -705 l 225 0 ',\n        },\n        fClef: {\n            x_min: -1.359375,\n            x_max: 899.703125,\n            ha: 918,\n            o: 'm 307 349 b 332 351 315 351 323 351 b 443 340 367 351 408 347 b 741 47 607 306 720 195 b 744 0 743 31 744 16 b 660 -303 744 -90 713 -206 b 28 -755 534 -531 304 -695 b 14 -756 23 -755 19 -756 b -1 -741 4 -756 -1 -750 b 21 -720 -1 -731 1 -728 b 567 -56 337 -601 548 -344 b 568 -11 568 -41 568 -24 b 442 285 568 129 525 233 b 325 319 406 308 367 319 b 93 177 232 319 137 266 b 84 154 91 170 84 155 b 84 154 84 154 84 154 b 88 156 84 154 85 155 b 159 177 110 170 134 177 b 257 134 194 177 231 162 b 294 41 281 108 294 73 b 171 -97 294 -24 246 -90 b 156 -98 166 -97 161 -98 b 6 74 73 -98 6 -22 b 6 80 6 76 6 79 b 307 349 10 223 141 340 m 839 215 b 845 216 841 216 842 216 b 862 213 852 216 860 215 b 899 163 887 206 899 184 b 872 117 899 145 890 127 b 847 111 865 112 856 111 b 808 130 833 111 818 117 b 796 162 800 140 796 151 b 839 215 796 187 812 212 m 839 -112 b 845 -112 841 -112 842 -112 b 862 -115 852 -112 860 -113 b 899 -165 887 -122 899 -144 b 872 -210 899 -183 890 -201 b 847 -217 865 -215 856 -217 b 808 -198 833 -217 818 -210 b 796 -165 800 -188 796 -177 b 839 -112 796 -140 812 -116 ',\n        },\n        unpitchedPercussionClef1: {\n            x_min: 0,\n            x_max: 464.140625,\n            ha: 474,\n            o: 'm 0 0 l 0 347 l 76 347 l 153 347 l 153 0 l 153 -348 l 76 -348 l 0 -348 l 0 0 m 308 -1 l 308 347 l 386 347 l 464 347 l 464 -1 l 464 -348 l 386 -348 l 308 -348 l 308 -1 ',\n        },\n        '6stringTabClef': {\n            x_min: -1.359375,\n            x_max: 680.5625,\n            ha: 694,\n            o: 'm 597 1042 b 604 1042 600 1042 602 1042 b 642 1002 627 1042 642 1022 b 619 966 642 988 635 974 b 439 927 574 942 503 927 l 426 927 l 426 921 b 430 838 428 893 430 866 b 345 480 430 696 398 560 b 179 391 307 423 249 391 b 156 392 171 391 164 392 b 138 394 149 394 142 394 b 103 434 115 396 103 416 b 129 471 103 451 111 466 b 141 474 133 473 137 474 b 172 459 153 474 164 469 b 181 455 175 456 176 455 b 187 456 182 455 185 455 b 253 520 212 460 234 483 b 315 836 294 605 315 714 b 311 928 315 867 314 898 b 302 945 310 943 311 942 b 245 953 283 950 262 953 b 130 891 193 953 149 931 b 84 860 119 870 102 860 b 36 905 61 860 39 877 b 36 910 36 907 36 909 b 80 970 36 931 50 949 b 249 1017 125 1000 187 1017 b 322 1009 273 1017 299 1014 l 341 1003 b 436 991 372 995 406 991 b 577 1031 495 991 545 1004 b 597 1042 583 1038 590 1041 m 416 360 b 424 360 419 360 421 360 b 481 309 454 360 479 338 b 503 145 484 280 495 199 b 585 -185 525 16 555 -106 b 630 -245 596 -213 613 -237 l 634 -247 l 638 -245 b 647 -244 641 -245 645 -244 b 680 -278 666 -244 680 -262 b 664 -308 680 -290 675 -301 b 638 -312 658 -310 650 -312 b 613 -309 631 -312 623 -310 b 477 -201 555 -303 502 -260 b 417 -2 460 -159 434 -72 b 416 5 417 1 416 5 b 416 5 416 5 416 5 b 411 -5 415 5 413 0 b 359 -97 397 -33 377 -70 b 353 -106 355 -102 353 -105 b 359 -112 353 -108 355 -109 b 409 -130 375 -123 390 -129 b 426 -134 420 -130 421 -131 b 431 -147 428 -137 431 -141 b 420 -162 431 -152 427 -159 b 382 -169 409 -166 396 -169 b 323 -155 363 -169 341 -165 l 317 -152 l 314 -155 b 62 -303 240 -240 148 -295 b 36 -305 55 -305 44 -305 b 23 -303 29 -305 24 -305 b -1 -273 6 -299 -1 -287 b 31 -240 -1 -256 10 -240 b 36 -240 32 -240 34 -240 b 42 -241 38 -241 39 -241 b 134 -204 63 -241 99 -226 b 367 288 265 -115 357 81 b 375 330 368 313 370 320 b 416 360 383 347 400 358 m 360 -359 b 379 -359 363 -359 371 -359 b 424 -360 396 -359 416 -359 b 646 -502 536 -373 624 -430 b 649 -527 649 -510 649 -519 b 530 -673 649 -578 604 -635 l 521 -677 l 529 -681 b 653 -811 592 -714 637 -762 b 660 -853 658 -827 660 -839 b 645 -911 660 -873 656 -892 b 426 -1021 608 -981 519 -1021 b 283 -989 377 -1021 328 -1011 b 235 -949 249 -972 239 -964 b 234 -936 234 -946 234 -941 b 234 -928 234 -934 234 -931 l 235 -925 l 234 -927 l 225 -934 b 87 -982 186 -966 138 -982 b 80 -982 85 -982 83 -982 b 55 -981 70 -981 58 -981 b 17 -943 32 -981 17 -964 b 54 -904 17 -921 35 -904 b 78 -914 62 -904 72 -909 l 83 -918 l 88 -918 b 190 -831 122 -918 166 -881 b 269 -506 242 -727 269 -612 b 268 -462 269 -492 269 -477 b 266 -449 266 -458 266 -452 b 265 -444 266 -445 266 -444 b 257 -446 264 -444 261 -445 b 132 -545 196 -470 152 -505 b 88 -573 122 -563 104 -573 b 39 -523 63 -573 39 -553 b 63 -476 39 -505 44 -494 b 360 -359 136 -408 235 -369 m 419 -424 b 393 -423 411 -423 406 -423 l 375 -423 l 377 -426 b 379 -439 377 -427 378 -434 b 383 -510 382 -463 383 -487 b 314 -811 383 -609 360 -710 b 266 -893 296 -850 285 -870 b 264 -898 265 -896 264 -898 l 264 -898 b 264 -898 264 -898 264 -898 b 268 -898 264 -898 266 -898 b 273 -898 270 -898 272 -898 b 300 -909 283 -898 291 -900 b 426 -957 340 -941 385 -957 b 476 -949 443 -957 460 -954 b 547 -853 522 -931 547 -893 b 485 -745 547 -816 526 -775 b 397 -707 460 -727 432 -714 b 366 -675 375 -703 366 -692 b 396 -642 366 -657 377 -645 b 530 -557 455 -637 511 -601 b 536 -527 534 -548 536 -537 b 419 -424 536 -480 490 -437 ',\n        },\n        timeSig0: {\n            x_min: 0,\n            x_max: 514.5,\n            ha: 525,\n            o: 'm 236 648 b 246 648 238 648 242 648 b 288 646 261 648 283 648 b 472 513 364 634 428 587 b 514 347 502 464 514 413 b 462 163 514 272 499 217 b 257 44 409 83 333 44 b 50 163 181 44 103 83 b 0 347 14 217 0 272 b 40 513 0 413 12 464 b 236 648 87 591 155 638 m 277 614 b 253 616 273 616 261 616 b 242 616 247 616 243 616 b 170 499 193 609 181 589 b 159 348 163 446 159 398 b 166 222 159 308 161 266 b 201 91 174 138 183 106 b 257 76 215 81 235 76 b 311 91 277 76 299 81 b 347 222 330 106 338 138 b 353 348 352 266 353 308 b 344 499 353 398 351 446 b 277 614 333 587 322 606 m 257 -1 l 258 -1 l 255 -1 l 257 -1 m 257 673 l 258 673 l 255 673 l 257 673 ',\n        },\n        timeSig1: {\n            x_min: -1.359375,\n            x_max: 344.359375,\n            ha: 351,\n            o: 'm 126 637 l 129 638 l 198 638 l 266 638 l 269 635 b 274 631 272 634 273 632 l 277 627 l 277 395 b 279 156 277 230 277 161 b 329 88 281 123 295 106 b 344 69 341 81 344 79 b 337 55 344 62 343 59 l 333 54 l 197 54 l 61 54 l 58 55 b 50 69 53 59 50 62 b 65 88 50 79 53 81 b 80 97 72 91 74 93 b 117 156 103 113 112 129 b 117 345 117 161 117 222 l 117 528 l 100 503 l 38 406 b 14 383 24 384 23 383 b -1 398 5 383 -1 390 b 4 415 -1 403 1 409 b 16 437 5 416 10 426 l 72 539 l 100 596 b 121 632 119 631 119 631 b 126 637 122 634 125 635 m 171 -1 l 172 -1 l 170 -1 l 171 -1 m 171 673 l 172 673 l 170 673 l 171 673 ',\n        },\n        timeSig2: {\n            x_min: -1.359375,\n            x_max: 458.6875,\n            ha: 468,\n            o: 'm 197 648 b 216 648 201 648 208 648 b 258 646 232 648 253 648 b 419 546 333 637 393 599 b 432 489 428 528 432 509 b 356 342 432 440 405 384 b 235 278 322 313 288 295 b 69 170 166 256 107 217 b 69 169 69 170 69 169 b 69 169 69 169 69 169 b 74 173 69 169 72 170 b 209 222 112 204 163 222 b 310 195 247 222 274 215 b 371 179 332 184 352 179 b 396 181 379 179 387 179 b 428 202 409 184 423 194 b 442 212 431 209 436 212 b 458 197 450 212 458 206 b 441 148 458 190 449 165 b 299 44 409 84 353 44 b 288 45 295 44 292 44 b 250 61 274 45 268 49 b 122 99 212 86 164 99 b 73 91 104 99 88 97 b 28 63 53 84 34 72 b 14 54 25 56 20 54 b 1 62 9 54 4 56 l -1 65 l -1 79 b 0 99 -1 91 0 95 b 2 113 1 102 2 108 b 164 309 20 197 81 272 b 285 470 232 341 277 398 b 287 487 287 476 287 481 b 171 595 287 551 239 595 b 155 595 166 595 160 595 b 142 592 145 594 142 594 b 145 589 142 592 142 591 b 179 527 168 576 179 551 b 132 455 179 496 163 467 b 104 451 122 452 112 451 b 27 530 62 451 27 487 b 29 555 27 538 27 546 b 197 648 44 601 115 639 m 228 -1 l 230 -1 l 227 -1 l 228 -1 m 228 673 l 230 673 l 227 673 l 228 673 ',\n        },\n        timeSig3: {\n            x_min: -1.359375,\n            x_max: 409.6875,\n            ha: 418,\n            o: 'm 174 648 b 191 648 176 648 183 648 b 225 648 204 648 220 648 b 402 523 317 638 389 588 b 404 503 404 517 404 510 b 402 484 404 495 404 488 b 264 373 389 437 334 394 b 257 370 259 371 257 371 b 257 370 257 370 257 370 b 264 369 258 370 261 369 b 409 202 359 334 409 267 b 318 72 409 152 381 104 b 200 43 281 52 240 43 b 23 113 134 43 69 68 b 0 169 6 129 0 149 b 77 249 0 210 29 249 l 77 249 b 152 174 125 249 152 212 b 103 102 152 145 137 116 b 103 102 103 102 103 102 b 147 94 103 101 132 95 b 153 94 149 94 151 94 b 265 206 219 94 265 141 b 264 226 265 213 265 219 b 147 355 253 299 204 353 b 126 371 133 356 126 362 b 147 388 126 383 132 388 b 254 474 196 391 238 424 b 259 502 258 484 259 494 b 182 592 259 544 228 582 b 156 595 175 595 166 595 b 115 592 142 595 129 594 l 111 591 l 115 588 b 152 524 141 574 152 549 b 92 449 152 491 130 458 b 76 448 87 448 81 448 b -1 530 32 448 -1 488 b 20 581 -1 548 5 566 b 174 648 55 619 108 641 m 204 -1 l 205 -1 l 202 -1 l 204 -1 m 204 673 l 205 673 l 202 673 l 204 673 ',\n        },\n        timeSig4: {\n            x_min: 0,\n            x_max: 468.21875,\n            ha: 478,\n            o: 'm 174 637 b 232 638 175 638 189 638 b 277 638 245 638 259 638 l 378 638 l 381 635 b 389 623 386 632 389 627 b 382 609 389 617 386 613 b 366 589 381 606 372 598 l 313 528 l 245 451 l 209 410 l 155 348 l 84 267 b 59 240 72 252 59 240 b 59 240 59 240 59 240 b 151 238 59 238 68 238 l 242 238 l 242 303 b 243 371 242 369 242 370 b 289 426 245 374 254 385 l 303 441 l 317 456 l 338 483 l 360 506 l 371 520 b 386 527 375 526 381 527 b 400 519 392 527 397 524 b 401 440 401 516 401 514 b 401 377 401 423 401 402 l 401 238 l 426 238 b 453 237 449 238 450 238 b 465 217 461 234 465 226 b 460 202 465 212 464 206 b 426 197 454 197 453 197 l 401 197 l 401 180 b 451 88 402 129 412 109 b 468 69 465 81 468 79 b 461 55 468 62 466 59 l 458 54 l 321 54 l 185 54 l 182 55 b 175 69 176 59 175 62 b 191 88 175 79 176 81 b 240 180 230 109 240 129 l 240 197 l 125 197 b 73 195 104 195 87 195 b 8 197 10 195 9 197 b 0 212 2 199 0 205 b 0 212 0 212 0 212 b 20 242 0 219 0 219 b 163 610 104 344 163 492 b 174 637 163 628 166 634 m 234 -1 l 235 -1 l 232 -1 l 234 -1 m 234 673 l 235 673 l 232 673 l 234 673 ',\n        },\n        timeSig5: {\n            x_min: 0,\n            x_max: 409.6875,\n            ha: 418,\n            o: 'm 47 637 b 53 638 49 638 50 638 b 69 634 55 638 61 637 b 210 610 114 619 161 610 b 363 634 259 610 311 619 b 382 638 372 637 378 638 b 392 634 386 638 389 637 b 397 623 396 630 397 627 b 393 610 397 620 396 616 b 298 505 368 552 338 520 b 212 494 277 498 246 494 b 65 517 163 494 106 502 b 61 517 62 517 61 517 b 61 517 61 517 61 517 b 51 408 61 517 51 412 b 51 408 51 408 51 408 b 51 408 51 408 51 408 b 61 412 53 408 55 409 b 125 434 80 421 103 430 b 185 441 145 440 166 441 b 409 244 310 441 409 353 b 401 191 409 227 406 209 b 197 43 375 105 287 43 b 159 47 183 43 171 44 b 23 123 112 56 61 86 b 0 180 6 140 0 159 b 76 260 0 220 31 260 b 92 259 81 260 87 259 b 152 183 132 251 152 216 b 100 112 152 152 134 122 b 95 111 98 112 95 111 b 95 111 95 111 95 111 b 129 98 95 109 119 101 b 148 97 136 97 141 97 b 264 235 206 97 261 158 b 265 248 265 240 265 244 b 210 398 265 312 243 373 b 179 408 201 406 194 408 b 174 408 178 408 176 408 b 53 369 130 408 88 394 b 34 359 39 359 38 359 b 17 374 24 359 17 365 b 39 628 17 384 38 625 b 47 637 40 631 43 635 m 204 -1 l 205 -1 l 202 -1 l 204 -1 m 204 673 l 205 673 l 202 673 l 204 673 ',\n        },\n        timeSig6: {\n            x_min: 0,\n            x_max: 475.03125,\n            ha: 485,\n            o: 'm 255 648 b 274 648 259 648 266 648 b 314 646 288 648 307 648 b 450 555 374 637 438 594 b 454 530 453 546 454 538 b 375 451 454 485 416 451 b 328 467 359 451 343 455 b 300 526 310 483 300 503 b 352 598 300 557 319 589 b 356 599 355 598 356 599 b 352 602 356 599 355 601 b 288 616 330 612 308 616 b 210 584 257 616 230 605 b 164 433 189 559 174 508 b 160 374 163 415 160 381 b 160 374 160 374 160 374 b 160 374 160 374 160 374 b 168 377 160 374 164 376 b 258 395 200 390 228 395 b 366 367 294 395 328 387 b 475 223 436 333 475 283 b 472 197 475 215 473 206 b 349 65 462 141 419 95 b 259 43 317 51 288 43 b 167 69 230 43 200 52 b 4 290 80 113 20 195 b 0 349 1 309 0 328 b 20 467 0 391 6 433 b 255 648 58 563 155 637 m 269 363 b 257 363 265 363 261 363 b 210 345 236 363 220 356 b 186 226 196 324 186 272 b 187 198 186 216 186 206 b 213 95 191 151 202 112 b 257 76 221 83 238 76 b 270 77 261 76 266 76 b 321 156 299 81 310 99 b 329 229 326 183 329 206 b 321 301 329 252 326 274 b 269 363 311 342 298 359 m 236 -1 l 238 -1 l 235 -1 l 236 -1 m 236 673 l 238 673 l 235 673 l 236 673 ',\n        },\n        timeSig7: {\n            x_min: 0,\n            x_max: 442.359375,\n            ha: 451,\n            o: 'm 147 648 b 166 649 153 649 160 649 b 313 598 217 649 273 630 b 340 587 323 588 328 587 l 341 587 b 412 628 367 587 390 601 b 427 638 416 635 421 638 b 439 632 431 638 435 637 b 442 623 441 630 442 628 b 430 569 442 616 439 603 b 352 369 408 492 377 410 b 300 259 325 324 313 298 b 273 84 283 205 273 140 b 265 55 273 65 272 59 l 261 54 l 181 54 l 99 54 l 96 55 b 91 61 95 56 92 59 l 89 63 l 89 77 b 147 263 89 133 111 202 b 261 401 176 313 212 355 b 378 541 315 449 349 489 l 382 548 l 375 544 b 240 495 333 512 285 495 b 129 535 198 495 160 509 b 84 560 108 552 95 560 b 76 559 81 560 78 560 b 31 487 59 555 43 530 b 14 470 27 473 24 470 b 1 477 8 470 4 471 l 0 480 l 0 553 l 0 627 l 1 630 b 16 638 4 635 9 638 b 23 635 17 638 20 637 b 49 626 36 626 39 626 b 96 638 59 626 80 630 b 104 639 99 638 102 639 b 117 644 107 641 112 642 b 147 648 125 645 137 648 m 220 -1 l 221 -1 l 219 -1 l 220 -1 m 220 673 l 221 673 l 219 673 l 220 673 ',\n        },\n        timeSig8: {\n            x_min: 0,\n            x_max: 488.640625,\n            ha: 499,\n            o: 'm 217 648 b 245 649 225 648 235 649 b 453 516 343 649 430 595 b 458 478 455 503 458 491 b 412 370 458 440 441 398 b 411 369 412 369 411 369 b 415 365 411 367 412 367 b 488 231 462 331 488 281 b 472 165 488 208 483 186 b 243 43 434 86 338 43 b 63 104 178 43 112 62 b 0 233 20 140 0 186 b 73 365 0 283 24 331 l 77 369 l 72 374 b 29 476 42 406 29 441 b 217 648 29 557 103 635 m 258 605 b 242 606 253 605 247 606 b 157 552 198 606 157 580 b 160 541 157 548 159 544 b 319 413 176 503 242 452 l 337 403 l 338 406 b 359 476 352 428 359 452 b 258 605 359 537 318 595 m 138 326 b 130 330 134 328 130 330 b 130 330 130 330 130 330 b 107 305 127 330 112 313 b 84 231 91 281 84 256 b 243 86 84 156 151 86 b 249 87 245 86 246 87 b 347 156 303 88 347 120 b 344 172 347 162 345 167 b 156 319 325 227 257 281 b 138 326 151 322 144 324 m 243 -1 l 245 -1 l 242 -1 l 243 -1 m 243 673 l 245 673 l 242 673 l 243 673 ',\n        },\n        timeSig9: {\n            x_min: 0,\n            x_max: 475.03125,\n            ha: 485,\n            o: 'm 191 646 b 212 649 198 648 205 649 b 255 644 227 649 243 646 b 458 448 348 616 428 539 b 475 342 469 415 475 378 b 460 244 475 308 469 274 b 193 44 421 124 303 44 b 91 69 157 44 122 51 b 19 161 43 97 19 126 b 21 181 19 167 20 174 b 98 241 32 220 65 241 b 170 186 129 241 160 223 b 172 166 171 179 172 173 b 121 94 172 134 152 102 b 117 93 118 94 117 93 b 121 90 117 93 118 91 b 185 76 142 80 164 76 b 270 119 220 76 251 91 b 308 259 287 145 300 194 b 313 317 310 277 313 310 b 313 317 313 317 313 317 b 313 317 313 317 313 317 b 304 315 313 317 308 316 b 216 295 273 302 245 295 b 145 308 193 295 170 299 b 19 398 88 327 42 360 b 0 469 5 420 0 444 b 24 551 0 496 8 526 b 191 646 54 596 125 637 m 227 614 b 215 616 224 616 220 616 b 202 614 210 616 206 616 b 152 535 174 610 163 592 b 144 463 147 509 144 485 b 152 391 144 440 147 417 b 216 328 163 344 179 328 b 280 391 253 328 269 344 b 288 463 285 417 288 440 b 280 535 288 485 285 509 b 227 614 269 594 258 610 m 236 -1 l 238 -1 l 235 -1 l 236 -1 m 236 673 l 238 673 l 235 673 l 236 673 ',\n        },\n        timeSigCommon: {\n            x_min: -1.359375,\n            x_max: 556.6875,\n            ha: 568,\n            o: 'm 294 322 b 318 323 299 322 308 323 b 360 320 334 323 352 322 b 526 217 430 310 490 273 b 543 166 537 202 543 184 b 447 70 543 117 503 70 b 445 70 447 70 446 70 b 359 159 394 72 359 113 b 368 201 359 173 362 187 b 442 245 382 229 412 245 b 455 244 446 245 451 245 b 460 244 458 244 460 244 b 460 244 460 244 460 244 b 454 248 460 244 458 245 b 325 291 417 276 372 291 b 285 287 313 291 299 290 b 144 -2 183 269 144 190 b 281 -290 144 -208 179 -280 b 304 -291 289 -291 298 -291 b 524 -105 412 -291 506 -212 b 541 -84 526 -88 530 -84 b 556 -101 551 -84 556 -90 b 549 -138 556 -111 553 -122 b 334 -322 521 -237 435 -310 b 302 -324 323 -323 313 -324 b 13 -101 172 -324 54 -234 b -1 -1 4 -68 -1 -34 b 294 322 -1 161 121 303 ',\n        },\n        timeSigCutCommon: {\n            x_min: 0,\n            x_max: 556.6875,\n            ha: 568,\n            o: 'm 289 545 b 298 546 292 545 295 546 b 318 533 306 546 315 541 b 319 428 319 530 319 528 l 319 327 l 334 327 b 526 223 412 326 485 285 b 543 172 537 206 543 190 b 447 76 543 122 503 76 b 445 76 446 76 446 76 b 359 165 394 77 359 119 b 368 205 359 179 362 192 b 441 251 382 233 412 251 b 455 249 446 251 451 251 b 460 248 458 249 460 248 b 460 248 460 248 460 248 b 454 254 460 249 458 251 b 334 295 419 280 378 294 l 319 295 l 319 4 l 319 -287 l 321 -285 b 328 -285 322 -285 325 -285 b 524 -99 424 -277 507 -198 b 541 -79 526 -84 530 -79 b 556 -97 551 -79 556 -84 b 548 -133 556 -105 553 -117 b 334 -317 521 -233 434 -306 b 322 -319 329 -317 323 -317 l 319 -319 l 319 -424 b 319 -471 319 -444 319 -459 b 313 -541 319 -544 318 -535 b 298 -548 308 -545 303 -548 b 279 -534 289 -548 281 -542 b 277 -424 277 -531 277 -530 l 277 -317 l 273 -317 b 13 -95 153 -305 51 -217 b 0 2 4 -62 0 -29 b 182 295 0 126 66 238 b 274 324 210 309 249 320 l 277 324 l 277 427 b 279 533 277 528 277 530 b 289 545 281 538 285 542 m 277 2 b 277 291 277 161 277 291 b 268 288 277 291 273 290 b 144 1 179 265 144 184 b 276 -284 144 -199 175 -267 l 277 -285 l 277 2 ',\n        },\n        timeSigPlus: {\n            x_min: 0,\n            x_max: 319.859375,\n            ha: 326,\n            o: 'm 149 508 b 159 509 152 509 155 509 b 186 494 170 509 181 503 b 190 440 190 487 190 488 l 190 430 l 190 377 l 242 377 l 251 377 b 303 373 298 377 296 377 b 319 345 314 367 319 356 b 304 319 319 335 314 324 b 250 315 296 315 299 315 l 242 315 l 190 315 l 190 262 l 190 252 b 186 198 190 204 190 205 b 159 183 179 188 170 183 b 132 198 148 183 138 188 b 127 252 127 205 127 204 l 127 262 l 127 315 l 76 315 l 68 315 b 14 319 20 315 21 315 b 0 347 4 324 0 335 b 14 373 0 356 4 367 b 68 377 21 377 20 377 l 76 377 l 127 377 l 127 430 l 127 440 b 132 494 127 488 127 487 b 149 508 136 501 142 505 ',\n        },\n        timeSigPlusSmall: {\n            x_min: 0,\n            x_max: 319.859375,\n            ha: 326,\n            o: 'm 149 508 b 159 509 152 509 155 509 b 186 494 170 509 181 503 b 190 440 190 487 190 488 l 190 430 l 190 377 l 242 377 l 251 377 b 303 373 298 377 296 377 b 319 345 314 367 319 356 b 304 319 319 335 314 324 b 250 315 296 315 299 315 l 242 315 l 190 315 l 190 262 l 190 252 b 186 198 190 204 190 205 b 159 183 179 188 170 183 b 132 198 148 183 138 188 b 127 252 127 205 127 204 l 127 262 l 127 315 l 76 315 l 68 315 b 14 319 20 315 21 315 b 0 347 4 324 0 335 b 14 373 0 356 4 367 b 68 377 21 377 20 377 l 76 377 l 127 377 l 127 430 l 127 440 b 132 494 127 488 127 487 b 149 508 136 501 142 505 ',\n        },\n        timeSigMinus: {\n            x_min: 0,\n            x_max: 318.5,\n            ha: 325,\n            o: 'm 20 376 b 167 377 23 377 96 377 b 296 376 231 377 294 377 b 318 347 311 371 318 359 b 296 316 318 333 311 320 b 159 315 294 315 227 315 b 21 316 91 315 24 315 b 0 345 6 320 0 333 b 20 376 0 359 6 371 ',\n        },\n        timeSigParensRight: {\n            x_min: 25.859375,\n            x_max: 164.6875,\n            ha: 168,\n            o: 'm 34 369 b 40 370 35 370 38 370 b 59 353 49 370 50 367 b 164 40 122 254 155 158 b 164 0 164 33 164 16 b 164 -40 164 -16 164 -34 b 59 -353 155 -158 122 -254 b 40 -371 53 -366 47 -371 b 34 -370 38 -371 36 -370 b 25 -358 28 -367 25 -363 b 31 -337 25 -352 27 -347 b 92 0 72 -234 92 -117 b 31 335 92 116 72 233 b 25 356 27 345 25 352 b 34 369 25 363 28 366 ',\n        },\n        timeSigParensRightSmall: {\n            x_min: 25.859375,\n            x_max: 164.6875,\n            ha: 168,\n            o: 'm 34 369 b 40 370 35 370 38 370 b 59 353 49 370 50 367 b 164 40 122 254 155 158 b 164 0 164 33 164 16 b 164 -40 164 -16 164 -34 b 59 -353 155 -158 122 -254 b 40 -371 53 -366 47 -371 b 34 -370 38 -371 36 -370 b 25 -358 28 -367 25 -363 b 31 -337 25 -352 27 -347 b 92 0 72 -234 92 -117 b 31 335 92 116 72 233 b 25 356 27 345 25 352 b 34 369 25 363 28 366 ',\n        },\n        timeSigParensLeft: {\n            x_min: -166.0625,\n            x_max: -25.859375,\n            ha: 0,\n            o: 'm -49 369 b -42 370 -46 369 -44 370 b -27 360 -36 370 -29 366 b -25 355 -27 359 -25 358 b -32 335 -25 351 -28 347 b -92 52 -66 248 -87 159 b -93 -1 -93 43 -93 20 b -92 -54 -93 -23 -93 -45 b -32 -337 -85 -162 -66 -251 b -25 -355 -27 -349 -25 -352 b -42 -371 -25 -365 -32 -371 b -61 -353 -50 -371 -51 -369 b -163 -63 -119 -262 -153 -165 b -166 -1 -166 -37 -166 -31 b -163 62 -166 30 -166 36 b -61 352 -153 163 -119 260 b -49 369 -54 365 -51 366 ',\n        },\n        timeSigParensLeftSmall: {\n            x_min: -166.0625,\n            x_max: -25.859375,\n            ha: 0,\n            o: 'm -49 369 b -42 370 -46 369 -44 370 b -27 360 -36 370 -29 366 b -25 355 -27 359 -25 358 b -32 335 -25 351 -28 347 b -92 52 -66 248 -87 159 b -93 -1 -93 43 -93 20 b -92 -54 -93 -23 -93 -45 b -32 -337 -85 -162 -66 -251 b -25 -355 -27 -349 -25 -352 b -42 -371 -25 -365 -32 -371 b -61 -353 -50 -371 -51 -369 b -163 -63 -119 -262 -153 -165 b -166 -1 -166 -37 -166 -31 b -163 62 -166 30 -166 36 b -61 352 -153 163 -119 260 b -49 369 -54 365 -51 366 ',\n        },\n        noteheadDoubleWhole: {\n            x_min: 0,\n            x_max: 902.421875,\n            ha: 921,\n            o: 'm 17 240 b 24 241 19 241 21 241 b 32 240 28 241 31 241 b 46 229 38 238 43 234 b 50 88 50 223 50 237 b 50 -1 50 63 50 34 b 50 -90 50 -36 50 -65 b 46 -231 50 -238 50 -224 b 25 -242 42 -238 34 -242 b 0 -224 14 -242 4 -235 b 0 2 0 -222 0 -108 b 0 223 0 112 0 220 b 17 240 2 230 9 237 m 110 240 b 118 241 111 241 114 241 b 126 240 121 241 123 241 b 142 223 133 237 140 230 b 144 123 144 220 144 205 b 144 29 144 45 144 29 b 144 29 144 29 144 29 b 393 183 166 106 264 167 b 450 186 412 184 431 186 b 756 29 600 186 732 120 b 756 29 756 29 756 29 b 758 123 758 29 758 45 b 760 227 758 226 758 223 b 784 241 766 237 774 241 b 804 229 792 241 800 237 b 809 88 808 223 809 237 l 809 -1 l 809 -90 b 804 -231 809 -238 808 -224 b 784 -242 800 -238 792 -242 b 762 -231 775 -242 766 -238 b 758 -124 756 -224 758 -231 b 756 -30 758 -47 758 -30 b 756 -30 756 -30 756 -30 b 509 -184 736 -108 637 -169 b 450 -187 488 -187 469 -187 b 144 -30 300 -187 168 -122 b 144 -30 144 -30 144 -30 b 144 -124 144 -30 144 -47 b 140 -231 144 -231 144 -224 b 118 -242 134 -238 126 -242 b 92 -224 107 -242 96 -235 b 92 2 92 -222 92 -108 b 92 223 92 112 92 220 b 110 240 95 230 102 237 m 432 161 b 413 162 426 162 420 162 b 313 41 351 162 313 109 b 347 -73 313 5 323 -34 b 487 -163 385 -133 439 -163 b 578 -97 526 -163 562 -142 b 588 -43 585 -80 588 -62 b 432 161 588 47 518 147 m 868 240 b 876 241 869 241 872 241 b 884 240 879 241 882 241 b 898 229 890 238 894 234 b 902 88 902 223 902 237 l 902 -1 l 902 -90 b 898 -231 902 -238 902 -224 b 876 -242 892 -238 884 -242 b 852 -224 865 -242 854 -235 b 850 2 850 -222 850 -108 b 852 223 850 112 850 220 b 868 240 853 230 860 237 ',\n        },\n        noteheadWhole: {\n            x_min: 0,\n            x_max: 619.3125,\n            ha: 632,\n            o: 'm 274 184 b 307 186 285 186 296 186 b 616 22 465 186 597 116 b 619 -1 617 13 619 5 b 308 -187 619 -104 483 -187 b 0 -1 133 -187 0 -102 b 5 36 0 11 1 23 b 274 184 29 115 141 176 m 289 161 b 272 162 284 162 277 162 b 171 41 209 162 171 108 b 205 -73 171 5 182 -34 b 345 -163 243 -133 298 -163 b 436 -98 385 -163 420 -142 b 446 -43 443 -80 446 -62 b 289 161 446 47 377 147 ',\n        },\n        noteheadHalf: {\n            x_min: 0,\n            x_max: 428.75,\n            ha: 438,\n            o: 'm 262 186 b 273 186 266 186 272 186 b 274 186 273 186 274 186 b 285 186 274 186 280 186 b 428 48 375 181 428 122 b 386 -68 428 12 416 -29 b 155 -187 329 -145 236 -187 b 12 -111 92 -187 38 -162 b 0 -51 4 -91 0 -72 b 262 186 0 58 122 179 m 366 131 b 352 134 362 133 357 134 b 219 81 321 134 269 115 b 47 -111 126 23 50 -62 b 47 -112 47 -111 47 -112 b 77 -136 47 -129 58 -136 b 264 -45 118 -136 194 -101 b 382 109 336 12 382 76 b 366 131 382 120 377 129 ',\n        },\n        noteheadBlack: {\n            x_min: 0,\n            x_max: 428.75,\n            ha: 438,\n            o: 'm 262 186 b 273 186 266 186 272 186 b 274 186 273 186 274 186 b 285 186 274 186 280 186 b 428 48 375 181 428 122 b 386 -68 428 12 416 -29 b 155 -187 329 -145 236 -187 b 12 -111 92 -187 38 -162 b 0 -51 4 -91 0 -72 b 262 186 0 58 122 179 ',\n        },\n        noteheadXWhole: {\n            x_min: 0,\n            x_max: 598.890625,\n            ha: 611,\n            o: 'm 62 181 b 77 183 66 183 72 183 b 91 181 83 183 88 183 b 202 131 100 180 106 177 l 299 87 l 394 131 b 517 183 499 181 502 183 b 519 183 517 183 518 183 b 598 104 567 183 598 144 b 577 49 598 84 592 65 b 518 15 567 38 563 37 b 484 0 499 6 484 0 b 518 -16 484 -1 499 -8 b 577 -51 563 -38 567 -40 b 598 -105 592 -66 598 -86 b 519 -184 598 -145 567 -184 b 517 -184 518 -184 517 -184 b 394 -133 502 -184 499 -183 l 299 -88 l 202 -133 b 81 -184 99 -183 95 -184 b 77 -184 80 -184 78 -184 b 0 -105 29 -184 0 -145 b 20 -51 0 -86 5 -66 b 80 -16 29 -40 34 -38 b 114 -1 98 -8 114 -1 b 80 15 114 0 98 6 b 20 49 34 37 29 38 b 0 104 6 65 0 84 b 62 181 0 140 23 174 m 88 134 b 74 136 85 134 80 136 b 68 134 72 136 69 136 b 46 104 54 130 46 117 b 55 81 46 95 49 88 b 149 34 59 76 53 80 b 224 -1 190 15 224 0 b 144 -38 224 -1 187 -18 b 54 -84 59 -79 58 -79 b 46 -105 49 -90 46 -98 b 76 -137 46 -122 58 -137 b 78 -137 77 -137 77 -137 b 194 -86 87 -137 76 -141 b 298 -36 250 -58 298 -36 b 298 -36 298 -36 298 -36 b 402 -84 299 -36 345 -58 b 518 -137 522 -141 510 -137 b 521 -137 519 -137 519 -137 b 551 -105 539 -137 551 -122 b 541 -83 551 -98 548 -90 b 447 -36 537 -77 544 -81 b 374 -1 406 -16 374 -1 b 447 34 374 0 406 15 b 541 81 544 80 537 76 b 551 104 548 88 551 97 b 521 136 551 120 539 136 b 518 136 519 136 519 136 b 517 136 518 136 517 136 l 517 136 b 402 83 511 136 511 136 b 298 34 345 56 299 34 b 298 34 298 34 298 34 b 194 84 298 34 250 56 b 88 134 137 111 89 133 ',\n        },\n        noteheadXHalf: {\n            x_min: 0,\n            x_max: 406.96875,\n            ha: 415,\n            o: 'm 55 181 b 70 183 61 183 66 183 b 111 170 85 183 99 179 b 160 130 115 167 137 149 l 202 95 l 245 130 b 319 181 299 176 302 179 b 334 183 325 183 330 183 b 406 109 375 183 406 148 b 401 81 406 99 405 91 b 348 24 394 65 390 59 b 318 -1 332 11 318 0 b 348 -26 318 -1 332 -12 b 401 -83 390 -61 394 -66 b 406 -111 405 -93 406 -101 b 334 -184 406 -149 375 -184 b 319 -183 330 -184 325 -184 b 245 -131 302 -180 299 -177 l 202 -97 l 160 -131 b 85 -183 107 -177 103 -180 b 70 -184 80 -184 76 -184 b 0 -111 31 -184 0 -149 b 4 -83 0 -101 1 -93 b 58 -26 10 -66 16 -61 b 88 -1 74 -12 88 -1 b 58 24 88 0 74 11 b 10 69 23 54 17 59 b 0 109 2 81 0 95 b 55 181 0 142 21 173 m 83 133 b 72 136 78 136 76 136 b 57 131 66 136 61 134 b 46 109 49 126 46 117 b 50 93 46 104 47 98 b 107 45 51 91 77 70 b 160 0 137 20 160 0 b 107 -47 160 -1 137 -22 b 50 -94 77 -72 51 -93 b 46 -111 47 -99 46 -105 b 59 -134 46 -120 50 -130 b 72 -137 62 -136 68 -137 b 83 -136 76 -137 80 -136 b 144 -84 84 -134 107 -116 b 202 -36 176 -58 202 -36 b 261 -84 202 -36 230 -58 b 323 -136 299 -116 321 -134 b 334 -137 326 -136 330 -137 b 345 -134 338 -137 343 -136 b 360 -111 355 -130 360 -120 b 355 -94 360 -105 359 -99 b 299 -47 353 -93 329 -72 b 245 0 269 -22 245 -1 b 299 45 245 0 269 20 b 355 93 329 70 353 91 b 360 109 359 98 360 104 b 345 133 360 119 355 129 b 334 136 343 134 338 136 b 323 134 330 136 326 134 b 261 83 321 133 299 115 b 202 34 230 56 202 34 b 144 83 202 34 176 56 b 83 133 106 115 84 133 ',\n        },\n        noteheadXBlack: {\n            x_min: 0,\n            x_max: 406.96875,\n            ha: 415,\n            o: 'm 21 183 b 28 183 24 183 25 183 b 42 181 34 183 39 183 b 127 108 47 179 47 179 b 202 41 168 72 202 41 b 279 108 204 41 238 72 b 357 177 321 145 356 176 b 375 183 363 181 370 183 b 406 151 392 183 406 169 b 404 137 406 147 405 141 b 322 62 401 131 398 129 b 251 0 284 27 251 0 b 322 -63 251 -1 284 -29 b 404 -138 398 -130 401 -133 b 406 -152 405 -142 406 -148 b 375 -184 406 -170 392 -184 b 357 -179 370 -184 363 -183 b 279 -109 356 -177 321 -147 b 202 -43 238 -73 204 -43 b 127 -109 202 -43 168 -73 b 49 -179 85 -147 50 -177 b 31 -184 43 -183 36 -184 b 0 -152 13 -184 0 -170 b 2 -138 0 -148 0 -142 b 83 -63 5 -133 8 -130 b 155 0 122 -29 155 -1 b 83 62 155 0 122 27 b 8 129 43 97 10 127 b 0 151 2 136 0 144 b 21 183 0 165 8 177 ',\n        },\n        noteheadCircleX: {\n            x_min: 0,\n            x_max: 484.5625,\n            ha: 494,\n            o: 'm 228 245 b 239 247 234 247 239 247 b 243 247 240 247 242 247 b 303 238 257 247 287 242 b 484 -2 417 208 484 104 b 412 -177 484 -65 461 -127 b 243 -248 363 -226 303 -248 b 6 -63 138 -248 36 -180 b 0 -1 1 -41 0 -20 b 228 245 0 127 98 240 m 255 181 b 240 183 247 183 245 183 b 232 181 238 183 235 183 b 142 152 200 180 168 170 l 138 149 l 190 97 l 242 44 l 294 97 l 345 149 l 340 152 b 255 181 315 169 284 180 m 147 -54 l 197 -1 l 147 51 l 95 104 l 91 99 b 62 -1 72 70 62 34 b 66 -43 62 -15 63 -29 b 91 -101 72 -63 80 -84 l 95 -106 l 147 -54 m 393 99 b 389 104 390 102 389 104 b 337 51 389 104 366 80 l 285 -1 l 337 -54 l 389 -106 l 393 -101 b 421 -1 412 -72 421 -36 b 393 99 421 34 412 69 m 294 -98 b 242 -45 265 -69 242 -45 b 190 -98 242 -45 219 -69 l 138 -151 l 142 -154 b 242 -184 172 -174 206 -184 b 340 -154 276 -184 311 -174 l 345 -151 l 294 -98 ',\n        },\n        noteheadTriangleUpWhole: {\n            x_min: 0,\n            x_max: 630.203125,\n            ha: 643,\n            o: 'm 308 204 b 314 205 310 205 313 205 b 326 201 319 205 323 204 b 355 154 328 199 338 180 b 401 83 362 142 392 95 l 409 72 b 431 41 412 66 424 49 b 619 -174 498 -51 570 -134 b 630 -192 626 -180 630 -186 b 626 -202 630 -195 628 -199 b 616 -206 623 -205 620 -206 b 552 -188 608 -206 592 -202 b 310 -155 488 -169 392 -155 b 268 -156 295 -155 281 -155 b 77 -188 197 -161 126 -173 b 13 -206 35 -202 20 -206 b 9 -206 12 -206 10 -206 b 0 -191 2 -202 0 -197 b 8 -176 0 -186 2 -180 b 204 49 58 -136 138 -43 l 220 72 l 227 83 b 295 188 245 108 281 166 b 308 204 299 197 304 202 m 315 147 b 314 147 315 147 314 147 b 314 147 314 147 314 147 b 306 129 314 145 310 138 l 296 105 b 281 72 292 97 284 77 l 274 56 b 181 -123 247 -4 212 -72 l 174 -134 l 176 -133 b 314 -123 215 -127 272 -123 b 451 -133 356 -123 413 -127 l 454 -134 l 449 -123 b 353 56 417 -72 381 -4 l 347 72 b 332 105 344 77 336 97 l 322 129 b 315 147 318 138 315 145 ',\n        },\n        noteheadTriangleUpHalf: {\n            x_min: 0,\n            x_max: 438.28125,\n            ha: 447,\n            o: 'm 212 205 b 219 205 213 205 216 205 b 239 183 228 205 231 204 b 421 -163 298 40 363 -83 b 438 -191 434 -180 438 -186 b 436 -197 438 -192 438 -195 b 424 -206 434 -204 431 -206 b 406 -201 420 -206 415 -205 b 216 -156 347 -172 281 -156 b 23 -205 148 -156 80 -173 b 14 -206 20 -206 17 -206 b 0 -191 6 -206 0 -201 b 6 -176 0 -187 1 -183 b 202 192 63 -104 142 45 b 212 205 205 199 208 202 m 264 48 l 249 81 l 243 94 l 242 91 b 89 -126 208 36 137 -66 b 81 -138 85 -133 81 -138 b 81 -138 81 -138 81 -138 b 81 -138 81 -138 81 -138 b 95 -133 81 -138 87 -136 b 280 -94 156 -108 221 -94 b 334 -98 299 -94 317 -95 b 343 -99 338 -99 343 -99 b 343 -99 343 -99 343 -99 b 338 -94 343 -99 341 -97 b 264 48 318 -58 287 1 ',\n        },\n        noteheadTriangleUpBlack: {\n            x_min: -1.359375,\n            x_max: 436.921875,\n            ha: 446,\n            o: 'm 213 205 b 217 205 215 205 216 205 b 234 194 224 205 234 199 b 236 187 234 194 235 190 l 245 167 l 261 129 l 270 106 b 355 -61 294 54 329 -13 b 420 -163 381 -105 402 -138 b 436 -188 435 -184 436 -184 b 436 -191 436 -190 436 -190 b 421 -206 436 -201 431 -206 l 421 -206 l 416 -206 l 405 -201 b 217 -158 347 -172 283 -158 b 31 -201 153 -158 88 -172 l 20 -206 l 14 -206 l 14 -206 b 0 -191 5 -206 0 -201 b -1 -188 0 -190 -1 -190 b 14 -163 -1 -186 0 -184 b 95 -34 36 -136 72 -77 b 166 106 119 8 148 68 l 175 129 l 183 148 l 200 188 b 213 205 205 199 208 202 ',\n        },\n        noteheadDiamondWhole: {\n            x_min: 0,\n            x_max: 627.46875,\n            ha: 640,\n            o: 'm 306 190 b 314 191 308 191 311 191 b 326 184 318 191 322 190 l 336 173 b 510 52 377 127 442 80 b 515 49 513 51 515 49 b 611 16 537 40 579 24 b 627 0 624 13 627 9 b 607 -18 627 -11 624 -13 b 330 -181 490 -49 389 -109 b 314 -192 323 -190 319 -192 b 306 -191 311 -192 308 -192 b 294 -177 302 -188 302 -188 b 257 -140 287 -170 265 -148 b 19 -18 193 -84 114 -44 b 0 0 2 -13 0 -11 b 16 16 0 9 2 13 b 110 49 47 24 89 40 b 117 52 111 49 114 51 b 145 65 126 56 130 58 b 281 163 200 93 245 124 b 300 186 288 170 291 174 b 306 190 300 187 303 188 m 317 137 b 313 142 315 141 314 142 b 308 137 313 142 311 141 b 161 4 276 84 220 33 b 155 0 159 1 155 0 b 163 -4 155 0 159 -2 b 308 -138 220 -34 276 -84 b 313 -142 311 -141 313 -142 b 317 -138 314 -142 315 -141 b 464 -4 351 -84 406 -34 b 470 0 468 -2 470 0 b 464 4 470 0 468 1 b 317 137 406 33 351 84 ',\n        },\n        noteheadDiamondHalf: {\n            x_min: 0,\n            x_max: 438.28125,\n            ha: 447,\n            o: 'm 212 190 b 219 191 213 191 216 191 b 236 176 225 191 228 190 b 419 18 277 105 341 49 b 436 5 431 13 434 11 b 438 -1 438 4 438 1 b 424 -16 438 -8 432 -13 b 356 -49 409 -20 379 -36 b 234 -180 306 -83 258 -133 b 219 -192 230 -188 224 -192 b 200 -176 213 -192 206 -187 b 9 -15 157 -102 89 -45 b 0 0 2 -12 0 -6 b 16 18 0 9 2 12 b 200 176 93 48 159 104 b 212 190 205 186 208 188 m 239 113 b 236 117 238 116 238 117 b 230 108 235 117 234 115 b 92 -15 196 58 140 8 b 88 -18 91 -16 88 -18 b 92 -20 88 -18 91 -19 b 198 -116 130 -43 166 -74 b 200 -117 200 -117 200 -117 b 201 -117 200 -117 201 -117 b 264 -43 212 -98 242 -62 b 345 15 288 -19 321 4 b 348 18 347 16 348 16 b 344 20 348 18 347 19 b 239 113 307 41 266 79 ',\n        },\n        noteheadDiamondBlack: {\n            x_min: 0,\n            x_max: 432.828125,\n            ha: 442,\n            o: 'm 209 186 b 213 187 210 187 212 187 b 216 187 215 187 216 187 b 224 174 216 186 220 180 b 420 -1 269 105 338 43 b 432 -12 431 -8 432 -9 b 421 -23 432 -15 432 -16 b 228 -180 345 -70 264 -137 b 219 -188 221 -188 221 -188 l 219 -188 b 208 -177 215 -188 215 -188 b 10 1 163 -106 93 -44 b 0 11 0 6 0 8 b 10 22 0 13 0 15 b 202 179 87 69 167 136 b 209 186 206 183 209 186 ',\n        },\n        augmentationDot: {\n            x_min: 0,\n            x_max: 133.390625,\n            ha: 136,\n            o: 'm 54 66 b 65 68 58 68 61 68 b 122 37 88 68 110 56 b 133 -1 130 26 133 12 b 104 -58 133 -23 123 -44 b 66 -69 92 -65 78 -69 b 10 -38 44 -69 23 -58 b 0 -1 2 -27 0 -13 b 54 66 0 30 20 61 ',\n        },\n        tremolo1: {\n            x_min: -206.890625,\n            x_max: 428.75,\n            ha: 438,\n            o: 'm 389 -351 b 394 -351 390 -351 393 -351 b 428 -385 413 -351 428 -367 b 428 -394 428 -388 428 -391 b 394 -428 426 -406 421 -410 l 332 -473 l 269 -516 l 205 -560 l 141 -603 l 77 -648 l 13 -692 l -50 -737 l -114 -780 l -145 -802 b -171 -813 -157 -810 -163 -813 b -175 -813 -172 -813 -174 -813 b -206 -777 -194 -811 -206 -795 b -202 -760 -206 -771 -205 -766 b -87 -675 -197 -752 -206 -757 l -34 -639 l 83 -557 l 145 -514 l 209 -470 l 272 -427 b 389 -351 375 -356 381 -352 ',\n        },\n        flag8thUp: {\n            x_min: -24.5,\n            x_max: 317.140625,\n            ha: 324,\n            o: 'm -24 -161 l -24 -5 l -20 -5 b 0 -24 -9 -5 -2 -12 b 171 -315 21 -124 84 -233 b 317 -660 268 -406 317 -531 b 187 -1014 317 -782 274 -909 b 161 -1034 172 -1034 171 -1034 b 141 -1013 149 -1034 141 -1025 b 152 -991 141 -1004 142 -1002 b 266 -682 228 -899 266 -788 b 174 -430 266 -588 236 -498 b -23 -317 136 -388 66 -348 b -24 -161 -23 -316 -24 -285 ',\n        },\n        flag8thDown: {\n            x_min: -21.78125,\n            x_max: 367.5,\n            ha: 375,\n            o: 'm 230 1031 b 238 1032 232 1032 235 1032 b 259 1014 245 1032 251 1027 b 367 662 330 906 367 782 b 364 602 367 641 367 621 b 232 317 352 488 304 384 b 57 120 155 245 103 187 b -1 18 31 84 6 40 b -19 4 -4 11 -12 4 l -21 4 l -21 159 l -21 315 l -16 315 b 96 335 10 315 62 324 b 315 695 227 380 315 527 b 313 738 315 709 314 724 b 224 991 304 825 273 916 b 216 1013 219 999 216 1007 b 230 1031 216 1021 220 1028 ',\n        },\n        flag16thUp: {\n            x_min: -24.5,\n            x_max: 317.140625,\n            ha: 324,\n            o: 'm -24 -147 l -24 -5 l -20 -5 b -1 -19 -12 -5 -4 -11 b 58 -123 6 -43 31 -86 b 196 -278 93 -173 134 -219 b 317 -570 274 -356 317 -460 b 294 -713 317 -617 308 -666 l 289 -724 l 294 -735 b 317 -873 308 -780 317 -827 b 235 -1132 317 -963 288 -1054 b 209 -1165 228 -1140 224 -1146 b 189 -1177 204 -1172 196 -1177 b 171 -1164 182 -1177 175 -1172 b 168 -1154 170 -1161 168 -1159 b 181 -1132 168 -1149 172 -1142 b 269 -891 238 -1064 269 -975 b 269 -881 269 -886 269 -884 b 262 -814 269 -857 265 -827 b 258 -800 261 -811 259 -806 b 142 -628 240 -731 198 -667 b -8 -589 112 -606 47 -589 b -20 -589 -13 -589 -19 -589 l -24 -589 l -24 -449 l -24 -308 l -20 -308 b -1 -322 -12 -308 -4 -313 b 58 -424 6 -345 31 -388 b 194 -580 93 -476 136 -523 b 259 -660 221 -606 245 -635 b 261 -663 259 -662 261 -663 b 264 -656 262 -663 262 -660 b 269 -587 268 -632 269 -610 b 264 -521 269 -566 268 -544 b 262 -512 264 -517 262 -513 b 258 -498 261 -509 259 -503 b 142 -326 240 -428 198 -365 b -8 -287 112 -303 47 -288 b -20 -287 -13 -287 -19 -287 l -24 -287 l -24 -147 ',\n        },\n        flag16thDown: {\n            x_min: -21.78125,\n            x_max: 362.0625,\n            ha: 369,\n            o: 'm 302 1031 b 308 1032 304 1032 307 1032 b 330 1016 318 1032 325 1027 b 362 867 351 970 362 920 b 340 738 362 824 353 780 l 336 727 l 340 717 b 362 591 355 677 362 634 b 257 323 362 496 325 401 b 204 272 243 306 227 290 b 20 56 129 206 66 133 b -1 18 12 44 0 22 b -19 4 -4 9 -12 4 l -21 4 l -21 140 l -21 276 l -12 277 b 167 333 61 288 127 309 b 319 598 262 388 319 491 b 311 664 319 620 317 642 l 310 673 l 304 664 b 204 548 279 620 250 587 b 20 333 129 483 66 409 b -1 292 12 320 0 298 b -19 280 -4 285 -12 280 l -21 280 l -21 416 l -21 552 l -12 553 b 167 609 61 564 127 585 b 319 874 264 666 319 770 b 294 992 319 914 311 954 b 288 1011 288 1004 288 1007 b 302 1031 288 1021 294 1028 ',\n        },\n        flag32ndUp: {\n            x_min: -24.5,\n            x_max: 315.78125,\n            ha: 322,\n            o: 'm -24 -145 l -24 -5 l -20 -5 b 1 -26 -10 -5 -6 -9 b 175 -241 31 -86 96 -166 b 314 -548 259 -323 304 -420 b 315 -589 315 -555 315 -571 b 314 -630 315 -606 315 -623 b 298 -730 311 -664 306 -699 l 295 -742 l 296 -748 b 314 -850 304 -778 311 -813 b 315 -892 315 -857 315 -874 b 314 -932 315 -909 315 -925 b 298 -1032 311 -967 306 -1002 l 295 -1045 l 296 -1050 b 314 -1153 304 -1081 311 -1115 b 315 -1193 315 -1160 315 -1177 b 314 -1235 315 -1211 315 -1228 b 217 -1526 306 -1338 270 -1444 b 201 -1533 213 -1532 208 -1533 b 182 -1522 193 -1533 185 -1529 b 179 -1514 181 -1518 179 -1517 b 189 -1489 179 -1508 182 -1501 b 266 -1217 240 -1403 266 -1308 b 262 -1156 266 -1196 265 -1177 b 110 -907 247 -1043 190 -950 b 0 -889 87 -895 50 -889 l -1 -889 l -24 -889 l -24 -749 l -24 -610 l -20 -610 b 1 -631 -10 -610 -6 -614 b 175 -846 31 -691 96 -771 b 259 -956 213 -884 236 -914 b 265 -966 262 -961 264 -966 b 265 -966 265 -966 265 -966 b 265 -953 265 -964 265 -959 b 266 -920 266 -943 266 -932 b 262 -853 266 -898 265 -873 b 110 -605 247 -741 190 -648 b 0 -587 87 -592 50 -587 l -1 -587 l -24 -587 l -24 -448 l -24 -308 l -20 -308 b 1 -328 -10 -308 -6 -312 b 175 -544 31 -388 96 -469 b 259 -655 213 -581 236 -612 b 265 -663 262 -659 264 -663 b 265 -663 265 -663 265 -663 b 265 -650 265 -663 265 -657 b 266 -617 266 -641 266 -630 b 262 -551 266 -595 265 -570 b 110 -303 247 -438 190 -345 b 0 -284 87 -290 50 -284 l -1 -284 l -24 -284 l -24 -145 ',\n        },\n        flag32ndDown: {\n            x_min: -21.78125,\n            x_max: 366.140625,\n            ha: 374,\n            o: 'm 276 1378 b 284 1379 279 1379 281 1379 b 306 1360 292 1379 298 1374 b 352 1247 326 1326 343 1286 b 366 1139 362 1213 366 1175 b 347 1009 366 1093 359 1049 l 344 1002 l 347 992 b 352 971 348 986 351 977 b 366 863 362 936 366 899 b 347 732 366 818 359 773 l 344 725 l 347 716 b 352 695 348 710 351 700 b 366 588 362 659 366 623 b 223 262 366 464 314 345 b 189 233 212 252 212 252 b 35 76 126 183 73 129 b -1 16 20 56 2 27 b -19 4 -4 9 -12 4 l -21 4 l -21 137 l -21 270 l -17 270 b 186 344 59 281 134 308 b 319 606 270 399 319 499 b 317 650 319 620 319 635 l 315 659 l 314 655 b 223 537 288 607 258 570 b 189 509 212 528 212 528 b 35 352 126 459 73 405 b -1 292 20 333 2 303 b -19 280 -4 285 -12 280 l -21 280 l -21 413 l -21 546 l -17 546 b 186 620 59 557 134 584 b 319 882 270 675 319 775 b 317 925 319 896 319 911 l 315 935 l 314 931 b 223 813 288 884 258 846 b 189 785 212 805 212 805 b 35 628 126 735 73 681 b -1 569 20 609 2 580 b -19 556 -4 562 -12 556 l -21 556 l -21 689 l -21 823 l -17 823 b 202 907 68 835 152 867 b 319 1157 280 968 319 1061 b 270 1338 319 1218 303 1281 b 262 1358 264 1349 262 1353 b 262 1364 262 1360 262 1363 b 276 1378 265 1371 269 1376 ',\n        },\n        flag64thUp: {\n            x_min: -24.5,\n            x_max: 314.421875,\n            ha: 321,\n            o: 'm -24 -145 l -24 -5 l -20 -5 b 0 -23 -9 -5 -2 -12 b 27 -87 4 -38 14 -66 b 138 -220 53 -136 88 -177 b 235 -328 179 -255 208 -288 b 314 -592 287 -409 314 -501 b 292 -732 314 -639 307 -687 l 289 -742 l 294 -756 b 314 -896 307 -802 314 -849 b 292 -1035 314 -943 307 -991 l 289 -1045 l 294 -1057 b 314 -1197 307 -1104 314 -1152 b 292 -1338 314 -1246 307 -1292 l 289 -1347 l 294 -1360 b 314 -1500 307 -1407 314 -1454 b 273 -1689 314 -1565 300 -1628 b 250 -1712 265 -1710 261 -1712 b 228 -1691 236 -1712 228 -1704 l 228 -1685 l 234 -1675 b 270 -1507 258 -1621 270 -1564 b 98 -1193 270 -1381 209 -1261 b 40 -1174 76 -1179 58 -1174 b -10 -1189 24 -1174 8 -1178 b -20 -1192 -14 -1192 -16 -1192 l -24 -1192 l -24 -1052 l -24 -913 l -20 -913 b 0 -931 -9 -913 -2 -920 b 27 -995 4 -946 14 -974 b 138 -1128 53 -1043 88 -1085 b 257 -1275 190 -1172 228 -1220 b 262 -1283 259 -1279 262 -1283 l 262 -1283 b 269 -1249 264 -1282 268 -1260 b 270 -1206 270 -1233 270 -1220 b 98 -891 270 -1075 206 -957 b 40 -871 76 -877 58 -871 b -10 -886 24 -871 8 -875 b -20 -889 -14 -889 -16 -889 l -24 -889 l -24 -749 l -24 -610 l -20 -610 b 0 -628 -9 -610 -2 -617 b 27 -692 4 -644 14 -671 b 138 -825 53 -741 88 -782 b 257 -973 190 -870 228 -917 b 262 -981 259 -977 262 -981 l 262 -981 b 269 -946 264 -979 268 -957 b 270 -903 270 -931 270 -917 b 98 -588 270 -774 206 -655 b 40 -569 76 -574 58 -569 b -10 -584 24 -569 8 -574 b -20 -587 -14 -587 -16 -587 l -24 -587 l -24 -448 l -24 -308 l -20 -308 b 0 -326 -9 -308 -2 -315 b 27 -390 4 -341 14 -369 b 138 -523 53 -438 88 -480 b 257 -670 190 -567 228 -614 b 262 -678 259 -674 262 -678 b 262 -678 262 -678 262 -678 b 269 -644 264 -677 268 -656 b 270 -601 270 -628 270 -614 b 98 -285 270 -471 206 -352 b 40 -266 76 -273 58 -266 b -10 -281 24 -266 8 -272 b -20 -284 -14 -284 -16 -284 l -24 -284 l -24 -145 ',\n        },\n        flag64thDown: {\n            x_min: -21.78125,\n            x_max: 367.5,\n            ha: 375,\n            o: 'm 259 1553 b 265 1553 261 1553 264 1553 b 288 1540 272 1553 277 1550 b 367 1351 340 1493 367 1424 b 336 1221 367 1308 357 1263 l 332 1211 l 333 1208 b 367 1077 356 1170 367 1124 b 336 945 367 1032 357 986 l 332 935 l 333 932 b 367 800 356 893 367 848 b 336 669 367 756 357 710 l 332 659 l 333 656 b 367 523 356 617 367 571 b 345 412 367 485 360 446 b 231 273 322 356 284 310 b -1 19 121 195 27 93 b -17 4 -4 11 -10 5 l -21 4 l -21 134 l -21 265 l -17 265 b 133 291 20 265 96 278 b 318 537 245 328 318 433 b 307 603 318 559 315 582 b 303 614 304 612 304 614 b 298 609 302 614 300 613 b 231 549 281 589 258 567 b -1 295 121 471 27 369 b -17 280 -4 287 -10 281 l -21 280 l -21 410 l -21 541 l -17 541 b 133 567 20 541 96 555 b 318 813 245 605 318 709 b 307 880 318 835 315 859 b 303 891 304 888 304 891 b 298 885 302 891 300 888 b 231 825 281 866 258 843 b -1 571 121 748 27 645 b -17 556 -4 563 -10 557 l -21 556 l -21 687 l -21 817 l -17 817 b 133 843 20 817 96 830 b 318 1089 245 881 318 985 b 307 1156 318 1111 315 1134 b 303 1167 304 1164 304 1167 b 298 1161 302 1167 300 1164 b 231 1102 281 1140 258 1120 b -1 848 121 1024 27 921 b -17 832 -4 839 -10 834 l -21 832 l -21 963 l -21 1093 l -17 1093 b 114 1113 12 1093 78 1103 b 313 1314 215 1142 289 1218 b 318 1364 317 1331 318 1347 b 255 1511 318 1422 295 1478 b 243 1532 247 1519 243 1525 b 259 1553 243 1540 250 1550 ',\n        },\n        flag128thUp: {\n            x_min: -24.5,\n            x_max: 313.0625,\n            ha: 319,\n            o: 'm -24 -133 l -24 -5 l -20 -5 b -1 -19 -12 -5 -4 -11 b 142 -213 13 -61 74 -144 b 258 -376 196 -269 230 -315 b 313 -605 295 -449 313 -528 b 292 -742 313 -652 306 -699 b 288 -752 289 -748 288 -752 b 288 -752 288 -752 288 -752 b 292 -764 289 -753 291 -757 b 313 -907 306 -811 313 -860 b 292 -1045 313 -954 306 -1002 b 288 -1054 289 -1050 288 -1054 b 288 -1054 288 -1054 288 -1054 b 292 -1067 289 -1054 291 -1060 b 313 -1210 306 -1113 313 -1161 b 292 -1346 313 -1257 306 -1304 b 288 -1357 289 -1353 288 -1357 b 288 -1357 288 -1357 288 -1357 b 292 -1368 289 -1357 291 -1363 b 313 -1512 306 -1415 313 -1464 b 292 -1648 313 -1560 306 -1605 b 288 -1660 289 -1654 288 -1660 b 288 -1660 288 -1660 288 -1660 b 292 -1671 289 -1660 291 -1665 b 313 -1814 306 -1719 313 -1766 b 250 -2040 313 -1897 291 -1977 b 232 -2062 238 -2057 236 -2059 b 221 -2065 230 -2063 225 -2065 b 200 -2045 210 -2065 201 -2057 b 200 -2043 200 -2044 200 -2044 b 208 -2026 200 -2037 202 -2034 b 269 -1826 249 -1966 269 -1897 b 153 -1544 269 -1726 230 -1625 b -9 -1472 115 -1506 58 -1481 b -21 -1471 -14 -1471 -19 -1471 l -24 -1471 l -24 -1343 l -24 -1215 l -20 -1215 b -1 -1229 -12 -1215 -4 -1221 b 142 -1424 13 -1270 74 -1353 b 257 -1582 196 -1478 228 -1524 b 264 -1594 261 -1589 264 -1594 l 264 -1594 b 265 -1582 264 -1594 264 -1589 b 270 -1525 268 -1562 270 -1544 b 153 -1243 270 -1424 228 -1321 b -9 -1170 115 -1203 58 -1178 b -21 -1168 -14 -1170 -19 -1168 l -24 -1168 l -24 -1041 l -24 -913 l -20 -913 b -1 -927 -12 -913 -4 -918 b 142 -1121 13 -967 74 -1050 b 257 -1281 196 -1175 228 -1221 b 264 -1292 261 -1286 264 -1292 l 264 -1292 b 265 -1279 264 -1292 264 -1286 b 270 -1222 268 -1261 270 -1242 b 153 -941 270 -1121 228 -1018 b -9 -867 115 -900 58 -875 b -21 -866 -14 -867 -19 -866 l -24 -866 l -24 -738 l -24 -610 l -20 -610 b -1 -624 -12 -610 -4 -616 b 142 -818 13 -664 74 -749 b 257 -978 196 -873 228 -918 b 264 -989 261 -984 264 -989 l 264 -989 b 265 -977 264 -989 264 -984 b 270 -920 268 -959 270 -939 b 153 -638 270 -818 228 -716 b -9 -564 115 -598 58 -573 b -21 -563 -14 -564 -19 -563 l -24 -563 l -24 -435 l -24 -308 l -20 -308 b -1 -322 -12 -308 -4 -313 b 142 -516 13 -363 74 -446 b 257 -675 196 -571 228 -616 b 264 -687 261 -681 264 -687 l 264 -687 b 265 -674 264 -687 264 -681 b 270 -617 268 -656 270 -637 b 153 -335 270 -516 228 -413 b -9 -262 115 -295 58 -270 b -21 -260 -14 -262 -19 -260 l -24 -260 l -24 -133 ',\n        },\n        flag128thDown: {\n            x_min: -21.78125,\n            x_max: 367.5,\n            ha: 375,\n            o: 'm 276 1900 b 284 1901 279 1900 281 1901 b 306 1883 291 1901 298 1896 b 367 1686 347 1825 367 1757 b 343 1558 367 1643 359 1600 l 338 1549 l 343 1537 b 367 1411 359 1497 367 1454 b 343 1282 367 1367 359 1324 l 338 1272 l 343 1261 b 367 1135 359 1221 367 1178 b 343 1007 367 1090 359 1047 l 338 996 l 343 985 b 367 859 359 945 367 902 b 343 731 367 814 359 771 l 338 720 l 343 709 b 367 582 359 667 367 626 b 289 362 367 503 340 426 b 239 312 276 345 259 330 b 29 77 152 237 76 152 b -1 18 14 54 2 30 b -19 4 -4 11 -12 4 l -21 4 l -21 133 l -20 260 l -13 262 b 98 299 17 269 62 284 b 111 305 103 302 110 305 b 167 334 123 310 156 327 b 319 595 264 391 319 491 b 313 659 319 616 318 638 b 310 667 311 664 311 667 b 307 663 310 667 308 666 b 240 588 289 637 269 614 b 16 331 141 505 62 413 b -1 294 8 316 1 302 b -19 280 -4 287 -12 280 l -21 280 l -21 408 l -20 537 l -13 538 b 98 576 17 545 62 560 b 111 581 103 578 110 581 b 167 610 123 587 156 603 b 319 871 264 667 319 767 b 313 935 319 892 318 913 b 310 942 311 941 311 942 b 307 939 310 942 308 941 b 240 864 289 913 269 889 b 16 607 141 781 62 689 b -1 570 8 592 1 578 b -19 556 -4 563 -12 556 l -21 556 l -21 684 l -20 813 l -13 814 b 98 852 17 821 62 836 b 111 857 103 855 110 857 b 167 886 123 863 156 880 b 319 1147 264 943 319 1043 b 313 1211 319 1168 318 1189 b 310 1218 311 1217 311 1218 b 307 1215 310 1218 308 1217 b 240 1140 289 1188 269 1165 b 16 884 141 1057 62 966 b -1 846 8 868 1 855 b -19 832 -4 839 -12 832 l -21 832 l -21 960 l -20 1089 l -13 1090 b 98 1128 17 1097 62 1111 b 111 1134 103 1131 110 1134 b 167 1163 123 1139 156 1156 b 319 1424 264 1220 319 1320 b 313 1486 319 1444 318 1465 b 310 1494 311 1493 311 1494 b 307 1492 310 1494 308 1493 b 240 1417 289 1464 269 1442 b 16 1160 141 1333 62 1242 b -1 1121 8 1145 1 1131 b -19 1109 -4 1115 -12 1109 l -21 1109 l -21 1236 l -20 1365 l -13 1367 b 98 1404 17 1374 62 1388 b 111 1410 103 1407 110 1410 b 250 1508 172 1437 215 1467 b 319 1701 296 1564 319 1633 b 270 1859 319 1757 303 1814 b 262 1882 265 1868 262 1875 b 276 1900 262 1890 266 1896 ',\n        },\n        accidentalFlat: {\n            x_min: -21.78125,\n            x_max: 251.8125,\n            ha: 257,\n            o: 'm -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 383 20 616 20 616 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 201 l -21 616 l -20 620 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 ',\n        },\n        accidentalNatural: {\n            x_min: 0,\n            x_max: 239.5625,\n            ha: 244,\n            o: 'm 10 460 b 20 462 13 462 14 462 b 39 449 28 462 35 458 l 40 446 l 40 326 b 40 205 40 259 40 205 b 127 227 40 205 80 215 b 220 249 196 244 213 249 b 227 247 224 249 225 248 b 238 237 231 245 235 241 l 239 233 l 239 -106 l 239 -448 l 238 -451 b 219 -463 234 -459 225 -463 b 198 -451 210 -463 202 -459 l 197 -448 l 197 -324 b 197 -201 197 -248 197 -201 b 110 -223 196 -201 157 -210 b 17 -245 42 -240 24 -245 b 10 -242 13 -245 13 -244 b 0 -233 6 -241 2 -237 l 0 -230 l 0 108 l 0 446 l 0 449 b 10 460 2 453 6 458 m 197 22 b 197 70 197 41 197 58 b 196 116 197 113 197 116 l 196 116 b 118 97 196 116 160 106 l 40 77 l 40 -18 b 40 -112 40 -69 40 -112 l 119 -93 l 197 -73 l 197 22 ',\n        },\n        accidentalSharp: {\n            x_min: 0,\n            x_max: 323.9375,\n            ha: 331,\n            o: 'm 217 535 b 225 537 220 537 221 537 b 245 524 235 537 242 533 l 246 521 l 247 390 l 247 258 l 273 265 b 306 270 288 269 299 270 b 322 259 315 270 319 267 b 323 208 323 256 323 233 b 322 158 323 184 323 159 b 288 140 318 148 315 147 b 247 130 254 131 247 130 b 247 65 247 130 247 104 b 247 20 247 51 247 36 l 247 -88 l 273 -81 b 306 -76 289 -77 299 -76 b 318 -81 311 -76 315 -77 b 323 -123 323 -87 323 -86 l 323 -138 l 323 -154 b 318 -195 323 -191 323 -190 b 269 -210 314 -199 315 -199 b 249 -216 259 -213 250 -216 l 247 -216 l 247 -349 l 246 -483 l 245 -487 b 225 -499 242 -495 234 -499 b 206 -487 219 -499 210 -495 l 205 -483 l 205 -355 l 205 -227 l 204 -227 l 181 -233 l 138 -244 b 117 -249 127 -247 117 -249 b 115 -385 115 -249 115 -256 l 115 -523 l 114 -526 b 95 -538 110 -534 102 -538 b 74 -526 87 -538 78 -534 l 73 -523 l 73 -391 b 72 -260 73 -269 73 -260 b 72 -260 72 -260 72 -260 b 19 -273 61 -263 23 -273 b 0 -260 10 -273 4 -267 b 0 -209 0 -256 0 -256 l 0 -162 l 1 -158 b 61 -134 5 -148 5 -148 l 73 -131 l 73 -22 b 72 86 73 79 73 86 b 72 86 72 86 72 86 b 19 74 61 83 23 74 b 0 86 10 74 4 79 b 0 137 0 90 0 90 l 0 184 l 1 188 b 61 212 5 198 5 198 l 73 215 l 73 348 l 73 481 l 74 485 b 95 498 78 492 87 498 b 103 495 98 498 100 496 b 114 485 107 494 111 489 l 115 481 l 115 353 l 115 226 l 121 226 b 159 235 123 227 141 231 l 198 247 l 205 248 l 205 384 l 205 521 l 206 524 b 217 535 209 528 212 533 m 205 9 b 205 119 205 70 205 119 l 205 119 b 182 113 204 119 194 116 l 138 102 b 117 97 127 99 117 97 b 115 -12 115 97 115 91 l 115 -122 l 121 -120 b 159 -111 123 -119 141 -115 l 198 -101 l 205 -98 l 205 9 ',\n        },\n        accidentalDoubleSharp: {\n            x_min: 0,\n            x_max: 367.5,\n            ha: 375,\n            o: 'm 0 124 l 0 187 l 61 187 l 122 187 l 122 138 l 122 91 l 153 61 l 183 30 l 213 61 l 243 91 l 243 138 l 243 187 l 306 187 l 367 187 l 367 124 l 367 61 l 321 61 l 274 61 l 243 30 l 213 0 l 243 -31 l 274 -62 l 321 -62 l 367 -62 l 367 -124 l 367 -188 l 306 -188 l 243 -188 l 243 -140 l 243 -93 l 213 -62 l 183 -31 l 153 -62 l 122 -93 l 122 -140 l 122 -188 l 61 -188 l 0 -188 l 0 -124 l 0 -62 l 46 -62 l 92 -62 l 123 -31 l 153 0 l 123 30 l 92 61 l 46 61 l 0 61 l 0 124 ',\n        },\n        accidentalDoubleFlat: {\n            x_min: -21.78125,\n            x_max: 483.1875,\n            ha: 493,\n            o: 'm -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 383 20 616 20 616 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 179 164 199 187 192 l 210 176 l 210 396 l 210 617 l 212 621 b 231 632 216 628 223 632 b 250 620 239 632 247 628 b 251 383 251 616 251 616 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 201 l -21 616 l -20 620 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 ',\n        },\n        accidentalParensLeft: {\n            x_min: -166.0625,\n            x_max: -25.859375,\n            ha: 0,\n            o: 'm -49 369 b -42 370 -46 369 -44 370 b -27 360 -36 370 -29 366 b -25 355 -27 359 -25 358 b -32 335 -25 351 -28 347 b -92 52 -66 248 -87 159 b -93 -1 -93 43 -93 20 b -92 -54 -93 -23 -93 -45 b -32 -337 -85 -162 -66 -251 b -25 -355 -27 -349 -25 -352 b -42 -371 -25 -365 -32 -371 b -61 -353 -50 -371 -51 -369 b -163 -63 -119 -262 -153 -165 b -166 -1 -166 -37 -166 -31 b -163 62 -166 30 -166 36 b -61 352 -153 163 -119 260 b -49 369 -54 365 -51 366 ',\n        },\n        accidentalParensRight: {\n            x_min: 25.859375,\n            x_max: 164.6875,\n            ha: 168,\n            o: 'm 34 369 b 40 370 35 370 38 370 b 59 353 49 370 50 367 b 164 40 122 254 155 158 b 164 0 164 33 164 16 b 164 -40 164 -16 164 -34 b 59 -353 155 -158 122 -254 b 40 -371 53 -366 47 -371 b 34 -370 38 -371 36 -370 b 25 -358 28 -367 25 -363 b 31 -337 25 -352 27 -347 b 92 0 72 -234 92 -117 b 31 335 92 116 72 233 b 25 356 27 345 25 352 b 34 369 25 363 28 366 ',\n        },\n        accidentalQuarterToneFlatStein: {\n            x_min: 0,\n            x_max: 272.21875,\n            ha: 278,\n            o: 'm 243 631 b 250 632 246 632 249 632 b 270 620 259 632 268 628 l 272 616 l 272 201 l 272 -212 l 270 -216 b 251 -229 268 -224 259 -229 b 227 -215 243 -229 240 -229 l 151 -142 b 32 -16 81 -80 53 -49 b 0 84 9 18 0 52 b 111 199 0 149 42 199 b 137 197 119 199 127 198 b 228 151 168 191 197 177 l 231 148 l 231 383 b 232 620 231 616 231 616 b 243 631 234 624 238 630 m 168 131 b 152 133 163 133 157 133 b 107 102 130 133 111 120 b 106 86 107 97 106 91 b 111 41 106 73 108 56 b 227 -152 125 -13 171 -90 l 231 -156 l 231 -37 l 231 80 l 225 87 b 168 131 210 111 190 126 ',\n        },\n        accidentalThreeQuarterTonesFlatZimmermann: {\n            x_min: 0,\n            x_max: 607.0625,\n            ha: 619,\n            o: 'm 243 631 b 250 632 246 632 249 632 b 270 620 259 632 268 628 l 272 616 l 272 201 l 272 -212 l 270 -216 b 251 -229 268 -224 259 -229 b 227 -215 243 -229 240 -229 l 151 -142 b 32 -16 81 -80 53 -49 b 0 84 9 18 0 52 b 111 199 0 149 42 199 b 137 197 119 199 127 198 b 228 151 168 191 197 177 l 231 148 l 231 383 b 232 620 231 616 231 616 b 243 631 234 624 238 630 m 168 131 b 152 133 163 133 157 133 b 107 102 130 133 111 120 b 106 86 107 97 106 91 b 111 41 106 73 108 56 b 227 -152 125 -13 171 -90 l 231 -156 l 231 -37 l 231 80 l 225 87 b 168 131 210 111 190 126 m 347 631 b 353 632 348 632 351 632 b 374 620 363 632 371 628 b 375 383 375 616 375 616 l 375 148 l 377 151 b 492 199 415 183 454 199 b 537 191 507 199 522 197 b 607 84 582 176 607 134 b 583 0 607 58 598 29 b 455 -142 562 -40 533 -72 l 378 -215 b 355 -229 364 -229 362 -229 b 334 -216 345 -229 337 -224 l 333 -212 l 333 201 l 333 616 l 334 620 b 347 631 337 624 341 630 m 465 131 b 451 133 461 133 455 133 b 445 133 449 133 446 133 b 379 87 419 129 396 113 l 375 80 l 375 -37 l 375 -156 l 378 -152 b 499 81 451 -72 499 20 l 499 83 b 465 131 499 113 490 126 ',\n        },\n        accidentalQuarterToneSharpStein: {\n            x_min: 0,\n            x_max: 193.28125,\n            ha: 197,\n            o: 'm 85 514 b 95 517 88 517 89 517 b 114 505 103 517 110 513 l 115 502 l 115 376 b 115 249 115 306 115 249 b 141 258 117 249 127 252 l 167 266 l 172 266 b 190 254 181 265 187 262 l 193 251 l 193 202 l 193 188 b 187 147 193 149 191 152 b 147 130 183 142 182 141 l 115 119 l 115 9 b 115 -99 115 -51 115 -99 b 141 -91 115 -99 127 -95 b 171 -81 166 -81 167 -81 l 171 -81 b 191 -94 181 -81 189 -87 b 193 -142 191 -97 193 -120 b 191 -195 193 -167 191 -194 b 125 -227 187 -205 187 -204 l 115 -230 l 115 -366 l 115 -503 l 114 -506 b 95 -519 110 -514 102 -519 b 74 -506 87 -519 78 -514 l 73 -503 l 73 -374 b 73 -245 73 -260 73 -245 b 73 -245 73 -245 73 -245 b 55 -252 72 -245 63 -249 l 32 -260 b 19 -263 27 -262 23 -263 b 4 -256 13 -263 8 -260 b 0 -215 0 -251 0 -254 b 0 -199 0 -210 0 -206 l 0 -152 l 1 -149 b 8 -140 2 -145 5 -141 b 42 -127 9 -140 24 -133 l 73 -116 l 73 -5 b 73 23 73 4 73 15 b 73 105 73 70 73 105 b 49 97 73 105 61 101 b 17 88 32 91 23 88 b 4 95 10 88 8 91 b 0 137 0 101 0 98 b 0 151 0 141 0 145 l 0 199 l 1 202 b 43 224 5 212 5 212 l 73 234 l 73 367 l 73 502 l 74 505 b 85 514 77 509 81 513 ',\n        },\n        accidentalThreeQuarterTonesSharpStein: {\n            x_min: -1.359375,\n            x_max: 455.96875,\n            ha: 465,\n            o: 'm 352 541 b 357 542 353 542 355 542 b 377 530 364 542 372 537 l 378 526 l 378 394 l 379 262 l 404 266 b 436 270 420 269 430 270 b 450 265 443 270 446 269 b 455 220 455 259 455 260 l 455 208 l 455 161 l 454 156 b 411 140 449 147 447 147 b 378 133 393 137 379 134 b 378 68 378 133 378 106 b 378 22 378 54 378 38 l 379 -87 l 404 -83 b 436 -79 420 -80 430 -79 b 450 -84 443 -79 446 -80 b 455 -129 455 -90 455 -88 l 455 -141 l 455 -188 l 454 -192 b 413 -209 449 -202 447 -202 b 382 -215 398 -212 383 -215 l 378 -215 l 378 -345 l 378 -380 b 375 -485 378 -484 378 -480 b 357 -494 371 -491 364 -494 b 340 -485 351 -494 344 -491 b 336 -383 337 -480 336 -484 l 336 -349 l 336 -223 l 334 -223 b 291 -231 334 -223 314 -227 l 247 -240 l 247 -371 l 246 -503 l 245 -506 b 225 -519 242 -514 234 -519 b 206 -506 219 -519 210 -514 l 205 -503 l 205 -376 l 205 -248 l 160 -256 l 115 -265 l 115 -396 l 115 -527 l 114 -531 b 95 -544 110 -539 102 -544 b 76 -531 87 -544 78 -539 l 73 -527 l 73 -399 b 73 -273 73 -330 73 -273 b 49 -277 73 -273 61 -274 b 17 -281 32 -280 24 -281 b 4 -276 10 -281 8 -280 b -1 -234 0 -269 -1 -272 b 0 -219 -1 -229 0 -224 l 0 -170 l 1 -167 b 10 -158 2 -163 6 -159 b 49 -149 13 -156 16 -155 l 73 -145 l 73 -34 b 73 76 73 26 73 76 b 49 72 73 76 61 74 b 17 68 32 69 24 68 b 4 73 10 68 8 69 b -1 115 0 80 -1 77 b 0 130 -1 120 0 124 l 0 179 l 1 181 b 10 191 2 186 6 190 b 49 199 13 192 16 194 l 73 204 l 73 338 b 73 374 73 352 73 365 b 77 483 73 484 73 477 b 95 492 81 489 88 492 b 111 483 100 492 107 489 b 115 378 115 477 115 483 l 115 342 b 117 212 115 223 115 212 b 204 229 117 212 200 227 l 205 229 l 205 365 l 205 502 l 206 505 b 225 517 210 513 219 517 b 245 505 234 517 242 513 l 246 502 l 247 369 l 247 237 l 249 237 b 336 254 253 238 336 254 b 337 390 336 254 337 302 l 337 526 l 338 530 b 352 541 341 535 347 539 m 336 15 b 336 126 336 102 336 126 l 336 126 b 291 117 336 126 315 122 l 247 109 l 247 -1 l 247 -112 l 249 -112 b 336 -95 253 -111 336 -95 b 336 15 336 -95 336 -56 m 205 -120 b 205 -55 205 -120 205 -93 b 205 -9 205 -41 205 -24 l 205 101 l 160 93 l 115 84 l 115 -26 b 115 -83 115 -49 115 -69 b 117 -137 115 -133 115 -137 b 205 -120 118 -137 204 -120 ',\n        },\n        accidentalBuyukMucennebFlat: {\n            x_min: -171.5,\n            x_max: 251.8125,\n            ha: 257,\n            o: 'm -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 553 20 616 20 614 b 20 491 20 503 20 491 l 20 491 b 153 535 47 501 149 535 b 174 514 167 535 174 524 b 164 496 174 508 171 501 b 92 470 164 495 132 484 l 20 445 l 20 390 b 20 363 20 378 20 370 b 20 333 20 340 20 333 l 20 333 b 153 377 47 344 149 377 b 174 356 167 377 174 367 b 164 338 174 349 171 342 b 92 312 164 338 132 326 l 20 288 l 20 219 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 30 -21 -212 -21 -212 b -21 273 -21 163 -21 273 b -84 252 -21 273 -50 263 b -152 230 -133 234 -145 230 b -157 231 -155 230 -156 231 b -171 252 -166 234 -171 244 b -160 270 -171 259 -167 266 b -27 316 -159 270 -93 294 l -21 319 l -21 374 b -21 431 -21 406 -21 431 b -84 409 -21 431 -50 421 b -152 388 -133 392 -145 388 b -157 390 -155 388 -156 388 b -171 409 -166 392 -171 401 b -160 428 -171 417 -167 424 b -27 474 -159 428 -93 451 l -21 476 l -21 546 b -20 620 -21 614 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 ',\n        },\n        accidentalBakiyeFlat: {\n            x_min: -176.9375,\n            x_max: 251.8125,\n            ha: 257,\n            o: 'm -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 503 20 616 20 614 b 20 391 20 442 20 391 b 84 424 20 391 49 406 l 147 456 l 152 456 b 153 456 153 456 153 456 b 175 435 166 456 175 446 b 172 427 175 433 174 430 b 92 380 170 420 172 421 l 20 342 l 20 245 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 54 -21 -212 -21 -212 b -21 322 -21 201 -21 322 b -85 290 -21 322 -50 308 l -148 256 l -153 256 b -155 256 -155 256 -155 256 b -176 277 -167 256 -176 266 b -174 285 -176 280 -175 283 b -93 333 -171 294 -174 292 l -21 370 l -21 494 b -20 620 -21 616 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 ',\n        },\n        accidentalKomaSharp: {\n            x_min: -1.359375,\n            x_max: 455.96875,\n            ha: 465,\n            o: 'm 352 541 b 357 542 353 542 355 542 b 377 530 364 542 372 537 l 378 526 l 378 394 l 379 262 l 404 266 b 436 270 420 269 430 270 b 450 265 443 270 446 269 b 455 220 455 259 455 260 l 455 208 l 455 161 l 454 156 b 411 140 449 147 447 147 b 378 133 393 137 379 134 b 378 68 378 133 378 106 b 378 22 378 54 378 38 l 379 -87 l 404 -83 b 436 -79 420 -80 430 -79 b 450 -84 443 -79 446 -80 b 455 -129 455 -90 455 -88 l 455 -141 l 455 -188 l 454 -192 b 413 -209 449 -202 447 -202 b 382 -215 398 -212 383 -215 l 378 -215 l 378 -345 l 378 -380 b 375 -485 378 -484 378 -480 b 357 -494 371 -491 364 -494 b 340 -485 351 -494 344 -491 b 336 -383 337 -480 336 -484 l 336 -349 l 336 -223 l 334 -223 b 291 -231 334 -223 314 -227 l 247 -240 l 247 -371 l 246 -503 l 245 -506 b 225 -519 242 -514 234 -519 b 206 -506 219 -519 210 -514 l 205 -503 l 205 -376 l 205 -248 l 160 -256 l 115 -265 l 115 -396 l 115 -527 l 114 -531 b 95 -544 110 -539 102 -544 b 76 -531 87 -544 78 -539 l 73 -527 l 73 -399 b 73 -273 73 -330 73 -273 b 49 -277 73 -273 61 -274 b 17 -281 32 -280 24 -281 b 4 -276 10 -281 8 -280 b -1 -234 0 -269 -1 -272 b 0 -219 -1 -229 0 -224 l 0 -170 l 1 -167 b 10 -158 2 -163 6 -159 b 49 -149 13 -156 16 -155 l 73 -145 l 73 -34 b 73 76 73 26 73 76 b 49 72 73 76 61 74 b 17 68 32 69 24 68 b 4 73 10 68 8 69 b -1 115 0 80 -1 77 b 0 130 -1 120 0 124 l 0 179 l 1 181 b 10 191 2 186 6 190 b 49 199 13 192 16 194 l 73 204 l 73 338 b 73 374 73 352 73 365 b 77 483 73 484 73 477 b 95 492 81 489 88 492 b 111 483 100 492 107 489 b 115 378 115 477 115 483 l 115 342 b 117 212 115 223 115 212 b 204 229 117 212 200 227 l 205 229 l 205 365 l 205 502 l 206 505 b 225 517 210 513 219 517 b 245 505 234 517 242 513 l 246 502 l 247 369 l 247 237 l 249 237 b 336 254 253 238 336 254 b 337 390 336 254 337 302 l 337 526 l 338 530 b 352 541 341 535 347 539 m 336 15 b 336 126 336 102 336 126 l 336 126 b 291 117 336 126 315 122 l 247 109 l 247 -1 l 247 -112 l 249 -112 b 336 -95 253 -111 336 -95 b 336 15 336 -95 336 -56 m 205 -120 b 205 -55 205 -120 205 -93 b 205 -9 205 -41 205 -24 l 205 101 l 160 93 l 115 84 l 115 -26 b 115 -83 115 -49 115 -69 b 117 -137 115 -133 115 -137 b 205 -120 118 -137 204 -120 ',\n        },\n        accidentalKucukMucennebSharp: {\n            x_min: -1.359375,\n            x_max: 255.890625,\n            ha: 261,\n            o: 'm 118 514 b 127 517 121 517 122 517 b 147 505 136 517 142 513 l 148 502 l 148 403 b 148 306 148 351 148 306 b 174 315 149 306 160 310 l 200 324 l 205 323 b 223 312 213 323 220 319 l 225 308 l 225 260 b 225 245 225 255 225 249 b 220 204 225 208 224 209 b 179 188 216 199 215 199 l 148 177 l 148 124 l 148 70 l 189 84 b 236 98 219 94 230 98 b 247 94 240 98 243 97 b 255 52 254 88 255 87 b 255 33 255 47 255 40 l 254 -12 l 253 -15 b 249 -22 253 -18 250 -20 l 245 -24 l 196 -41 l 148 -58 l 148 -108 b 148 -158 148 -136 148 -158 b 174 -148 148 -158 160 -154 b 204 -140 198 -140 200 -140 l 204 -140 b 224 -152 213 -140 221 -145 b 225 -201 224 -155 225 -177 b 224 -254 225 -226 224 -251 b 157 -284 220 -262 220 -262 l 148 -288 l 148 -395 l 148 -503 l 147 -506 b 127 -519 142 -514 134 -519 b 107 -506 119 -519 111 -514 l 106 -503 l 106 -403 b 106 -303 106 -316 106 -303 b 104 -303 104 -303 104 -303 b 88 -310 104 -303 96 -306 l 63 -319 b 51 -322 59 -320 55 -322 b 36 -315 46 -322 40 -319 b 31 -273 32 -309 31 -312 b 31 -258 31 -269 31 -263 l 31 -210 l 34 -206 b 40 -198 35 -204 38 -199 b 74 -186 42 -197 57 -191 l 106 -173 l 106 -123 b 106 -97 106 -112 106 -104 b 106 -72 106 -76 106 -72 b 104 -72 106 -72 106 -72 b 20 -99 89 -79 23 -99 b 0 -84 10 -99 2 -93 b -1 -37 0 -81 -1 -59 b 0 11 -1 -15 0 9 b 58 40 4 22 2 22 l 106 56 l 106 109 b 106 123 106 115 106 119 b 106 162 106 147 106 162 b 81 155 106 162 93 159 b 50 147 65 149 55 147 b 36 152 43 147 40 148 b 31 194 32 158 31 156 b 31 209 31 198 31 204 l 31 256 l 34 260 b 76 281 38 269 38 269 l 106 292 l 106 396 l 106 502 l 107 505 b 118 514 110 509 114 513 ',\n        },\n        articAccentAbove: {\n            x_min: -348.4375,\n            x_max: 24.5,\n            ha: 25,\n            o: 'm -330 155 b -322 156 -329 156 -326 156 b -315 156 -319 156 -317 156 b -298 147 -311 155 -308 154 b -19 30 -224 98 -122 55 l 2 26 b 24 -1 17 22 24 13 b 2 -27 24 -15 17 -23 l -19 -31 b -298 -148 -122 -56 -224 -99 b -322 -158 -313 -158 -315 -158 b -348 -131 -338 -158 -348 -145 b -344 -117 -348 -127 -347 -122 b -328 -104 -341 -112 -338 -111 b -127 -8 -269 -65 -202 -33 b -106 0 -115 -4 -106 -1 b -127 6 -106 0 -115 2 b -328 102 -202 31 -269 63 b -344 116 -338 109 -341 111 b -348 130 -347 120 -348 124 b -330 155 -348 141 -341 152 ',\n        },\n        articAccentBelow: {\n            x_min: -348.4375,\n            x_max: 24.5,\n            ha: 25,\n            o: 'm -330 155 b -322 156 -329 156 -326 156 b -315 156 -319 156 -317 156 b -298 147 -311 155 -308 154 b -19 30 -224 98 -122 55 l 2 26 b 24 -1 17 22 24 13 b 2 -27 24 -15 17 -23 l -19 -31 b -298 -148 -122 -56 -224 -99 b -322 -158 -313 -158 -315 -158 b -348 -131 -338 -158 -348 -145 b -344 -117 -348 -127 -347 -122 b -328 -104 -341 -112 -338 -111 b -127 -8 -269 -65 -202 -33 b -106 0 -115 -4 -106 -1 b -127 6 -106 0 -115 2 b -328 102 -202 31 -269 63 b -344 116 -338 109 -341 111 b -348 130 -347 120 -348 124 b -330 155 -348 141 -341 152 ',\n        },\n        articTenutoAbove: {\n            x_min: 0,\n            x_max: 318.5,\n            ha: 325,\n            o: 'm 20 376 b 167 377 23 377 96 377 b 296 376 231 377 294 377 b 318 347 311 371 318 359 b 296 316 318 333 311 320 b 159 315 294 315 227 315 b 21 316 91 315 24 315 b 0 345 6 320 0 333 b 20 376 0 359 6 371 ',\n        },\n        articTenutoBelow: {\n            x_min: 0,\n            x_max: 318.5,\n            ha: 325,\n            o: 'm 20 376 b 167 377 23 377 96 377 b 296 376 231 377 294 377 b 318 347 311 371 318 359 b 296 316 318 333 311 320 b 159 315 294 315 227 315 b 21 316 91 315 24 315 b 0 345 6 320 0 333 b 20 376 0 359 6 371 ',\n        },\n        articStaccatoAbove: {\n            x_min: 0,\n            x_max: 133.390625,\n            ha: 136,\n            o: 'm 54 66 b 65 68 58 68 61 68 b 122 37 88 68 110 56 b 133 -1 130 26 133 12 b 104 -58 133 -23 123 -44 b 66 -69 92 -65 78 -69 b 10 -38 44 -69 23 -58 b 0 -1 2 -27 0 -13 b 54 66 0 30 20 61 ',\n        },\n        articStaccatoBelow: {\n            x_min: 0,\n            x_max: 133.390625,\n            ha: 136,\n            o: 'm 54 66 b 65 68 58 68 61 68 b 122 37 88 68 110 56 b 133 -1 130 26 133 12 b 104 -58 133 -23 123 -44 b 66 -69 92 -65 78 -69 b 10 -38 44 -69 23 -58 b 0 -1 2 -27 0 -13 b 54 66 0 30 20 61 ',\n        },\n        articStaccatissimoAbove: {\n            x_min: -73.5,\n            x_max: 72.140625,\n            ha: 74,\n            o: 'm -72 252 l -73 254 l 0 254 l 72 254 l 70 252 b 0 -1 70 248 0 -1 b -72 252 -1 -1 -72 248 ',\n        },\n        articStaccatissimoBelow: {\n            x_min: -73.5,\n            x_max: 72.140625,\n            ha: 74,\n            o: 'm -72 252 l -73 254 l 0 254 l 72 254 l 70 252 b 0 -1 70 248 0 -1 b -72 252 -1 -1 -72 248 ',\n        },\n        articMarcatoAbove: {\n            x_min: -149.71875,\n            x_max: 148.359375,\n            ha: 151,\n            o: 'm -8 -1 b -1 0 -5 -1 -4 0 b 16 -11 5 0 13 -4 b 83 -186 17 -12 47 -90 l 148 -358 l 148 -363 b 127 -385 148 -376 138 -385 b 112 -378 122 -385 118 -383 b 54 -226 110 -374 114 -385 b 0 -81 24 -147 0 -81 b -55 -226 -1 -81 -25 -147 b -114 -378 -115 -385 -111 -374 b -129 -385 -119 -383 -123 -385 b -149 -363 -140 -385 -149 -376 l -149 -358 l -84 -186 b -19 -11 -49 -90 -19 -12 b -8 -1 -17 -8 -12 -4 ',\n        },\n        articMarcatoBelow: {\n            x_min: -149.71875,\n            x_max: 148.359375,\n            ha: 151,\n            o: 'm -8 -1 b -1 0 -5 -1 -4 0 b 16 -11 5 0 13 -4 b 83 -186 17 -12 47 -90 l 148 -358 l 148 -363 b 127 -385 148 -376 138 -385 b 112 -378 122 -385 118 -383 b 54 -226 110 -374 114 -385 b 0 -81 24 -147 0 -81 b -55 -226 -1 -81 -25 -147 b -114 -378 -115 -385 -111 -374 b -129 -385 -119 -383 -123 -385 b -149 -363 -140 -385 -149 -376 l -149 -358 l -84 -186 b -19 -11 -49 -90 -19 -12 b -8 -1 -17 -8 -12 -4 ',\n        },\n        fermataAbove: {\n            x_min: -442.359375,\n            x_max: 441,\n            ha: 450,\n            o: 'm -31 487 b -1 488 -21 488 -10 488 b 434 104 216 488 397 330 b 441 27 438 79 441 47 b 439 12 441 20 439 15 b 419 0 435 4 427 0 b 404 5 413 0 408 1 b 398 30 400 11 398 13 b 0 351 390 213 213 351 b -59 348 -20 351 -39 349 b -400 30 -251 324 -393 191 b -405 5 -400 13 -401 11 b -420 0 -409 1 -415 0 b -441 12 -428 0 -436 4 b -442 27 -441 15 -442 20 b -435 104 -442 47 -439 79 b -31 487 -401 316 -235 474 m -13 131 b -1 133 -9 133 -5 133 b 51 105 19 133 39 123 b 61 70 58 95 61 83 b 51 34 61 58 58 45 b -1 6 39 16 19 6 b -46 27 -17 6 -34 13 b -62 69 -57 38 -62 54 b -13 131 -62 98 -44 124 ',\n        },\n        fermataBelow: {\n            x_min: -441,\n            x_max: 439.640625,\n            ha: 449,\n            o: 'm -428 -2 b -421 0 -427 -1 -424 0 b -406 -6 -416 0 -409 -2 b -400 -31 -401 -12 -400 -15 b -1 -352 -392 -215 -215 -352 b 58 -349 19 -352 38 -351 b 398 -31 250 -326 392 -192 b 404 -6 398 -15 400 -12 b 419 -1 408 -2 413 -1 b 439 -13 427 -1 435 -5 b 439 -29 439 -16 439 -22 b 434 -105 439 -48 438 -80 b 0 -489 397 -333 213 -489 b -68 -484 -23 -489 -44 -488 b -441 -36 -280 -452 -436 -263 b -441 -30 -441 -34 -441 -31 b -428 -2 -441 -11 -439 -5 m -13 -9 b -1 -8 -9 -8 -5 -8 b 50 -36 19 -8 39 -19 b 61 -72 57 -47 61 -59 b 50 -106 61 -84 57 -97 b -1 -134 39 -124 19 -134 b -46 -115 -17 -134 -34 -129 b -62 -72 -57 -102 -62 -87 b -13 -9 -62 -44 -44 -16 ',\n        },\n        breathMarkComma: {\n            x_min: -1.359375,\n            x_max: 193.28125,\n            ha: 197,\n            o: 'm 78 233 b 87 233 81 233 84 233 b 187 140 132 233 174 195 b 193 102 190 127 193 115 b 43 -113 193 22 136 -62 b 27 -119 36 -116 31 -119 b 19 -108 21 -119 19 -115 b 29 -97 19 -102 20 -101 b 102 13 73 -72 102 -27 b 92 51 102 26 98 40 l 91 54 l 84 54 b 8 104 53 54 21 74 b -1 142 1 116 -1 130 b 78 233 -1 187 31 227 ',\n        },\n        breathMarkUpbow: {\n            x_min: -170.140625,\n            x_max: 168.78125,\n            ha: 172,\n            o: 'm -160 567 b -122 567 -159 567 -149 567 l -87 567 l -84 566 b -74 553 -78 563 -77 560 b -20 366 -73 551 -49 466 b 31 186 8 267 31 186 b 85 371 31 186 55 269 b 140 559 114 473 138 557 b 153 567 141 564 148 567 b 168 559 159 567 166 564 b 168 555 168 557 168 557 b 92 281 168 548 159 513 b 14 13 50 134 14 13 b 0 0 14 6 6 0 b -17 15 -8 0 -17 8 b -93 283 -17 15 -51 136 b -170 552 -166 533 -170 548 b -170 553 -170 552 -170 552 b -160 567 -170 560 -167 564 ',\n        },\n        caesura: {\n            x_min: 0,\n            x_max: 622.03125,\n            ha: 635,\n            o: 'm 398 417 b 406 419 401 419 404 419 b 427 398 417 419 427 409 b 427 391 427 395 427 392 b 34 -274 424 385 38 -272 b 20 -280 29 -278 25 -280 b 0 -259 9 -280 0 -270 b 0 -252 0 -256 0 -254 b 393 413 2 -247 389 410 b 398 417 394 415 397 416 m 592 417 b 600 419 594 419 597 419 b 622 398 611 419 622 409 b 620 391 622 395 620 392 b 227 -274 617 385 231 -272 b 213 -280 223 -278 219 -280 b 193 -259 202 -280 193 -270 b 194 -252 193 -256 193 -254 b 586 413 196 -247 582 410 b 592 417 588 415 590 416 ',\n        },\n        caesuraCurved: {\n            x_min: 0,\n            x_max: 503.609375,\n            ha: 514,\n            o: 'm 274 430 b 277 430 276 430 277 430 b 310 394 296 430 310 415 b 308 383 310 391 308 387 b 306 367 307 381 307 374 b 236 120 298 305 272 210 b 40 -273 189 -5 125 -134 b 20 -287 35 -283 27 -287 b 5 -281 14 -287 9 -285 b 0 -267 1 -277 0 -273 b 9 -242 0 -262 2 -255 b 246 395 137 -12 232 242 b 274 430 249 416 257 427 m 468 430 b 472 430 469 430 470 430 b 503 394 490 430 503 415 b 502 383 503 391 503 387 b 499 367 502 381 500 374 b 431 120 491 305 465 210 b 234 -273 382 -5 318 -134 b 213 -287 228 -283 220 -287 b 198 -281 208 -287 202 -285 b 193 -267 194 -277 193 -273 b 202 -242 193 -262 196 -255 b 439 395 330 -12 426 242 b 468 430 442 416 451 427 ',\n        },\n        restMaxima: {\n            x_min: 0,\n            x_max: 464.140625,\n            ha: 474,\n            o: 'm 0 0 l 0 347 l 76 347 l 153 347 l 153 0 l 153 -348 l 76 -348 l 0 -348 l 0 0 m 308 -1 l 308 347 l 386 347 l 464 347 l 464 -1 l 464 -348 l 386 -348 l 308 -348 l 308 -1 ',\n        },\n        restDoubleWhole: {\n            x_min: 0,\n            x_max: 386.5625,\n            ha: 394,\n            o: 'm 0 173 l 0 347 l 193 347 l 386 347 l 386 173 l 386 0 l 193 0 l 0 0 l 0 173 ',\n        },\n        restWhole: {\n            x_min: 0,\n            x_max: 447.8125,\n            ha: 457,\n            o: 'm 0 -87 l 0 0 l 223 0 l 447 0 l 447 -87 l 447 -174 l 223 -174 l 0 -174 l 0 -87 ',\n        },\n        restHalf: {\n            x_min: 0,\n            x_max: 447.8125,\n            ha: 457,\n            o: 'm 0 86 l 0 173 l 223 173 l 447 173 l 447 86 l 447 0 l 223 0 l 0 0 l 0 86 ',\n        },\n        restQuarter: {\n            x_min: 0,\n            x_max: 300.8125,\n            ha: 307,\n            o: 'm 49 505 b 53 506 50 505 51 506 b 70 496 58 506 62 503 b 81 485 73 492 78 488 l 96 473 l 111 459 l 122 449 l 134 438 l 182 396 l 255 330 b 292 291 292 298 292 298 l 292 290 l 292 284 l 283 270 b 209 36 234 197 209 113 b 288 -170 209 -44 235 -119 b 299 -184 295 -179 299 -181 b 300 -191 300 -187 300 -188 b 285 -206 300 -199 294 -206 b 280 -206 283 -206 281 -206 b 247 -201 270 -202 259 -201 b 176 -222 223 -201 197 -208 b 114 -340 136 -249 114 -292 b 172 -471 114 -384 134 -433 b 185 -492 182 -481 185 -487 b 181 -502 185 -496 183 -499 b 171 -508 176 -505 174 -508 b 152 -498 166 -508 160 -503 b 0 -284 65 -428 12 -352 b 0 -260 0 -278 0 -270 b 1 -238 0 -252 0 -242 b 148 -140 16 -177 73 -140 b 209 -148 167 -140 189 -142 b 215 -149 212 -148 215 -149 b 215 -149 215 -149 215 -149 l 215 -149 b 201 -136 215 -148 209 -142 l 157 -97 l 96 -41 b 17 34 21 24 17 29 b 17 37 17 36 17 36 b 17 38 17 37 17 38 b 25 56 17 44 17 44 b 110 298 81 131 110 219 b 46 474 110 367 88 431 b 38 491 40 480 38 487 b 49 505 38 498 42 502 ',\n        },\n        rest8th: {\n            x_min: 0,\n            x_max: 349.8125,\n            ha: 357,\n            o: 'm 88 302 b 103 303 93 302 98 303 b 202 224 149 303 191 270 b 205 199 204 216 205 208 b 178 129 205 173 196 147 l 175 126 l 182 127 b 307 249 236 142 284 190 b 313 259 308 254 311 258 b 329 267 317 265 323 267 b 349 247 340 267 349 259 b 201 -263 349 242 204 -258 b 182 -273 197 -270 190 -273 b 163 -260 174 -273 166 -269 b 161 -256 161 -259 161 -258 b 217 -59 161 -248 170 -220 b 272 129 247 43 272 127 b 272 129 272 129 272 129 b 264 122 272 129 268 126 b 140 80 227 94 183 80 b 36 115 102 80 65 91 b 0 194 10 136 0 165 b 88 302 0 244 32 292 ',\n        },\n        rest16th: {\n            x_min: 0,\n            x_max: 450.53125,\n            ha: 460,\n            o: 'm 189 302 b 204 303 193 302 198 303 b 303 224 250 303 292 270 b 306 199 304 216 306 208 b 279 129 306 173 296 147 l 276 126 l 281 127 b 408 249 337 142 385 190 b 412 259 409 254 412 258 b 430 267 417 265 423 267 b 450 247 441 267 450 259 b 200 -605 450 242 204 -599 b 182 -616 197 -612 190 -616 b 163 -602 174 -616 166 -610 b 161 -598 161 -601 161 -601 b 217 -402 161 -589 170 -562 b 272 -213 247 -298 272 -213 b 272 -213 272 -213 272 -213 b 264 -219 272 -213 268 -216 b 140 -262 227 -247 182 -262 b 36 -226 102 -262 65 -249 b 0 -145 12 -206 0 -176 b 17 -84 0 -124 5 -104 b 103 -38 38 -54 70 -38 b 191 -91 137 -38 172 -56 b 205 -141 201 -106 205 -124 b 178 -212 205 -167 196 -194 l 175 -215 l 182 -213 b 307 -93 236 -198 284 -151 b 372 129 308 -88 372 127 b 372 129 372 129 372 129 b 364 122 372 129 368 126 b 240 80 328 94 283 80 b 137 115 202 80 166 91 b 99 194 111 136 99 165 b 189 302 99 244 133 292 ',\n        },\n        rest32nd: {\n            x_min: 0,\n            x_max: 551.25,\n            ha: 563,\n            o: 'm 289 644 b 304 645 294 645 299 645 b 404 566 349 645 392 613 b 406 541 405 557 406 549 b 379 471 406 514 397 489 l 377 467 l 382 470 b 509 591 438 485 485 531 b 513 601 510 595 513 599 b 530 609 518 607 524 609 b 551 588 540 609 551 602 b 200 -605 551 584 204 -599 b 182 -616 197 -612 190 -616 b 163 -602 174 -616 166 -610 b 161 -598 161 -601 161 -601 b 217 -402 161 -589 170 -562 b 272 -213 247 -298 272 -213 b 272 -213 272 -213 272 -213 b 264 -219 272 -213 268 -216 b 140 -262 227 -247 182 -262 b 36 -226 102 -262 65 -249 b 0 -145 12 -206 0 -176 b 17 -84 0 -124 5 -104 b 103 -38 38 -54 70 -38 b 191 -91 137 -38 172 -56 b 205 -141 201 -106 205 -124 b 178 -212 205 -167 196 -194 l 175 -215 l 182 -213 b 307 -93 236 -198 284 -151 b 372 129 308 -88 372 127 b 372 129 372 129 372 129 b 364 122 372 129 368 126 b 240 80 328 94 283 80 b 137 115 202 80 166 91 b 99 195 112 136 99 165 b 118 256 99 217 106 238 b 204 303 138 287 171 303 b 292 249 238 303 273 285 b 306 199 302 234 306 217 b 279 129 306 173 296 148 l 276 126 l 281 127 b 408 248 336 142 385 190 b 473 470 409 254 473 469 b 473 470 473 470 473 470 b 465 464 473 470 469 467 b 341 421 428 435 383 421 b 236 458 303 421 266 433 b 200 537 212 478 200 508 b 289 644 200 585 234 635 ',\n        },\n        rest64th: {\n            x_min: -1.359375,\n            x_max: 651.96875,\n            ha: 665,\n            o: 'm 389 644 b 405 645 394 645 400 645 b 504 566 450 645 492 613 b 507 541 506 557 507 549 b 480 471 507 514 498 489 l 477 467 l 483 470 b 609 591 539 485 586 531 b 613 601 611 595 613 599 b 631 609 619 607 624 609 b 651 588 641 609 651 602 b 200 -946 651 584 204 -941 b 182 -957 197 -953 190 -957 b 163 -945 174 -957 166 -953 b 161 -939 161 -942 161 -942 b 217 -743 161 -931 170 -904 b 272 -555 247 -639 272 -555 b 272 -555 272 -555 272 -555 b 264 -560 272 -555 268 -557 b 140 -603 227 -589 182 -603 b 36 -567 102 -603 65 -592 b -1 -487 12 -548 -1 -517 b 17 -427 -1 -466 5 -445 b 103 -380 38 -395 70 -380 b 191 -433 137 -380 172 -398 b 205 -484 201 -448 205 -466 b 178 -553 205 -509 196 -535 l 175 -557 l 182 -555 b 307 -435 236 -539 284 -494 b 372 -213 308 -430 372 -215 b 372 -213 372 -213 372 -213 b 364 -219 372 -213 368 -216 b 240 -262 328 -247 283 -262 b 137 -226 202 -262 166 -249 b 99 -145 112 -206 99 -176 b 118 -84 99 -124 106 -104 b 204 -38 138 -54 171 -38 b 292 -91 238 -38 273 -56 b 306 -141 302 -106 306 -124 b 279 -212 306 -167 296 -194 l 276 -215 l 281 -213 b 408 -93 336 -198 385 -151 b 473 129 409 -88 473 127 b 473 129 473 129 473 129 b 465 122 473 129 469 126 b 341 80 428 94 383 80 b 236 115 303 80 266 91 b 200 195 213 136 200 165 b 217 256 200 217 206 238 b 304 303 239 287 272 303 b 393 249 338 303 374 285 b 406 199 402 234 406 217 b 379 129 406 173 397 148 l 377 126 l 382 127 b 509 248 436 142 485 190 b 574 470 510 254 574 469 b 574 470 574 470 574 470 b 566 464 574 470 570 467 b 442 421 529 435 484 421 b 337 458 404 421 367 433 b 300 537 313 478 300 508 b 389 644 300 585 334 635 ',\n        },\n        rest128th: {\n            x_min: -1.359375,\n            x_max: 752.703125,\n            ha: 768,\n            o: 'm 490 985 b 504 986 495 986 500 986 b 604 907 551 986 593 954 b 607 884 607 900 607 892 b 581 813 607 857 597 831 l 578 810 l 583 811 b 710 932 638 827 687 873 b 714 943 711 936 713 942 b 730 952 720 949 725 952 b 752 931 741 952 752 943 b 200 -946 752 927 204 -941 b 182 -957 197 -953 190 -957 b 163 -945 174 -957 166 -953 b 161 -939 161 -942 161 -942 b 217 -743 161 -931 170 -904 b 272 -555 247 -639 272 -555 b 272 -555 272 -555 272 -555 b 264 -560 272 -555 268 -557 b 140 -603 227 -589 182 -603 b 36 -567 102 -603 65 -592 b -1 -487 12 -548 -1 -517 b 17 -427 -1 -466 5 -445 b 103 -380 38 -395 70 -380 b 191 -433 137 -380 172 -398 b 205 -484 201 -448 205 -466 b 178 -553 205 -509 196 -535 l 175 -557 l 182 -555 b 307 -435 236 -539 284 -494 b 372 -213 308 -430 372 -215 b 372 -213 372 -213 372 -213 b 364 -219 372 -213 368 -216 b 240 -262 328 -247 283 -262 b 137 -226 202 -262 166 -249 b 99 -145 112 -206 99 -176 b 118 -84 99 -124 106 -104 b 204 -38 138 -54 171 -38 b 292 -91 238 -38 273 -56 b 306 -141 302 -106 306 -124 b 279 -212 306 -167 296 -194 l 276 -215 l 281 -213 b 408 -93 336 -198 385 -151 b 473 129 409 -88 473 127 b 473 129 473 129 473 129 b 465 122 473 129 469 126 b 341 80 428 94 383 80 b 236 115 303 80 266 91 b 200 195 213 136 200 165 b 217 256 200 217 206 238 b 304 303 239 287 272 303 b 393 249 338 303 374 285 b 406 199 402 234 406 217 b 379 129 406 173 397 148 l 377 126 l 382 127 b 509 248 436 142 485 190 b 574 470 510 254 574 469 b 574 470 574 470 574 470 b 566 464 574 470 570 467 b 442 421 529 435 484 421 b 337 458 404 421 367 433 b 300 538 314 477 300 508 b 318 598 300 559 306 580 b 404 645 340 630 372 645 b 494 592 439 645 475 627 b 507 541 502 577 507 559 b 480 471 507 516 498 489 l 477 467 l 483 470 b 608 589 537 485 586 531 b 675 811 611 595 675 810 b 675 811 675 811 675 811 b 666 806 675 811 671 809 b 543 763 628 777 585 763 b 438 799 504 763 468 775 b 401 878 412 820 401 849 b 490 985 401 928 434 977 ',\n        },\n        dynamicPiano: {\n            x_min: -53.078125,\n            x_max: 513.140625,\n            ha: 485,\n            o: 'm 185 383 b 196 384 187 383 191 384 b 277 334 230 384 259 365 b 288 301 281 324 288 306 b 288 297 288 298 288 297 b 294 302 289 297 291 299 b 394 370 323 338 367 367 b 404 371 398 370 401 371 b 510 272 453 371 498 328 b 513 237 513 262 513 251 b 507 172 513 217 511 192 b 326 -34 487 59 412 -26 b 314 -36 322 -36 318 -36 b 274 -24 298 -36 283 -31 l 265 -16 b 224 44 246 -1 232 20 b 223 49 224 47 223 49 b 223 49 223 49 223 49 b 149 -197 221 48 149 -194 b 149 -198 149 -197 149 -198 b 170 -210 149 -202 155 -205 b 187 -215 174 -210 175 -212 b 204 -231 201 -219 204 -222 b 197 -245 204 -240 202 -242 l 194 -248 l 76 -248 l -42 -248 l -46 -245 b -53 -231 -51 -242 -53 -240 b -35 -215 -53 -222 -49 -217 b -13 -210 -21 -212 -20 -212 b -6 -208 -10 -209 -8 -208 b 0 -206 -6 -208 -2 -206 b 25 -188 13 -201 21 -195 b 163 280 28 -183 163 276 b 166 291 163 283 164 287 b 167 302 167 295 167 299 b 155 324 167 315 161 324 b 155 324 155 324 155 324 b 65 230 125 322 85 280 b 53 215 61 217 58 215 b 51 215 53 215 51 215 b 42 224 46 215 42 217 b 57 263 42 231 47 244 b 140 360 77 305 104 337 b 152 370 144 365 149 369 b 185 383 157 376 172 381 m 374 306 b 366 308 371 308 368 308 b 300 273 348 308 321 294 b 284 254 288 262 287 259 b 280 242 283 249 281 245 b 257 169 279 240 270 213 l 236 98 l 236 93 b 251 48 238 77 243 61 b 279 27 258 37 272 27 b 281 27 279 27 280 27 b 291 31 281 27 287 30 b 396 170 334 52 378 109 b 406 247 402 197 406 224 b 401 277 406 259 405 270 b 374 306 397 290 383 303 ',\n        },\n        dynamicMezzo: {\n            x_min: 46.28125,\n            x_max: 669.671875,\n            ha: 563,\n            o: 'm 183 376 b 189 376 185 376 187 376 b 212 374 197 376 208 376 b 265 337 234 369 253 355 b 274 317 268 331 273 320 b 274 316 274 317 274 316 b 280 323 276 316 276 319 b 311 358 288 337 299 348 b 319 366 315 360 318 365 b 356 376 326 373 340 376 b 382 371 364 376 374 374 b 428 337 400 366 417 352 b 436 317 431 331 436 320 b 438 316 436 317 436 316 b 442 323 438 316 439 319 b 475 358 451 337 462 348 b 483 366 477 360 481 365 b 518 376 488 373 503 376 b 544 373 528 376 536 376 b 604 285 579 360 604 326 b 597 249 604 273 601 258 b 543 63 596 247 544 70 b 541 54 543 61 541 55 b 540 44 540 51 540 47 b 552 23 540 33 545 23 b 552 23 552 23 552 23 b 647 126 586 29 627 72 b 658 138 651 136 653 138 b 660 138 660 138 660 138 b 669 129 666 137 669 136 b 654 88 669 122 665 109 b 562 -12 631 43 602 9 l 549 -19 b 521 -27 540 -24 530 -27 b 447 30 490 -27 458 -4 b 443 58 445 38 443 48 b 450 93 443 72 446 84 b 504 278 453 97 504 272 b 507 288 506 283 506 287 b 509 298 507 292 509 295 b 491 326 509 310 502 320 b 487 327 490 327 488 327 b 479 324 484 327 483 326 b 441 270 462 316 443 288 b 435 249 441 265 436 254 b 398 127 434 248 419 195 b 362 4 379 61 362 5 b 328 -1 359 -1 362 -1 b 314 -1 323 -1 319 -1 b 302 -1 310 -1 306 -1 b 266 4 266 -1 269 -1 b 265 6 265 5 265 5 b 303 144 265 13 272 34 b 343 278 325 216 343 276 b 344 288 343 281 344 285 b 345 298 345 291 345 295 b 330 326 345 310 340 320 b 323 327 328 327 325 327 b 317 324 322 327 321 326 b 279 270 300 316 281 288 b 273 249 279 265 274 254 b 236 127 272 248 255 195 b 200 4 216 61 200 5 b 164 -1 197 -1 198 -1 b 151 -1 161 -1 156 -1 b 140 -1 147 -1 142 -1 b 103 4 104 -1 106 -1 b 103 6 103 5 103 5 b 141 144 103 13 108 34 b 181 278 161 216 179 276 b 182 288 181 281 181 285 b 183 298 182 291 183 295 b 168 324 183 310 178 320 b 160 327 166 326 163 327 b 141 320 156 327 151 324 b 69 230 112 305 85 272 b 57 215 65 217 62 215 b 55 215 57 215 55 215 b 46 224 49 215 46 217 b 59 260 46 231 50 242 b 151 363 81 306 112 341 b 161 369 155 365 160 367 b 183 376 166 371 174 374 ',\n        },\n        dynamicForte: {\n            x_min: -118.421875,\n            x_max: 597.53125,\n            ha: 381,\n            o: 'm 460 574 b 464 574 461 574 462 574 b 488 574 470 574 481 574 b 500 573 491 574 498 574 b 594 503 543 570 588 538 b 597 488 596 498 597 494 b 528 417 597 449 564 417 b 502 423 519 417 510 419 b 465 481 477 434 465 458 b 488 528 465 499 472 516 b 490 530 490 530 490 530 b 490 530 490 530 490 530 b 468 517 488 530 475 523 b 349 340 419 485 377 420 b 347 330 348 334 347 330 b 383 328 347 328 363 328 b 428 326 423 328 424 328 b 442 302 438 320 442 312 b 430 281 442 294 438 285 b 385 276 424 277 426 276 l 377 276 l 332 276 l 330 269 b 178 -117 303 126 250 -9 b 1 -249 129 -194 69 -237 b -20 -251 -6 -251 -13 -251 b -114 -187 -65 -251 -100 -227 b -118 -156 -117 -177 -118 -166 b -51 -84 -118 -116 -91 -84 b -31 -87 -46 -84 -39 -86 b 16 -152 0 -95 16 -124 b -12 -205 16 -173 8 -194 b -16 -208 -14 -206 -16 -208 b -14 -208 -16 -208 -14 -208 b -9 -206 -14 -208 -12 -208 b 74 -124 23 -197 54 -166 b 172 224 98 -79 125 22 b 185 276 178 252 183 274 b 185 276 185 276 185 276 b 141 276 185 276 181 276 b 91 280 96 276 96 276 b 77 302 83 285 77 294 b 91 326 77 312 83 320 b 148 328 95 328 96 328 l 198 330 l 202 341 b 460 574 249 473 351 566 ',\n        },\n        dynamicRinforzando: {\n            x_min: 78.9375,\n            x_max: 485.921875,\n            ha: 417,\n            o: 'm 362 378 b 378 380 367 380 372 380 b 472 348 415 380 453 367 b 485 315 481 338 485 327 b 462 273 485 298 477 281 b 439 267 454 269 446 267 b 398 290 424 267 409 274 b 344 319 385 309 364 319 b 281 269 315 319 289 301 b 279 262 280 266 279 262 b 276 256 279 260 277 258 b 274 249 276 254 274 251 b 238 127 273 248 257 192 b 201 4 217 61 201 5 b 166 -1 198 -1 200 -1 b 153 -1 163 -1 157 -1 b 141 -1 148 -1 144 -1 b 104 4 106 -1 107 -1 b 104 6 104 5 104 5 b 142 144 104 13 110 34 b 182 278 164 219 181 276 b 183 288 182 281 182 285 b 185 302 185 292 185 298 b 164 330 185 317 176 328 b 159 330 163 330 161 330 b 102 302 140 330 119 320 b 91 294 95 295 93 294 b 88 294 91 294 89 294 b 78 303 83 294 78 298 b 81 312 78 306 78 309 b 200 373 106 347 160 373 b 215 371 205 373 209 371 b 266 335 235 367 254 353 b 269 331 268 333 269 331 b 269 331 269 331 269 331 b 273 335 269 331 270 334 b 362 378 298 359 330 376 ',\n        },\n        dynamicSforzando: {\n            x_min: 70.78125,\n            x_max: 378.390625,\n            ha: 315,\n            o: 'm 246 373 b 254 373 249 373 251 373 b 372 324 303 373 360 351 b 378 302 377 317 378 309 b 338 251 378 278 362 255 b 328 249 334 249 332 249 b 283 294 303 249 283 270 b 288 315 283 301 284 308 b 289 319 289 317 289 319 b 289 319 289 319 289 319 b 283 320 289 320 287 320 b 270 322 279 322 274 322 b 206 288 242 322 215 308 b 206 283 206 287 206 285 b 257 223 206 267 230 238 b 284 206 272 213 277 210 b 351 90 328 173 351 130 b 340 47 351 74 348 59 b 205 -30 314 -2 264 -30 b 182 -29 198 -30 190 -30 b 84 15 147 -24 103 -5 b 70 48 74 24 70 36 b 108 99 70 70 85 94 b 121 102 112 101 117 102 b 167 56 147 102 167 80 b 159 31 167 48 164 40 l 156 26 l 157 26 b 190 20 167 22 178 20 b 220 26 201 20 212 22 b 258 65 243 34 258 51 b 257 70 258 66 258 69 b 204 126 249 94 234 109 b 114 258 148 158 114 209 b 125 302 114 273 118 288 b 246 373 147 342 193 370 ',\n        },\n        dynamicZ: {\n            x_min: 29.9375,\n            x_max: 420.578125,\n            ha: 371,\n            o: 'm 115 345 b 221 347 117 345 166 347 b 411 345 306 347 409 345 b 420 330 416 342 420 335 b 415 319 420 326 419 321 b 178 118 397 303 179 118 b 178 117 178 118 178 117 b 181 117 178 117 178 117 b 189 117 182 117 185 117 b 193 117 190 117 191 117 b 247 98 215 117 232 111 b 296 75 266 83 280 76 b 302 75 299 75 300 75 b 322 91 311 75 315 79 b 322 91 322 91 322 91 b 322 91 322 91 322 91 b 319 91 322 91 321 91 b 313 90 318 90 315 90 b 283 107 300 90 288 97 b 277 126 279 114 277 121 b 319 167 277 149 295 167 b 319 167 319 167 319 167 b 362 118 347 167 362 147 b 355 82 362 108 359 96 b 311 33 349 65 340 55 b 224 1 284 12 253 1 b 194 5 213 1 204 2 b 168 18 183 8 178 11 b 110 36 151 30 130 36 b 57 15 88 36 68 29 b 47 11 54 12 51 11 b 31 20 40 11 34 13 b 29 26 31 22 29 25 b 68 66 29 36 39 45 b 285 250 73 71 281 248 b 285 250 285 250 285 250 b 231 252 285 252 261 252 b 137 250 190 252 141 250 b 93 227 122 248 110 241 b 78 220 88 222 83 220 b 66 227 74 220 70 222 b 63 234 65 229 63 231 b 85 291 63 241 69 252 b 115 345 108 342 108 344 ',\n        },\n        ornamentTrill: {\n            x_min: -340.28125,\n            x_max: 338.921875,\n            ha: 346,\n            o: 'm -32 520 b -29 521 -31 520 -31 521 b -23 519 -27 521 -24 520 b -20 513 -21 517 -20 516 b -21 506 -20 512 -20 509 b -31 474 -23 502 -27 488 l -53 402 l -66 352 l -68 349 l -57 349 b -32 351 -51 349 -40 351 b 123 370 19 352 74 359 b 137 371 127 370 133 371 b 170 356 152 371 164 366 b 171 355 170 355 170 355 b 216 366 174 355 183 358 b 280 378 268 377 266 377 b 287 378 283 378 284 378 b 332 349 307 378 322 369 b 338 319 336 341 338 330 b 332 301 338 310 336 302 b 242 280 329 299 246 280 b 242 280 242 280 242 280 b 235 288 236 280 235 283 b 235 292 235 290 235 291 b 236 302 236 297 236 299 b 220 337 236 316 230 330 l 216 340 l 210 335 b 159 276 189 322 172 301 b 118 149 152 265 156 274 b 81 34 84 36 85 36 b -8 13 78 33 -4 13 b -8 13 -8 13 -8 13 b -14 20 -12 15 -14 15 b -8 44 -14 24 -12 31 b -2 66 -5 55 -2 65 b -2 66 -2 66 -2 66 l -2 66 b -43 41 -2 66 -21 55 b -114 4 -98 8 -98 8 b -144 0 -123 0 -134 0 b -242 99 -197 0 -242 43 b -242 109 -242 102 -242 105 b -212 219 -240 122 -242 116 b -185 312 -197 270 -185 312 l -185 312 b -189 312 -185 312 -186 312 b -259 312 -200 312 -227 312 b -321 310 -291 312 -310 310 b -334 312 -330 310 -334 312 b -340 319 -338 313 -340 316 b -336 326 -340 322 -338 324 b -291 337 -334 326 -314 331 l -247 347 l -210 348 b -172 348 -190 348 -172 348 b -168 363 -172 348 -171 355 b -145 442 -151 424 -145 441 b -133 452 -144 444 -140 446 l -77 489 b -32 520 -53 506 -32 520 m 57 334 b 53 335 55 335 54 335 b 44 334 50 335 49 335 b -70 316 8 326 -28 320 b -78 309 -78 316 -78 316 b -108 202 -80 305 -88 274 b -141 81 -136 112 -141 93 b -140 74 -141 79 -141 77 b -117 49 -137 59 -127 49 b -107 52 -114 49 -110 51 b 16 127 -106 54 14 126 b 42 217 16 127 42 215 b 49 241 42 222 44 229 b 73 320 53 251 73 317 b 57 334 73 327 65 333 ',\n        },\n        ornamentTurn: {\n            x_min: -423.3125,\n            x_max: 421.9375,\n            ha: 431,\n            o: 'm -262 197 b -247 197 -257 197 -253 197 b -118 162 -210 197 -163 184 b 40 45 -61 134 -13 98 b 277 -95 119 -33 200 -81 b 289 -97 281 -97 285 -97 b 378 0 332 -97 371 -55 b 378 11 378 4 378 6 b 302 83 378 55 345 83 b 242 66 283 83 262 77 b 208 56 231 59 219 56 b 148 120 175 56 148 81 b 201 186 148 151 164 172 b 261 198 220 194 240 198 b 420 45 341 198 411 136 b 421 22 421 37 421 29 b 245 -199 421 -93 338 -199 b 238 -198 243 -199 240 -199 b -44 -47 148 -194 50 -141 b -250 86 -114 22 -183 66 b -295 94 -270 91 -283 94 b -315 91 -302 94 -307 94 b -381 4 -356 81 -381 43 b -355 -56 -381 -18 -372 -40 b -298 -81 -338 -73 -319 -81 b -246 -68 -283 -81 -265 -77 b -212 -58 -234 -61 -223 -58 b -178 -69 -200 -58 -189 -62 b -151 -122 -160 -81 -151 -101 b -171 -167 -151 -138 -157 -155 b -239 -195 -185 -181 -213 -192 b -257 -197 -245 -197 -250 -197 b -423 -5 -352 -197 -423 -109 b -412 65 -423 16 -419 40 b -262 197 -389 137 -329 188 ',\n        },\n        ornamentTurnSlash: {\n            x_min: -423.3125,\n            x_max: 421.9375,\n            ha: 431,\n            o: 'm -10 276 b -2 277 -8 277 -5 277 b 17 265 5 277 13 273 b 19 163 19 260 19 260 l 19 68 l 39 45 b 277 -95 122 -34 200 -81 b 289 -97 281 -97 285 -97 b 378 0 332 -97 371 -54 b 378 11 378 4 378 6 b 302 83 378 55 345 83 b 242 66 283 83 262 77 b 208 56 231 59 219 56 b 148 120 175 56 148 81 b 200 186 148 151 164 172 b 261 198 220 194 240 198 b 420 45 341 198 411 137 b 421 22 421 37 421 29 b 257 -198 421 -86 347 -188 b 242 -198 251 -198 247 -198 b 20 -105 181 -198 95 -163 l 19 -104 l 19 -183 b 19 -216 19 -195 19 -206 b 12 -273 19 -272 17 -267 b -2 -278 8 -277 2 -278 b -21 -266 -10 -278 -19 -274 b -23 -165 -23 -263 -23 -262 l -23 -69 l -44 -47 b -250 86 -117 23 -183 66 b -295 94 -270 93 -284 94 b -315 91 -302 94 -308 94 b -381 5 -356 81 -381 43 b -355 -56 -381 -16 -372 -40 b -299 -81 -338 -73 -319 -81 b -246 -68 -283 -81 -265 -77 b -212 -58 -234 -61 -223 -58 b -168 -77 -196 -58 -179 -65 b -151 -122 -156 -90 -151 -105 b -179 -174 -151 -141 -160 -162 b -239 -195 -194 -184 -217 -192 b -257 -197 -245 -195 -250 -197 b -423 -5 -349 -197 -423 -113 b -423 0 -423 -4 -423 -1 b -277 194 -420 97 -362 173 b -247 197 -268 197 -258 197 b -24 104 -185 197 -100 162 l -23 102 l -23 181 b -21 265 -23 260 -23 260 b -10 276 -20 269 -14 274 ',\n        },\n        ornamentMordent: {\n            x_min: -402.890625,\n            x_max: 401.53125,\n            ha: 410,\n            o: 'm -10 273 b -4 274 -9 273 -6 274 b 16 262 4 274 12 269 b 17 158 17 259 17 259 l 17 56 l 62 112 b 117 174 110 172 110 172 b 122 174 118 174 119 174 b 132 173 125 174 129 173 b 295 11 134 172 171 134 l 307 -1 l 336 34 b 374 76 366 72 368 74 b 381 77 375 77 378 77 b 401 56 392 77 401 68 b 400 48 401 54 401 51 b 223 -172 397 41 230 -166 b 210 -176 220 -174 215 -176 b 201 -174 206 -176 204 -176 b 112 -87 198 -173 178 -152 b 27 0 65 -38 27 0 b 21 -6 27 0 24 -2 l 17 -12 l 17 -147 b 17 -210 17 -173 17 -194 b 10 -292 17 -297 16 -287 b -2 -299 6 -297 2 -299 b -21 -287 -10 -299 -19 -295 b -24 -174 -23 -284 -23 -284 l -24 -63 l -66 -117 b -121 -176 -110 -170 -114 -176 b -125 -176 -122 -176 -123 -176 b -296 -12 -134 -174 -125 -184 l -308 0 l -337 -34 b -375 -77 -367 -73 -370 -76 b -382 -79 -377 -79 -379 -79 b -402 -58 -393 -79 -402 -69 b -401 -49 -402 -55 -402 -52 b -224 170 -398 -43 -231 165 b -212 174 -221 173 -216 174 b -202 173 -208 174 -205 174 b -39 11 -200 172 -151 122 l -28 -1 l -25 1 l -24 4 l -24 130 b -23 260 -24 256 -24 258 b -10 273 -20 266 -16 270 ',\n        },\n        ornamentShortTrill: {\n            x_min: -402.890625,\n            x_max: 401.53125,\n            ha: 410,\n            o: 'm -219 173 b -213 174 -217 174 -215 174 b -202 173 -209 174 -205 173 b -114 86 -200 172 -179 151 b -28 0 -66 37 -28 0 b 40 84 -28 0 2 37 b 117 174 111 173 110 172 b 122 174 118 174 119 174 b 132 173 125 174 129 173 b 295 11 134 172 171 134 l 307 -1 l 336 34 b 374 76 366 72 368 74 b 381 77 375 77 378 77 b 401 56 392 77 401 68 b 400 48 401 54 401 51 b 223 -172 397 41 230 -166 b 210 -176 220 -174 215 -176 b 201 -174 206 -176 204 -176 b 112 -87 198 -173 178 -152 b 27 0 65 -38 27 0 b -42 -86 27 0 -4 -38 b -118 -174 -112 -174 -111 -173 b -123 -176 -119 -176 -121 -176 b -133 -174 -126 -176 -130 -174 b -296 -12 -136 -173 -172 -137 l -308 0 l -337 -34 b -375 -77 -367 -73 -370 -76 b -382 -79 -377 -79 -379 -79 b -402 -58 -393 -79 -402 -69 b -401 -49 -402 -55 -402 -52 b -224 172 -398 -43 -228 167 b -219 173 -223 172 -220 173 ',\n        },\n        ornamentTremblement: {\n            x_min: -571.671875,\n            x_max: 570.3125,\n            ha: 582,\n            o: 'm -386 173 b -381 174 -385 174 -383 174 b -370 173 -377 174 -372 173 b -281 86 -367 172 -347 151 b -196 0 -235 37 -196 0 b -126 84 -196 0 -164 37 b -50 174 -55 173 -57 172 b -44 174 -49 174 -47 174 b -35 173 -42 174 -38 173 b 53 86 -32 172 -12 151 b 138 0 100 37 138 0 b 208 84 140 0 170 37 b 284 174 279 173 277 172 b 289 174 285 174 288 174 b 299 173 294 174 298 173 b 462 11 303 172 338 134 l 475 -1 l 503 34 b 541 76 534 72 536 74 b 548 77 544 77 545 77 b 570 56 560 77 570 68 b 567 48 570 54 568 51 b 392 -172 564 41 397 -166 b 378 -176 387 -174 382 -176 b 368 -174 374 -176 371 -176 b 280 -87 367 -173 345 -152 b 194 0 234 -38 194 0 b 125 -86 194 0 163 -38 b 49 -174 54 -174 55 -173 b 43 -176 47 -176 46 -176 b 34 -174 40 -176 36 -174 b -54 -87 31 -173 10 -152 b -140 0 -102 -38 -140 0 b -209 -86 -141 0 -171 -38 b -285 -174 -280 -174 -279 -173 b -291 -176 -287 -176 -289 -176 b -300 -174 -295 -176 -299 -174 b -464 -12 -304 -173 -340 -137 l -476 0 l -504 -34 b -543 -77 -534 -73 -537 -76 b -549 -79 -545 -79 -547 -79 b -571 -58 -562 -79 -571 -69 b -568 -49 -571 -55 -570 -52 b -392 172 -566 -43 -396 167 b -386 173 -390 172 -387 173 ',\n        },\n        ornamentPrecompAppoggTrill: {\n            x_min: -571.671875,\n            x_max: 570.3125,\n            ha: 582,\n            o: 'm -559 351 b -551 352 -556 352 -553 352 b -530 338 -543 352 -533 348 b -529 169 -530 337 -529 291 l -529 1 l -507 27 l -441 112 b -382 174 -394 169 -390 174 b -378 174 -381 174 -379 174 b -281 86 -370 174 -375 179 b -196 0 -234 37 -196 0 b -126 84 -196 0 -164 37 b -50 174 -55 173 -57 172 b -44 174 -49 174 -47 174 b -35 173 -42 174 -38 173 b 53 86 -32 172 -12 151 b 138 0 100 37 138 0 b 208 84 140 0 170 37 b 284 174 279 173 279 172 b 289 174 285 174 288 174 b 300 173 294 174 298 173 b 462 11 303 172 340 134 l 475 -1 l 503 34 b 541 76 534 72 536 74 b 548 77 544 77 545 77 b 570 56 560 77 570 68 b 567 48 570 54 568 51 b 392 -172 564 41 397 -166 b 378 -176 387 -174 382 -176 b 368 -174 375 -176 371 -176 b 280 -87 367 -173 347 -152 b 194 0 234 -38 194 0 b 126 -86 194 0 163 -38 b 49 -174 54 -174 55 -173 b 44 -176 47 -176 46 -176 b 34 -174 40 -176 36 -174 b -54 -87 31 -173 10 -152 b -140 0 -102 -38 -140 0 b -209 -86 -140 0 -171 -38 b -285 -174 -280 -174 -279 -173 b -291 -176 -287 -176 -288 -176 b -300 -174 -294 -176 -298 -174 b -464 -11 -303 -173 -374 -102 l -476 0 l -506 -37 b -539 -76 -528 -65 -537 -74 b -551 -80 -543 -79 -547 -80 b -570 -68 -558 -80 -566 -76 l -571 -65 l -571 136 b -570 340 -571 331 -571 337 b -559 351 -568 344 -564 348 ',\n        },\n        ornamentPrecompSlideTrillDAnglebert: {\n            x_min: -590.71875,\n            x_max: 589.359375,\n            ha: 601,\n            o: 'm -367 173 b -362 174 -366 174 -364 174 b -351 173 -357 174 -353 173 b -262 86 -348 172 -328 151 b -176 0 -216 37 -176 0 b -107 84 -176 0 -145 37 b -31 174 -36 173 -38 172 b -25 174 -29 174 -28 174 b -16 173 -23 174 -19 173 b 72 86 -13 172 6 151 b 157 0 119 37 157 0 b 227 84 159 0 189 37 b 303 174 298 173 296 172 b 308 174 304 174 307 174 b 318 173 313 174 317 173 b 481 11 322 172 357 134 l 494 -1 l 522 34 b 560 76 553 72 555 74 b 567 77 563 77 564 77 b 589 56 579 77 589 68 b 586 48 589 54 588 51 b 411 -172 583 41 416 -166 b 397 -176 406 -174 401 -176 b 387 -174 393 -176 390 -176 b 299 -87 386 -173 366 -152 b 213 0 253 -38 213 0 b 144 -86 213 0 182 -38 b 68 -174 73 -174 74 -173 b 62 -176 66 -176 65 -176 b 53 -174 59 -176 55 -174 b -35 -87 50 -173 29 -152 b -121 0 -83 -38 -121 0 b -190 -86 -122 0 -152 -38 b -266 -174 -261 -174 -259 -173 b -272 -176 -268 -176 -270 -176 b -281 -174 -276 -176 -280 -174 b -371 -86 -284 -173 -304 -152 b -457 0 -417 -38 -457 0 l -457 0 b -477 -26 -457 0 -470 -16 b -548 -227 -524 -88 -548 -161 b -536 -303 -548 -254 -544 -280 b -533 -317 -534 -309 -533 -313 b -553 -338 -533 -330 -541 -338 b -577 -315 -566 -338 -571 -333 b -590 -227 -586 -287 -590 -258 b -518 -9 -590 -154 -564 -77 b -465 56 -509 2 -504 8 l -402 134 b -367 173 -375 169 -372 172 ',\n        },\n        ornamentPrecompSlideTrillBach: {\n            x_min: -590.71875,\n            x_max: 589.359375,\n            ha: 601,\n            o: 'm 175 273 b 182 274 178 273 181 274 b 202 262 190 274 198 269 b 204 158 204 259 204 259 l 204 56 l 250 112 b 303 174 296 172 298 172 b 308 174 304 174 307 174 b 318 173 313 174 317 173 b 481 11 322 172 357 134 l 494 -1 l 522 34 b 560 76 553 72 555 74 b 567 77 563 77 564 77 b 589 56 579 77 589 68 b 586 48 589 54 588 51 b 411 -172 583 41 416 -166 b 397 -176 406 -174 401 -176 b 387 -174 393 -176 390 -176 b 299 -87 386 -173 366 -152 b 213 0 253 -38 213 0 b 208 -6 213 0 210 -2 l 204 -12 l 204 -147 b 204 -210 204 -173 204 -194 b 198 -292 204 -297 204 -287 b 183 -299 194 -297 189 -299 b 164 -287 175 -299 167 -295 b 163 -174 163 -284 163 -284 l 161 -63 l 119 -117 b 65 -176 76 -170 73 -176 b 61 -176 63 -176 62 -176 b -35 -87 51 -174 57 -180 b -121 0 -83 -38 -121 0 b -190 -86 -122 0 -152 -38 b -266 -174 -261 -174 -259 -173 b -272 -176 -268 -176 -270 -176 b -281 -174 -276 -176 -280 -174 b -371 -86 -284 -173 -304 -152 b -457 0 -417 -38 -457 0 l -457 0 b -477 -26 -457 0 -470 -16 b -548 -227 -524 -88 -548 -161 b -536 -303 -548 -254 -544 -280 b -533 -317 -534 -309 -533 -313 b -553 -338 -533 -330 -541 -338 b -577 -315 -566 -338 -571 -333 b -590 -227 -586 -287 -590 -258 b -518 -9 -590 -154 -564 -77 b -465 56 -509 2 -504 8 l -402 134 b -363 174 -374 170 -371 174 b -359 174 -362 174 -360 174 b -262 86 -351 174 -356 179 b -176 0 -216 37 -176 0 b -107 84 -176 0 -145 37 b -31 174 -36 173 -38 172 b -25 174 -29 174 -28 174 b -16 173 -23 174 -19 173 b 147 11 -13 172 35 123 l 157 -1 l 160 1 l 163 4 l 163 130 b 164 260 163 256 163 258 b 175 273 166 266 170 270 ',\n        },\n        ornamentPrecompTrillSuffixDandrieu: {\n            x_min: -590.71875,\n            x_max: 589.359375,\n            ha: 601,\n            o: 'm 544 335 b 553 337 548 337 551 337 b 575 313 563 337 570 330 b 589 226 583 285 589 256 b 517 8 589 152 563 76 b 464 -58 507 -4 503 -9 l 401 -136 b 362 -176 372 -172 370 -176 b 357 -176 360 -176 359 -176 b 261 -87 349 -174 355 -180 b 175 0 215 -38 175 0 b 106 -86 175 0 144 -38 b 29 -174 35 -174 36 -173 b 24 -176 28 -176 27 -176 b 14 -174 21 -176 17 -174 b -73 -87 12 -173 -8 -152 b -159 0 -121 -38 -159 0 b -228 -86 -160 0 -190 -38 b -304 -174 -299 -174 -298 -173 b -310 -176 -306 -176 -308 -176 b -319 -174 -314 -176 -318 -174 b -483 -12 -323 -173 -359 -137 l -495 0 l -524 -34 b -562 -77 -553 -73 -556 -76 b -568 -79 -564 -79 -566 -79 b -590 -58 -581 -79 -590 -69 b -588 -49 -590 -55 -589 -52 b -412 170 -585 -43 -417 165 b -398 174 -408 173 -402 174 b -389 173 -394 174 -392 174 b -300 86 -387 172 -366 151 b -215 -1 -254 37 -215 -1 b -145 84 -215 -1 -183 37 b -69 173 -74 173 -76 172 b -63 174 -68 174 -66 174 b -54 173 -61 174 -57 173 b 34 86 -51 172 -31 151 b 119 -1 81 37 119 -1 b 189 84 121 -1 151 37 b 265 173 259 173 258 172 b 270 174 266 174 269 174 b 280 173 274 174 279 173 b 370 84 283 172 303 151 b 455 -1 416 37 455 -1 l 455 -1 b 476 24 455 -1 469 15 b 547 226 522 87 547 159 b 534 302 547 252 543 278 b 532 317 533 308 532 313 b 544 335 532 326 536 333 ',\n        },\n        ornamentPrecompDoubleCadenceUpperPrefix: {\n            x_min: -597.53125,\n            x_max: 596.171875,\n            ha: 608,\n            o: 'm -533 324 b -525 327 -530 326 -528 327 b -504 305 -514 327 -504 317 b -504 305 -504 305 -504 305 b -513 284 -504 299 -504 299 b -556 112 -541 226 -556 167 b -545 33 -556 84 -552 58 b -524 -20 -541 15 -532 -9 l -522 -23 l -491 15 l -413 111 b -355 174 -367 169 -363 174 b -351 174 -353 174 -352 174 b -254 86 -343 174 -348 179 b -168 -1 -208 37 -168 -1 b -100 84 -168 -1 -137 37 b -23 173 -28 173 -29 172 b -19 174 -21 174 -20 174 b -8 173 -14 174 -10 173 b 80 86 -5 172 13 151 b 166 -1 127 37 166 -1 b 235 84 166 -1 197 37 b 311 173 306 173 304 172 b 317 174 313 174 314 174 b 326 173 319 174 323 173 b 490 11 329 172 366 134 l 502 -1 l 530 34 b 568 76 560 72 563 74 b 575 77 570 77 573 77 b 596 56 586 77 596 68 b 594 48 596 54 596 51 b 417 -172 592 41 424 -166 b 405 -176 415 -174 409 -176 b 396 -174 401 -176 398 -176 b 307 -87 393 -173 372 -152 b 221 -1 259 -38 221 -1 b 152 -86 221 -1 190 -38 b 76 -176 81 -174 83 -173 b 70 -176 74 -176 73 -176 b 61 -174 66 -176 62 -174 b -27 -87 58 -173 38 -152 b -114 -1 -74 -38 -112 -1 b -182 -86 -114 -1 -145 -38 b -258 -176 -253 -174 -253 -173 b -264 -176 -259 -176 -262 -176 b -274 -174 -268 -176 -272 -174 b -438 -11 -277 -173 -348 -102 l -449 0 l -479 -37 b -524 -80 -513 -80 -514 -80 l -524 -80 b -553 -52 -534 -80 -540 -74 b -597 109 -583 -8 -597 48 b -560 280 -597 165 -585 224 b -533 324 -548 310 -540 322 ',\n        },\n        ornamentPrecompDoubleCadenceUpperPrefixTurn: {\n            x_min: -597.53125,\n            x_max: 596.171875,\n            ha: 608,\n            o: 'm -533 324 b -525 327 -530 326 -528 327 b -504 305 -514 327 -504 317 b -504 305 -504 305 -504 305 b -513 284 -504 299 -504 299 b -556 112 -541 226 -556 167 b -545 33 -556 84 -552 58 b -524 -20 -541 15 -532 -9 l -522 -23 l -491 15 l -413 111 b -355 174 -367 169 -363 174 b -351 174 -353 174 -352 174 b -254 86 -343 174 -348 179 b -168 -1 -208 37 -168 -1 b -100 84 -168 -1 -137 37 b -23 173 -28 173 -29 172 b -19 174 -21 174 -20 174 b -8 173 -14 174 -10 173 b 155 11 -5 172 43 123 l 166 -1 l 168 1 l 170 4 l 170 130 b 171 260 170 256 170 258 b 191 274 175 269 183 274 b 205 267 196 274 201 272 b 212 158 212 262 210 273 l 212 56 l 257 112 b 311 173 304 172 304 172 b 317 174 313 174 314 174 b 326 173 319 174 323 173 b 490 11 329 172 366 134 l 502 -1 l 530 34 b 568 76 560 72 563 74 b 575 77 570 77 573 77 b 596 56 586 77 596 68 b 594 48 596 54 596 51 b 417 -172 592 41 424 -166 b 405 -176 415 -174 409 -176 b 396 -174 401 -176 398 -176 b 307 -87 393 -173 372 -152 b 221 -1 259 -38 221 -1 b 216 -6 221 -1 219 -2 l 212 -12 l 212 -147 b 212 -210 212 -173 212 -194 b 205 -292 212 -297 210 -287 b 191 -299 201 -297 196 -299 b 172 -287 183 -299 175 -295 b 170 -174 171 -284 171 -284 l 170 -63 l 127 -117 b 73 -176 84 -170 80 -176 b 68 -176 72 -176 70 -176 b -27 -87 59 -174 65 -180 b -114 0 -74 -38 -112 0 b -182 -86 -114 0 -145 -38 b -258 -174 -253 -174 -253 -173 b -264 -176 -259 -176 -262 -176 b -274 -174 -268 -176 -272 -174 b -438 -11 -277 -173 -348 -102 l -449 0 l -479 -37 b -524 -80 -513 -80 -514 -80 l -524 -80 b -553 -52 -534 -80 -540 -74 b -597 109 -583 -8 -597 48 b -560 280 -597 165 -585 224 b -533 324 -548 310 -540 322 ',\n        },\n        ornamentPrecompTrillLowerSuffix: {\n            x_min: -597.53125,\n            x_max: 596.171875,\n            ha: 608,\n            o: 'm -413 173 b -408 174 -412 174 -409 174 b -397 173 -404 174 -400 173 b -308 86 -394 172 -374 151 b -223 0 -261 37 -223 0 b -153 84 -223 0 -191 37 b -77 174 -83 173 -84 172 b -72 174 -76 174 -74 174 b -62 173 -68 174 -63 173 b 25 86 -59 172 -39 151 b 112 0 73 37 111 0 b 181 84 112 0 144 37 b 257 174 251 173 251 172 b 262 174 258 174 261 174 b 273 173 266 174 270 173 b 436 9 276 172 347 101 l 447 -1 l 477 36 b 522 79 511 79 513 79 l 522 79 b 552 51 533 79 539 73 b 596 -112 582 6 596 -51 b 567 -262 596 -161 586 -213 b 539 -322 558 -287 544 -316 b 524 -327 534 -326 529 -327 b 504 -315 515 -327 507 -323 b 503 -308 503 -312 503 -309 b 511 -285 503 -302 504 -297 b 555 -113 540 -227 555 -169 b 544 -34 555 -86 551 -59 b 522 19 540 -16 530 8 l 521 22 l 481 -26 l 405 -122 b 353 -176 366 -172 362 -176 b 349 -176 352 -176 351 -176 b 253 -87 341 -176 347 -180 b 167 0 206 -38 167 0 b 99 -86 167 0 136 -38 b 21 -174 27 -174 28 -173 b 17 -176 20 -176 19 -176 b 6 -174 13 -176 9 -174 b -81 -87 4 -173 -14 -152 b -167 0 -129 -38 -167 0 b -236 -86 -167 0 -198 -38 b -313 -174 -307 -174 -306 -173 b -318 -176 -314 -176 -315 -176 b -328 -174 -321 -176 -325 -174 b -491 -12 -330 -173 -367 -137 l -503 0 l -530 -34 b -570 -77 -562 -73 -564 -76 b -577 -79 -571 -79 -574 -79 b -597 -58 -588 -79 -597 -69 b -596 -49 -597 -55 -597 -52 b -417 172 -593 -43 -423 167 b -413 173 -417 172 -415 173 ',\n        },\n        stringsDownBow: {\n            x_min: -228.671875,\n            x_max: 227.3125,\n            ha: 232,\n            o: 'm -217 487 l -213 488 l 0 488 l 212 488 l 216 487 b 225 476 220 484 224 480 l 227 473 l 227 244 l 227 15 l 225 12 b 206 0 223 4 215 0 b 197 1 204 0 200 0 b 187 12 193 4 189 6 l 186 15 l 186 138 l 186 262 l -1 262 l -187 262 l -187 138 l -187 15 l -189 12 b -208 0 -193 4 -200 0 b -227 12 -216 0 -223 4 l -228 15 l -228 244 l -228 473 l -227 476 b -217 487 -225 480 -221 484 ',\n        },\n        stringsUpBow: {\n            x_min: -149.71875,\n            x_max: 148.359375,\n            ha: 151,\n            o: 'm -137 381 b -130 383 -134 383 -133 383 b -111 371 -122 383 -114 378 b -55 224 -110 370 -85 305 b 0 80 -25 145 -1 80 b 54 224 0 80 24 145 b 112 377 114 384 110 373 b 127 384 118 381 122 384 b 148 362 138 384 148 374 l 148 356 l 83 183 b 16 9 47 88 17 11 b -1 0 12 2 5 0 b -14 5 -5 0 -10 1 b -84 183 -19 9 -13 -6 l -149 356 l -149 362 b -137 381 -149 371 -145 378 ',\n        },\n        stringsHarmonic: {\n            x_min: -122.5,\n            x_max: 121.140625,\n            ha: 124,\n            o: 'm -16 145 b 0 147 -10 147 -5 147 b 121 -1 66 147 121 77 b 114 -49 121 -16 118 -33 b -1 -148 95 -112 47 -148 b -85 -106 -31 -148 -61 -134 b -122 -1 -110 -76 -122 -38 b -16 145 -122 68 -81 134 m 12 111 b 0 113 8 113 4 113 b -68 22 -29 113 -61 73 b -70 0 -69 15 -70 6 b -13 -113 -70 -49 -47 -98 b -1 -115 -9 -115 -5 -115 b 63 -40 24 -115 53 -83 b 68 -1 66 -27 68 -15 b 12 111 68 48 46 97 ',\n        },\n        pluckedSnapPizzicatoAbove: {\n            x_min: -149.71875,\n            x_max: 148.359375,\n            ha: 151,\n            o: 'm -9 215 b 0 217 -6 217 -4 217 b 19 205 8 217 14 213 b 20 142 20 202 20 201 l 20 84 l 23 84 b 144 -27 81 74 129 30 b 148 -66 147 -40 148 -54 b 36 -213 148 -134 103 -197 b 0 -219 24 -217 12 -219 b -145 -104 -68 -219 -129 -173 b -149 -68 -148 -91 -149 -79 b -24 84 -149 6 -98 74 l -21 84 l -21 142 b -19 205 -20 201 -20 202 b -9 215 -17 209 -13 213 m -21 -15 b -23 41 -21 37 -21 41 b -23 41 -23 41 -23 41 b -76 11 -35 40 -62 26 b -108 -65 -98 -11 -108 -38 b -1 -176 -108 -122 -65 -176 b 107 -65 63 -176 107 -122 b 74 11 107 -38 96 -11 b 20 41 61 26 32 41 b 20 -15 20 41 20 15 b 19 -74 20 -72 20 -72 b 0 -87 14 -83 6 -87 b -19 -74 -8 -87 -16 -83 b -21 -15 -20 -72 -20 -72 ',\n        },\n        pluckedSnapPizzicatoBelow: {\n            x_min: -149.71875,\n            x_max: 148.359375,\n            ha: 151,\n            o: 'm -9 215 b 0 217 -6 217 -4 217 b 19 205 8 217 14 213 b 20 142 20 202 20 201 l 20 84 l 23 84 b 144 -27 81 74 129 30 b 148 -66 147 -40 148 -54 b 36 -213 148 -134 103 -197 b 0 -219 24 -217 12 -219 b -145 -104 -68 -219 -129 -173 b -149 -68 -148 -91 -149 -79 b -24 84 -149 6 -98 74 l -21 84 l -21 142 b -19 205 -20 201 -20 202 b -9 215 -17 209 -13 213 m -21 -15 b -23 41 -21 37 -21 41 b -23 41 -23 41 -23 41 b -76 11 -35 40 -62 26 b -108 -65 -98 -11 -108 -38 b -1 -176 -108 -122 -65 -176 b 107 -65 63 -176 107 -122 b 74 11 107 -38 96 -11 b 20 41 61 26 32 41 b 20 -15 20 41 20 15 b 19 -74 20 -72 20 -72 b 0 -87 14 -83 6 -87 b -19 -74 -8 -87 -16 -83 b -21 -15 -20 -72 -20 -72 ',\n        },\n        pluckedLeftHandPizzicato: {\n            x_min: 0,\n            x_max: 319.859375,\n            ha: 326,\n            o: 'm 149 508 b 159 509 152 509 155 509 b 186 494 170 509 181 503 b 190 440 190 487 190 488 l 190 430 l 190 377 l 242 377 l 251 377 b 303 373 298 377 296 377 b 319 345 314 367 319 356 b 304 319 319 335 314 324 b 250 315 296 315 299 315 l 242 315 l 190 315 l 190 262 l 190 252 b 186 198 190 204 190 205 b 159 183 179 188 170 183 b 132 198 148 183 138 188 b 127 252 127 205 127 204 l 127 262 l 127 315 l 76 315 l 68 315 b 14 319 20 315 21 315 b 0 347 4 324 0 335 b 14 373 0 356 4 367 b 68 377 21 377 20 377 l 76 377 l 127 377 l 127 430 l 127 440 b 132 494 127 488 127 487 b 149 508 136 501 142 505 ',\n        },\n        keyboardPedalPed: {\n            x_min: -1.359375,\n            x_max: 1064.390625,\n            ha: 1086,\n            o: 'm 296 692 b 314 694 302 694 307 694 b 386 685 337 694 366 689 b 548 498 480 660 548 580 b 548 481 548 492 548 487 b 455 395 541 426 499 395 b 370 462 420 395 383 417 b 362 496 364 477 362 488 b 377 514 362 509 367 514 b 393 501 386 514 390 510 b 432 474 397 484 413 474 b 470 487 445 474 458 478 b 491 530 484 496 491 510 b 490 544 491 534 491 539 b 333 660 479 606 411 657 l 323 662 l 315 646 b 269 524 285 591 269 556 b 321 431 269 492 287 466 b 349 395 338 413 343 408 b 363 342 359 378 363 362 b 359 312 363 333 362 322 b 285 158 348 266 318 206 b 281 152 283 155 281 152 b 281 152 281 152 281 152 b 287 154 283 152 284 152 b 318 155 298 154 308 155 b 461 98 371 155 419 136 l 464 97 l 483 112 b 503 129 494 120 503 127 b 504 130 503 129 504 129 b 503 138 504 131 503 134 b 500 180 500 152 500 166 b 553 326 500 238 518 288 b 604 366 560 331 592 358 b 649 381 617 376 632 381 b 696 362 665 381 681 374 b 724 302 714 347 724 324 b 695 238 724 278 714 255 b 660 210 691 234 662 212 b 579 148 658 209 582 151 b 579 148 579 148 579 148 b 596 106 579 144 589 119 b 622 77 604 88 609 83 b 657 69 632 72 645 69 b 748 112 688 69 721 84 b 755 123 754 117 755 120 b 755 127 755 124 755 126 b 751 165 752 137 751 151 b 758 219 751 183 754 202 b 894 387 774 290 820 347 b 896 390 896 388 896 388 b 891 398 896 391 895 392 b 622 560 827 477 730 535 b 600 580 605 564 600 569 b 617 596 600 591 607 596 b 628 595 622 596 624 596 b 1057 248 846 552 1020 412 b 1064 191 1061 229 1064 209 b 922 0 1064 94 1005 9 b 902 -1 916 -1 909 -1 b 774 76 847 -1 800 26 b 769 83 770 81 770 83 b 769 81 769 83 769 83 b 627 -1 733 29 677 -1 b 548 27 597 -1 570 8 b 515 88 537 37 525 61 l 513 95 l 510 93 l 453 45 b 390 0 396 0 396 0 b 390 0 390 0 390 0 b 374 15 381 0 377 4 b 268 105 359 69 314 105 b 250 104 262 105 257 105 l 243 102 l 234 90 b 155 1 201 49 159 2 b 147 -1 152 0 149 -1 b 130 15 138 -1 130 6 b 132 20 130 18 132 19 b 136 31 133 22 134 27 b 220 131 149 74 178 109 b 231 137 225 134 230 136 b 302 278 280 202 302 244 b 265 335 302 299 295 309 b 209 442 234 363 213 402 b 209 455 209 446 209 451 b 279 648 209 502 232 564 l 285 659 l 283 659 b 176 627 238 653 210 645 b 57 477 111 594 66 538 b 55 459 55 471 55 464 b 72 409 55 437 61 415 b 93 403 78 405 87 403 b 152 467 123 403 151 431 b 168 488 153 483 157 488 b 185 462 181 488 185 483 l 185 460 b 137 344 183 409 168 369 b 78 322 119 328 98 322 b 13 360 50 322 25 335 b -1 426 4 380 -1 402 b 89 610 -1 488 32 559 b 296 692 147 659 210 685 m 926 348 b 921 353 924 351 922 353 b 914 348 920 353 918 351 b 823 167 857 306 823 237 b 828 124 823 154 826 138 b 890 31 837 79 862 40 b 896 31 892 31 894 31 b 956 104 916 31 940 59 b 970 191 965 129 970 159 b 966 241 970 208 969 224 b 926 348 959 277 945 313 m 627 326 b 619 326 624 326 622 326 b 598 316 611 326 604 323 b 568 215 579 288 568 255 b 568 208 568 213 568 210 b 571 183 570 195 570 184 l 571 183 b 594 201 571 183 582 191 l 634 231 b 660 259 653 247 656 248 b 664 278 662 266 664 272 b 627 326 664 299 649 320 ',\n        },\n        keyboardPedalUp: {\n            x_min: -1.359375,\n            x_max: 592.078125,\n            ha: 604,\n            o: 'm 280 692 b 295 694 283 692 289 694 b 310 692 300 694 307 692 b 357 630 340 684 357 657 b 336 580 357 612 351 594 b 311 538 321 566 311 549 b 352 492 311 512 330 492 b 366 495 357 492 362 492 b 397 553 390 503 397 517 b 415 603 397 576 402 591 b 460 623 427 617 443 623 b 509 599 479 623 498 614 b 522 559 518 587 522 573 b 494 506 522 538 513 519 b 451 495 481 498 473 496 b 415 488 432 495 426 494 b 394 449 404 483 394 464 b 394 448 394 448 394 448 l 394 440 l 397 433 b 428 409 404 420 413 413 b 438 408 431 408 435 408 b 479 431 450 408 462 415 b 528 455 495 448 510 455 b 548 452 534 455 541 453 b 592 391 577 442 592 416 b 549 331 592 365 577 340 b 528 327 541 328 534 327 b 479 351 510 327 495 335 b 438 374 464 367 450 374 b 417 369 431 374 424 373 b 394 333 402 360 394 348 b 400 312 394 326 396 319 b 451 287 408 294 420 288 b 513 258 484 285 499 278 b 522 223 519 247 522 234 b 461 159 522 190 496 159 b 449 161 457 159 453 159 b 397 229 416 167 397 191 b 366 288 397 265 390 278 b 352 290 362 290 357 290 b 315 262 336 290 321 280 b 311 245 313 256 311 251 b 334 204 311 233 318 220 b 355 170 348 190 351 184 b 357 152 356 166 357 159 b 355 136 357 147 356 140 b 295 88 345 104 321 88 b 232 152 264 88 232 112 b 255 204 232 174 238 186 b 279 244 273 222 279 231 l 279 245 b 238 290 279 270 259 290 b 224 288 234 290 228 290 b 193 229 200 278 193 265 b 141 161 193 191 174 167 b 129 159 137 159 133 159 b 68 223 93 159 68 190 b 77 258 68 234 70 247 b 138 287 91 278 106 285 b 185 302 166 287 175 291 b 196 333 193 312 196 323 b 174 369 196 347 187 360 b 152 374 166 373 159 374 b 111 351 140 374 126 367 b 62 327 95 335 80 327 b 51 328 58 327 54 327 b -1 391 16 334 -1 363 b 53 455 -1 420 17 449 b 62 455 57 455 59 455 b 111 431 80 455 95 448 b 152 408 127 415 140 408 b 161 409 155 408 159 408 b 193 433 176 413 186 420 l 196 440 l 196 448 b 196 451 196 449 196 449 b 190 471 196 459 194 463 b 137 495 182 489 167 495 l 134 495 l 134 495 b 68 560 95 495 68 521 b 129 623 68 596 95 623 b 144 621 134 623 138 623 b 193 553 175 614 193 589 b 224 495 193 517 200 503 b 238 492 228 492 234 492 b 279 538 259 492 279 512 b 254 580 279 549 269 566 b 232 630 239 594 232 612 b 280 692 232 657 250 684 m 307 456 b 295 458 303 458 299 458 b 230 391 258 458 230 426 b 236 360 230 381 231 371 b 295 324 249 337 272 324 b 353 360 318 324 341 337 b 360 391 357 370 360 381 b 307 456 360 421 340 451 ',\n        },\n        pictChokeCymbal: {\n            x_min: 0,\n            x_max: 227.3125,\n            ha: 232,\n            o: 'm 91 213 b 100 215 93 215 96 215 b 227 58 167 215 224 144 b 227 52 227 56 227 54 b 61 -201 227 -43 164 -138 b 29 -216 44 -212 36 -216 b 23 -210 27 -216 24 -213 b 21 -205 21 -208 21 -206 b 34 -192 21 -201 25 -197 b 122 -55 89 -161 122 -106 b 104 6 122 -33 117 -12 l 103 9 l 96 9 b 4 79 57 9 17 38 b 0 112 1 90 0 101 b 91 213 0 163 36 209 ',\n        },\n        wiggleArpeggiatoUp: {\n            x_min: 58.53125,\n            x_max: 228.671875,\n            ha: 294,\n            o: 'm 138 371 b 142 373 140 371 141 373 b 178 342 149 373 156 366 b 228 251 217 297 228 278 b 228 244 228 248 228 247 b 176 147 227 212 212 184 b 123 73 152 122 132 93 b 121 62 122 70 121 66 b 145 13 121 48 129 31 b 153 -2 151 6 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 145 -11 b 129 -1 140 -11 136 -8 b 61 87 89 37 68 68 b 58 113 59 95 58 105 b 110 215 58 144 74 177 b 163 287 134 240 155 269 b 166 299 166 291 166 295 b 141 348 166 313 157 330 b 133 360 134 356 133 358 b 133 363 133 362 133 362 b 138 371 133 367 136 370 ',\n        },\n        arrowheadBlackUp: {\n            x_min: -10.890625,\n            x_max: 299.4375,\n            ha: 294,\n            o: 'm 136 460 b 142 462 137 462 140 462 b 166 449 152 462 161 456 b 171 428 168 446 168 445 b 288 131 194 322 238 209 b 298 115 295 120 296 117 b 299 106 298 112 299 109 b 273 81 299 91 287 81 b 255 86 268 81 261 83 b 155 116 225 104 183 116 l 152 116 l 149 108 b 141 83 148 102 144 91 b 134 48 137 69 134 58 b 149 9 134 34 140 24 b 153 -1 152 5 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 147 -11 b 122 2 138 -11 133 -6 b 95 61 104 20 95 38 b 107 108 95 74 99 90 b 108 113 107 111 108 112 b 107 113 108 113 108 113 b 102 113 106 113 104 113 b 31 86 76 108 53 98 b 14 80 24 81 20 80 b -10 106 0 80 -10 91 b 0 131 -10 115 -9 116 b 115 430 49 209 91 317 b 136 460 119 451 123 456 ',\n        },\n        arrowheadBlackDown: {\n            x_min: -10.890625,\n            x_max: 298.078125,\n            ha: 294,\n            o: 'm 138 473 b 142 474 140 473 141 474 b 164 459 148 474 153 470 b 191 402 183 442 191 423 b 181 353 191 388 187 371 b 178 349 179 352 178 349 b 179 348 178 348 179 348 b 185 349 181 348 182 348 b 255 376 210 355 234 363 b 272 381 264 381 266 381 b 298 355 287 381 298 370 b 288 330 298 348 298 345 b 171 34 238 254 194 141 b 166 13 168 16 168 16 b 144 1 161 5 152 1 b 121 15 134 1 125 5 b 115 33 119 18 117 24 b 0 330 91 145 49 252 b -10 355 -9 345 -10 348 b 13 381 -10 371 0 381 b 31 376 19 381 25 380 b 132 345 61 358 103 345 l 136 345 l 137 355 b 145 378 138 359 142 370 b 152 415 149 394 152 405 b 137 452 152 427 148 438 b 133 464 134 458 133 460 b 138 473 133 467 134 470 ',\n        },\n        vexAccidentalMicrotonal1: {\n            x_min: -171.5,\n            x_max: 483.1875,\n            ha: 493,\n            o: 'm -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 495 20 616 20 616 b 20 373 20 427 20 373 b 115 410 20 373 63 390 l 210 448 l 210 531 b 212 620 210 614 210 616 b 231 632 215 628 223 632 b 246 627 236 632 242 631 b 251 541 251 620 251 628 l 251 463 l 315 489 b 387 514 368 509 381 514 b 393 513 390 514 392 514 b 406 494 402 510 406 502 b 397 476 406 487 404 480 b 323 446 396 474 363 462 l 251 417 l 251 283 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -19 -217 -9 -229 -16 -224 l -20 -215 l -21 48 l -21 310 l -83 287 b -152 262 -133 266 -145 262 b -157 263 -153 262 -155 262 b -171 283 -166 266 -171 274 b -161 301 -171 290 -167 297 b -91 328 -160 302 -129 315 l -21 356 l -21 487 l -20 617 l -19 621 b -8 631 -17 626 -12 630 m 210 288 b 210 401 210 351 210 401 b 114 365 209 401 167 384 l 20 327 l 20 238 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 180 164 199 187 192 l 209 177 b 209 177 209 177 209 177 b 210 288 210 177 210 199 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 ',\n        },\n        vexAccidentalMicrotonal2: {\n            x_min: -1.359375,\n            x_max: 386.5625,\n            ha: 394,\n            o: 'm 249 535 b 257 537 251 537 253 537 b 276 524 266 537 273 533 l 277 521 l 279 419 l 279 316 l 304 323 b 337 328 319 326 330 328 b 353 316 347 328 349 324 b 355 266 355 315 355 290 b 353 215 355 241 355 217 b 319 198 349 206 347 205 b 279 187 284 190 279 188 b 279 156 279 187 279 174 b 279 136 279 151 279 144 l 279 84 l 289 87 l 330 98 b 367 105 352 102 362 105 b 378 101 372 105 375 104 b 386 61 385 95 386 94 b 386 40 386 55 386 48 l 386 -5 l 385 -8 b 374 -19 383 -12 378 -18 b 291 -40 372 -19 347 -26 b 279 -43 284 -41 279 -43 b 279 -83 279 -43 279 -59 b 279 -95 279 -87 279 -91 l 279 -145 l 304 -140 b 337 -133 321 -136 330 -133 b 349 -140 343 -133 347 -136 b 355 -181 355 -145 355 -142 l 355 -197 l 355 -210 b 349 -252 355 -249 355 -247 b 300 -269 345 -258 347 -258 b 280 -274 291 -272 281 -273 l 279 -274 l 277 -378 l 277 -483 l 276 -487 b 257 -499 273 -495 265 -499 b 238 -487 249 -499 242 -495 l 236 -483 l 236 -384 l 236 -285 l 235 -285 l 212 -291 l 170 -301 b 148 -308 159 -305 148 -306 b 147 -415 147 -308 147 -313 l 147 -523 l 145 -526 b 126 -538 141 -534 133 -538 b 106 -526 118 -538 110 -534 l 104 -523 l 104 -420 b 103 -317 104 -326 104 -317 b 103 -317 103 -317 103 -317 b 50 -330 92 -322 54 -330 b 31 -317 42 -330 35 -326 b 29 -267 29 -315 29 -315 l 29 -219 l 32 -216 b 92 -192 36 -206 36 -206 l 104 -190 l 104 -138 b 103 -87 104 -91 104 -87 b 103 -87 103 -87 103 -87 b 88 -91 103 -87 96 -88 l 49 -101 b 17 -106 32 -105 23 -106 b 6 -102 13 -106 10 -105 b -1 -62 0 -97 -1 -95 b 0 -41 -1 -56 0 -49 l 0 4 l 1 6 b 10 16 2 11 6 15 b 91 37 12 18 38 24 l 104 41 l 104 93 b 103 144 104 140 104 144 b 103 144 103 144 103 144 b 50 131 92 141 54 131 b 31 144 42 131 35 137 b 29 195 29 147 29 148 l 29 242 l 32 245 b 92 269 36 255 36 255 l 104 273 l 104 377 l 104 481 l 106 485 b 126 498 110 492 118 498 b 134 495 129 498 132 496 b 145 485 138 494 142 489 l 147 481 l 147 383 l 147 283 l 152 284 b 190 294 155 285 171 290 l 230 303 l 236 305 l 236 413 l 236 521 l 238 524 b 249 535 240 528 243 533 m 236 126 b 235 177 236 154 236 177 l 235 177 b 213 172 235 177 225 174 l 170 161 b 147 155 157 158 147 155 b 147 124 147 155 147 142 b 147 102 147 117 147 111 l 147 52 l 153 54 l 228 72 l 236 74 l 236 126 m 236 -105 b 235 -54 236 -65 236 -54 l 235 -54 b 231 -55 235 -54 234 -54 b 172 -69 227 -55 204 -62 l 149 -76 l 147 -76 l 147 -127 l 147 -179 l 152 -177 b 190 -167 155 -177 171 -173 l 230 -158 l 236 -156 l 236 -105 ',\n        },\n        vexWiggleArpeggioUp: {\n            x_min: 58.53125,\n            x_max: 228.671875,\n            ha: 294,\n            o: 'm 138 371 b 142 373 140 371 141 373 b 178 342 149 373 156 366 b 228 251 217 297 228 278 b 228 244 228 248 228 247 b 176 147 227 212 212 184 b 123 73 152 122 132 93 b 121 62 122 70 121 66 b 145 13 121 48 129 31 b 153 -2 151 6 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 145 -11 b 129 -1 140 -11 136 -8 b 61 87 89 37 68 68 b 58 113 59 95 58 105 b 110 215 58 144 74 177 b 163 287 134 240 155 269 b 166 299 166 291 166 295 b 141 348 166 313 157 330 b 133 360 134 356 133 358 b 133 363 133 362 133 362 b 138 371 133 367 136 370 ',\n        },\n        vexNoteHeadMutedBreve: {\n            x_min: 0,\n            x_max: 370.21875,\n            ha: 378,\n            o: 'm 0 0 l 0 277 l 61 277 l 122 277 l 122 0 l 122 -278 l 61 -278 l 0 -278 l 0 0 m 246 -1 l 246 277 l 308 277 l 370 277 l 370 -1 l 370 -278 l 308 -278 l 246 -278 l 246 -1 ',\n        },\n    },\n    cssFontWeight: 'normal',\n    ascender: 1903,\n    underlinePosition: -125,\n    cssFontStyle: 'normal',\n    boundingBox: {\n        yMin: -2065.375,\n        xMin: -695.53125,\n        yMax: 1901.578125,\n        xMax: 1159.671875,\n    },\n    resolution: 1000,\n    original_font_information: {\n        postscript_name: 'Gonville-18',\n        version_string: 'Version 0.1.8904 ',\n        vendor_url: '',\n        full_font_name: 'Gonville-18',\n        font_family_name: 'Gonville-18',\n        copyright: 'No copyright is claimed on this font file.',\n        description: '',\n        trademark: '',\n        designer: '',\n        designer_url: '',\n        unique_font_identifier: 'FontForge 2.0 : Gonville-18 : 17-3-2010',\n        license_url: '',\n        license_description: '',\n        manufacturer_name: '',\n        font_sub_family_name: '18',\n    },\n    descender: -2066,\n    fontFamily: 'Gonville-18',\n    lineHeight: 4093,\n    underlineThickness: 50,\n};\n","/**\n * The Gonville font was created by Simon Tatham.\n * https://www.chiark.greenend.org.uk/~sgtatham/gonville/\n */\nexport const GonvilleMetrics = {\n    name: 'Gonville',\n    smufl: false,\n    stave: {\n        padding: 12,\n        endPaddingMax: 10,\n        endPaddingMin: 5,\n        unalignedNotePadding: 10,\n    },\n    accidental: {\n        noteheadAccidentalPadding: 1,\n        leftPadding: 2,\n        accidentalSpacing: 3,\n    },\n    clef: {\n        default: {\n            point: 40,\n            width: 26,\n        },\n        small: {\n            point: 32,\n            width: 20,\n        },\n        annotations: {\n            '8va': {\n                smuflCode: 'timeSig8',\n                default: {\n                    point: 20,\n                    treble: {\n                        line: -1.2,\n                        shiftX: 11,\n                    },\n                },\n                small: {\n                    point: 18,\n                    treble: {\n                        line: -0.4,\n                        shiftX: 8,\n                    },\n                },\n            },\n            '8vb': {\n                smuflCode: 'timeSig8',\n                default: {\n                    point: 20,\n                    treble: {\n                        line: 6.3,\n                        shiftX: 10,\n                    },\n                    bass: {\n                        line: 4,\n                        shiftX: 1,\n                    },\n                },\n                small: {\n                    point: 18,\n                    treble: {\n                        line: 5.8,\n                        shiftX: 6,\n                    },\n                    bass: {\n                        line: 3.5,\n                        shiftX: 0.5,\n                    },\n                },\n            },\n        },\n        // May not need these anymore\n        lineCount: {\n            '8': { point: 55, shiftY: 14 },\n            '7': { point: 47, shiftY: 8 },\n            '6': { point: 40, shiftY: 1 },\n            '5': { point: 30, shiftY: -6 },\n            '4': { point: 23, shiftY: -12 },\n        },\n    },\n    parenthesis: {\n        default: {\n            point: 39,\n            width: 7,\n        },\n        gracenote: {\n            point: (39 * 3) / 5,\n            width: 3,\n        },\n    },\n    pedalMarking: {\n        up: {\n            point: 40,\n        },\n        down: {\n            point: 40,\n        },\n    },\n    // These are for numeric digits, such as in time signatures\n    digits: {\n        point: 40,\n        tupletPoint: 28,\n    },\n    // articulation: {\n    // },\n    tremolo: {\n        default: {\n            point: 25,\n            spacing: 4,\n            offsetYStemUp: -7,\n            offsetYStemDown: 7,\n            offsetXStemUp: 9,\n            offsetXStemDown: -0.5,\n        },\n        grace: {\n            point: 15,\n            spacing: 4,\n            offsetYStemUp: -7,\n            offsetYStemDown: 7,\n            offsetXStemUp: 6.5,\n            offsetXStemDown: -0.5,\n        },\n    },\n    staveRepetition: {\n        symbolText: {\n            offsetX: 12,\n            offsetY: 25,\n            spacing: 5,\n        },\n        coda: {\n            offsetY: 25,\n        },\n        segno: {\n            offsetY: 0,\n        },\n    },\n    // noteHead: {\n    // },\n    stem: {\n        heightAdjustmentForFlag: -3,\n        // These are stem (Y) offsets to the note heads. To shift the\n        // noteheads (x-position) themselves, see glyphs.notehead.custom.\n        noteHead: {\n            noteheadTriangleUpHalf: {\n                offsetYBaseStemUp: 5,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadTriangleUpBlack: {\n                offsetYBaseStemUp: 5,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadTriangleUpWhole: {\n                offsetYBaseStemUp: 5,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadXHalf: {\n                offsetYBaseStemUp: -4,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadXBlack: {\n                offsetYBaseStemUp: -4,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadXWhole: {\n                offsetYBaseStemUp: -4,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadHalf: {\n                offsetYBaseStemUp: -1.5,\n                offsetYBaseStemDown: 1.5,\n            },\n            noteheadBlack: {\n                offsetYBaseStemUp: -1.5,\n                offsetYBaseStemDown: 1.5,\n            },\n            noteheadSquareWhite: {\n                offsetYBaseStemDown: -5,\n                offsetYBaseStemUp: 5,\n            },\n        },\n    },\n    glyphs: {\n        flag: {\n            shiftX: -0.08,\n            flag8thDown: {\n                shiftX: -0.16,\n            },\n            flag16thDown: {\n                shiftX: -0.16,\n            },\n            flag32ndDown: {\n                shiftX: -0.16,\n                shiftY: 9,\n            },\n            flag64thDown: {\n                shiftX: -0.16,\n                shiftY: 13,\n            },\n            flag128thDown: {\n                shiftX: -0.16,\n                shiftY: 22,\n            },\n            flag32ndUp: {\n                shiftY: -9,\n            },\n            flag64thUp: {\n                shiftY: -13,\n            },\n            flag128thUp: {\n                shiftY: -22,\n            },\n        },\n        stringNumber: {\n            verticalPadding: 8,\n            stemPadding: 2,\n            leftPadding: 5,\n            rightPadding: 6,\n        },\n        textNote: {\n            point: 40,\n            default: {},\n            ornamentTrill: {\n                shiftX: -5,\n                shiftY: 4,\n            },\n        },\n        noteHead: {\n            minPadding: 2,\n            custom: {\n                noteheadDiamondWholeStemUp: {\n                    shiftX: -6,\n                },\n                noteheadCircleXStemUp: {\n                    shiftX: -1.5,\n                },\n                noteheadXWholeStemUp: {\n                    shiftX: -5,\n                },\n                noteheadTriangleUpWholeStemUp: {\n                    shiftX: -6,\n                },\n            },\n        },\n        chordSymbol: {\n            global: {\n                superscriptOffset: -400,\n                subscriptOffset: 300,\n                kerningOffset: -250,\n                lowerKerningText: ['D', 'F', 'P', 'T', 'V', 'Y'],\n                upperKerningText: ['A', 'L'],\n                spacing: 100,\n                superSubRatio: 0.66,\n            },\n            csymDiminished: {\n                scale: 0.8,\n                leftSideBearing: 0,\n                advanceWidth: 506,\n                yOffset: 0,\n            },\n            csymHalfDiminished: {\n                scale: 0.8,\n                leftSideBearing: -32,\n                advanceWidth: 506,\n                yOffset: 0,\n            },\n            csymAugmented: {\n                scale: 1,\n                leftSideBearing: 0,\n                advanceWidth: 530,\n                yOffset: 0,\n            },\n            csymParensLeftTall: {\n                scale: 0.8,\n                leftSideBearing: 0,\n                advanceWidth: 155,\n                yOffset: 250,\n            },\n            csymParensRightTall: {\n                scale: 0.8,\n                leftSideBearing: -40,\n                advanceWidth: 189,\n                yOffset: 250,\n            },\n            csymBracketLeftTall: {\n                scale: 0.8,\n                leftSideBearing: 0,\n                advanceWidth: 328,\n                yOffset: 0,\n            },\n            csymBracketRightTall: {\n                scale: 0.8,\n                leftSideBearing: 1,\n                advanceWidth: 600,\n                yOffset: 0,\n            },\n            csymParensLeftVeryTall: {\n                scale: 0.9,\n                leftSideBearing: 0,\n                advanceWidth: 121,\n                yOffset: 350,\n            },\n            csymParensRightVeryTall: {\n                scale: 0.9,\n                leftSideBearing: 50,\n                advanceWidth: 111,\n                yOffset: 350,\n            },\n            csymDiagonalArrangementSlash: {\n                scale: 0.6,\n                leftSideBearing: -1,\n                advanceWidth: 990,\n                yOffset: 0,\n            },\n            csymMinor: {\n                scale: 0.8,\n                leftSideBearing: 0,\n                advanceWidth: 482,\n                yOffset: 0,\n            },\n            csymMajorSeventh: {\n                scale: 0.9,\n                leftSideBearing: 200,\n                yOffset: 0,\n                advanceWidth: 600,\n            },\n            accidentalSharp: {\n                scale: 0.75,\n                leftSideBearing: 40,\n                advanceWidth: 250,\n                yOffset: -402,\n            },\n            accidentalFlat: {\n                scale: 0.95,\n                leftSideBearing: -50,\n                advanceWidth: 208,\n                yOffset: -184,\n            },\n        },\n        jazzOrnaments: {\n            brassScoop: {\n                scale: 1.0,\n                xOffset: -12,\n                yOffset: 0,\n                stemUpYOffset: 0,\n                reportedWidth: 10,\n            },\n            brassDoitMedium: {\n                scale: 1.0,\n                xOffset: 16,\n                yOffset: 0,\n                stemUpYOffset: 0,\n                reportedWidth: 5,\n            },\n            brassFallLipShort: {\n                scale: 1.0,\n                xOffset: 17,\n                yOffset: 0,\n                stemUpYOffset: 0,\n                reportedWidth: 5,\n            },\n            brassLiftMedium: {\n                scale: 1.0,\n                xOffset: 16,\n                yOffset: 5,\n                stemUpYOffset: 0,\n                reportedWidth: 5,\n            },\n            brassFallRoughMedium: {\n                scale: 1.0,\n                xOffset: 16,\n                yOffset: 28,\n                stemUpYOffset: 0,\n                reportedWidth: 5,\n            },\n            brassBend: {\n                scale: 1.0,\n                xOffset: 2,\n                yOffset: -8,\n                stemUpYOffset: 24,\n                reportedWidth: 5,\n            },\n            brassMuteClosed: {\n                scale: 1.0,\n                xOffset: 3,\n                yOffset: -9,\n                stemUpYOffset: 24,\n                reportedWidth: 5,\n            },\n            brassMuteOpen: {\n                scale: 1.0,\n                xOffset: 3,\n                yOffset: -7,\n                stemUpYOffset: 25,\n                reportedWidth: 5,\n            },\n            brassFlip: {\n                scale: 1.0,\n                xOffset: 10,\n                yOffset: -4,\n                stemUpYOffset: 0,\n                reportedWidth: 5,\n            },\n            brassJazzTurn: {\n                scale: 1.0,\n                xOffset: 6,\n                yOffset: -4,\n                stemUpYOffset: 0,\n                reportedWidth: 5,\n            },\n            brassSmear: {\n                scale: 1.0,\n                xOffset: 10,\n                yOffset: -4,\n                stemUpYOffset: 0,\n                reportedWidth: 5,\n            },\n        },\n        tremolo: {\n            default: {\n                shiftY: -10,\n            },\n            grace: {\n                shiftY: -5,\n            },\n        },\n        tuplet: {\n            noteHeadOffset: 20,\n            stemOffset: 10,\n            bottomLine: 4,\n            topModifierOffset: 15,\n        },\n    },\n};\n","export const PetalumaFont = {\n    glyphs: {\n        bracketTop: {\n            x_min: 0,\n            x_max: 508,\n            y_min: 0,\n            y_max: 370,\n            ha: 370,\n            o: 'm 22 0 b 122 0 55 1 89 0 l 157 0 b 713 376 425 0 622 137 b 732 467 724 406 732 436 b 726 514 732 482 730 498 b 711 533 723 528 719 533 b 693 526 707 533 700 530 b 674 498 683 520 678 508 b 635 406 662 467 652 435 b 310 164 560 281 458 193 b 154 151 258 154 206 151 b 39 154 117 151 78 154 b 1 120 17 154 4 145 b 0 84 0 108 0 96 b 0 20 0 63 1 40 b 22 0 0 4 7 0 z',\n        },\n        bracketBottom: {\n            x_min: 0,\n            x_max: 496,\n            y_min: -393,\n            y_max: 0,\n            ha: 393,\n            o: 'm 696 -566 b 711 -539 713 -566 708 -549 b 714 -521 713 -533 714 -527 b 713 -508 714 -517 713 -513 b 661 -327 706 -445 688 -384 b 392 -42 603 -203 513 -109 b 206 0 331 -7 266 0 b 160 -1 190 0 174 -1 b 26 -1 107 -1 66 -3 b 0 -19 12 -1 0 -4 l 0 -23 b 3 -50 1 -32 3 -42 b 1 -86 3 -62 1 -73 b 4 -118 1 -96 1 -108 b 45 -151 10 -145 23 -154 b 180 -143 89 -144 135 -145 b 621 -419 392 -135 523 -236 b 662 -539 641 -456 655 -497 b 696 -566 667 -557 680 -566 z',\n        },\n        barlineTick: {\n            x_min: 0,\n            x_max: 56.036101509664164,\n            y_min: 876.905249806889,\n            y_max: 1121.5430338167066,\n            ha: 244.63778400981766,\n            o: 'm 42 1263 b 66 1287 62 1261 66 1272 b 81 1583 65 1387 72 1485 b 35 1614 82 1610 53 1610 b 14 1591 17 1619 16 1604 b 0 1408 7 1525 0 1459 l 0 1292 b 42 1263 1 1263 23 1266 z',\n        },\n        breathMarkTick: {\n            x_min: 0,\n            x_max: 568,\n            y_min: 0,\n            y_max: 621,\n            ha: 621,\n            o: 'm 258 0 b 278 39 276 0 274 24 b 279 56 279 45 279 50 l 279 73 b 278 117 279 88 278 102 b 281 148 278 127 279 138 b 536 600 312 330 387 487 b 744 719 600 651 670 690 b 815 779 775 730 808 740 b 818 824 818 793 818 808 b 815 868 818 838 818 852 b 796 894 814 881 808 894 b 779 888 791 894 786 893 b 719 864 760 878 739 871 b 372 602 580 806 459 724 b 229 252 298 498 251 383 b 220 268 225 262 222 264 b 209 302 217 279 213 291 b 75 527 181 387 143 467 b 16 563 58 543 39 573 b 0 539 3 557 0 549 b 12 492 0 524 9 507 b 56 400 19 459 22 425 b 163 269 104 367 138 323 b 238 36 197 194 216 115 b 258 0 242 22 243 0 z',\n        },\n        segno: {\n            x_min: 0,\n            x_max: 798,\n            y_min: -65,\n            y_max: 806,\n            ha: 871,\n            o: 'm 16 -94 b 66 -69 39 -92 53 -85 b 177 59 102 -26 138 17 b 543 456 298 192 420 324 b 726 300 615 420 680 373 b 753 217 744 271 753 243 b 655 112 753 170 719 131 b 599 104 636 107 618 104 b 461 173 544 104 495 128 b 432 190 454 183 444 190 b 409 179 425 190 418 187 b 359 118 390 160 373 141 b 341 72 347 101 341 86 b 373 24 341 56 351 40 b 409 6 384 17 396 10 b 550 -13 454 -12 501 -14 b 599 -6 566 -12 583 -10 b 864 213 720 27 806 104 b 886 300 878 242 886 271 b 857 395 886 331 877 363 b 799 467 840 420 821 445 b 648 572 755 513 704 546 b 1110 1083 802 743 955 914 b 1140 1129 1123 1097 1136 1110 b 1149 1148 1142 1135 1149 1142 b 1145 1153 1149 1149 1148 1152 b 1123 1161 1139 1158 1130 1161 b 1109 1156 1119 1161 1113 1159 b 1089 1138 1102 1151 1094 1145 b 946 988 1040 1089 989 1041 b 595 602 834 855 711 732 l 590 598 l 549 615 b 432 793 462 647 432 723 b 534 888 432 851 474 888 b 671 834 588 888 631 864 b 710 818 684 824 696 818 b 724 821 714 818 719 819 b 809 883 757 834 788 852 b 816 901 814 890 816 896 b 802 923 816 910 812 916 b 706 984 770 945 742 971 b 593 1011 668 998 631 1011 b 516 991 567 1011 541 1005 b 333 799 433 949 380 876 b 302 693 312 765 302 729 b 330 589 302 658 311 624 b 469 488 360 533 415 511 b 485 482 475 487 480 485 b 266 249 412 405 338 327 b 121 88 217 196 170 141 b 9 -65 78 40 37 -7 b 0 -85 4 -72 0 -79 b 16 -94 0 -91 4 -94 z m 861 536 b 927 575 890 539 909 557 b 965 628 952 598 965 613 b 926 680 965 644 952 658 b 865 713 900 701 883 713 b 805 667 845 713 828 698 b 768 611 791 649 770 631 b 812 564 766 589 798 582 b 861 536 824 550 840 537 z m 251 350 b 363 436 285 348 353 403 b 354 456 366 448 360 452 b 271 518 327 477 298 497 b 243 528 261 526 252 528 b 210 513 232 528 222 523 b 157 454 190 494 176 472 b 141 428 147 444 141 436 b 158 406 141 420 147 413 b 216 361 180 393 197 376 b 245 350 225 356 235 350 z',\n        },\n        coda: {\n            x_min: 0,\n            x_max: 1380,\n            y_min: -196,\n            y_max: 1037,\n            ha: 1233,\n            o: 'm 1028 -282 b 1057 -245 1045 -282 1053 -261 b 1060 -203 1060 -232 1060 -217 b 1063 9 1060 -132 1061 -62 b 1390 194 1192 22 1303 81 b 1531 543 1467 298 1512 415 b 1532 556 1531 547 1532 552 b 1904 559 1656 557 1780 559 b 1950 582 1920 559 1941 569 b 1987 674 1970 609 1987 638 b 1984 698 1987 681 1986 690 b 1950 700 1973 698 1961 700 l 1941 700 l 1545 696 b 1535 776 1545 723 1541 749 b 1103 1113 1477 996 1326 1107 b 1080 1115 1096 1115 1087 1115 b 1081 1322 1080 1184 1080 1253 b 1079 1467 1083 1371 1081 1418 b 1061 1493 1079 1476 1080 1493 l 1060 1493 b 1028 1467 1044 1490 1031 1485 b 1020 1403 1025 1446 1020 1424 b 1017 1110 1020 1305 1018 1208 l 962 1106 b 569 914 808 1087 671 1035 b 451 683 510 844 472 766 l 161 678 b 118 680 148 678 132 680 b 79 670 101 680 86 678 b 0 544 48 636 29 592 l 37 544 l 429 549 b 428 518 428 539 428 528 b 488 285 428 435 458 360 b 681 81 526 192 593 124 b 946 9 763 40 854 19 b 1008 6 966 7 988 6 b 1005 -137 1008 -42 1005 -89 b 1012 -243 1005 -173 1005 -209 b 1028 -282 1015 -258 1011 -282 z m 1074 690 b 1079 935 1077 772 1077 852 b 1326 855 1166 932 1250 909 b 1446 694 1385 814 1426 759 b 1269 693 1387 694 1328 693 b 1074 690 1204 693 1139 691 z m 577 684 b 766 874 618 763 678 828 b 989 932 837 912 913 923 b 1015 933 998 932 1007 933 b 1014 822 1015 896 1014 860 b 1011 688 1012 791 1012 743 z m 1067 184 b 1071 553 1070 307 1068 429 b 1439 556 1194 553 1316 554 b 1437 554 1439 554 1437 554 b 1341 337 1413 478 1387 402 b 1119 192 1286 261 1211 212 b 1067 184 1102 189 1084 186 z m 1008 180 b 660 264 886 181 770 212 b 524 471 570 305 524 374 b 528 524 524 488 526 505 l 533 549 b 792 552 619 550 706 550 b 1009 553 865 553 937 552 b 1008 180 1009 428 1008 288 z',\n        },\n        gClef: {\n            x_min: 0,\n            x_max: 664,\n            y_min: -559,\n            y_max: 1009,\n            ha: 1568,\n            o: 'm 343 -805 b 366 -801 350 -805 357 -804 b 409 -773 383 -795 397 -786 b 582 -328 528 -648 577 -497 b 583 -294 582 -315 583 -294 b 612 -279 583 -294 603 -282 b 747 -197 660 -256 706 -230 b 949 143 857 -109 920 10 b 956 206 955 164 956 186 b 791 384 956 297 906 363 b 704 393 762 390 733 393 b 498 336 632 393 563 374 b 481 325 490 331 481 325 l 444 465 b 442 485 442 472 442 485 b 609 880 442 485 589 746 b 619 996 616 919 619 958 b 613 1084 619 1027 618 1056 b 534 1387 599 1188 560 1286 b 482 1453 527 1417 517 1453 b 422 1407 456 1453 438 1428 b 305 1063 348 1305 312 1188 b 304 1002 304 1043 304 1022 b 338 654 304 886 323 769 b 343 629 338 645 341 636 b 144 356 278 537 206 451 b 23 144 101 288 53 220 b 0 20 7 107 0 63 b 82 -210 0 -69 30 -160 b 207 -288 112 -239 160 -271 b 410 -328 274 -312 340 -328 b 474 -324 431 -328 452 -327 l 491 -321 b 491 -341 491 -321 492 -334 b 402 -585 475 -428 454 -513 b 294 -668 374 -622 348 -664 b 271 -693 278 -670 271 -680 b 274 -708 271 -698 272 -703 b 302 -775 282 -730 292 -753 b 343 -805 311 -795 325 -805 z m 400 717 b 382 922 389 786 382 854 b 481 1286 382 1047 408 1169 b 507 1125 498 1233 507 1179 b 500 1040 507 1097 504 1068 b 400 717 481 927 455 818 z m 252 -135 b 196 -121 232 -134 215 -127 b 117 -69 158 -108 127 -94 b 111 -32 112 -58 111 -45 b 117 19 111 -16 114 1 b 130 56 118 27 127 52 b 324 337 186 156 253 246 l 384 416 l 395 384 b 416 291 406 348 416 291 b 350 213 416 291 376 239 b 243 -42 278 143 243 55 b 251 -117 243 -66 246 -91 b 252 -135 252 -122 252 -127 z m 563 -91 b 510 168 552 3 530 78 b 513 192 508 179 508 186 b 624 202 550 199 586 202 b 730 192 660 202 694 199 b 850 141 773 183 816 176 b 858 134 852 138 855 135 b 595 -121 801 19 716 -68 l 569 -131 z m 410 -160 b 311 -147 360 -160 311 -147 b 307 -98 311 -147 307 -127 b 314 -33 307 -79 308 -56 b 429 131 328 36 377 85 b 441 138 433 135 438 138 b 449 122 446 138 448 132 b 490 -131 462 37 484 -46 b 490 -153 491 -140 490 -153 b 410 -160 490 -153 452 -163 z',\n        },\n        cClef: {\n            x_min: 0,\n            x_max: 731,\n            y_min: -543,\n            y_max: 543,\n            ha: 1086,\n            o: 'm 131 -782 b 141 -755 138 -782 140 -773 b 147 -490 143 -667 145 -577 b 160 207 150 -258 153 -24 b 168 618 164 344 158 481 b 81 768 173 690 132 732 b 45 782 66 778 55 782 b 3 740 26 782 13 768 b 0 724 1 736 0 730 l 1 710 b 4 596 4 672 4 634 l 4 382 b 9 102 4 288 4 196 b 17 -301 13 -32 10 -166 l 17 -672 b 50 -736 17 -701 27 -720 b 109 -772 69 -749 91 -759 b 131 -782 120 -778 127 -782 z m 615 -770 b 881 -684 710 -770 801 -739 b 1020 -395 986 -612 1020 -510 b 1017 -334 1020 -374 1018 -354 b 769 -62 1007 -209 896 -75 b 746 -60 762 -60 755 -60 b 639 -73 710 -60 675 -69 b 524 -109 598 -79 560 -92 b 528 -36 526 -85 528 -60 b 527 -4 528 -26 528 -14 b 528 39 527 10 528 24 b 526 99 528 59 527 79 b 592 94 549 95 570 94 b 648 99 611 94 629 95 b 912 157 744 94 844 117 b 1053 377 1009 215 1053 284 b 1050 425 1053 393 1053 409 b 914 665 1037 521 986 602 b 717 753 855 717 791 753 b 626 734 688 753 658 747 l 462 665 b 347 500 374 628 347 580 b 350 449 347 484 348 468 b 392 419 353 428 367 416 b 492 438 425 425 459 428 b 541 498 524 448 541 468 b 540 514 541 503 541 508 b 537 546 537 524 537 536 b 573 639 537 580 550 611 b 606 657 582 649 593 657 l 609 657 b 716 622 647 652 684 647 b 834 372 801 556 834 469 b 831 323 834 356 832 338 b 743 187 825 266 795 217 b 710 176 732 180 720 176 b 694 179 704 176 700 177 b 527 223 638 193 582 206 b 495 229 516 228 505 229 b 454 220 481 229 468 225 b 395 189 432 213 415 200 b 363 180 384 186 374 181 b 348 168 356 179 348 176 b 340 161 343 167 340 164 b 347 150 340 157 343 154 b 356 147 348 148 353 147 b 364 92 361 130 363 111 b 369 -37 367 49 369 6 b 363 -154 369 -76 367 -115 b 357 -236 360 -183 357 -210 b 376 -264 357 -253 361 -259 b 456 -289 402 -284 429 -289 b 521 -282 478 -289 500 -285 b 549 -255 537 -279 546 -271 b 598 -177 556 -225 577 -202 b 622 -164 605 -168 613 -164 b 636 -167 626 -164 631 -166 b 749 -225 678 -177 714 -199 b 848 -405 814 -276 848 -337 b 824 -507 848 -436 840 -471 b 657 -657 792 -582 730 -625 b 608 -668 638 -664 622 -668 b 534 -602 572 -668 547 -645 b 513 -575 530 -589 523 -575 b 507 -576 510 -575 508 -575 b 478 -582 497 -580 488 -582 b 405 -570 454 -582 428 -570 b 389 -572 399 -570 395 -570 l 363 -572 b 321 -575 348 -572 333 -569 l 321 631 b 323 662 323 641 323 652 b 315 716 323 681 321 698 b 304 736 314 723 317 736 l 302 736 b 281 716 294 734 285 729 b 275 665 276 700 275 683 l 275 382 b 276 99 275 288 275 193 b 279 -170 278 10 276 -81 b 284 -399 282 -246 284 -323 b 282 -629 284 -475 282 -553 b 289 -721 282 -660 289 -690 b 300 -736 289 -727 291 -736 b 312 -724 307 -736 310 -730 b 321 -667 323 -706 321 -687 l 321 -632 l 328 -644 l 340 -657 b 510 -757 386 -707 445 -740 b 615 -770 546 -766 580 -770 z',\n        },\n        fClef: {\n            x_min: 0,\n            x_max: 776,\n            y_min: -496,\n            y_max: 216,\n            ha: 712,\n            o: 'm 402 -706 b 804 -405 592 -678 716 -566 b 876 -53 861 -298 874 -183 b 868 33 876 -32 873 1 b 560 311 845 217 723 311 b 524 310 549 311 536 311 b 131 134 373 297 239 242 b 17 -29 84 86 37 39 b 9 -89 12 -50 9 -71 b 112 -238 9 -154 43 -206 b 124 -243 117 -239 120 -242 b 186 -261 145 -255 166 -261 b 268 -228 215 -261 242 -249 b 351 -59 325 -181 351 -124 b 343 10 351 -36 348 -13 b 340 36 341 19 340 27 b 409 105 340 75 363 102 b 441 107 420 107 431 107 b 624 36 510 107 573 86 b 744 -200 688 -27 724 -109 b 747 -230 747 -210 747 -222 b 717 -323 747 -264 736 -292 b 608 -445 688 -370 654 -410 b 307 -541 518 -513 415 -541 l 213 -541 b 39 -521 154 -541 96 -539 b 0 -552 17 -514 0 -531 b 1 -564 0 -556 0 -560 b 17 -611 6 -580 10 -596 b 101 -694 35 -648 50 -684 b 288 -714 164 -707 225 -714 b 402 -706 325 -714 363 -711 z m 1018 92 b 1080 118 1041 91 1068 96 b 1117 219 1099 150 1117 180 b 1113 252 1117 229 1116 240 b 1045 288 1102 297 1068 276 b 1017 262 1028 297 1024 274 b 984 124 989 220 996 170 b 1008 91 979 108 986 91 z m 972 -281 b 1070 -148 1024 -279 1070 -210 b 1025 -105 1070 -105 1045 -112 b 989 -127 1004 -96 998 -114 b 949 -249 963 -164 963 -209 b 969 -281 943 -265 949 -281 z',\n        },\n        unpitchedPercussionClef1: {\n            x_min: 0,\n            x_max: 379.13761966945304,\n            y_min: -250,\n            y_max: 250,\n            ha: 500,\n            o: 'm 481 -360 b 507 -357 491 -360 500 -360 b 546 -295 541 -346 547 -325 b 536 79 543 -170 540 -46 b 523 311 533 157 534 235 b 475 359 518 340 508 359 b 425 360 459 359 442 360 b 400 359 416 360 409 360 b 337 294 348 353 340 347 l 337 -73 b 336 -264 337 -137 337 -200 b 343 -294 336 -274 338 -284 b 481 -360 359 -330 431 -360 z m 144 -341 b 207 -320 167 -341 189 -331 b 217 -301 215 -315 217 -308 b 210 -262 217 -289 210 -275 b 228 187 212 -112 209 37 b 228 287 228 220 229 253 b 174 353 228 336 222 343 b 120 359 157 357 138 359 b 48 357 96 359 72 356 b 17 323 29 357 19 344 b 7 120 16 255 9 187 b 6 -109 6 43 6 -33 l 6 -204 b 0 -251 6 -220 0 -235 b 3 -269 0 -256 0 -262 b 127 -340 24 -330 79 -328 b 144 -341 132 -341 138 -341 z',\n        },\n        '6stringTabClef': {\n            x_min: 0,\n            x_max: 438,\n            y_min: -768,\n            y_max: 767,\n            ha: 1535,\n            o: 'm 369 438 b 374 439 370 438 372 438 b 384 462 383 444 384 452 l 384 474 b 390 697 386 547 390 622 b 373 1002 390 799 390 901 l 533 1002 b 560 1001 541 1004 552 1001 b 573 1007 567 1001 572 1002 b 546 1050 579 1025 559 1038 b 536 1056 543 1053 539 1053 b 324 1104 472 1102 397 1104 b 72 1090 238 1104 154 1099 b 55 1093 66 1090 60 1092 b 37 1073 46 1093 37 1089 b 60 1045 37 1061 48 1051 b 203 1001 105 1022 151 1001 b 233 1004 213 1001 223 1002 b 246 1005 238 1004 243 1005 b 272 975 264 1005 272 996 l 272 965 b 258 596 264 842 265 719 b 315 474 253 540 272 504 l 343 455 b 369 438 351 448 357 438 z m 114 -320 b 127 -304 120 -320 124 -315 b 171 -174 141 -261 158 -219 b 222 -135 179 -147 196 -137 b 426 -122 289 -131 359 -128 b 498 -164 462 -120 482 -127 b 628 -301 521 -226 575 -264 b 631 -288 631 -295 631 -291 b 628 -269 631 -281 629 -276 b 569 -134 616 -220 589 -179 b 408 225 514 -14 462 107 b 314 357 384 274 351 318 b 278 380 298 372 288 379 b 251 351 268 380 261 372 b 4 -209 156 171 75 -17 b 0 -228 1 -215 0 -222 b 19 -258 0 -240 7 -249 b 102 -314 45 -279 75 -294 b 114 -320 107 -318 111 -320 z m 425 6 b 360 20 403 17 382 20 b 274 14 331 20 302 14 l 246 14 l 340 206 b 425 6 369 137 395 75 z m 245 -1106 b 281 -1104 256 -1106 269 -1106 b 511 -888 400 -1094 511 -1035 b 454 -688 511 -814 504 -744 b 448 -678 449 -685 448 -681 b 454 -667 448 -675 449 -671 b 504 -497 503 -619 507 -559 b 324 -288 500 -383 436 -308 b 295 -287 314 -287 304 -287 l 282 -287 b 115 -330 223 -287 168 -307 b 94 -366 102 -336 94 -348 l 94 -370 b 96 -435 96 -392 96 -413 b 73 -858 89 -576 71 -717 b 78 -919 73 -878 78 -899 b 72 -950 78 -930 76 -940 b 63 -992 66 -965 63 -978 b 66 -1015 63 -999 65 -1008 b 173 -1104 84 -1106 84 -1106 b 245 -1106 197 -1104 220 -1104 z m 161 -622 b 147 -618 156 -622 151 -621 b 140 -600 141 -612 140 -606 b 144 -564 140 -589 144 -575 b 143 -554 144 -560 144 -557 l 143 -546 b 220 -451 144 -467 143 -465 b 278 -445 239 -446 259 -444 b 418 -497 328 -445 376 -461 b 429 -516 426 -504 429 -510 b 415 -533 429 -521 423 -527 b 219 -608 357 -579 287 -590 b 215 -609 217 -608 216 -609 b 161 -622 197 -609 177 -622 z m 154 -953 b 130 -933 135 -953 130 -948 l 130 -865 l 128 -865 b 135 -788 130 -838 124 -808 b 203 -769 145 -769 180 -776 b 259 -762 223 -765 242 -762 b 441 -852 330 -762 386 -805 b 449 -867 446 -858 449 -863 b 436 -884 449 -874 444 -878 b 318 -942 402 -914 363 -935 b 154 -953 264 -950 209 -953 z',\n        },\n        timeSig0: {\n            x_min: 20,\n            x_max: 513,\n            y_min: -358.159536277652,\n            y_max: 359,\n            ha: 717.159536277652,\n            o: 'm 341 -516 b 420 -510 367 -516 395 -514 b 675 -338 533 -494 622 -448 b 737 -92 716 -256 734 -171 b 739 -35 739 -73 739 -53 b 680 305 739 86 720 207 b 400 517 622 449 537 517 b 337 514 380 517 359 517 b 289 507 321 511 305 513 b 91 317 192 477 127 412 b 29 9 50 212 29 108 b 217 -458 29 -157 88 -312 b 341 -516 251 -494 291 -518 z m 412 -452 b 359 -425 393 -452 376 -444 b 187 14 242 -301 179 -158 b 268 334 193 127 212 235 b 387 448 295 383 330 428 b 406 452 395 451 400 452 b 428 444 413 452 420 449 b 517 324 471 413 497 372 b 586 -29 560 222 586 86 b 556 -271 586 -112 585 -193 b 468 -422 536 -327 508 -377 b 412 -452 449 -442 431 -452 z',\n        },\n        timeSig1: {\n            x_min: 20,\n            x_max: 283,\n            y_min: -364,\n            y_max: 366,\n            ha: 730,\n            o: 'm 264 -524 b 357 -510 297 -524 325 -516 b 374 -490 369 -508 374 -501 b 380 -438 376 -472 380 -455 l 406 246 b 408 301 408 265 408 282 b 400 445 408 348 405 396 b 288 527 395 491 338 527 b 253 520 276 527 264 526 b 240 508 249 517 245 513 b 49 409 192 445 127 413 b 29 396 33 408 29 403 b 32 380 29 392 30 386 b 59 363 36 366 49 364 b 164 348 95 356 130 348 b 222 357 183 348 203 351 b 238 361 228 360 233 360 b 252 334 248 361 252 353 b 243 59 252 242 249 150 b 219 -490 229 -124 233 -307 b 264 -524 217 -516 232 -524 z',\n        },\n        timeSig2: {\n            x_min: 20,\n            x_max: 660.4636303241031,\n            y_min: -378.7201231608281,\n            y_max: 382,\n            ha: 760.720123160828,\n            o: 'm 99 -543 b 130 -533 111 -550 121 -540 b 255 -448 168 -501 213 -475 b 338 -425 282 -431 310 -425 b 392 -431 356 -425 374 -426 b 485 -462 423 -438 454 -451 b 648 -497 540 -482 595 -497 b 834 -441 711 -497 773 -480 b 950 -242 906 -395 958 -334 b 942 -210 950 -230 950 -215 b 912 -220 932 -204 920 -213 b 861 -264 894 -235 877 -248 b 775 -317 835 -289 808 -305 b 675 -334 742 -328 708 -334 b 510 -295 619 -334 563 -318 b 372 -264 465 -278 420 -264 b 305 -272 350 -264 328 -266 b 331 -242 318 -256 324 -249 b 490 -73 386 -187 438 -131 b 675 340 595 43 664 180 b 677 369 677 350 677 360 b 556 536 677 461 638 508 b 468 550 526 546 497 550 b 297 508 409 550 353 533 b 111 354 220 475 168 412 b 29 197 65 308 29 261 b 32 164 29 187 29 176 b 29 140 33 157 29 147 b 43 125 29 132 32 125 b 73 147 55 125 65 138 b 86 163 79 153 82 158 b 238 320 134 219 183 272 b 425 389 292 367 360 389 b 575 341 480 389 531 373 b 606 298 590 330 606 317 b 600 278 606 292 603 285 b 501 107 576 217 544 158 b 304 -104 439 33 372 -35 b 111 -356 230 -180 167 -265 b 84 -446 92 -386 84 -415 b 86 -481 84 -458 85 -469 b 88 -514 88 -491 88 -503 b 99 -543 89 -526 91 -537 z',\n        },\n        timeSig3: {\n            x_min: 19.824321427094187,\n            x_max: 540,\n            y_min: -392,\n            y_max: 392,\n            ha: 784,\n            o: 'm 216 -540 b 354 -564 264 -556 310 -564 b 605 -465 445 -564 530 -530 b 729 -161 697 -383 729 -275 b 724 -82 729 -135 727 -108 b 589 95 716 -1 670 62 b 523 114 567 102 546 108 b 750 418 606 213 677 315 b 778 503 769 444 778 472 b 773 540 778 514 776 527 b 750 564 769 557 762 564 b 736 562 746 564 742 563 b 641 552 704 553 672 552 b 402 554 562 552 481 554 l 346 554 b 84 546 258 554 170 554 b 36 501 55 543 40 531 b 29 412 30 472 32 442 b 52 384 27 393 32 384 l 56 384 b 210 392 107 389 158 392 l 602 392 b 354 108 523 285 445 192 b 246 -65 300 58 246 12 b 252 -108 246 -78 248 -92 l 252 -111 b 264 -141 251 -122 251 -135 b 291 -132 274 -145 284 -140 b 425 -72 328 -95 377 -84 b 475 -65 442 -68 459 -65 b 592 -108 517 -65 557 -79 b 645 -179 615 -125 645 -147 b 642 -194 645 -184 644 -189 b 485 -376 616 -278 569 -344 b 361 -399 444 -392 402 -399 b 151 -340 289 -399 219 -376 b 88 -275 122 -323 98 -310 b 71 -249 86 -268 85 -249 b 63 -251 68 -249 66 -249 b 36 -288 48 -255 36 -266 b 55 -423 33 -336 45 -377 b 101 -482 60 -448 78 -468 b 216 -540 138 -504 174 -526 z',\n        },\n        timeSig4: {\n            x_min: 20,\n            x_max: 633.0785282750762,\n            y_min: -489.59088556716864,\n            y_max: 491.18559127100053,\n            ha: 980.7764768381692,\n            o: 'm 608 -704 b 641 -684 622 -708 634 -696 b 667 -602 660 -660 662 -631 b 685 -190 683 -465 680 -327 l 685 -176 b 831 -127 736 -166 783 -148 b 912 0 901 -94 913 -76 b 886 53 912 36 904 52 b 848 40 877 53 864 49 l 838 36 b 687 -13 789 14 739 -3 b 681 177 687 50 684 114 b 672 338 678 230 677 285 b 654 373 671 350 672 373 b 622 340 636 373 624 361 b 615 262 621 314 613 288 b 619 -22 616 167 619 72 b 569 -22 602 -23 585 -23 b 305 -3 481 -16 395 -1 b 210 -9 274 -3 242 -4 b 301 163 242 52 268 108 b 513 552 377 288 459 412 b 536 652 526 585 536 618 b 533 683 536 662 534 672 b 520 707 531 691 531 707 b 487 693 508 708 494 704 b 474 668 482 684 477 677 b 384 490 454 603 418 547 b 253 281 343 419 295 351 b 73 -13 194 181 145 78 b 29 -108 50 -42 29 -72 b 37 -147 29 -121 32 -134 b 50 -186 43 -160 50 -173 b 68 -216 52 -207 56 -215 b 92 -207 73 -216 82 -213 b 288 -166 156 -180 220 -166 b 556 -186 377 -166 467 -180 b 586 -189 566 -187 576 -187 b 616 -186 596 -189 606 -189 b 606 -432 613 -268 612 -350 b 596 -625 603 -495 596 -559 b 598 -670 596 -641 596 -655 b 608 -704 598 -683 596 -700 z',\n        },\n        timeSig5: {\n            x_min: 19.663871085403297,\n            x_max: 583,\n            y_min: -389,\n            y_max: 389,\n            ha: 778,\n            o: 'm 132 -536 b 249 -560 168 -553 209 -559 b 507 -462 351 -560 454 -514 b 677 -183 588 -384 642 -289 b 694 -85 688 -150 694 -117 b 540 138 694 12 642 94 b 422 173 501 154 462 167 b 400 187 408 174 400 177 b 405 202 400 190 402 196 b 428 284 416 228 426 255 b 469 312 431 307 442 312 b 757 372 569 312 662 343 b 840 490 821 392 840 432 b 812 560 840 540 834 560 b 763 546 801 560 785 556 b 757 543 762 546 759 544 b 465 484 665 505 570 484 b 396 484 452 484 425 487 b 353 454 377 482 366 474 b 281 300 323 405 304 351 b 245 164 262 255 245 212 b 246 144 245 158 246 151 b 233 63 249 115 243 89 b 225 35 228 50 225 40 b 264 14 225 22 236 19 b 445 -26 325 7 387 0 b 569 -151 501 -52 547 -89 b 575 -180 573 -161 575 -170 b 527 -275 575 -217 547 -245 b 347 -367 484 -334 419 -367 b 261 -351 318 -367 289 -363 b 95 -300 206 -333 154 -307 b 55 -321 73 -297 65 -302 b 29 -468 29 -367 40 -419 b 56 -505 26 -482 36 -500 b 132 -536 82 -514 108 -524 z',\n        },\n        timeSig6: {\n            x_min: 20,\n            x_max: 565,\n            y_min: -363,\n            y_max: 363,\n            ha: 726,\n            o: 'm 390 -518 b 621 -458 469 -507 549 -494 b 814 -134 753 -390 814 -281 b 652 59 814 -16 750 58 b 580 48 629 59 606 55 b 233 -334 392 -9 276 -138 b 115 -228 181 -314 143 -278 b 98 -160 104 -206 98 -183 b 107 -109 98 -144 101 -127 b 167 37 124 -59 145 -12 b 508 340 236 189 347 292 b 575 353 530 347 553 353 b 648 327 600 353 625 346 b 665 320 654 321 661 320 b 687 336 674 320 681 325 b 703 405 697 359 703 382 b 684 472 703 429 697 451 b 593 523 664 504 631 521 b 576 521 588 523 582 523 b 297 403 472 508 380 465 b 115 177 217 344 164 264 b 29 -121 60 82 29 -17 b 53 -278 29 -173 36 -225 b 226 -497 82 -374 131 -454 b 347 -523 265 -514 305 -523 b 390 -518 361 -523 376 -521 z m 351 -357 b 312 -351 337 -356 320 -363 b 325 -315 304 -340 320 -327 b 543 -120 373 -222 448 -158 b 622 -104 570 -108 596 -102 b 717 -132 655 -104 687 -112 b 740 -167 732 -143 740 -153 b 730 -196 740 -176 737 -184 b 563 -321 690 -258 634 -300 b 359 -357 497 -341 428 -354 z',\n        },\n        timeSig7: {\n            x_min: 20.3617407597707,\n            x_max: 592,\n            y_min: -345,\n            y_max: 345,\n            ha: 690,\n            o: 'm 253 -497 b 318 -485 276 -497 297 -487 b 366 -441 348 -482 360 -468 b 487 -104 390 -323 433 -210 b 835 403 580 82 701 246 b 852 436 847 416 852 428 b 815 467 852 451 840 461 b 762 474 798 471 779 474 b 674 445 732 474 701 465 b 603 410 652 431 628 420 b 383 360 533 379 459 360 b 200 435 315 360 249 382 b 88 494 168 469 131 485 b 66 497 81 495 73 497 b 33 484 52 497 39 492 b 50 436 22 469 39 451 b 295 310 114 360 199 324 b 406 301 331 304 369 301 b 593 324 468 301 530 308 b 585 307 589 314 588 310 b 265 -249 451 137 338 -46 b 207 -442 242 -312 223 -377 b 204 -462 206 -449 204 -456 b 253 -497 204 -487 220 -497 z',\n        },\n        timeSig8: {\n            x_min: 20,\n            x_max: 504.15101530718516,\n            y_min: -428,\n            y_max: 428,\n            ha: 856,\n            o: 'm 265 -616 b 289 -615 274 -616 281 -616 b 710 -271 492 -592 657 -485 b 726 -148 721 -229 727 -187 b 585 108 726 -48 687 42 b 572 127 576 114 573 120 b 576 144 572 132 575 138 b 598 301 590 196 598 249 b 586 413 598 338 593 376 b 356 616 559 531 467 616 b 233 582 317 616 275 606 b 29 233 101 505 29 384 b 104 9 29 153 46 72 b 189 -48 127 -16 160 -27 b 92 -158 141 -73 114 -114 b 37 -343 63 -217 50 -279 b 33 -390 35 -359 33 -374 b 265 -616 33 -524 148 -616 z m 258 105 b 124 148 215 105 167 117 b 96 196 105 163 96 177 b 99 217 96 202 96 209 b 197 384 120 281 151 337 b 350 451 242 429 297 451 b 516 364 412 451 472 422 b 530 331 523 354 530 343 l 530 327 l 530 320 b 468 151 520 261 507 200 b 419 122 455 135 442 125 b 258 105 370 117 320 105 z m 328 -438 b 158 -276 233 -436 160 -359 b 166 -239 158 -264 161 -252 b 230 -157 176 -203 202 -179 b 367 -72 274 -125 320 -98 b 448 -49 396 -56 423 -49 b 562 -118 491 -49 528 -72 b 611 -251 590 -157 611 -199 b 569 -341 611 -288 595 -318 b 328 -438 500 -402 416 -432 z',\n        },\n        timeSig9: {\n            x_min: 20,\n            x_max: 494,\n            y_min: -421,\n            y_max: 421,\n            ha: 842,\n            o: 'm 235 -606 b 361 -564 275 -606 318 -593 b 619 -229 487 -482 566 -366 b 706 127 664 -114 694 4 b 711 233 708 163 711 197 b 700 346 711 271 708 308 b 389 606 658 517 530 606 b 351 605 376 606 364 606 b 56 272 171 586 56 441 b 96 98 56 216 69 156 b 334 -53 144 -3 238 -53 b 544 36 408 -53 484 -24 b 652 176 586 78 622 124 b 631 71 645 141 639 105 b 467 -302 599 -63 562 -196 b 271 -442 412 -364 354 -422 b 225 -448 255 -446 239 -448 b 95 -305 148 -448 98 -395 b 89 -255 95 -288 94 -271 b 73 -233 86 -246 85 -233 b 52 -248 65 -233 56 -239 b 29 -317 42 -271 30 -291 b 49 -448 29 -361 40 -405 b 235 -606 69 -541 144 -606 z m 340 104 b 144 209 264 108 194 141 b 127 258 132 225 127 240 b 137 297 127 271 130 284 b 366 449 184 396 269 449 b 517 408 415 449 467 436 b 595 348 546 392 572 372 b 616 305 608 336 616 321 b 609 281 616 298 613 289 b 340 104 557 184 477 104 z',\n        },\n        timeSigCommon: {\n            x_min: 20,\n            x_max: 585,\n            y_min: -298,\n            y_max: 294.49658092772603,\n            ha: 592.496580927726,\n            o: 'm 444 -405 b 829 -45 626 -346 740 -207 b 842 26 842 -23 842 1 b 821 58 842 39 841 58 b 795 40 811 58 802 48 b 765 3 785 29 773 16 b 469 -223 690 -104 596 -183 b 354 -242 431 -235 392 -242 b 180 -177 292 -242 235 -223 b 135 -99 154 -157 140 -131 b 132 -59 134 -85 132 -72 b 141 7 132 -37 135 -16 b 449 274 189 160 297 243 b 477 278 459 276 468 276 b 546 203 517 278 539 253 b 517 157 550 177 533 166 b 485 143 507 153 497 143 l 482 143 b 467 148 478 143 472 144 b 374 183 438 170 406 181 b 264 118 333 183 292 161 b 238 48 246 92 238 69 b 261 -9 238 29 245 10 b 383 -73 287 -39 337 -73 b 412 -68 392 -73 402 -72 b 631 164 526 -27 586 59 b 649 252 644 193 649 222 b 636 328 649 278 645 304 b 504 423 615 400 579 429 b 242 318 408 415 317 387 b 29 -158 104 190 29 33 b 30 -176 29 -164 29 -170 b 115 -364 42 -246 52 -315 b 307 -429 177 -410 240 -429 b 444 -405 351 -429 397 -420 z',\n        },\n        timeSigCutCommon: {\n            x_min: 20,\n            x_max: 695,\n            y_min: -687.0379164869064,\n            y_max: 687,\n            ha: 1374.0379164869064,\n            o: 'm 564 -989 b 595 -945 585 -991 589 -963 l 599 -922 b 605 -628 600 -824 603 -726 l 609 -399 b 878 -251 706 -363 798 -320 b 996 -85 932 -204 976 -153 b 1001 -63 998 -78 1001 -71 b 989 -46 1001 -56 998 -49 b 978 -43 985 -45 982 -43 b 950 -59 968 -43 959 -49 b 733 -216 894 -132 815 -177 b 611 -259 694 -235 652 -249 b 616 -20 612 -179 615 -99 b 680 29 642 -7 665 9 b 698 43 685 36 690 40 b 870 251 792 82 840 160 b 877 294 874 265 877 279 b 818 410 877 338 855 382 b 683 458 779 442 730 448 b 625 468 664 462 644 465 l 625 514 b 638 958 626 662 636 811 b 626 989 638 979 635 989 b 603 981 621 989 613 986 b 422 840 534 945 481 888 b 412 805 412 832 413 818 b 426 713 410 773 420 743 b 445 678 429 690 435 678 b 474 691 452 678 461 683 b 563 755 503 710 530 732 b 564 724 564 740 564 733 b 559 469 563 639 560 554 b 462 454 526 469 494 464 b 112 143 302 399 199 281 b 33 -94 66 71 45 -10 b 29 -148 30 -112 29 -131 b 105 -351 29 -223 52 -291 b 359 -455 171 -426 258 -451 b 517 -431 409 -451 464 -446 l 539 -422 l 539 -477 b 533 -739 536 -563 539 -651 b 530 -824 531 -768 530 -795 b 546 -948 530 -865 533 -907 b 564 -989 552 -962 543 -989 z m 410 -288 b 193 -197 328 -288 253 -264 b 141 -60 160 -161 141 -108 b 157 6 141 -35 147 -12 b 259 158 189 58 217 112 b 438 291 311 215 364 266 b 528 305 468 301 498 305 b 554 304 537 305 546 304 b 553 212 554 274 554 242 b 426 115 498 199 446 164 b 416 68 419 99 416 84 b 425 12 416 49 420 30 b 474 -39 432 -17 448 -32 b 513 -43 487 -42 498 -43 b 547 -40 524 -43 536 -42 l 543 -272 b 461 -285 516 -278 488 -281 b 410 -288 444 -287 426 -288 z m 694 197 b 668 203 685 197 677 199 b 621 216 654 210 638 215 b 622 294 622 242 622 268 b 706 268 651 287 678 278 b 746 235 721 261 734 249 b 752 222 749 230 752 226 b 743 213 752 219 749 215 b 694 197 727 206 711 197 z',\n        },\n        timeSigPlus: {\n            x_min: 0,\n            x_max: 661,\n            y_min: -358,\n            y_max: 358,\n            ha: 716,\n            o: 'm 605 -516 b 629 -490 624 -516 629 -507 b 628 -475 629 -485 628 -481 b 613 -131 624 -405 616 -174 b 612 -96 612 -114 612 -96 l 647 -98 b 897 -115 730 -99 814 -109 b 940 -89 919 -117 935 -109 b 952 -24 946 -69 952 -46 b 948 9 952 -14 950 -3 b 912 39 942 26 933 37 b 609 60 822 48 609 60 b 616 392 609 60 608 291 b 567 488 619 436 605 467 b 511 516 550 498 531 514 b 498 511 507 516 503 514 b 478 446 475 501 480 469 b 467 150 474 348 469 249 b 465 59 465 121 465 59 l 372 49 b 73 14 272 36 173 24 b 49 13 65 13 56 13 b 0 -33 9 13 0 6 b 60 -141 0 -117 6 -140 b 112 -135 73 -141 91 -140 b 413 -102 213 -125 314 -112 b 464 -98 441 -99 464 -98 l 464 -145 b 477 -456 464 -249 468 -353 b 526 -510 478 -488 491 -507 b 589 -513 546 -511 569 -510 b 605 -516 595 -514 600 -516 z',\n        },\n        timeSigPlusSmall: {\n            x_min: 0,\n            x_max: 418,\n            y_min: -197,\n            y_max: 199,\n            ha: 396,\n            o: 'm 301 -284 b 330 -238 320 -284 324 -255 b 348 -46 350 -176 341 -111 b 374 -20 351 -27 356 -23 b 481 -17 409 -16 445 -17 b 566 -9 510 -17 537 -16 b 602 3 579 -7 602 -16 b 566 29 602 19 582 24 b 526 33 553 32 539 33 b 384 39 478 36 432 39 b 356 62 363 39 356 42 l 356 68 b 359 177 359 104 359 141 l 359 251 b 341 287 359 264 361 285 b 311 255 324 287 314 272 b 310 228 311 246 310 236 l 301 69 b 275 39 301 49 295 39 l 271 39 b 210 40 251 40 230 40 b 167 39 196 40 181 40 b 89 40 141 37 115 40 b 24 30 68 40 46 37 b 0 17 17 27 0 30 l 0 13 b 27 -17 3 0 7 -13 b 91 -22 49 -22 71 -22 b 153 -22 115 -22 137 -20 l 275 -22 b 295 -40 289 -22 295 -27 l 295 -48 b 288 -235 288 -109 287 -171 b 287 -264 288 -243 287 -253 b 301 -284 287 -275 289 -284 z',\n        },\n        timeSigMinus: {\n            x_min: 0,\n            x_max: 662,\n            y_min: -54,\n            y_max: 55,\n            ha: 109,\n            o: 'm 39 -78 b 49 -76 42 -78 45 -76 b 452 -75 94 -75 272 -75 b 861 -76 632 -75 814 -76 b 953 -20 927 -79 953 -66 b 948 27 953 -7 950 9 b 946 37 948 30 948 35 b 896 79 940 63 929 79 b 471 78 827 78 648 78 l 42 78 b 0 37 14 78 0 69 b 23 -66 0 0 17 -32 b 39 -78 24 -75 32 -76 z',\n        },\n        timeSigParensRight: {\n            x_min: 0,\n            x_max: 274.26483738379414,\n            y_min: -722.6326530612245,\n            y_max: 725,\n            ha: 1447.6326530612246,\n            o: 'm 37 -1038 b 69 -1031 48 -1044 59 -1038 b 88 -1015 76 -1027 82 -1021 b 164 -886 120 -976 147 -933 b 333 -351 233 -711 292 -534 b 395 118 366 -204 399 -59 b 389 245 392 144 392 194 b 120 996 369 521 265 766 b 68 1044 99 1030 84 1044 b 19 988 50 1044 36 1024 b 0 922 7 965 0 945 b 20 858 0 901 6 881 b 259 215 141 660 236 449 b 271 -1 266 143 271 71 b 252 -239 271 -82 265 -161 b 148 -667 228 -384 183 -524 b 39 -1009 120 -785 66 -893 b 33 -1031 37 -1017 33 -1024 b 37 -1038 33 -1034 35 -1037 z',\n        },\n        timeSigParensRightSmall: {\n            x_min: 0,\n            x_max: 154.4025307335204,\n            y_min: -422,\n            y_max: 422,\n            ha: 844,\n            o: 'm 43 -608 b 60 -598 48 -608 53 -605 b 117 -511 82 -572 102 -543 b 222 23 193 -350 219 -177 b 213 166 225 55 216 109 b 115 531 206 294 174 416 b 45 603 99 562 76 588 b 30 608 39 606 35 608 b 10 598 23 608 17 603 b 0 546 3 590 0 570 b 23 451 0 507 9 458 b 102 351 66 429 84 390 b 167 42 150 252 167 148 b 163 -49 167 12 166 -19 b 35 -449 151 -192 121 -330 b 14 -504 22 -467 14 -485 b 17 -527 14 -511 16 -520 l 30 -590 b 43 -608 33 -603 37 -608 z',\n        },\n        timeSigParensLeft: {\n            x_min: 0.5555555555555556,\n            x_max: 399.6216117372966,\n            y_min: -728,\n            y_max: 728,\n            ha: 1456,\n            o: 'm 562 -1048 b 573 -1043 566 -1048 570 -1047 b 553 -988 582 -1025 564 -1004 b 472 -884 527 -952 497 -920 b 210 -354 366 -717 275 -541 b 148 -6 170 -240 148 -124 b 160 148 148 45 153 96 b 315 678 189 331 242 508 b 431 901 350 755 380 834 b 459 950 451 926 461 939 b 435 995 459 962 451 972 b 364 1048 405 1034 383 1048 b 305 996 343 1048 325 1028 b 127 624 226 881 174 753 b 1 30 56 432 9 235 b 1 -32 1 9 0 -12 b 180 -629 13 -245 92 -438 b 363 -936 230 -739 298 -835 b 526 -1041 402 -995 448 -1041 b 562 -1048 537 -1040 552 -1048 z',\n        },\n        timeSigParensLeftSmall: {\n            x_min: 0,\n            x_max: 173.45497224367904,\n            y_min: -405,\n            y_max: 404,\n            ha: 809,\n            o: 'm 197 -583 b 222 -553 212 -582 219 -566 b 229 -497 226 -534 229 -516 b 213 -425 229 -472 225 -448 b 102 -177 173 -344 132 -262 b 62 30 78 -111 58 -42 b 91 183 66 82 75 134 b 215 426 118 271 156 356 b 249 552 246 465 252 505 b 230 582 249 563 246 582 b 197 563 219 582 206 576 b 71 356 144 500 105 429 b 0 50 26 259 3 158 b 13 -112 4 -3 7 -58 b 176 -559 29 -275 105 -416 b 196 -583 180 -569 186 -583 z',\n        },\n        noteheadDoubleWhole: {\n            x_min: -0.4444444444444444,\n            x_max: 614.1875,\n            y_min: -223.03296670127517,\n            y_max: 223,\n            ha: 446.0329667012752,\n            o: 'm 35 -321 b 62 -266 58 -318 58 -288 l 62 -194 b 63 50 62 -114 63 -32 b 60 189 63 96 63 143 b 43 300 59 226 60 265 b 29 321 40 308 39 321 l 26 321 b 0 292 13 318 0 310 b 0 248 0 278 -1 262 b 6 147 4 215 6 181 b 4 48 6 114 4 81 b 6 0 4 32 6 16 b 7 -36 7 -12 7 -24 l 7 -52 b 6 -156 7 -86 6 -121 b 19 -275 6 -196 9 -236 b 35 -321 23 -291 16 -323 z m 847 -314 b 871 -288 860 -315 867 -300 b 884 -187 881 -255 886 -222 b 876 115 878 -86 876 14 b 877 255 876 161 876 209 b 868 291 877 268 873 279 b 855 304 867 301 863 304 b 844 301 852 304 848 304 b 822 265 825 292 822 278 b 824 251 822 259 822 255 b 822 170 822 225 822 197 l 822 -20 b 835 -284 827 -86 825 -186 b 847 -314 837 -295 835 -311 z m 757 -291 b 793 -171 796 -255 792 -212 b 795 -49 795 -131 795 -91 b 786 207 795 36 791 121 b 779 240 786 217 783 229 b 766 258 776 246 776 258 b 762 256 765 258 763 256 b 739 236 752 253 740 252 b 733 177 737 216 732 197 b 737 20 737 125 739 73 l 737 -107 b 740 -202 737 -138 739 -170 b 757 -291 740 -230 743 -261 z m 128 -261 b 144 -251 135 -264 141 -256 b 158 -203 156 -236 157 -220 b 161 -137 161 -181 161 -158 b 157 30 161 -81 157 -26 b 158 76 157 45 157 60 l 158 101 b 156 225 158 141 158 183 b 137 253 156 235 154 253 l 134 253 b 109 222 120 251 109 242 b 104 91 108 179 104 134 b 108 -58 104 42 109 -9 b 107 -105 108 -73 108 -89 b 105 -127 107 -112 107 -120 b 118 -245 105 -167 114 -204 b 128 -261 118 -252 121 -259 z m 488 -242 b 693 -79 595 -249 685 -166 l 693 -55 b 690 0 693 -36 691 -17 b 540 187 684 84 621 164 b 449 200 508 196 480 200 b 210 104 363 200 282 163 b 186 56 196 92 186 76 b 207 -82 186 9 192 -37 b 300 -204 225 -132 248 -181 b 488 -242 356 -229 415 -240 z m 490 -88 b 449 -86 477 -88 464 -88 b 287 -56 399 -85 341 -78 b 258 -33 275 -52 258 -48 b 282 -7 258 -20 272 -13 b 458 43 340 23 399 43 b 580 14 497 43 537 35 b 618 -20 606 1 619 -9 b 592 -58 618 -30 609 -42 b 490 -88 562 -82 528 -88 z',\n        },\n        noteheadWhole: {\n            x_min: 0,\n            x_max: 380.16649762501584,\n            y_min: -186.17102907059297,\n            y_max: 165,\n            ha: 351.17102907059297,\n            o: 'm 547 40 b 223 -268 543 -151 367 -259 b 102 -233 180 -271 143 -248 l 62 -216 b 0 -127 22 -197 0 -166 b 6 -91 0 -115 1 -104 b 122 141 33 -9 69 71 b 327 238 170 204 249 238 b 514 158 397 238 467 212 b 547 40 544 125 549 84 z m 248 -107 b 384 -63 295 -102 341 -88 b 426 -23 402 -53 415 -40 b 435 3 432 -14 435 -6 b 413 32 435 14 428 24 b 301 73 376 49 343 73 b 272 69 291 73 282 72 b 121 -35 207 53 157 20 b 111 -58 117 -42 111 -50 b 125 -75 111 -65 115 -71 b 248 -107 164 -89 202 -107 z',\n        },\n        noteheadHalf: {\n            x_min: 0,\n            x_max: 334,\n            y_min: -174,\n            y_max: 175,\n            ha: 349,\n            o: 'm 480 56 b 167 -251 478 -115 331 -251 b 94 -242 143 -251 118 -248 b 9 -141 43 -229 20 -192 b 0 -68 3 -115 0 -91 b 284 249 0 95 127 200 b 304 252 289 251 297 252 b 481 78 374 252 481 170 b 480 56 481 71 481 63 z m 213 -102 b 399 6 274 -81 341 -48 b 402 17 400 7 402 13 b 399 27 402 22 400 26 b 311 94 373 53 353 88 b 292 95 305 95 300 95 b 130 27 230 95 181 55 b 69 -62 98 9 62 -29 b 161 -98 76 -98 128 -91 b 213 -102 174 -101 186 -101 z',\n        },\n        noteheadBlack: {\n            x_min: 0,\n            x_max: 334.04644433966797,\n            y_min: -164,\n            y_max: 164,\n            ha: 328,\n            o: 'm 112 -233 b 141 -236 122 -235 131 -236 b 481 104 279 -236 485 -48 b 403 222 477 141 478 192 b 334 236 382 232 359 236 b 1 -59 180 236 13 59 b 0 -85 1 -68 0 -76 b 112 -233 0 -157 32 -215 z',\n        },\n        noteheadXWhole: {\n            x_min: 0,\n            x_max: 506,\n            y_min: -143.0823320899293,\n            y_max: 144,\n            ha: 287.0823320899293,\n            o: 'm 53 -206 b 219 -163 117 -207 170 -196 b 314 -102 249 -141 282 -122 b 377 -63 334 -89 356 -76 b 514 -161 422 -96 468 -128 b 576 -196 534 -174 552 -196 b 589 -193 580 -196 585 -196 b 688 -174 625 -194 657 -181 b 711 -158 698 -171 711 -173 b 696 -143 711 -151 701 -147 b 503 -9 632 -98 567 -52 l 485 4 b 704 145 559 49 634 95 b 729 164 711 150 729 151 l 729 168 b 696 196 726 183 710 193 b 621 207 671 202 645 207 b 528 177 589 207 557 200 b 373 76 480 140 426 108 b 246 164 330 104 287 132 b 122 206 207 193 167 203 b 66 192 102 207 72 207 b 99 147 58 173 85 158 b 274 14 157 102 215 58 b 16 -164 184 -42 96 -98 b 0 -179 12 -168 0 -170 b 1 -183 0 -180 0 -183 b 26 -204 6 -193 12 -204 b 53 -206 37 -206 49 -206 z m 611 -177 b 376 -9 530 -118 452 -63 l 164 -143 b 104 -164 147 -154 130 -164 b 82 -161 96 -164 89 -164 b 230 -65 137 -125 183 -95 l 347 12 b 327 26 341 16 334 22 l 196 121 b 163 147 184 128 173 137 b 140 173 154 154 140 163 b 143 180 140 176 141 177 b 179 166 154 194 167 174 l 372 27 l 566 153 b 613 171 580 161 596 170 b 635 160 624 171 635 174 b 621 147 635 153 626 150 l 429 24 b 400 6 419 19 409 13 b 569 -117 456 -35 513 -75 b 611 -177 588 -130 608 -143 z',\n        },\n        noteheadXHalf: {\n            x_min: 0,\n            x_max: 421,\n            y_min: -145.51844828189743,\n            y_max: 151,\n            ha: 296.51844828189746,\n            o: 'm 490 -209 b 539 -207 505 -207 521 -207 b 606 -209 560 -207 583 -209 b 598 -196 602 -203 600 -199 l 406 -19 l 540 130 b 547 144 546 135 547 140 b 536 156 547 148 543 153 b 488 192 518 166 503 176 b 416 217 471 209 444 217 b 323 180 380 217 344 204 l 264 115 b 239 138 256 122 248 131 b 33 197 180 196 108 200 b 3 186 23 197 6 193 b 19 154 -1 174 10 163 b 171 12 69 107 120 59 b 19 -157 120 -45 69 -101 b 0 -177 14 -163 0 -166 b 1 -181 0 -179 0 -180 b 39 -203 9 -197 22 -203 l 186 -203 b 197 -202 190 -202 193 -200 l 213 -202 b 262 -180 228 -202 246 -199 l 314 -122 b 490 -209 363 -170 412 -216 z m 435 -148 b 291 -30 379 -112 337 -69 l 213 -118 b 190 -137 207 -125 202 -137 b 145 -111 173 -130 154 -127 b 160 -79 137 -98 151 -88 b 238 16 184 -48 212 -16 b 141 99 204 43 173 72 l 124 117 b 115 132 121 121 115 127 b 118 137 115 134 117 137 b 141 132 127 147 135 138 l 253 36 b 347 150 285 75 315 112 b 370 164 354 160 363 163 b 403 145 382 164 393 156 b 416 127 412 140 416 132 b 405 102 416 118 412 111 l 307 -10 b 413 -105 343 -42 379 -73 b 435 -148 425 -115 436 -125 z',\n        },\n        noteheadXBlack: {\n            x_min: 0,\n            x_max: 289,\n            y_min: -156,\n            y_max: 157,\n            ha: 313,\n            o: 'm 23 -225 b 69 -204 40 -223 56 -219 b 137 -131 92 -180 115 -157 l 209 -50 b 377 -197 264 -101 321 -148 b 403 -210 384 -203 393 -210 l 408 -210 b 416 -192 416 -207 416 -199 l 416 -186 b 403 -148 416 -171 413 -158 b 344 -81 384 -125 367 -101 b 252 -1 312 -55 282 -29 b 377 157 297 49 340 101 b 402 202 387 170 402 187 b 395 217 402 207 400 213 b 376 226 389 223 382 226 b 334 192 360 226 346 204 b 206 42 289 143 248 94 b 96 161 167 81 131 120 b 60 193 86 174 76 189 b 33 206 52 196 42 206 b 22 199 29 206 26 204 b 10 173 14 190 10 181 b 22 147 10 166 14 157 b 148 7 62 98 104 52 b 164 -7 154 1 158 -3 b 10 -189 111 -66 55 -122 b 0 -212 6 -197 0 -203 b 1 -217 0 -213 0 -216 b 23 -225 4 -226 14 -222 z',\n        },\n        noteheadCircleX: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -179,\n            y_max: 175.12551922594866,\n            ha: 354.12551922594866,\n            o: 'm 99 -210 b 236 -258 137 -242 186 -258 b 418 -183 305 -258 374 -230 b 495 33 475 -120 495 -48 b 494 66 495 45 494 55 b 302 252 487 183 405 256 b 181 243 262 249 222 248 b 46 171 128 236 79 219 b 0 19 14 127 0 73 b 99 -210 0 -68 35 -156 z m 245 42 l 124 156 b 200 176 145 166 170 173 b 337 183 245 181 291 184 b 377 176 351 183 364 180 b 245 42 333 131 288 86 z m 392 -99 l 285 3 l 400 121 b 418 154 409 131 418 140 b 465 50 448 130 465 94 b 405 -112 462 -17 439 -73 z m 89 -120 b 48 0 56 -82 48 -42 b 89 112 48 35 59 76 b 109 101 96 111 102 108 l 210 7 l 187 -17 b 89 -120 151 -53 125 -82 z m 176 -183 b 127 -163 158 -179 141 -171 l 252 -32 l 372 -144 b 233 -189 334 -173 285 -189 b 176 -183 215 -189 196 -187 z',\n        },\n        noteheadTriangleUpWhole: {\n            x_min: 0,\n            x_max: 366,\n            y_min: -145,\n            y_max: 138,\n            ha: 283,\n            o: 'm 504 -209 b 527 -199 520 -209 527 -206 b 520 -180 527 -193 524 -187 b 459 -94 501 -151 480 -122 b 279 170 400 -6 341 82 b 242 199 266 190 253 199 b 206 167 230 199 219 189 b 10 -145 140 63 76 -42 b 0 -171 3 -156 0 -164 b 23 -200 0 -183 9 -192 b 55 -209 33 -206 45 -209 z m 202 -161 b 176 -137 183 -163 176 -156 b 187 -62 176 -111 179 -86 b 253 95 206 -10 228 42 b 337 -132 307 24 334 -49 b 311 -161 338 -153 334 -161 b 256 -160 294 -161 275 -160 b 202 -161 238 -160 220 -161 z',\n        },\n        noteheadTriangleUpHalf: {\n            x_min: 0,\n            x_max: 341.0833130378007,\n            y_min: -159,\n            y_max: 159,\n            ha: 318,\n            o: 'm 458 -226 b 478 -229 462 -223 469 -229 b 490 -222 482 -229 487 -228 b 477 -184 495 -207 484 -196 b 281 176 410 -65 346 56 b 238 225 269 194 261 213 b 225 229 232 226 228 228 b 209 215 217 229 213 225 b 4 -153 141 92 73 -30 b 0 -170 1 -158 0 -164 b 12 -189 0 -177 4 -183 b 66 -215 27 -202 43 -213 b 458 -226 194 -217 323 -222 z m 151 -167 b 298 75 204 -89 240 -1 b 301 82 300 76 301 79 l 357 -22 b 344 -43 353 -27 350 -37 b 285 -163 317 -79 312 -127 b 278 -170 282 -166 279 -167 z',\n        },\n        noteheadTriangleUpBlack: {\n            x_min: 0,\n            x_max: 346,\n            y_min: -149,\n            y_max: 149,\n            ha: 298,\n            o: 'm 481 -215 b 498 -209 487 -215 492 -215 b 482 -173 498 -194 488 -184 l 284 173 b 259 202 278 184 269 194 b 229 215 248 210 238 215 b 196 189 216 215 206 206 l 13 -150 b 3 -168 9 -156 6 -163 b 0 -180 1 -173 0 -177 b 12 -197 0 -187 4 -193 b 63 -213 29 -206 45 -213 b 481 -215 203 -213 343 -215 z',\n        },\n        noteheadDiamondWhole: {\n            x_min: 0,\n            x_max: 271,\n            y_min: -132,\n            y_max: 132,\n            ha: 264,\n            o: 'm 230 -177 b 256 -190 240 -186 249 -190 b 281 -173 265 -190 272 -184 b 382 -29 314 -124 347 -76 b 390 -10 387 -22 390 -14 b 376 12 390 -3 386 4 b 173 177 308 66 240 121 b 144 190 166 183 160 190 b 98 153 127 186 112 170 b 13 40 69 115 42 76 b 0 13 4 29 0 20 b 22 -19 0 3 7 -9 b 230 -177 92 -69 163 -122 z m 279 -128 b 261 -122 274 -134 266 -127 l 66 30 b 56 45 59 35 56 39 b 62 56 56 48 59 52 b 122 122 91 101 105 122 b 194 76 138 122 158 107 l 320 -26 b 336 -50 325 -32 336 -35 b 279 -128 318 -75 300 -102 z',\n        },\n        noteheadDiamondHalf: {\n            x_min: 0,\n            x_max: 295,\n            y_min: -148,\n            y_max: 148,\n            ha: 296,\n            o: 'm 228 -207 b 245 -213 235 -210 240 -213 b 264 -203 252 -213 258 -210 b 415 -46 314 -150 364 -98 b 425 -27 420 -40 425 -35 b 416 -10 425 -22 422 -16 b 217 200 350 60 284 131 b 194 213 212 207 204 213 b 170 196 181 213 177 203 b 14 33 118 143 68 86 b 0 7 4 23 0 16 b 17 -20 0 -1 6 -10 b 118 -114 52 -50 82 -85 b 228 -207 156 -144 184 -184 z m 209 -157 b 134 -69 177 -138 141 -115 b 130 -26 131 -55 130 -40 b 215 148 130 42 160 99 b 225 156 217 151 220 156 b 230 153 226 156 228 156 b 323 -26 276 104 321 55 b 298 -75 324 -42 315 -59 b 265 -109 287 -86 276 -99 b 209 -157 245 -125 228 -167 z',\n        },\n        noteheadDiamondBlack: {\n            x_min: 0,\n            x_max: 310,\n            y_min: -146,\n            y_max: 146,\n            ha: 292,\n            o: 'm 266 -210 b 289 -194 278 -209 284 -200 b 406 -76 330 -156 367 -115 b 446 -23 433 -49 446 -36 b 412 29 446 -10 435 3 b 405 36 409 30 408 33 b 252 196 354 89 304 143 b 225 210 243 204 235 210 b 204 202 219 210 212 209 b 10 24 141 141 75 82 b 0 9 4 19 0 14 b 9 -6 0 4 3 0 l 232 -192 b 266 -210 242 -200 256 -204 z',\n        },\n        noteheadSquareWhite: {\n            x_min: 0,\n            x_max: 350,\n            y_min: -131,\n            y_max: 131,\n            ha: 262,\n            o: 'm 468 -189 b 485 -187 474 -189 480 -189 b 500 -176 495 -187 500 -183 b 498 -168 500 -174 498 -171 b 497 -166 498 -167 497 -167 l 498 -164 b 504 -154 503 -163 504 -158 b 503 -138 504 -150 503 -144 l 503 -135 l 503 -94 b 492 66 500 -45 494 10 b 488 135 492 89 488 112 b 484 150 488 141 485 145 b 482 154 482 151 482 153 b 429 189 472 177 456 189 b 53 184 304 186 179 186 l 39 184 b 33 181 36 183 35 183 b 12 160 20 181 12 177 b 0 -109 9 71 4 -19 b 19 -137 0 -125 7 -134 b 23 -151 19 -141 20 -145 b 85 -187 37 -173 55 -187 b 468 -189 212 -187 340 -187 z m 246 -125 l 63 -125 b 66 -111 65 -122 66 -117 b 73 72 69 -50 71 10 l 73 130 b 88 128 78 128 82 128 b 148 130 108 130 128 130 b 271 128 190 130 230 128 l 271 130 l 420 130 b 428 20 425 92 425 56 l 436 -127 l 246 -127 z',\n        },\n        noteheadSquareBlack: {\n            x_min: 0,\n            x_max: 342,\n            y_min: -129.98961937716263,\n            y_max: 132.44444444444446,\n            ha: 262.4340638216071,\n            o: 'm 217 190 b 439 186 304 190 372 190 b 467 180 448 184 458 183 b 492 145 484 176 492 167 b 490 -124 490 56 490 -33 b 488 -141 490 -130 488 -135 b 456 -170 488 -163 478 -168 b 118 -183 344 -176 230 -181 b 29 -184 89 -183 60 -192 b 0 -148 4 -180 0 -168 b 1 29 1 -89 1 -30 l 1 156 b 36 190 3 187 4 190 b 217 190 102 192 168 190 z',\n        },\n        noteheadParenthesis: {\n            x_min: -70.190112022022,\n            x_max: 329,\n            y_min: -196,\n            y_max: 201,\n            ha: 397,\n            o: 'm 344 -279 b 382 -262 361 -288 370 -272 b 405 -233 390 -255 399 -245 b 474 9 455 -158 468 -73 b 416 228 474 78 448 174 b 364 282 403 249 387 271 b 344 289 359 285 350 288 b 331 279 338 289 333 287 b 325 248 328 269 325 258 b 338 225 325 238 328 229 b 412 138 379 207 396 174 b 445 1 433 92 445 45 b 346 -217 445 -81 410 -154 b 336 -252 340 -223 336 -238 b 344 -279 336 -265 338 -276 z m 19 -274 b 35 -282 24 -279 30 -281 b 49 -265 42 -282 46 -275 b 52 -243 50 -256 52 -249 b 36 -210 52 -230 49 -220 b -60 -59 -16 -173 -35 -114 b -73 9 -69 -39 -73 -16 b 33 223 -73 92 -24 189 b 50 265 43 229 50 249 b 33 288 50 278 46 289 b 4 272 23 288 14 275 b -9 261 0 269 -4 265 b -101 23 -58 193 -105 124 b -37 -206 -104 -52 -75 -130 b 19 -274 -23 -232 -6 -255 z',\n        },\n        noteheadParenthesisRight: {\n            x_min: -30,\n            x_max: 82,\n            y_min: -199.08429092881173,\n            y_max: 206,\n            ha: 405.0842909288117,\n            o: 'm -17 -282 b 24 -264 -6 -297 12 -272 b 60 -219 40 -253 52 -236 b 117 1 96 -150 112 -75 b 118 16 118 6 118 12 b 109 73 118 36 112 55 b 4 279 99 154 68 226 b -23 297 -4 287 -13 297 b -37 289 -27 297 -32 294 b -43 266 -42 285 -43 276 b -32 225 -43 251 -37 229 b 84 -7 48 170 84 82 b 32 -184 84 -69 65 -132 b -10 -222 22 -200 4 -209 b -24 -258 -20 -232 -24 -245 b -17 -282 -24 -266 -22 -276 z',\n        },\n        noteheadParenthesisLeft: {\n            x_min: 0,\n            x_max: 106,\n            y_min: -197,\n            y_max: 197,\n            ha: 394,\n            o: 'm 134 -284 b 138 -281 135 -284 137 -284 b 145 -268 144 -278 145 -274 l 144 -253 b 107 -180 138 -225 121 -204 b 42 13 71 -120 42 -56 b 49 73 42 32 43 52 b 137 210 62 128 95 171 b 153 255 147 219 153 239 b 145 278 153 265 151 274 b 130 284 140 281 135 284 b 98 259 117 284 108 268 b 0 37 35 203 1 131 b 118 -268 9 -69 53 -173 b 134 -284 121 -274 127 -284 z',\n        },\n        augmentationDot: {\n            x_min: 0,\n            x_max: 96,\n            y_min: -57,\n            y_max: 57,\n            ha: 114,\n            o: 'm 13 -82 b 16 -81 14 -82 14 -82 b 105 -73 46 -76 75 -76 b 131 -48 121 -72 131 -60 b 138 26 134 -24 138 0 b 137 48 138 33 138 40 b 108 82 134 71 125 82 b 95 81 104 82 99 82 b 33 71 75 78 53 75 b 4 46 20 68 6 62 b 0 -66 1 9 0 -29 b 13 -82 0 -73 1 -82 z',\n        },\n        tremolo1: {\n            x_min: -158,\n            x_max: 156.19381479578487,\n            y_min: -88,\n            y_max: 88,\n            ha: 176,\n            o: 'm -206 -127 b -194 -125 -203 -127 -199 -127 b 173 -36 -72 -94 50 -65 b 220 16 202 -29 215 -12 b 225 50 223 30 225 45 b 216 107 226 76 222 91 b 194 127 210 120 204 127 b 183 124 192 127 189 127 l -192 33 b -226 -9 -213 27 -222 14 b -228 -32 -226 -16 -228 -23 b -222 -108 -228 -58 -222 -82 b -206 -127 -222 -120 -217 -127 z',\n        },\n        flag8thUp: {\n            x_min: 0,\n            x_max: 261,\n            y_min: -819,\n            y_max: 0,\n            ha: 819,\n            o: 'm 265 -1171 b 351 -1035 301 -1130 336 -1087 b 376 -867 369 -979 376 -923 b 367 -755 376 -829 373 -792 b 233 -422 350 -632 311 -520 b 131 -291 199 -379 166 -334 b 65 -125 91 -239 66 -192 b 62 -75 65 -112 62 -91 b 42 0 62 -49 52 -24 l 35 0 b 0 -63 6 -13 0 -36 l 0 -144 b 96 -445 0 -255 29 -356 b 177 -547 124 -478 150 -514 b 308 -831 246 -629 298 -721 b 317 -890 310 -851 317 -871 b 311 -919 317 -900 315 -910 b 256 -1005 297 -950 282 -984 b 228 -1068 233 -1024 228 -1045 b 230 -1106 228 -1080 229 -1093 b 240 -1162 232 -1125 239 -1143 b 251 -1179 242 -1174 246 -1179 b 265 -1171 255 -1179 259 -1176 z',\n        },\n        flag8thDown: {\n            x_min: 0,\n            x_max: 261,\n            y_min: 0,\n            y_max: 819,\n            ha: 819,\n            o: 'm 265 1171 b 251 1179 259 1176 255 1179 b 240 1162 246 1179 242 1174 b 230 1106 239 1143 232 1125 b 228 1068 229 1093 228 1080 b 256 1005 228 1045 233 1024 b 311 919 282 984 297 950 b 317 890 315 910 317 900 b 308 831 317 871 310 851 b 177 547 298 721 246 629 b 96 445 150 514 124 478 b 0 144 29 356 0 255 l 0 63 b 35 0 0 36 6 13 l 42 0 b 62 75 52 24 62 49 b 59 117 62 91 59 104 b 131 291 60 183 91 239 b 233 422 166 334 199 379 b 367 755 311 520 350 632 b 376 867 373 792 376 829 b 351 1035 376 923 369 979 b 265 1171 336 1087 301 1130 z',\n        },\n        flag16thUp: {\n            x_min: 0,\n            x_max: 327.1591498636094,\n            y_min: -819.3972596310256,\n            y_max: 0,\n            ha: 819.3972596310256,\n            o: 'm 415 -1179 b 435 -1168 423 -1182 429 -1174 b 451 -1138 442 -1159 446 -1149 b 465 -1020 464 -1102 467 -1064 b 461 -962 464 -1004 464 -984 b 471 -821 467 -916 472 -870 b 465 -721 472 -791 467 -756 b 415 -520 459 -651 441 -585 b 200 -245 370 -408 284 -327 b 96 -114 160 -206 118 -168 b 75 -24 84 -85 85 -53 b 59 0 72 -16 72 0 b 53 -1 58 0 56 -1 b 27 -32 40 -6 27 -10 b 29 -68 27 -43 29 -55 b 10 -79 20 -69 13 -72 b 1 -109 6 -89 1 -99 b 0 -170 0 -130 0 -148 b 35 -410 0 -252 12 -333 b 258 -793 76 -557 156 -681 b 409 -1158 350 -896 410 -1014 b 415 -1179 409 -1165 405 -1175 z m 413 -816 b 331 -681 392 -769 364 -723 b 145 -420 266 -596 189 -521 b 86 -281 125 -374 102 -330 b 156 -370 105 -312 128 -343 b 318 -539 210 -425 269 -478 b 413 -816 383 -621 420 -713 z',\n        },\n        flag16thDown: {\n            x_min: 0,\n            x_max: 327.1591498636094,\n            y_min: 0,\n            y_max: 819,\n            ha: 819,\n            o: 'm 59 0 b 75 24 72 0 72 16 b 96 114 85 53 84 85 b 200 245 118 168 160 206 b 415 520 284 327 370 408 b 465 721 441 585 459 651 b 471 821 467 756 472 791 b 461 962 472 870 467 916 b 465 1020 464 984 464 1004 b 451 1138 467 1064 464 1102 b 435 1168 446 1149 442 1159 b 418 1179 431 1172 425 1179 l 415 1179 b 408 1169 409 1176 408 1174 b 409 1158 408 1165 409 1161 b 258 793 410 1014 350 896 b 35 410 156 681 76 557 b 0 170 12 333 0 252 l 0 88 b 29 7 0 71 6 23 b 59 0 33 4 58 0 z m 86 281 b 145 420 102 330 125 374 b 331 681 189 521 266 596 b 413 816 364 723 392 769 b 415 791 413 808 415 799 b 318 539 415 698 377 613 b 156 370 269 478 210 425 b 86 281 128 343 105 312 z',\n        },\n        flag32ndUp: {\n            x_min: -0.19862981551275186,\n            x_max: 268.0942440943661,\n            y_min: -849.4710740978672,\n            y_max: 149.0769891455102,\n            ha: 998.5480632433774,\n            o: 'm 323 -1223 b 351 -1198 337 -1227 344 -1210 b 359 -1184 354 -1194 356 -1188 b 386 -999 377 -1122 387 -1060 b 341 -783 386 -927 372 -855 b 330 -736 334 -769 330 -753 b 333 -708 330 -727 330 -717 b 344 -621 340 -678 344 -649 b 341 -579 344 -608 343 -593 b 328 -500 338 -553 328 -526 b 331 -475 328 -491 328 -484 b 347 -370 343 -438 348 -402 b 151 27 348 -212 288 -56 b 53 176 98 59 50 102 b 45 197 53 183 48 192 b 33 215 40 203 40 216 l 30 215 b 6 194 22 212 9 209 b 0 120 3 170 -1 145 b 0 -43 4 65 0 13 b 0 -98 0 -60 1 -79 b 4 -276 0 -157 6 -216 b 7 -456 4 -337 7 -397 b 66 -638 7 -523 22 -585 b 158 -724 94 -671 127 -697 b 318 -1011 246 -801 295 -899 b 321 -1044 321 -1021 321 -1032 b 312 -1152 321 -1080 312 -1116 b 317 -1192 312 -1165 314 -1179 b 323 -1223 320 -1202 311 -1220 z m 285 -376 b 121 -180 249 -289 173 -245 b 91 -105 104 -158 92 -135 b 288 -354 181 -144 288 -269 b 285 -376 288 -363 287 -370 z m 275 -657 b 111 -492 226 -589 163 -547 b 65 -376 78 -456 66 -418 b 71 -323 65 -360 68 -341 b 275 -657 164 -418 265 -504 z',\n        },\n        flag32ndDown: {\n            x_min: -2.800802874905624,\n            x_max: 268.09424409436605,\n            y_min: -169.07698914551014,\n            y_max: 829.4710740978672,\n            ha: 998.5480632433773,\n            o: 'm 323 1194 b 317 1164 311 1191 320 1174 b 312 1123 314 1151 312 1136 b 321 1015 312 1087 321 1051 b 318 982 321 1004 321 992 b 158 696 295 870 246 772 b 66 609 127 668 94 642 b 7 428 22 556 7 494 b 4 248 7 369 4 308 b -1 78 6 187 -10 137 b 0 14 0 59 0 32 l 0 -148 b 6 -223 0 -174 3 -199 b 30 -243 9 -238 22 -240 l 33 -243 b 45 -226 40 -245 40 -232 b 53 -204 48 -220 53 -212 b 151 -56 50 -131 98 -88 b 347 341 288 27 348 183 b 331 446 348 373 343 409 b 328 471 328 455 328 462 b 341 550 328 497 338 524 b 344 592 343 564 344 579 b 333 680 344 621 340 649 b 330 707 330 688 330 698 b 341 755 330 724 334 740 b 386 971 372 827 386 899 b 359 1155 387 1031 377 1093 b 351 1169 356 1159 354 1165 b 323 1194 344 1181 337 1198 z m 275 628 b 71 294 265 475 164 389 b 65 347 68 312 65 331 b 111 464 66 389 78 428 b 275 628 163 518 226 560 z m 285 347 b 288 325 287 341 288 334 b 91 76 288 240 181 115 b 121 151 92 107 104 130 b 285 347 173 216 249 261 z',\n        },\n        flag64thUp: {\n            x_min: -4,\n            x_max: 282,\n            y_min: -823.5430338167067,\n            y_max: 347,\n            ha: 1170.5430338167066,\n            o: 'm 350 -1185 b 380 -1162 364 -1189 374 -1175 b 406 -1022 399 -1119 406 -1071 b 359 -798 406 -945 384 -871 b 348 -756 353 -785 348 -772 b 350 -744 348 -753 350 -749 b 363 -621 356 -704 363 -664 b 360 -580 363 -608 363 -593 b 359 -560 359 -573 359 -567 b 373 -490 359 -536 366 -513 b 393 -346 386 -444 393 -395 b 387 -269 393 -320 390 -294 b 348 -127 382 -219 348 -173 b 351 -104 348 -120 348 -111 b 353 -65 351 -91 353 -78 b 341 37 353 -26 348 6 b 226 215 323 108 278 164 b 86 336 181 258 127 288 b 62 395 72 353 62 370 b 42 481 62 423 55 454 b 27 500 37 488 36 500 b 24 498 26 500 26 500 b -1 480 14 497 1 492 b -6 444 -4 467 -6 455 l -6 435 b -1 341 -1 403 -1 372 l -1 266 b 6 156 -1 230 0 193 b 13 35 12 117 13 75 l 13 -35 b 14 -85 13 -52 14 -68 b 29 -276 19 -150 33 -213 b 20 -448 24 -334 20 -392 b 24 -534 20 -477 22 -505 b 114 -708 30 -605 59 -664 b 197 -780 143 -732 171 -755 b 344 -1153 301 -884 341 -1011 b 343 -1172 344 -1159 343 -1166 b 350 -1185 343 -1176 344 -1182 z m 287 -88 b 62 193 186 -17 79 48 b 229 52 121 144 174 98 b 289 -33 256 29 274 -3 b 295 -56 294 -42 295 -49 b 287 -88 295 -66 292 -76 z m 298 -410 b 118 -235 238 -351 176 -295 b 76 -88 82 -197 78 -147 b 268 -252 137 -153 203 -202 b 330 -360 304 -279 330 -315 b 323 -402 330 -373 327 -387 b 311 -418 318 -413 315 -418 b 298 -410 307 -418 302 -415 z m 300 -691 b 117 -508 243 -616 168 -575 b 82 -408 94 -480 82 -448 b 84 -379 82 -397 82 -387 b 259 -553 135 -451 206 -492 b 301 -667 287 -583 301 -619 b 300 -691 301 -674 301 -683 z',\n        },\n        flag64thDown: {\n            x_min: -5,\n            x_max: 281,\n            y_min: -375,\n            y_max: 795.5430338167066,\n            ha: 1170.5430338167066,\n            o: 'm 348 1145 b 341 1132 343 1142 341 1136 b 343 1113 341 1126 343 1119 b 196 740 340 971 300 844 b 112 668 170 714 141 691 b 23 494 58 624 29 564 b 19 408 20 465 19 436 b 27 236 19 351 23 294 b 13 45 32 173 17 109 b 12 -6 13 27 12 12 l 12 -75 b 4 -196 12 -115 10 -157 b -3 -307 -1 -233 -3 -271 l -3 -382 b -7 -475 -3 -412 -3 -444 l -7 -484 b -3 -520 -7 -495 -6 -507 b 23 -539 0 -533 13 -537 b 26 -540 24 -540 24 -540 b 40 -521 35 -540 36 -528 b 60 -435 53 -494 60 -464 b 85 -376 60 -410 71 -393 b 225 -255 125 -328 180 -298 b 340 -78 276 -204 321 -148 b 351 24 347 -46 351 -14 b 350 63 351 37 350 50 b 347 86 347 71 347 79 b 386 229 347 132 380 179 b 392 305 389 253 392 279 b 372 449 392 354 384 403 b 357 520 364 472 357 495 b 359 540 357 527 357 533 b 361 580 361 553 361 567 b 348 704 361 624 354 664 b 347 716 348 708 347 713 b 357 757 347 732 351 744 b 405 982 383 831 405 904 b 379 1122 405 1031 397 1079 b 348 1145 373 1135 363 1149 z m 298 651 b 300 626 300 642 300 634 b 258 513 300 579 285 543 b 82 338 204 452 134 410 b 81 367 81 347 81 357 b 115 468 81 408 92 439 b 298 651 167 534 242 576 z m 297 370 b 310 377 301 374 305 377 b 321 361 314 377 317 373 b 328 320 325 347 328 333 b 266 212 328 275 302 239 b 75 48 202 161 135 112 b 117 194 76 107 81 157 b 297 370 174 255 236 311 z m 285 48 b 294 16 291 36 294 26 b 288 -7 294 9 292 1 b 228 -92 272 -37 255 -69 b 60 -233 173 -138 120 -184 b 285 48 78 -88 184 -23 z',\n        },\n        flag128thUp: {\n            x_min: 0,\n            x_max: 252,\n            y_min: -804,\n            y_max: 530,\n            ha: 1334,\n            o: 'm 298 -1158 b 328 -1126 312 -1158 320 -1139 b 330 -1116 330 -1123 330 -1119 b 347 -996 343 -1076 347 -1037 b 328 -837 347 -943 338 -890 b 320 -778 324 -816 320 -798 b 330 -733 320 -763 323 -749 b 340 -665 338 -714 337 -688 b 341 -645 340 -660 341 -652 b 333 -534 341 -609 333 -572 b 343 -471 333 -513 334 -492 b 361 -366 356 -436 361 -402 b 331 -202 361 -311 348 -256 b 328 -187 330 -197 328 -193 b 331 -179 328 -184 328 -181 b 363 -55 353 -137 363 -96 b 337 79 363 -12 351 33 b 327 114 333 92 327 104 b 344 144 327 124 331 132 b 359 174 353 150 357 163 b 361 228 360 193 361 210 b 243 517 361 337 325 435 b 147 596 213 546 179 569 b 75 708 111 626 75 655 b 62 744 75 723 68 733 b 50 763 58 752 58 763 b 46 762 49 763 48 762 b 17 742 36 757 22 757 b 0 697 14 726 0 711 b 1 595 0 662 3 631 b 0 469 0 552 0 511 b 1 429 0 456 0 442 b 22 289 6 382 22 337 b 24 128 22 238 24 184 b 22 66 24 108 23 86 b 19 -19 20 37 19 10 b 20 -132 19 -56 20 -95 b 13 -276 20 -180 19 -229 b 9 -359 10 -304 9 -330 b 12 -487 9 -402 12 -445 b 56 -582 12 -526 29 -554 b 197 -742 107 -632 160 -681 b 288 -1100 265 -851 276 -976 b 288 -1122 288 -1107 287 -1115 b 287 -1145 289 -1129 287 -1138 b 298 -1158 287 -1153 288 -1158 z m 304 150 b 75 475 229 256 112 334 b 304 150 233 357 305 287 z m 271 -73 b 127 72 233 -14 179 26 b 81 167 96 98 81 127 b 84 194 81 176 82 184 b 271 -73 148 102 242 39 z m 279 -396 b 132 -223 233 -330 180 -279 b 81 -112 104 -192 81 -156 b 82 -91 81 -105 81 -98 b 279 -396 167 -125 269 -281 z m 249 -609 b 69 -357 197 -520 88 -471 b 249 -609 131 -441 229 -498 z',\n        },\n        flag128thDown: {\n            x_min: -0.8888888888888888,\n            x_max: 252,\n            y_min: -580,\n            y_max: 754,\n            ha: 1334,\n            o: 'm 298 1086 b 287 1073 288 1086 287 1081 b 288 1050 287 1066 289 1057 b 288 1028 287 1043 288 1035 b 197 670 276 904 265 779 b 56 510 160 609 107 560 b 12 415 29 482 12 454 b 9 287 12 373 9 330 b 13 204 9 258 10 232 b 20 60 19 157 20 108 b 19 -53 20 23 19 -16 b 22 -138 19 -82 20 -109 b 24 -200 23 -158 24 -180 b 22 -361 24 -256 22 -310 b 1 -501 22 -409 6 -454 b 0 -541 0 -514 0 -528 b 0 -667 0 -583 -3 -624 b 0 -809 0 -675 -3 -791 b 46 -834 4 -825 36 -829 b 50 -835 48 -834 49 -835 b 62 -816 58 -835 58 -824 b 75 -780 68 -805 75 -795 b 147 -668 75 -727 111 -698 b 243 -589 179 -641 213 -618 b 361 -300 325 -507 361 -409 b 359 -246 361 -282 360 -265 b 344 -216 357 -235 353 -222 b 327 -186 331 -204 327 -196 b 337 -151 327 -176 333 -164 b 363 -17 351 -105 363 -60 b 331 107 363 24 353 65 b 328 115 328 109 328 112 b 331 130 328 121 330 125 b 361 294 348 184 361 239 b 343 399 361 330 356 364 b 333 462 334 420 333 441 b 341 573 333 500 341 537 b 340 593 341 580 340 588 b 330 661 337 616 338 642 b 320 706 323 677 320 691 b 328 765 320 726 324 744 b 347 924 338 818 347 871 b 330 1044 347 965 343 1004 b 328 1054 330 1047 330 1051 b 298 1086 320 1067 312 1086 z m 249 537 b 69 285 229 426 131 369 b 249 537 88 399 197 448 z m 279 324 b 82 19 269 209 167 53 b 81 40 81 26 81 33 b 132 151 81 84 104 120 b 279 324 180 207 233 258 z m 271 1 b 84 -266 242 -111 148 -174 b 81 -239 82 -256 81 -248 b 127 -144 81 -199 96 -170 b 271 1 179 -98 233 -58 z m 304 -222 b 75 -547 305 -359 233 -429 b 304 -222 112 -406 229 -328 z',\n        },\n        accidentalFlat: {\n            x_min: 1,\n            x_max: 209,\n            y_min: -208,\n            y_max: 472,\n            ha: 680,\n            o: 'm 29 -300 b 46 -289 33 -300 39 -297 b 107 -243 65 -274 86 -258 b 301 127 233 -153 301 -30 b 298 186 301 147 301 166 b 190 297 291 256 251 297 b 147 289 177 297 163 294 b 86 265 127 284 107 274 l 85 264 l 85 301 b 91 465 85 356 88 410 b 94 559 91 497 94 527 b 84 651 94 589 91 621 b 66 680 81 661 81 680 l 65 680 b 37 645 49 678 37 665 b 33 523 36 605 32 563 l 33 478 b 26 223 33 393 29 308 b 1 -141 22 101 1 -19 b 17 -287 1 -189 4 -239 b 29 -300 20 -295 23 -300 z m 68 -105 b 76 12 71 -68 72 -29 b 81 107 79 43 81 75 l 86 109 b 171 135 114 121 141 135 b 204 128 181 135 193 132 b 238 92 228 120 239 108 b 230 63 238 84 236 75 b 68 -105 193 -10 132 -59 z',\n        },\n        accidentalNatural: {\n            x_min: 0,\n            x_max: 213.5,\n            y_min: -456,\n            y_max: 462,\n            ha: 918,\n            o: 'm 255 -657 b 281 -624 271 -657 275 -636 b 285 -599 282 -615 285 -608 b 292 -300 288 -500 289 -400 b 289 -161 292 -253 289 -207 b 300 128 292 -65 297 32 b 304 168 300 128 302 150 l 304 173 l 305 190 l 305 199 l 307 225 b 304 259 307 229 310 246 b 272 298 297 274 302 305 b 63 266 204 279 134 272 b 72 514 68 348 72 432 b 71 595 72 541 72 567 b 56 665 71 619 66 642 b 17 579 9 651 17 608 b 3 144 19 433 7 289 b 0 -7 1 94 0 43 b 3 -134 0 -50 1 -92 b 7 -219 3 -163 7 -192 b 35 -251 7 -243 17 -251 b 49 -249 39 -251 43 -251 l 223 -223 l 230 -222 l 230 -359 b 223 -516 230 -410 223 -464 b 236 -619 223 -550 226 -585 b 255 -657 240 -634 236 -657 z m 58 -63 b 55 81 56 -14 53 33 l 56 99 b 85 99 65 99 75 98 b 232 108 134 104 183 107 l 240 109 l 236 66 b 232 -48 235 29 232 -10 b 58 -81 174 -63 115 -73 z',\n        },\n        accidentalSharp: {\n            x_min: -22,\n            x_max: 390,\n            y_min: -384,\n            y_max: 383,\n            ha: 767,\n            o: 'm 202 -553 b 219 -526 213 -552 216 -536 b 226 -471 225 -507 226 -488 b 225 -425 226 -455 225 -441 b 226 -392 225 -415 225 -402 b 233 -305 229 -363 232 -334 l 297 -292 b 331 -469 300 -353 311 -412 b 347 -485 333 -477 338 -485 b 363 -469 356 -487 359 -477 b 374 -418 373 -454 374 -435 b 376 -382 376 -405 376 -393 b 372 -276 376 -347 373 -311 l 455 -259 b 550 -156 534 -243 544 -232 b 550 -109 550 -137 552 -124 b 526 -78 549 -91 541 -78 l 523 -78 b 507 -79 517 -78 513 -78 b 403 -101 474 -88 438 -95 l 379 -105 b 382 -42 380 -85 380 -63 b 384 96 383 4 384 50 b 503 131 425 107 464 118 b 549 173 524 138 543 150 b 562 249 554 199 562 223 b 554 294 562 264 560 279 b 536 315 549 308 544 315 l 533 315 b 517 312 528 315 523 315 b 382 266 472 294 428 279 l 377 344 b 359 531 374 406 372 469 b 348 552 356 539 357 552 l 347 552 l 343 552 b 315 528 331 549 317 544 l 315 501 b 320 249 315 416 318 333 l 243 232 b 239 361 243 275 242 318 b 226 425 238 383 238 403 b 199 359 194 409 199 382 b 193 223 196 312 194 268 b 72 202 153 215 112 209 b 4 118 13 192 4 183 b 10 66 0 102 12 84 b 33 29 7 39 14 30 b 48 32 37 29 42 30 b 187 55 95 39 141 46 l 183 -75 b 176 -145 181 -99 179 -122 b 16 -179 122 -156 69 -166 b -32 -232 -14 -186 -32 -197 b -17 -331 -32 -266 -19 -298 b -1 -356 -17 -347 -13 -354 b 12 -353 1 -356 6 -354 b 167 -320 63 -341 115 -331 b 166 -377 166 -338 166 -357 b 189 -526 166 -428 171 -477 b 202 -553 192 -536 189 -553 z m 240 -132 b 243 -37 242 -101 242 -69 b 245 65 245 -3 245 30 b 315 79 269 69 292 73 b 301 -120 308 13 305 -53 z',\n        },\n        accidentalDoubleSharp: {\n            x_min: 0,\n            x_max: 287,\n            y_min: -159,\n            y_max: 159,\n            ha: 318,\n            o: 'm 84 -229 b 107 -216 91 -229 98 -225 b 200 -125 138 -186 167 -154 b 232 -95 212 -115 222 -105 b 347 -189 271 -125 310 -157 b 370 -200 356 -196 363 -200 b 396 -179 380 -200 389 -192 b 412 -102 410 -154 406 -125 b 377 -27 410 -69 400 -46 l 325 14 b 402 91 350 42 374 68 b 413 127 410 96 413 107 b 382 200 409 148 397 176 b 350 229 370 220 360 229 b 314 210 340 229 328 223 b 274 174 300 199 285 187 b 212 104 252 151 232 128 b 92 187 173 132 132 161 b 78 193 86 192 82 193 b 68 190 75 193 72 193 b 48 179 62 186 53 187 b 40 137 43 168 40 154 b 81 16 40 92 56 32 b 107 -3 89 10 98 4 b 14 -94 76 -32 45 -62 b 0 -124 6 -102 0 -114 b 12 -154 0 -134 3 -144 b 62 -215 26 -176 48 -193 b 84 -229 69 -225 76 -229 z',\n        },\n        accidentalDoubleFlat: {\n            x_min: 0,\n            x_max: 359,\n            y_min: -220,\n            y_max: 446,\n            ha: 666,\n            o: 'm 43 -317 b 72 -301 55 -317 63 -310 b 160 -186 108 -268 134 -226 b 236 -60 186 -145 212 -102 b 233 -131 235 -85 233 -108 b 239 -220 233 -161 235 -190 b 259 -246 240 -233 239 -240 b 301 -228 284 -252 291 -238 b 465 -7 369 -163 416 -85 b 517 173 500 48 517 108 b 451 307 517 229 505 284 b 409 315 436 312 422 315 b 331 287 382 315 356 305 b 311 274 324 282 320 274 l 310 274 l 310 566 b 305 621 310 585 312 603 b 294 642 301 628 305 642 l 292 642 b 264 622 282 641 266 636 b 253 575 259 606 256 590 b 246 418 248 523 246 471 b 248 243 246 360 248 302 l 248 187 b 164 238 220 225 193 238 b 85 213 140 238 112 226 b 84 229 85 220 84 225 b 86 315 85 258 86 287 b 81 528 86 386 82 458 b 71 582 81 547 78 566 b 56 603 66 590 68 603 l 53 603 b 23 580 40 600 26 598 b 19 537 20 566 19 552 b 20 514 19 530 19 521 b 26 390 24 472 26 432 b 14 66 26 282 16 174 b 0 -168 13 -12 0 -91 b 12 -279 0 -206 3 -242 b 30 -314 16 -294 14 -308 b 43 -317 35 -317 39 -317 z m 301 -72 b 302 7 302 -45 302 -19 l 302 86 b 351 158 304 121 321 145 b 383 166 361 163 373 166 b 435 143 402 166 419 157 b 445 127 441 138 445 132 b 441 114 445 122 444 118 b 301 -72 397 49 354 -14 z m 75 -147 b 73 30 75 -86 75 -29 b 118 82 73 62 92 76 b 132 84 124 84 128 84 b 190 52 156 84 174 69 b 193 40 192 49 193 45 b 192 33 193 37 193 35 b 75 -147 157 -30 125 -95 z',\n        },\n        accidentalParensLeft: {\n            x_min: 0,\n            x_max: 130.18934911242604,\n            y_min: -270,\n            y_max: 267.6082500723851,\n            ha: 537.6082500723851,\n            o: 'm 107 -389 b 127 -374 114 -389 120 -384 b 141 -347 132 -367 137 -357 b 151 -294 148 -330 151 -311 b 122 -207 151 -265 141 -236 b 63 -65 94 -164 72 -117 b 59 -10 60 -46 59 -27 b 145 223 59 78 94 153 b 187 354 176 262 189 305 b 177 384 187 364 190 380 b 143 373 166 387 153 383 b 124 354 137 367 130 361 b 0 -35 33 240 0 108 l 0 -92 b 85 -372 4 -193 27 -287 b 107 -389 92 -383 99 -389 z',\n        },\n        accidentalParensRight: {\n            x_min: -0.4444444444444445,\n            x_max: 139,\n            y_min: -275,\n            y_max: 277,\n            ha: 552,\n            o: 'm 58 -396 b 96 -354 75 -396 85 -370 b 200 13 168 -238 200 -111 b 153 268 200 109 184 190 b 49 392 131 320 101 364 b 26 399 40 397 33 399 b 0 366 10 399 0 387 b 0 318 -1 350 0 334 l 0 291 b 27 238 -3 266 7 253 b 143 9 105 180 143 98 b 141 -20 143 -1 143 -10 b 63 -225 135 -92 108 -164 b 36 -307 45 -251 36 -278 b 40 -344 36 -320 37 -331 b 42 -356 42 -347 42 -351 b 58 -396 42 -374 37 -396 z',\n        },\n        accidentalQuarterToneFlatStein: {\n            x_min: 0,\n            x_max: 208,\n            y_min: -240,\n            y_max: 440,\n            ha: 680,\n            o: 'm 272 -346 b 284 -333 278 -346 281 -341 b 300 -187 297 -285 300 -235 b 275 177 300 -65 279 55 b 268 432 272 262 268 347 l 268 477 b 264 599 269 517 265 559 b 236 634 264 619 252 632 l 235 634 b 217 605 220 634 220 615 b 207 513 210 575 207 543 b 210 419 207 481 210 451 b 216 255 213 364 216 310 l 216 217 l 215 219 b 154 243 194 228 174 238 b 111 251 138 248 124 251 b 3 140 50 251 10 210 b 0 81 0 120 0 101 b 194 -289 0 -76 68 -199 b 255 -336 215 -304 236 -320 b 272 -346 262 -343 268 -346 z m 233 -151 b 71 17 168 -105 108 -56 b 63 46 65 29 63 37 b 96 82 62 62 73 73 b 130 89 108 86 120 89 b 215 63 160 89 187 75 l 220 60 b 225 -35 220 29 222 -3 b 233 -151 229 -75 230 -114 z',\n        },\n        accidentalThreeQuarterTonesFlatZimmermann: {\n            x_min: 0,\n            x_max: 422,\n            y_min: -240,\n            y_max: 440,\n            ha: 680,\n            o: 'm 272 -346 b 284 -333 278 -346 281 -341 b 300 -187 297 -285 300 -235 b 275 177 300 -65 279 55 b 268 432 272 262 268 347 l 268 477 b 264 599 269 517 265 559 b 236 634 264 619 252 632 l 235 634 b 217 605 220 634 220 615 b 207 513 210 575 207 543 b 210 419 207 481 210 451 b 216 255 213 364 216 310 l 216 217 l 215 219 b 154 243 194 228 174 238 b 111 251 138 248 124 251 b 3 140 50 251 10 210 b 0 81 0 120 0 101 b 194 -289 0 -76 68 -199 b 255 -336 215 -304 236 -320 b 272 -346 262 -343 268 -346 z m 336 -346 b 353 -336 340 -346 346 -343 b 413 -289 372 -320 393 -304 b 608 81 540 -199 608 -76 b 605 140 608 101 608 120 b 497 251 598 210 557 251 b 454 243 484 251 469 248 b 393 219 433 238 413 228 l 392 217 l 392 255 b 397 419 392 310 395 364 b 400 513 397 451 400 481 b 390 605 400 543 397 575 b 373 634 387 615 387 634 l 372 634 b 344 599 356 632 344 619 b 340 477 343 559 338 517 l 340 432 b 333 177 340 347 336 262 b 308 -187 328 55 308 -65 b 324 -333 308 -235 311 -285 b 336 -346 327 -341 330 -346 z m 233 -151 b 71 17 168 -105 108 -56 b 63 46 65 29 63 37 b 96 82 62 62 73 73 b 130 89 108 86 120 89 b 215 63 160 89 187 75 l 220 60 b 225 -35 220 29 222 -3 b 233 -151 229 -75 230 -114 z m 374 -151 b 383 -35 377 -114 379 -75 b 387 60 386 -3 387 29 l 393 63 b 478 89 420 75 448 89 b 511 82 488 89 500 86 b 544 46 534 73 546 62 b 537 17 544 37 543 29 b 374 -151 500 -56 439 -105 z',\n        },\n        accidentalQuarterToneSharpStein: {\n            x_min: 0,\n            x_max: 300,\n            y_min: -338,\n            y_max: 351,\n            ha: 689,\n            o: 'm 194 -487 b 225 -432 215 -469 223 -452 b 238 -232 229 -366 236 -298 b 377 -199 285 -220 331 -209 b 418 -164 397 -193 410 -181 b 432 -88 428 -138 432 -114 b 412 -42 432 -55 428 -42 b 389 -46 406 -42 399 -43 l 235 -85 b 233 -20 235 -63 233 -42 b 233 105 232 22 233 63 b 312 121 259 111 285 117 b 406 226 390 134 400 145 b 373 284 409 268 402 284 b 344 281 364 284 356 282 b 232 258 307 276 269 266 b 230 308 232 275 232 291 b 210 505 229 374 232 441 b 183 471 189 501 184 490 b 180 406 181 449 180 428 b 184 246 180 353 184 300 b 48 222 140 236 94 228 b 0 168 6 216 0 209 b 7 86 1 141 4 114 b 27 66 9 73 13 66 l 35 66 b 184 94 85 66 135 84 b 187 -1 184 62 186 30 b 190 -96 189 -33 190 -65 l 112 -114 b 35 -213 27 -132 35 -132 b 33 -253 35 -226 35 -240 b 49 -276 33 -269 37 -276 b 62 -275 52 -276 56 -276 l 186 -245 l 186 -256 b 179 -387 180 -300 177 -343 b 194 -487 180 -419 179 -454 z',\n        },\n        accidentalThreeQuarterTonesSharpStein: {\n            x_min: -23,\n            x_max: 388,\n            y_min: -373,\n            y_max: 445,\n            ha: 818,\n            o: 'm 114 -537 b 138 -475 137 -518 138 -495 b 147 -292 138 -413 144 -353 b 212 -278 168 -287 190 -282 b 243 -444 215 -333 225 -389 b 261 -467 248 -454 251 -465 b 281 -446 272 -469 276 -455 b 292 -347 292 -416 288 -384 b 288 -262 289 -320 288 -291 l 374 -245 b 376 -311 374 -266 374 -288 b 390 -456 379 -357 379 -405 b 416 -396 412 -436 415 -418 b 423 -287 420 -360 423 -323 b 422 -235 423 -269 423 -252 b 451 -229 432 -233 441 -232 b 547 -98 524 -215 547 -199 l 547 -89 b 521 -49 546 -59 540 -49 b 497 -52 516 -49 507 -49 b 418 -68 469 -56 444 -63 b 423 52 419 -29 422 12 b 426 140 425 81 425 109 b 495 160 449 145 472 153 b 552 219 526 170 546 189 b 559 279 557 240 553 262 b 530 341 559 324 552 341 b 490 331 520 341 507 338 b 432 311 471 324 452 318 b 449 552 436 392 442 471 b 452 588 451 563 452 575 b 446 622 452 599 451 611 b 436 641 444 629 448 641 b 418 628 428 641 420 636 b 409 602 413 621 410 611 b 386 297 396 501 390 399 b 297 274 356 288 327 281 b 291 403 295 317 294 360 b 274 550 288 452 284 501 b 259 569 271 564 265 569 b 240 559 253 569 248 563 b 230 537 232 554 230 546 l 230 488 b 233 369 230 448 232 409 b 236 261 236 333 238 297 b 156 245 210 255 183 251 b 154 396 154 295 154 346 b 150 416 154 403 153 410 b 140 438 145 423 150 438 l 138 438 b 118 413 128 436 118 428 b 112 354 118 393 114 374 b 109 238 109 315 109 276 b 49 226 89 233 69 230 b 3 163 16 222 3 202 b 7 91 3 138 9 114 b 29 62 7 69 13 62 b 39 63 32 62 35 63 b 104 73 60 66 82 71 b 101 -10 104 46 102 17 l 92 -132 l 10 -150 b -33 -204 -19 -157 -33 -170 b -19 -310 -32 -240 -19 -274 b -6 -324 -19 -321 -13 -324 b 6 -323 -1 -324 1 -324 b 82 -307 32 -317 58 -311 b 81 -376 82 -330 81 -353 b 114 -537 81 -431 94 -484 z m 294 -92 b 297 -37 295 -73 295 -56 b 300 49 300 -9 300 20 l 300 108 b 379 127 325 114 353 120 b 374 -76 376 59 374 -9 b 294 -92 347 -82 320 -86 z m 154 -120 b 157 20 154 -73 156 -26 b 158 82 158 40 158 62 b 230 95 183 86 206 89 b 225 0 229 63 226 32 b 217 -107 223 -35 220 -71 z',\n        },\n        accidentalBuyukMucennebFlat: {\n            x_min: 1.8692317181955784,\n            x_max: 287,\n            y_min: -248,\n            y_max: 432.4720949426819,\n            ha: 680.4720949426819,\n            o: 'm 410 128 b 302 239 403 199 363 239 b 259 232 289 239 275 236 b 199 207 239 226 219 216 l 197 206 l 197 243 l 197 251 b 347 317 248 272 298 295 b 376 347 360 324 372 334 b 389 435 387 376 393 405 b 348 454 384 462 377 465 b 202 387 300 432 251 409 b 203 408 203 395 203 402 l 203 431 b 347 490 252 451 300 469 b 376 517 360 495 372 505 b 389 599 387 546 393 572 b 348 616 384 625 377 628 l 203 556 b 196 593 202 569 199 582 b 179 622 193 603 193 622 l 177 622 b 150 588 161 621 150 608 b 147 533 150 570 148 552 b 29 488 108 517 69 503 b 3 455 12 482 3 472 b 12 353 1 422 9 389 b 145 408 56 372 101 389 b 145 363 145 392 145 377 l 29 315 b 3 281 12 310 3 298 b 12 170 1 245 9 209 l 141 226 b 138 166 140 206 138 186 b 114 -199 134 43 115 -76 b 130 -344 114 -246 117 -297 b 141 -357 132 -353 135 -357 b 158 -347 145 -357 151 -354 b 219 -301 177 -331 199 -315 b 413 69 346 -210 413 -88 b 410 128 413 89 413 108 z m 350 35 b 343 6 350 26 348 17 b 180 -163 308 -69 245 -117 b 189 -46 183 -125 184 -86 b 193 49 192 -14 193 17 l 199 52 b 284 78 226 63 253 78 b 317 71 294 78 305 75 b 350 35 340 62 351 50 z',\n        },\n        accidentalBakiyeFlat: {\n            x_min: 1.8692317181955784,\n            x_max: 287,\n            y_min: -236,\n            y_max: 444,\n            ha: 680,\n            o: 'm 141 -340 b 158 -330 145 -340 151 -337 b 219 -284 177 -314 199 -298 b 413 86 346 -193 413 -71 b 410 145 413 107 413 125 b 302 256 403 216 363 256 b 259 249 289 256 275 253 b 199 225 239 243 219 233 l 197 223 l 197 261 b 199 334 197 285 199 310 b 347 406 249 357 298 382 b 376 439 360 413 372 425 b 390 516 384 465 390 490 b 389 537 390 523 390 530 b 372 564 384 556 382 564 b 348 557 367 564 359 562 b 204 487 300 537 253 510 b 206 518 206 497 206 507 b 196 611 206 549 203 580 b 179 639 193 621 193 639 l 177 639 b 150 605 161 638 150 625 b 145 482 148 564 144 523 l 145 458 b 29 405 107 439 68 420 b 3 366 12 397 3 386 b 12 243 1 325 9 287 b 143 307 56 265 99 285 l 138 183 b 114 -181 134 60 114 -59 b 130 -327 114 -229 117 -279 b 141 -340 132 -336 135 -340 z m 180 -145 b 189 -29 183 -108 184 -69 b 193 66 192 3 193 35 l 199 69 b 284 95 226 81 253 95 b 317 88 294 95 305 92 b 350 52 340 79 351 68 b 343 23 350 43 348 35 b 180 -145 305 -50 245 -99 z',\n        },\n        accidentalKomaSharp: {\n            x_min: 0,\n            x_max: 300,\n            y_min: -338,\n            y_max: 351,\n            ha: 689,\n            o: 'm 194 -487 b 225 -432 215 -469 223 -452 b 238 -232 229 -366 236 -298 b 377 -199 285 -220 331 -209 b 418 -164 397 -193 410 -181 b 432 -88 428 -138 432 -114 b 412 -42 432 -55 428 -42 b 389 -46 406 -42 399 -43 l 235 -85 b 233 -20 235 -63 233 -42 b 233 105 232 22 233 63 b 312 121 259 111 285 117 b 406 226 390 134 400 145 b 373 284 409 268 402 284 b 344 281 364 284 356 282 b 232 258 307 276 269 266 b 230 308 232 275 232 291 b 210 505 229 374 232 441 b 183 471 189 501 184 490 b 180 406 181 449 180 428 b 184 246 180 353 184 300 b 48 222 140 236 94 228 b 0 168 6 216 0 209 b 7 86 1 141 4 114 b 27 66 9 73 13 66 l 35 66 b 184 94 85 66 135 84 b 187 -1 184 62 186 30 b 190 -96 189 -33 190 -65 l 112 -114 b 35 -213 27 -132 35 -132 b 33 -253 35 -226 35 -240 b 49 -276 33 -269 37 -276 b 62 -275 52 -276 56 -276 l 186 -245 l 186 -256 b 179 -387 180 -300 177 -343 b 194 -487 180 -419 179 -454 z',\n        },\n        accidentalKucukMucennebSharp: {\n            x_min: -0.15206251809627475,\n            x_max: 359,\n            y_min: -420,\n            y_max: 343,\n            ha: 763,\n            o: 'm 236 -605 b 262 -543 256 -583 261 -564 b 269 -423 268 -503 269 -464 b 266 -340 269 -396 268 -367 l 361 -318 b 405 -276 384 -312 399 -298 b 413 -189 412 -248 416 -219 b 395 -164 412 -171 409 -164 b 382 -166 392 -164 387 -164 b 264 -193 343 -176 304 -184 b 269 -102 265 -163 268 -132 b 454 -62 331 -89 392 -78 b 501 -23 477 -58 494 -45 b 517 62 511 6 517 33 b 487 112 517 95 513 112 b 471 111 482 112 477 112 b 274 66 406 95 340 81 b 276 138 275 91 276 114 b 350 154 301 144 325 148 b 402 203 377 160 396 176 b 412 284 408 230 412 258 b 392 311 412 302 406 311 b 372 308 386 311 379 310 b 287 291 343 301 314 297 l 295 405 b 298 441 297 416 298 428 b 292 475 298 452 297 464 b 282 494 289 482 294 494 b 264 481 274 494 266 490 b 255 455 259 474 256 464 b 239 282 248 397 243 340 b 148 268 209 278 179 274 b 62 164 62 252 62 253 l 62 132 b 79 108 60 117 65 108 l 86 108 l 230 130 b 229 92 230 118 229 105 b 228 56 228 79 228 68 b 66 20 173 43 120 32 b 0 -59 6 7 3 1 l 0 -138 b 14 -160 -1 -156 4 -160 b 27 -158 19 -160 23 -160 b 222 -112 92 -141 157 -127 b 220 -203 220 -143 220 -173 b 147 -217 196 -207 171 -213 b 89 -288 92 -228 89 -229 b 95 -347 85 -305 96 -325 b 112 -374 92 -366 98 -374 b 125 -373 117 -374 121 -374 l 220 -351 b 222 -458 220 -386 220 -422 b 236 -605 223 -504 225 -552 z',\n        },\n        accidentalKoron: {\n            x_min: 0,\n            x_max: 303,\n            y_min: -462.4598053473055,\n            y_max: 180,\n            ha: 642.4598053473055,\n            o: 'm 59 -665 b 72 -649 69 -662 72 -657 b 69 -626 72 -642 69 -634 b 69 -622 69 -625 69 -624 l 69 -600 b 55 -156 60 -456 68 -311 b 86 -170 66 -166 76 -170 b 112 -163 95 -170 104 -166 b 390 -35 204 -120 298 -78 b 436 -1 409 -27 436 -27 b 396 46 436 22 413 33 l 382 55 b 46 243 271 121 157 179 b 12 259 29 253 17 259 b 0 219 1 259 0 248 b 3 -372 0 22 3 -176 b 6 -616 3 -454 6 -536 b 59 -665 6 -638 40 -671 z m 55 199 b 363 24 156 141 258 84 b 55 -118 259 -24 160 -69 z',\n        },\n        accidentalSori: {\n            x_min: 0,\n            x_max: 434,\n            y_min: -295,\n            y_max: 325,\n            ha: 620,\n            o: 'm 194 -425 b 196 -409 194 -418 196 -413 b 194 -194 196 -337 196 -266 b 364 -127 251 -171 308 -150 b 361 -321 363 -192 364 -256 b 410 -387 360 -357 373 -377 b 413 -373 412 -382 413 -377 b 418 -114 418 -287 418 -200 l 418 -105 b 595 -35 477 -82 536 -59 b 625 0 612 -27 625 -22 b 593 48 624 23 618 39 l 419 117 b 423 370 419 202 423 285 b 426 403 423 382 426 393 b 418 436 426 415 425 426 b 384 468 409 449 399 468 b 369 448 370 468 369 459 b 369 436 369 444 369 441 l 369 428 l 369 423 b 367 138 369 328 367 233 l 353 143 l 192 207 l 192 367 b 173 406 192 383 184 396 b 151 422 167 413 160 422 b 144 420 148 422 147 422 b 137 403 138 416 137 410 l 137 392 l 137 229 b 33 271 102 243 68 256 b 13 276 26 274 19 276 b 0 262 6 276 0 272 b 35 199 1 239 0 212 l 138 160 b 140 -148 138 58 138 -45 b 56 -181 111 -158 84 -170 b 24 -215 35 -189 24 -199 b 29 -235 24 -220 26 -228 b 49 -253 35 -249 42 -253 b 78 -240 59 -253 69 -243 b 140 -216 98 -233 120 -225 l 140 -356 b 194 -425 140 -406 141 -406 z m 194 -125 b 193 138 194 -37 193 50 b 315 89 233 122 275 107 b 366 71 333 84 350 76 b 364 -58 366 27 366 -16 b 194 -125 308 -81 251 -104 z m 419 49 l 526 7 l 485 -10 l 419 -36 z',\n        },\n        articAccentAbove: {\n            x_min: 0,\n            x_max: 425,\n            y_min: 0,\n            y_max: 326,\n            ha: 326,\n            o: 'm 27 1 b 78 12 46 0 62 6 b 347 112 168 45 253 91 b 521 184 409 128 459 167 b 608 259 557 194 589 220 b 612 274 611 265 612 271 b 598 292 612 281 608 287 b 477 347 559 312 518 331 b 176 465 374 384 275 425 b 156 469 168 468 161 469 b 125 456 145 469 137 465 b 53 370 96 432 78 399 b 45 353 48 363 45 357 b 68 333 45 344 52 337 b 360 225 166 298 262 261 b 192 154 302 203 249 171 b 13 36 120 132 53 105 b 0 13 9 29 0 22 l 0 9 b 16 0 3 1 10 0 l 26 0 b 27 1 27 0 27 0 z',\n        },\n        articAccentBelow: {\n            x_min: 0,\n            x_max: 425,\n            y_min: -326,\n            y_max: 0,\n            ha: 326,\n            o: 'm 26 -469 l 27 -469 b 78 -458 46 -469 62 -464 b 347 -357 168 -426 253 -380 b 521 -285 409 -341 459 -302 b 608 -210 557 -276 589 -249 b 612 -196 611 -204 612 -200 b 598 -179 612 -189 608 -183 b 477 -122 559 -157 518 -138 b 176 -4 374 -85 275 -45 b 156 0 168 -1 161 0 b 125 -13 145 0 137 -4 b 53 -99 96 -37 78 -71 b 45 -117 48 -107 45 -112 b 68 -137 45 -125 52 -132 b 360 -245 166 -171 262 -209 b 192 -315 302 -266 249 -300 b 13 -433 120 -337 53 -366 b 0 -456 9 -442 0 -448 l 0 -461 b 16 -469 3 -468 10 -469 z',\n        },\n        articTenutoAbove: {\n            x_min: 0.35192668236256364,\n            x_max: 471.1238660564107,\n            y_min: 0,\n            y_max: 56,\n            ha: 56,\n            o: 'm 137 0 b 197 1 156 0 179 1 b 409 6 268 1 338 6 b 482 4 432 6 459 6 b 556 0 508 3 534 0 b 651 10 588 0 621 3 b 678 27 662 12 678 10 b 654 59 680 45 672 53 b 511 75 606 73 560 73 b 255 81 426 78 341 81 b 160 79 222 81 193 79 l 36 79 b 1 71 24 78 7 85 b 19 32 -3 56 9 43 b 45 16 26 24 36 20 b 137 0 76 3 108 0 z',\n        },\n        articTenutoBelow: {\n            x_min: 0.35192668236256364,\n            x_max: 471.1238660564107,\n            y_min: -59,\n            y_max: -3,\n            ha: 56,\n            o: 'm 137 -85 b 197 -84 156 -85 179 -84 b 409 -79 268 -84 338 -79 b 482 -81 432 -79 459 -79 b 556 -85 508 -82 534 -85 b 651 -75 588 -85 621 -82 b 678 -58 662 -73 678 -75 b 654 -26 680 -40 672 -32 b 511 -10 606 -12 560 -12 b 255 -4 426 -7 341 -4 b 160 -6 222 -4 193 -6 l 36 -6 b 1 -14 24 -7 7 0 b 19 -53 -3 -29 9 -42 b 45 -69 26 -60 36 -65 b 137 -85 76 -82 108 -85 z',\n        },\n        articStaccatoAbove: {\n            x_min: 1.4151102965496913,\n            x_max: 112,\n            y_min: 0,\n            y_max: 156,\n            ha: 156,\n            o: 'm 98 0 b 132 23 109 0 122 7 b 161 112 150 50 161 79 b 158 148 161 124 161 137 b 125 186 154 167 131 167 b 63 225 117 215 85 216 b 23 197 45 222 30 219 b 3 91 12 163 12 127 b 19 66 0 79 4 69 b 65 27 40 62 53 46 b 98 0 76 9 88 0 z',\n        },\n        articStaccatoBelow: {\n            x_min: 1.4151102965496913,\n            x_max: 112.08403222864916,\n            y_min: -156,\n            y_max: 0,\n            ha: 156,\n            o: 'm 132 -202 b 161 -112 151 -174 163 -145 b 158 -76 161 -101 161 -88 b 125 -39 153 -58 131 -58 b 63 0 115 -10 85 -9 b 23 -27 45 -3 30 -6 b 3 -134 12 -62 10 -98 b 19 -158 0 -145 4 -156 b 65 -197 40 -164 53 -179 b 98 -225 75 -216 88 -225 b 132 -202 109 -225 122 -217 z',\n        },\n        articStaccatissimoAbove: {\n            x_min: 0,\n            x_max: 139,\n            y_min: 0,\n            y_max: 411,\n            ha: 411,\n            o: 'm 104 0 b 144 115 143 29 138 75 b 197 423 158 217 180 320 b 200 454 199 433 200 444 b 181 540 200 482 193 513 b 112 592 167 573 141 592 b 55 567 92 592 72 585 b 0 490 32 546 3 527 l 0 484 b 27 279 14 416 14 347 b 84 20 43 193 52 104 b 96 0 86 13 92 6 z',\n        },\n        articStaccatissimoBelow: {\n            x_min: 0,\n            x_max: 139,\n            y_min: -411,\n            y_max: 0,\n            ha: 411,\n            o: 'm 88 -592 b 145 -567 108 -592 128 -585 b 200 -490 168 -546 197 -527 l 200 -484 b 173 -279 186 -416 186 -347 b 117 -20 157 -193 148 -104 b 104 0 114 -13 108 -6 l 96 0 b 56 -115 58 -29 62 -75 b 3 -423 42 -217 20 -320 b 0 -454 1 -433 0 -444 b 19 -540 0 -482 7 -513 b 88 -592 33 -573 59 -592 z',\n        },\n        articMarcatoAbove: {\n            x_min: 0.04121419527862119,\n            x_max: 396,\n            y_min: 0,\n            y_max: 328.0000000000001,\n            ha: 328.0000000000001,\n            o: 'm 477 0 b 510 13 488 0 500 6 b 570 124 546 40 563 81 b 547 183 570 147 560 166 b 356 422 487 265 405 330 b 346 442 354 429 350 436 l 346 444 b 318 465 340 456 330 464 l 312 469 b 274 449 294 480 284 461 b 242 413 262 438 253 425 b 56 196 177 343 112 274 b 1 56 26 154 13 105 b 27 20 -4 35 9 20 b 42 23 32 20 37 20 b 84 53 59 29 72 39 b 255 269 141 125 193 200 b 275 229 262 255 266 242 b 448 14 324 151 390 86 b 477 0 456 4 467 0 z',\n        },\n        articMarcatoBelow: {\n            x_min: 0,\n            x_max: 395.9587858047214,\n            y_min: -328.0000000000001,\n            y_max: 0,\n            ha: 328.0000000000001,\n            o: 'm 258 -469 b 297 -449 276 -480 287 -461 b 328 -413 308 -438 317 -425 b 514 -196 393 -343 458 -274 b 569 -56 544 -154 557 -105 b 543 -20 575 -35 562 -20 b 528 -23 539 -20 533 -20 b 487 -53 511 -29 498 -39 b 315 -269 429 -125 377 -200 b 295 -229 308 -255 304 -242 b 122 -14 246 -151 180 -86 b 94 0 114 -4 104 0 b 60 -13 82 0 71 -6 b 0 -124 24 -40 7 -81 b 23 -183 0 -147 10 -166 b 215 -422 84 -265 166 -330 b 225 -442 216 -429 220 -436 l 225 -444 b 252 -465 230 -456 240 -464 z',\n        },\n        fermataAbove: {\n            x_min: -0.04550444040404433,\n            x_max: 472,\n            y_min: 2.015071727506986,\n            y_max: 454,\n            ha: 451.984928272493,\n            o: 'm 39 10 b 78 108 66 37 71 73 b 163 311 92 181 111 252 b 284 423 199 353 239 392 b 373 458 312 444 340 454 b 433 431 395 458 410 446 b 603 153 530 361 596 276 b 595 121 603 144 595 131 l 595 88 b 602 50 596 75 589 55 b 639 73 619 43 631 60 b 651 102 645 82 648 92 b 667 194 660 132 662 163 b 680 278 671 222 672 248 b 560 567 680 386 638 481 b 396 654 508 625 452 649 b 291 632 364 654 325 644 b 161 526 235 613 200 566 b 4 249 85 446 26 357 b 4 174 0 222 -3 196 b 10 19 4 124 4 69 b 29 4 12 6 16 0 b 39 10 35 4 33 4 z m 338 37 b 370 40 350 36 357 36 b 380 75 387 40 380 43 b 389 94 382 79 382 85 b 356 132 389 111 374 122 b 269 154 328 147 300 156 b 225 125 252 154 228 157 b 261 48 222 81 232 56 b 338 37 287 40 312 40 z',\n        },\n        fermataBelow: {\n            x_min: -0.310835055998654,\n            x_max: 518.570567335755,\n            y_min: -430,\n            y_max: -0.9161449836506543,\n            ha: 429.08385501634933,\n            o: 'm 344 -615 b 500 -543 402 -602 452 -576 b 713 -253 605 -471 661 -364 b 746 -98 737 -204 750 -153 b 727 -59 744 -82 744 -59 b 688 -88 711 -59 694 -68 b 678 -109 687 -96 683 -102 b 562 -314 648 -183 611 -252 b 387 -439 516 -373 458 -416 b 328 -449 367 -446 347 -449 b 180 -386 274 -449 225 -423 b 69 -179 111 -330 69 -262 b 75 -121 69 -160 71 -141 b 84 -58 78 -101 84 -79 b 82 -39 84 -52 84 -45 b 68 -1 79 -26 82 -4 b 26 -32 49 0 33 -12 b 20 -52 24 -39 22 -45 b 0 -223 9 -107 -3 -161 b 141 -553 1 -348 27 -468 b 304 -619 192 -590 243 -619 b 344 -615 317 -619 330 -618 z m 415 -190 b 435 -157 429 -192 435 -184 b 308 -27 435 -86 379 -27 b 271 -46 287 -27 272 -35 b 269 -69 269 -55 269 -62 b 364 -183 269 -128 302 -170 z',\n        },\n        breathMarkComma: {\n            x_min: 0,\n            x_max: 148,\n            y_min: 0,\n            y_max: 275,\n            ha: 275,\n            o: 'm 120 0 b 187 78 156 20 174 48 b 213 209 206 121 213 164 b 206 294 213 238 210 265 b 140 390 200 337 171 367 b 122 396 134 395 128 396 b 68 382 105 396 85 384 b 46 379 60 382 53 382 b 0 328 12 369 0 357 b 1 311 0 323 1 317 b 30 210 4 275 22 243 b 66 167 39 179 46 167 b 94 171 73 167 82 168 b 143 180 109 174 124 180 b 160 179 148 180 154 180 b 120 66 124 145 120 107 b 120 0 120 45 121 23 z',\n        },\n        breathMarkUpbow: {\n            x_min: 0,\n            x_max: 254,\n            y_min: 0,\n            y_max: 595,\n            ha: 595,\n            o: 'm 233 0 b 256 48 251 14 253 30 b 272 183 264 92 265 138 b 311 455 289 274 295 364 b 350 716 327 541 341 628 b 366 815 354 749 366 782 b 359 857 366 829 363 842 b 327 815 334 852 330 832 b 302 674 315 769 310 721 b 248 357 288 567 269 462 b 225 226 240 314 242 268 b 210 251 212 232 213 243 b 69 721 163 408 117 564 b 32 835 58 760 53 801 b 20 851 29 841 27 851 b 14 850 19 851 16 851 b 0 828 6 847 0 838 l 0 825 b 12 765 1 804 7 785 b 194 125 73 552 132 338 b 233 0 206 84 213 42 z',\n        },\n        caesura: {\n            x_min: 0,\n            x_max: 565.5831864753837,\n            y_min: -0.09016994374947417,\n            y_max: 562.4481112129314,\n            ha: 562.5382811566809,\n            o: 'm 0 76 b 49 122 24 92 37 107 b 444 613 180 287 305 455 b 528 770 484 660 518 708 b 531 792 530 778 531 785 b 524 808 531 799 530 805 b 490 792 513 815 498 802 b 390 683 456 756 420 721 b 48 262 275 543 164 400 b 0 76 0 207 7 145 z m 226 1 b 248 13 238 -4 243 7 l 353 137 b 759 638 490 302 632 464 b 814 805 795 688 819 740 b 779 786 796 805 788 796 b 628 609 724 732 678 668 b 310 242 523 485 416 363 b 217 69 265 190 217 140 b 222 30 217 58 219 45 b 222 23 222 29 220 26 b 220 12 222 20 220 16 b 226 1 220 7 222 3 z',\n        },\n        caesuraCurved: {\n            x_min: 0,\n            x_max: 386,\n            y_min: -10,\n            y_max: 584,\n            ha: 594,\n            o: 'm 180 -14 b 246 14 213 -13 230 0 b 347 144 288 52 315 99 b 526 471 420 246 488 350 b 556 671 546 537 556 603 b 543 798 556 713 553 756 b 504 837 537 822 521 828 b 490 841 500 840 494 841 b 472 832 482 841 477 838 b 406 678 436 785 406 737 b 410 638 406 665 408 652 b 425 511 419 595 425 553 b 315 186 425 395 387 287 b 180 -14 271 122 228 58 z m 14 24 b 49 39 29 24 40 32 b 120 114 76 60 99 85 b 216 276 156 166 184 223 b 317 626 281 384 317 501 b 315 664 317 639 317 651 b 301 773 314 701 311 737 b 262 808 295 795 278 808 b 245 799 256 808 249 805 b 170 641 209 750 170 706 b 171 621 170 634 170 628 b 177 511 176 585 177 549 b 114 229 177 415 160 320 b 0 26 79 161 42 95 b 14 24 6 24 10 24 z',\n        },\n        restMaxima: {\n            x_min: 0,\n            x_max: 366,\n            y_min: -255,\n            y_max: 255,\n            ha: 510,\n            o: 'm 397 -367 b 504 -343 436 -367 468 -347 b 518 -318 516 -341 518 -330 b 527 -30 518 -217 527 -117 b 526 33 527 -7 527 13 l 526 301 b 501 350 526 323 520 341 b 428 367 477 361 452 367 b 374 359 410 367 393 364 b 357 333 361 354 357 347 b 356 91 357 252 356 171 l 356 30 b 340 -307 357 -82 346 -194 b 397 -367 337 -354 350 -367 z m 46 -357 b 58 -356 49 -357 53 -357 b 154 -333 91 -351 121 -338 b 173 -305 168 -330 173 -320 l 173 302 b 132 356 173 330 157 348 b 68 364 112 363 89 364 b 3 304 19 363 1 348 l 3 4 l 0 4 b 1 -302 0 -98 0 -200 b 46 -357 1 -331 16 -357 z',\n        },\n        restDoubleWhole: {\n            x_min: 0,\n            x_max: 122,\n            y_min: 0,\n            y_max: 249,\n            ha: 249,\n            o: 'm 43 0 b 58 1 48 0 52 0 b 124 20 81 6 102 17 b 176 96 173 27 176 58 b 173 220 174 138 173 179 b 176 304 173 248 176 276 b 140 353 176 331 163 346 b 95 359 125 356 111 359 b 32 346 73 359 52 354 b 0 315 20 340 0 337 b 1 243 0 291 1 268 l 1 174 l 4 174 l 4 48 b 43 0 4 16 17 0 z',\n        },\n        restWhole: {\n            x_min: 0.8908513171538642,\n            x_max: 500,\n            y_min: -120,\n            y_max: 14,\n            ha: 134,\n            o: 'm 356 -173 l 356 -171 l 642 -171 b 719 -115 680 -171 717 -145 b 720 -82 719 -104 720 -92 b 711 -20 720 -60 719 -40 b 672 17 704 0 694 10 b 649 20 664 20 657 20 b 605 17 634 20 621 17 b 92 19 433 17 262 17 b 29 7 69 20 49 12 b 9 -17 12 4 9 -6 b 10 -43 9 -26 10 -35 b 1 -84 10 -58 3 -72 b 76 -173 0 -147 7 -173 z',\n        },\n        restHalf: {\n            x_min: 0,\n            x_max: 518.3998530468286,\n            y_min: 0,\n            y_max: 162,\n            ha: 162,\n            o: 'm 98 0 l 556 0 b 665 1 592 0 629 0 b 746 82 720 3 743 29 b 736 174 749 114 740 144 b 670 232 729 215 708 232 b 570 229 636 232 603 229 b 356 233 498 229 426 233 l 73 233 b 0 179 19 233 0 220 b 1 154 0 171 0 164 b 6 95 4 135 6 115 b 98 0 3 27 29 0 z',\n        },\n        restQuarter: {\n            x_min: -0.3784452492533808,\n            x_max: 263,\n            y_min: -415,\n            y_max: 415,\n            ha: 830,\n            o: 'm 151 -596 b 164 -563 163 -589 161 -575 b 160 -546 164 -557 161 -552 b 124 -396 148 -495 135 -446 b 122 -380 122 -390 122 -384 b 199 -255 122 -331 158 -272 b 228 -256 209 -249 217 -253 b 324 -346 274 -271 298 -310 b 353 -369 331 -356 341 -369 b 360 -367 356 -369 357 -369 b 379 -336 373 -361 379 -348 l 377 -325 b 344 -232 372 -292 366 -258 b 249 -58 301 -180 278 -117 b 242 -36 245 -49 242 -42 b 258 -7 242 -26 248 -17 b 328 78 284 20 311 45 b 354 158 344 104 354 131 b 337 216 354 177 350 196 b 213 435 294 288 249 359 b 115 575 189 487 158 536 b 78 598 105 585 92 598 b 59 592 72 598 66 596 b 39 562 45 583 39 572 b 53 527 39 550 45 539 b 168 344 98 469 125 402 b 187 307 181 328 187 317 b 153 269 187 294 176 284 b 62 213 122 252 91 235 b 40 180 48 203 40 192 b 46 158 40 173 43 166 b 99 65 60 125 79 95 b 183 -79 131 20 160 -29 b 156 -86 173 -88 164 -85 b 0 -261 58 -99 -7 -173 b 96 -557 10 -366 49 -464 b 124 -585 102 -569 109 -580 b 145 -598 132 -588 138 -598 b 151 -596 147 -598 150 -598 z',\n        },\n        rest8th: {\n            x_min: 0,\n            x_max: 289,\n            y_min: -260,\n            y_max: 261,\n            ha: 521,\n            o: 'm 164 -374 b 212 -340 190 -373 203 -357 b 276 -190 238 -292 258 -242 b 410 285 333 -36 359 128 b 416 314 413 294 416 304 l 416 321 b 393 354 415 341 410 354 b 382 353 389 354 386 354 b 292 311 347 347 315 333 b 174 225 256 276 216 251 b 157 219 168 222 163 219 b 140 228 151 219 145 222 b 131 246 134 233 131 240 b 135 262 131 252 132 256 b 147 298 141 272 147 285 b 127 367 147 323 154 354 b 94 376 114 373 102 376 b 48 336 75 376 63 363 b 3 181 20 288 12 235 b 0 150 1 170 0 160 b 109 24 0 84 35 24 b 171 36 127 24 148 27 b 289 101 213 52 248 75 b 164 -374 256 -62 193 -213 z',\n        },\n        rest16th: {\n            x_min: 0,\n            x_max: 333,\n            y_min: -328.283950617284,\n            y_max: 244,\n            ha: 572.2839506172841,\n            o: 'm 209 -471 b 246 -458 222 -477 236 -468 b 307 -338 279 -425 300 -384 b 324 -226 312 -301 317 -262 b 428 161 350 -94 386 35 b 480 318 445 215 480 259 b 467 347 480 331 477 341 b 445 351 461 350 454 351 b 408 337 432 351 419 347 b 402 333 405 336 403 334 b 223 215 344 294 294 245 b 236 259 229 233 235 246 b 238 276 238 265 238 271 b 212 338 238 302 226 334 b 193 341 206 340 199 341 b 86 289 156 341 104 317 b 59 180 66 255 59 217 b 156 27 59 76 92 27 b 236 46 179 27 204 35 b 338 101 271 59 298 82 b 289 -49 312 49 302 0 b 196 -122 276 -99 235 -107 b 176 -114 187 -127 176 -127 l 176 -111 b 157 -53 177 -88 164 -72 b 69 -9 141 -7 101 -16 b 17 -48 43 -3 29 -27 b 0 -127 4 -73 0 -99 b 6 -186 0 -147 1 -167 b 82 -294 17 -262 37 -294 b 160 -276 102 -294 128 -289 b 219 -242 181 -268 203 -259 b 236 -230 223 -236 229 -230 b 243 -232 239 -230 240 -230 b 235 -275 248 -246 239 -261 b 202 -456 220 -334 202 -395 b 209 -471 202 -462 203 -468 z',\n        },\n        rest32nd: {\n            x_min: 0,\n            x_max: 347,\n            y_min: -497.5023916875033,\n            y_max: 483,\n            ha: 980.5023916875033,\n            o: 'm 177 -716 b 217 -690 194 -720 209 -704 b 233 -655 225 -680 230 -668 b 292 -390 253 -567 275 -480 b 361 -48 312 -275 336 -161 b 452 400 393 102 422 252 b 497 629 467 477 482 553 b 500 647 498 635 500 641 b 480 691 500 665 492 684 b 464 696 475 694 469 696 b 418 674 448 696 431 685 l 361 626 b 333 611 353 618 343 612 b 308 629 325 611 317 616 b 239 667 292 651 265 661 b 204 670 228 668 216 670 b 86 559 141 670 95 628 b 85 537 86 552 85 544 b 107 416 85 495 95 455 b 161 372 114 389 134 372 b 174 373 166 372 170 372 b 226 383 192 374 209 377 b 387 478 285 402 330 444 b 364 386 379 444 364 415 b 276 271 364 323 320 298 b 265 266 272 268 268 266 b 252 276 261 266 256 269 b 143 333 229 311 186 333 b 107 327 130 333 118 330 b 43 243 62 314 46 291 b 58 145 43 210 52 179 b 150 63 68 92 99 63 b 315 132 213 63 259 98 b 266 -58 297 63 281 4 b 207 -101 259 -91 230 -96 b 186 -66 186 -107 199 -75 b 180 -50 181 -63 183 -55 b 101 -3 160 -23 135 -3 b 9 -66 59 -3 20 -32 b 0 -118 3 -84 0 -101 b 10 -196 0 -144 6 -170 b 104 -287 20 -256 52 -287 b 137 -282 114 -287 125 -287 b 184 -269 151 -281 171 -269 b 196 -275 190 -269 193 -271 b 199 -287 197 -278 199 -282 b 184 -343 199 -304 189 -325 b 181 -348 184 -346 183 -347 b 134 -595 158 -429 131 -508 b 156 -677 134 -624 150 -648 b 177 -716 158 -693 160 -713 z',\n        },\n        rest64th: {\n            x_min: 0,\n            x_max: 428,\n            y_min: -720,\n            y_max: 473.6797408388932,\n            ha: 1193.6797408388932,\n            o: 'm 200 -1037 b 229 -1012 215 -1037 222 -1025 b 238 -984 233 -1004 236 -994 b 282 -780 248 -914 265 -848 b 386 -369 317 -644 354 -507 b 491 104 422 -212 451 -53 b 600 541 528 249 550 399 b 616 629 611 570 616 599 b 600 680 616 648 615 671 b 550 665 586 687 566 677 b 480 618 527 649 501 635 b 464 611 474 613 468 611 b 448 622 458 611 454 615 b 366 662 425 651 397 662 b 331 658 354 662 343 661 b 242 572 285 647 253 619 b 236 528 239 557 236 543 b 266 400 236 484 251 442 b 325 373 274 377 301 373 b 436 409 366 373 403 383 l 494 452 b 474 360 485 416 474 389 b 383 248 474 297 435 269 b 320 328 377 288 351 310 b 276 341 305 337 291 341 b 186 269 235 341 194 311 b 181 230 183 256 181 243 b 187 153 181 204 186 179 b 279 63 192 86 233 63 b 304 65 288 63 295 63 b 416 115 344 72 379 92 b 387 -14 406 69 397 27 b 320 -95 380 -52 369 -86 b 318 -79 320 -89 320 -84 b 223 0 305 -29 271 0 b 122 -81 171 0 135 -30 b 118 -127 120 -96 118 -112 l 118 -196 b 137 -242 118 -215 125 -229 b 209 -275 157 -266 181 -275 b 249 -269 222 -275 235 -274 b 318 -248 272 -264 294 -255 b 281 -390 315 -301 292 -344 b 276 -400 279 -393 279 -397 b 259 -420 272 -408 266 -416 b 246 -429 255 -425 251 -429 b 233 -415 242 -429 238 -426 b 176 -359 225 -389 200 -372 b 121 -346 158 -348 140 -346 b 14 -408 73 -346 27 -370 b 0 -498 4 -438 0 -468 b 6 -564 0 -520 3 -543 b 91 -635 12 -611 45 -635 b 131 -629 104 -635 117 -634 b 223 -590 163 -622 190 -603 b 166 -824 203 -671 189 -747 b 148 -912 157 -852 148 -881 b 156 -955 148 -926 150 -940 b 177 -1008 161 -972 170 -991 b 200 -1037 181 -1020 183 -1037 z',\n        },\n        rest128th: {\n            x_min: 0.6717818579024267,\n            x_max: 491,\n            y_min: -711,\n            y_max: 719,\n            ha: 1430,\n            o: 'm 233 -1015 b 271 -956 256 -1002 266 -981 l 314 -723 b 393 -350 337 -598 366 -474 b 543 312 442 -128 492 91 b 687 841 583 490 635 665 b 707 958 698 880 707 919 b 706 986 707 968 707 976 b 688 1025 704 999 704 1024 b 670 1027 683 1025 677 1027 b 629 1007 655 1027 639 1022 b 559 945 613 981 586 968 b 541 1004 553 968 559 991 b 456 1035 516 1024 488 1035 b 419 1030 444 1035 431 1034 b 344 953 379 1018 353 995 b 340 900 341 936 340 917 b 341 847 340 881 341 864 b 380 779 340 815 354 793 b 464 763 406 765 435 762 b 592 814 510 763 549 786 b 546 660 575 757 556 710 b 480 585 537 619 517 598 b 478 599 480 590 478 595 b 386 678 472 641 428 678 b 294 612 343 678 304 651 b 279 477 282 567 278 521 b 363 395 281 428 317 395 b 380 396 369 395 374 395 b 488 436 416 403 449 419 b 384 233 469 357 468 275 b 359 291 373 252 377 276 b 282 318 337 310 310 318 b 181 264 243 318 203 298 b 154 107 153 216 154 161 b 242 6 154 42 187 6 b 278 10 253 6 265 7 b 408 88 330 22 366 55 b 387 -1 400 56 393 27 b 301 -112 379 -55 354 -94 b 289 -65 297 -95 302 -79 b 219 -32 269 -42 245 -32 b 183 -37 207 -32 196 -35 b 112 -109 144 -46 121 -71 b 105 -219 104 -145 108 -183 b 186 -315 101 -276 134 -315 b 230 -307 199 -315 215 -312 b 324 -256 264 -295 292 -275 b 180 -491 323 -383 266 -471 b 183 -459 180 -480 180 -469 b 184 -442 184 -454 184 -448 l 184 -436 b 135 -369 184 -403 170 -383 b 102 -363 125 -364 114 -363 b 29 -399 73 -363 45 -376 b 1 -556 -4 -448 6 -503 b 109 -670 -4 -625 43 -670 b 140 -667 118 -670 130 -668 b 253 -616 180 -658 213 -638 b 238 -688 248 -644 242 -665 b 192 -959 220 -779 192 -867 b 193 -992 192 -971 192 -981 b 210 -1024 194 -1014 199 -1024 b 233 -1015 216 -1024 223 -1021 z',\n        },\n        dynamicPiano: {\n            x_min: -49,\n            x_max: 326.5019318364244,\n            y_min: -142,\n            y_max: 515,\n            ha: 657,\n            o: 'm -56 -204 b -42 -202 -52 -204 -46 -203 b -19 -194 -35 -202 -26 -197 b 147 -138 35 -170 91 -151 b 249 -58 194 -127 223 -95 b 262 -29 255 -50 262 -39 b 258 -17 262 -24 261 -20 b 232 -7 252 -10 242 -7 b 210 -12 225 -7 217 -9 b 125 -40 184 -23 157 -30 b 183 140 153 19 171 79 b 251 167 207 144 230 153 b 469 518 383 262 480 382 b 357 687 472 626 420 687 b 315 678 344 687 330 684 b 204 600 279 664 240 634 b 210 704 206 635 209 670 b 215 721 212 710 215 716 b 206 733 215 727 212 730 b 180 742 197 736 189 742 b 164 734 176 742 170 740 b 1 575 108 684 36 645 b -7 557 -1 569 -7 563 b -6 553 -7 556 -7 554 b 7 547 -3 547 3 547 l 17 547 b 82 575 43 547 59 567 l 82 452 b 56 46 82 317 81 180 b 17 -66 49 7 46 -36 b -62 -173 -13 -99 -37 -135 b -71 -192 -66 -179 -71 -184 b -68 -199 -71 -193 -69 -196 b -56 -204 -65 -203 -60 -204 z m 196 258 b 197 266 197 261 197 264 b 200 510 200 347 199 429 b 233 543 210 521 222 533 b 281 560 249 554 266 560 b 340 503 310 560 333 540 b 344 461 343 488 344 474 b 321 323 344 413 333 369 b 268 272 315 300 295 281 b 196 258 245 265 220 261 z',\n        },\n        dynamicMezzo: {\n            x_min: -18,\n            x_max: 559,\n            y_min: -50,\n            y_max: 365,\n            ha: 415,\n            o: 'm 43 -71 b 160 19 86 -71 143 -26 b 230 264 189 99 200 184 b 282 363 243 297 259 327 b 287 320 285 347 287 333 b 284 279 287 305 285 292 l 249 -12 b 275 -43 248 -29 245 -43 b 395 45 321 -43 389 3 b 462 271 406 124 436 197 b 523 387 475 310 490 348 l 523 346 b 504 130 521 274 513 202 b 501 81 501 114 501 98 b 510 3 501 55 504 29 b 580 -72 521 -48 543 -72 b 625 -63 593 -72 608 -69 b 789 50 690 -43 744 -3 b 805 72 795 56 805 63 b 798 85 805 76 802 81 b 778 94 792 91 785 94 b 755 85 770 94 763 91 l 693 40 b 675 33 685 36 680 33 b 658 52 668 33 662 39 b 645 144 651 82 645 112 b 658 448 641 246 660 346 b 606 507 658 485 638 507 b 583 504 599 507 592 505 b 495 446 547 497 521 471 b 420 373 471 423 448 399 b 413 458 418 406 418 432 b 361 507 408 490 386 507 b 320 491 347 507 333 501 b 160 307 256 444 207 382 l 160 337 b 174 488 160 387 174 438 b 156 521 174 501 173 513 b 137 526 148 524 143 526 b 109 513 127 526 118 520 b -16 399 66 477 23 439 b -26 383 -20 395 -26 389 l -26 379 b -14 370 -24 372 -20 370 b -6 372 -12 370 -9 372 b 19 376 4 374 12 376 b 36 359 32 376 36 370 b 30 330 36 350 35 341 l 30 323 b 9 -35 23 203 17 85 b 43 -71 6 -65 19 -71 z',\n        },\n        dynamicForte: {\n            x_min: -144,\n            x_max: 311.30112136775,\n            y_min: -115.3876295915697,\n            y_max: 504,\n            ha: 619.3876295915697,\n            o: 'm -101 -166 b 173 76 7 -153 150 -30 b 206 344 192 164 202 253 b 268 338 226 343 246 341 b 384 395 317 333 353 361 b 397 419 393 405 397 412 b 367 442 397 429 387 436 b 350 444 361 444 356 444 b 206 455 302 449 255 454 l 206 474 b 202 540 204 495 202 518 b 209 593 202 557 203 576 b 236 624 215 613 225 624 b 265 612 245 624 253 619 b 308 552 287 596 302 577 b 336 533 312 534 323 533 b 448 611 366 533 444 583 b 399 696 452 648 423 671 b 382 706 395 700 387 703 b 308 726 357 720 333 726 b 207 684 272 726 239 711 b 60 455 135 622 60 560 l 10 455 b -23 448 -1 455 -13 454 b -102 372 -55 426 -76 397 b -109 357 -108 367 -109 361 b -95 347 -109 353 -105 348 b -63 346 -84 346 -73 346 b 0 344 -43 344 -22 344 l 63 344 b 53 186 63 291 59 239 b 23 0 46 124 42 60 b -35 -60 10 -42 -6 -60 b -73 -52 -45 -60 -58 -58 b -91 -48 -79 -49 -85 -48 b -109 -53 -96 -48 -102 -49 b -199 -124 -143 -72 -168 -99 b -207 -137 -203 -128 -207 -132 b -194 -148 -207 -141 -203 -145 b -101 -166 -164 -160 -132 -168 z',\n        },\n        dynamicRinforzando: {\n            x_min: -75,\n            x_max: 322.0960720195126,\n            y_min: -90,\n            y_max: 325,\n            ha: 415,\n            o: 'm 23 -130 b 40 -125 27 -130 33 -128 b 128 -9 81 -114 125 -53 b 145 200 132 62 141 130 b 148 238 147 212 148 225 b 308 321 184 291 245 321 b 363 314 325 321 344 318 b 377 310 369 312 373 310 b 384 311 380 310 382 310 b 464 415 410 317 464 389 b 446 433 465 429 455 429 b 390 445 428 441 409 445 b 305 429 361 445 334 438 b 167 346 252 413 202 393 b 153 325 163 338 158 333 b 148 438 154 363 151 399 b 121 468 147 456 134 468 b 101 458 115 468 108 465 b -63 310 46 409 -16 367 b -108 240 -78 289 -98 271 b 32 330 -50 256 -13 297 b 37 304 37 320 37 312 l 37 292 b 10 -101 27 161 20 30 b 23 -130 9 -120 12 -130 z',\n        },\n        dynamicSforzando: {\n            x_min: 0,\n            x_max: 296,\n            y_min: 0,\n            y_max: 379,\n            ha: 379,\n            o: 'm 151 0 b 174 1 160 0 166 0 b 392 158 272 14 346 71 b 405 207 400 174 405 190 b 359 287 405 236 389 265 b 261 325 328 308 294 315 b 168 413 216 340 181 366 b 166 426 167 418 166 423 b 176 438 166 432 167 436 b 199 441 183 441 190 441 b 310 393 238 441 295 422 b 334 370 317 376 325 370 b 363 386 343 370 353 379 b 422 445 386 402 408 420 b 426 458 425 449 426 454 b 422 469 426 462 425 465 b 274 546 395 518 333 546 b 161 503 232 546 190 531 b 86 405 132 472 108 439 b 71 347 75 387 71 367 b 112 256 71 312 85 279 b 209 215 141 232 176 226 b 284 168 238 206 266 197 b 300 131 291 157 300 144 b 298 120 300 127 298 122 b 278 107 294 109 285 108 b 262 108 271 107 266 108 l 259 108 b 114 157 200 107 156 125 b 96 181 104 163 96 170 l 96 184 b 102 202 96 190 102 196 b 96 209 102 204 101 207 b 63 194 82 215 72 204 b 7 109 42 168 26 138 b 0 86 3 101 0 94 b 13 60 0 78 4 68 b 151 0 53 23 101 0 z',\n        },\n        dynamicZ: {\n            x_min: -42.73880183193087,\n            x_max: 331,\n            y_min: 0,\n            y_max: 328,\n            ha: 328,\n            o: 'm -45 0 b -6 16 -32 0 -17 10 b 3 20 -3 16 0 19 b 144 60 49 48 96 60 b 284 22 190 60 238 46 b 348 4 305 10 327 4 b 461 75 393 4 435 30 b 468 91 464 81 467 86 b 456 104 468 95 465 99 b 287 173 402 131 348 167 b 239 176 271 174 255 176 b 168 174 217 176 194 174 b 367 340 236 236 298 294 b 459 423 402 363 432 392 b 477 454 467 431 475 442 b 474 462 477 456 475 459 b 454 472 469 469 462 472 b 432 468 446 472 439 469 b 356 448 406 461 380 455 b 210 422 307 433 258 422 b 109 442 177 422 144 428 b 94 445 104 444 99 445 b 69 433 85 445 76 442 b 27 390 56 419 39 406 b -9 343 16 373 -17 357 b 63 311 3 320 36 314 l 78 311 b 132 307 95 308 114 307 b 240 314 168 307 203 311 l 193 271 b -37 50 117 196 19 145 b -59 7 -46 36 -69 20 b -45 0 -55 3 -50 0 z',\n        },\n        ornamentTrill: {\n            x_min: 1,\n            x_max: 551,\n            y_min: -18,\n            y_max: 539,\n            ha: 557,\n            o: 'm 321 612 b 190 602 278 605 235 605 l 190 638 b 187 693 190 652 190 667 b 161 776 184 717 193 776 b 137 747 150 776 137 766 b 130 654 135 716 131 685 l 130 596 l 52 588 b 4 539 23 585 7 570 b 1 477 3 530 1 500 b 3 448 1 461 3 448 l 3 452 b 53 432 6 436 23 432 b 134 435 75 432 102 433 b 151 117 138 328 147 223 b 170 13 153 82 157 46 b 209 -26 179 -10 193 -26 b 222 -22 213 -26 217 -24 b 269 -17 233 -16 253 -27 b 343 135 325 19 346 66 b 343 158 343 147 344 147 b 323 192 341 171 337 187 b 291 176 311 194 300 184 l 264 148 b 229 131 261 145 238 131 b 212 170 209 131 213 154 b 194 438 203 259 199 348 l 272 442 b 284 452 276 441 279 441 b 305 462 287 461 295 462 l 312 462 b 346 477 325 462 340 464 b 366 560 357 503 366 531 b 321 612 366 598 356 618 z m 759 588 b 711 560 749 592 733 570 b 588 500 671 541 631 521 b 583 533 586 514 586 524 b 560 576 577 549 577 572 b 517 550 541 582 528 564 b 416 423 482 508 452 462 b 382 353 392 397 384 370 b 387 305 380 341 386 318 b 392 275 389 295 392 285 b 409 243 393 262 393 243 b 431 262 419 243 425 255 b 521 373 459 298 488 333 b 523 354 521 366 523 360 b 520 337 523 346 521 340 b 508 295 513 323 508 310 b 530 102 508 279 524 122 b 549 66 533 88 530 66 b 577 99 563 66 572 84 b 580 131 580 109 580 121 l 580 302 b 600 347 580 318 582 337 b 701 392 632 364 665 384 b 793 518 785 409 793 435 b 759 588 793 559 785 576 z',\n        },\n        ornamentTurn: {\n            x_min: 0,\n            x_max: 574,\n            y_min: 0,\n            y_max: 312,\n            ha: 312,\n            o: 'm 651 0 b 816 132 727 0 796 46 b 827 223 822 163 827 193 b 808 340 827 262 821 301 b 665 449 785 408 729 449 b 636 446 655 449 647 448 b 589 384 600 441 586 422 l 602 300 b 611 285 603 291 605 285 b 621 288 613 285 616 287 b 655 295 632 294 644 295 b 711 284 674 295 693 289 b 773 209 740 275 773 232 b 697 156 773 184 734 160 b 664 154 685 154 675 154 b 579 168 635 154 608 158 b 455 242 533 186 495 213 b 261 400 387 291 331 354 b 160 432 225 422 190 432 b 20 328 98 432 49 392 b 0 229 6 295 0 262 b 30 71 0 176 14 122 b 144 3 43 29 96 3 b 168 6 153 3 160 4 b 248 122 233 20 248 39 b 246 147 248 124 248 135 b 226 177 243 164 239 177 b 206 170 220 177 215 174 b 144 154 186 158 166 154 b 79 170 122 154 101 160 b 53 202 62 179 53 189 b 60 228 53 209 55 217 b 161 281 81 261 120 281 b 183 279 168 281 176 281 b 325 190 243 269 284 229 b 572 16 402 124 475 53 b 651 0 598 6 625 0 z',\n        },\n        ornamentTurnSlash: {\n            x_min: 0,\n            x_max: 574,\n            y_min: -106,\n            y_max: 405,\n            ha: 511,\n            o: 'm 441 -153 b 456 -60 455 -118 456 -89 b 455 81 455 -14 455 33 b 572 14 491 55 530 30 b 651 -1 598 4 625 -1 b 816 131 727 -1 796 45 b 827 222 822 161 827 192 b 808 338 827 261 821 300 b 665 448 785 406 729 448 b 636 445 655 448 647 446 b 589 383 600 439 586 420 l 602 298 b 611 284 603 289 605 284 b 621 287 613 284 616 285 b 655 294 632 292 644 294 b 711 282 674 294 693 288 b 773 207 740 274 773 230 b 697 154 773 183 734 158 b 664 153 685 153 675 153 b 579 167 635 153 608 157 b 455 240 533 183 495 212 b 454 242 455 240 455 242 l 454 337 b 452 488 454 386 452 439 b 433 570 452 517 451 546 b 425 583 431 575 431 583 l 422 583 b 403 566 415 582 408 573 b 402 546 400 560 402 553 l 397 287 b 261 399 353 325 310 366 b 160 431 225 420 190 431 b 20 327 98 431 48 390 b 0 228 6 294 0 261 b 30 69 0 174 14 121 b 144 1 43 27 96 1 b 168 4 153 1 160 3 b 248 121 233 19 248 37 b 246 145 248 122 248 134 b 226 176 243 163 239 176 b 206 168 220 176 215 173 b 144 153 186 157 166 153 b 79 168 122 153 101 158 b 53 200 62 177 53 187 b 60 226 53 207 55 216 b 161 279 79 259 120 279 b 183 278 168 279 176 279 b 325 189 243 266 282 226 b 395 130 348 168 372 148 b 393 71 393 109 393 89 b 441 -153 390 -6 402 -78 z',\n        },\n        ornamentMordent: {\n            x_min: 0,\n            x_max: 700,\n            y_min: 0,\n            y_max: 497,\n            ha: 497,\n            o: 'm 513 0 b 528 39 526 14 527 27 b 531 72 531 50 531 60 b 528 138 531 94 528 117 l 528 347 b 552 359 537 354 544 359 b 579 338 560 359 569 353 b 674 217 609 297 639 255 b 719 190 690 200 704 190 b 759 215 732 190 744 197 b 940 395 815 279 877 337 b 1001 490 968 422 986 455 b 1008 513 1004 495 1008 505 b 1002 524 1008 517 1007 521 b 968 516 994 530 978 524 b 960 508 965 513 963 510 b 798 356 900 464 848 410 b 778 341 791 347 783 341 b 757 354 772 341 765 346 b 661 475 720 392 690 432 b 611 517 644 504 629 517 b 563 498 598 517 583 511 b 527 471 550 490 539 481 l 527 570 b 492 716 526 619 523 671 b 472 677 480 704 472 694 b 465 399 474 585 468 491 b 439 366 456 387 448 376 b 384 320 415 336 399 320 b 330 367 369 320 354 336 b 325 376 328 369 327 373 b 226 490 291 413 265 456 b 189 505 213 500 202 505 b 157 491 177 505 167 500 b 0 229 75 420 0 346 b 1 202 0 220 0 212 b 22 215 12 203 16 209 b 124 327 55 252 89 289 b 147 343 132 337 140 343 b 171 323 156 343 164 336 b 266 197 196 276 232 236 b 337 157 291 170 314 157 b 410 207 361 157 386 174 b 461 274 428 229 444 252 b 462 166 461 238 461 202 b 513 0 465 108 487 55 z',\n        },\n        ornamentShortTrill: {\n            x_min: 0,\n            x_max: 747,\n            y_min: 0,\n            y_max: 243,\n            ha: 243,\n            o: 'm 379 0 b 428 14 395 0 410 4 b 474 56 445 26 461 39 b 552 157 500 89 526 122 b 566 168 556 163 560 168 b 575 157 569 168 572 166 b 664 36 592 107 628 72 b 733 1 685 13 710 1 b 802 35 757 1 780 13 b 1007 249 871 105 940 177 b 1067 324 1028 272 1054 295 b 1076 340 1068 330 1076 334 b 1073 346 1076 341 1076 343 b 1057 350 1068 348 1063 350 b 1047 347 1053 350 1050 350 b 1001 310 1031 336 1015 324 l 857 157 b 844 143 852 153 848 143 b 835 150 841 143 838 144 b 757 242 815 186 780 209 b 685 298 739 268 713 284 b 641 310 670 305 655 310 b 590 288 625 310 608 304 b 497 179 554 256 527 215 b 480 164 490 170 485 164 b 462 179 474 164 469 168 b 372 295 436 220 405 258 b 278 344 346 324 312 344 b 199 310 252 344 226 334 b 92 196 161 274 128 233 b 0 24 46 148 23 89 b 42 48 22 27 32 37 b 156 168 84 85 114 132 b 196 192 174 184 186 192 b 228 158 206 192 215 181 b 312 36 252 114 282 75 b 379 0 331 12 354 0 z',\n        },\n        ornamentTremblement: {\n            x_min: 0,\n            x_max: 982.17691453624,\n            y_min: 0,\n            y_max: 224,\n            ha: 224,\n            o: 'm 0 0 b 63 36 30 12 48 23 b 157 124 94 66 125 94 b 177 135 164 131 170 135 b 196 122 183 135 189 131 b 268 40 217 94 245 68 b 323 6 288 16 304 6 b 369 20 336 6 350 10 b 412 53 384 29 399 40 b 501 145 442 84 472 114 b 523 158 508 154 516 158 b 543 145 528 158 536 154 b 641 45 576 112 608 78 b 698 17 658 27 677 17 b 729 23 708 17 719 20 b 804 65 756 32 780 46 b 904 154 837 95 871 124 b 920 163 910 160 916 163 b 936 153 924 163 930 160 b 1024 60 965 121 996 92 b 1112 13 1053 29 1080 13 b 1184 39 1135 13 1158 22 b 1359 194 1248 84 1305 138 b 1413 301 1388 223 1403 261 b 1404 323 1417 315 1413 323 b 1391 320 1400 323 1395 321 b 1344 294 1375 314 1358 307 b 1224 186 1305 258 1269 216 b 1194 173 1212 179 1202 173 b 1165 193 1184 173 1175 179 b 1096 271 1145 222 1122 248 b 1001 318 1061 302 1031 318 b 903 268 969 318 937 301 b 806 186 871 239 841 210 b 782 174 796 179 789 174 b 756 193 773 174 765 180 b 652 291 729 232 693 266 b 596 308 634 302 615 308 b 530 278 573 308 552 298 l 415 168 b 393 157 408 161 400 157 b 373 171 387 157 380 161 b 305 245 353 197 330 222 b 248 276 285 266 266 278 b 189 245 229 276 210 266 b 81 144 156 209 120 174 b 0 0 33 109 26 56 z',\n        },\n        ornamentPrecompAppoggTrill: {\n            x_min: -0.11067192132025548,\n            x_max: 1066,\n            y_min: -50,\n            y_max: 533.1706452421108,\n            ha: 583.1706452421108,\n            o: 'm 187 -46 b 213 -14 197 -37 204 -26 b 285 151 251 36 266 94 b 304 189 294 177 297 189 b 337 168 311 189 320 181 b 458 33 386 131 415 76 b 495 12 472 19 484 12 b 531 40 508 12 518 22 b 580 168 557 79 569 124 b 622 235 592 213 603 235 b 683 194 636 235 655 222 b 838 26 737 140 791 86 b 919 -33 860 -1 881 -39 b 984 53 960 -27 971 19 b 1022 156 998 86 1008 122 b 1054 190 1032 179 1041 190 b 1089 167 1063 190 1074 183 b 1208 32 1129 122 1171 78 b 1244 10 1221 17 1231 10 b 1273 22 1253 10 1263 14 b 1496 206 1352 78 1427 137 b 1535 310 1526 236 1535 272 b 1531 359 1535 325 1534 343 b 1496 343 1515 360 1506 351 l 1309 192 b 1269 167 1289 176 1279 167 b 1234 199 1260 167 1251 177 b 1122 324 1200 243 1168 289 b 1074 344 1106 337 1089 344 b 1014 301 1051 344 1030 328 b 952 144 985 252 971 197 b 933 121 946 128 940 121 b 910 137 927 121 920 125 b 850 210 888 161 870 186 b 687 369 799 266 750 325 b 631 390 665 383 647 390 b 567 327 602 390 580 369 b 527 199 554 284 543 242 b 508 168 520 179 514 168 b 482 192 503 168 495 177 b 353 328 444 240 405 292 b 312 343 338 338 324 343 b 266 297 292 343 276 327 b 204 125 248 239 232 180 b 143 79 193 102 173 79 b 92 122 117 79 105 102 b 81 154 86 131 84 143 b 48 423 59 242 50 333 b 45 544 46 464 45 504 b 53 730 45 606 48 668 b 40 768 55 744 52 766 b 13 730 19 770 14 747 b 0 514 7 658 -1 586 b 26 122 3 383 6 252 b 75 -36 35 66 40 10 b 134 -72 92 -59 112 -72 b 187 -46 151 -72 170 -63 z',\n        },\n        ornamentPrecompSlideTrillDAnglebert: {\n            x_min: 0,\n            x_max: 1088,\n            y_min: -380,\n            y_max: 252,\n            ha: 632,\n            o: 'm 560 -539 b 439 -481 527 -497 484 -485 b 354 -461 409 -478 380 -477 b 131 -154 236 -389 161 -285 b 124 -98 127 -135 124 -117 b 196 55 124 -40 148 10 b 308 99 230 86 268 99 b 399 81 337 99 367 92 b 514 22 441 66 477 43 b 619 -30 567 -9 590 -30 b 719 17 642 -30 670 -16 b 861 131 769 52 818 88 b 899 150 874 144 887 150 b 936 117 913 150 926 138 b 965 43 948 94 956 68 b 1007 -1 973 24 978 -1 b 1048 30 1025 -1 1037 16 b 1070 65 1057 40 1064 52 b 1110 148 1084 92 1096 121 b 1145 190 1120 164 1120 190 b 1191 153 1169 192 1179 168 b 1256 29 1218 115 1231 68 b 1292 1 1267 10 1277 1 b 1320 10 1300 1 1309 4 b 1369 48 1339 19 1355 33 b 1515 196 1418 96 1464 148 b 1567 343 1558 238 1567 287 b 1555 363 1565 357 1562 363 b 1539 356 1551 363 1547 360 b 1433 268 1502 330 1466 301 b 1335 171 1401 236 1374 199 b 1310 163 1325 166 1318 163 b 1286 183 1302 163 1293 168 b 1218 311 1264 226 1247 272 b 1164 351 1200 337 1182 351 b 1110 308 1146 351 1128 337 b 1031 176 1084 265 1058 219 b 1015 161 1025 166 1021 161 b 999 179 1009 161 1005 167 b 955 279 985 213 973 248 b 913 307 943 300 930 307 b 887 302 904 307 896 305 b 852 281 874 298 863 291 b 693 167 804 236 747 204 b 612 140 667 150 639 140 b 549 157 592 140 570 145 b 403 220 503 181 452 202 b 271 248 360 236 315 248 b 179 229 239 248 209 242 b 0 -29 65 180 0 85 b 9 -104 0 -53 3 -78 b 397 -526 56 -317 183 -464 b 505 -547 432 -536 468 -547 b 560 -539 524 -547 541 -544 z',\n        },\n        ornamentPrecompSlideTrillBach: {\n            x_min: 0,\n            x_max: 1185,\n            y_min: -380,\n            y_max: 465,\n            ha: 845,\n            o: 'm 624 -544 b 642 -528 638 -543 642 -537 b 639 -514 642 -524 642 -520 b 590 -444 629 -487 609 -467 b 523 -413 573 -422 553 -410 b 498 -415 514 -415 507 -415 b 399 -389 464 -415 431 -405 b 89 -157 281 -330 176 -255 b 72 -117 78 -144 72 -131 b 73 -101 72 -111 72 -107 b 187 186 91 3 147 91 b 246 230 200 216 222 230 b 300 209 262 230 281 223 b 456 48 359 163 403 101 b 540 -10 494 10 518 -10 b 625 59 566 -10 589 13 b 690 148 648 88 668 118 b 711 167 697 160 704 167 b 733 153 719 167 724 163 b 844 14 769 105 808 60 b 903 -42 873 -23 886 -42 b 973 -1 919 -42 937 -27 b 1008 33 986 7 996 20 b 1048 81 1021 48 1035 65 b 1050 37 1048 66 1050 52 b 1047 -24 1050 17 1048 -3 b 1038 -275 1038 -108 1040 -192 l 1037 -289 b 1045 -302 1037 -295 1038 -301 b 1068 -284 1056 -304 1064 -292 b 1084 -242 1076 -271 1081 -256 b 1099 -109 1096 -199 1099 -154 b 1106 158 1099 -19 1106 71 b 1128 187 1113 167 1120 177 b 1168 223 1143 212 1155 223 b 1210 193 1179 223 1191 213 b 1220 183 1214 190 1215 186 b 1329 36 1261 138 1292 84 b 1374 7 1345 16 1358 7 b 1411 20 1384 7 1395 12 b 1479 84 1437 37 1459 59 b 1610 235 1521 135 1564 186 b 1706 403 1655 282 1695 334 b 1614 346 1663 400 1637 373 b 1464 170 1564 287 1515 228 b 1440 150 1453 156 1447 150 b 1414 173 1433 150 1426 158 b 1283 336 1371 228 1333 288 b 1220 366 1261 356 1240 366 b 1148 318 1194 366 1169 350 b 1103 255 1133 297 1119 275 b 1097 301 1102 271 1100 285 b 1099 334 1099 312 1099 324 b 1092 428 1099 367 1094 397 b 1071 647 1087 501 1079 575 b 1058 670 1071 657 1071 670 b 1035 648 1047 670 1038 661 b 1018 516 1024 605 1015 560 b 1041 203 1025 412 1037 307 b 1043 180 1041 196 1043 187 b 992 127 1027 161 1009 143 b 965 111 981 117 972 111 b 936 132 955 111 946 120 b 829 268 900 179 867 225 b 760 317 801 301 780 317 b 691 258 739 317 719 297 b 605 147 664 219 641 177 b 589 138 599 141 593 138 b 572 148 583 138 579 141 b 415 317 520 206 467 261 b 327 372 390 343 366 366 b 300 373 317 373 308 373 b 154 295 239 373 190 348 b 55 138 120 243 85 192 b 0 -53 22 79 0 13 b 160 -317 0 -156 49 -252 b 209 -354 177 -327 192 -343 b 510 -531 305 -419 397 -495 b 593 -547 537 -540 564 -547 b 624 -544 603 -547 613 -546 z',\n        },\n        ornamentPrecompTrillSuffixDandrieu: {\n            x_min: 0,\n            x_max: 1003,\n            y_min: -20,\n            y_max: 521,\n            ha: 541,\n            o: 'm 791 -16 b 844 33 812 -3 829 14 b 981 271 900 107 937 190 b 994 288 984 278 985 288 b 1009 269 1004 288 1007 278 b 1077 112 1034 217 1051 163 b 1158 43 1103 62 1129 43 b 1231 69 1179 43 1204 55 b 1348 189 1280 98 1315 143 b 1444 451 1407 271 1444 357 b 1431 547 1444 482 1440 514 b 1188 750 1401 665 1299 750 b 1158 747 1178 750 1168 749 b 1079 684 1119 742 1089 727 b 1063 632 1076 665 1071 648 b 1056 609 1058 622 1056 615 b 1071 599 1056 602 1060 599 b 1086 600 1076 599 1080 600 b 1130 605 1102 603 1116 605 b 1244 569 1171 605 1210 595 b 1349 346 1322 511 1349 433 b 1348 312 1349 334 1349 324 b 1289 197 1345 266 1325 228 b 1238 174 1270 181 1253 174 b 1188 215 1220 174 1202 187 b 1145 308 1172 245 1159 276 b 1096 413 1129 343 1120 382 b 1053 438 1084 431 1068 438 b 1011 413 1038 438 1022 431 b 955 324 989 384 971 354 b 850 127 920 258 886 192 b 838 112 847 121 842 112 b 824 128 828 109 825 121 b 802 193 815 150 809 171 b 730 400 779 264 766 337 b 688 431 719 420 703 431 b 647 403 674 431 660 422 b 606 338 632 383 619 361 b 513 167 575 282 546 223 b 480 122 503 150 498 122 b 452 171 459 122 459 153 b 420 255 442 199 432 228 b 337 408 399 308 380 364 b 276 436 317 428 297 436 b 215 397 253 436 230 423 b 23 72 148 289 81 184 b 0 29 17 59 0 40 b 7 17 0 23 1 20 b 59 58 26 7 46 39 b 190 276 111 127 143 206 b 216 301 202 292 207 301 b 245 279 223 301 232 294 b 311 166 278 248 292 206 b 367 16 331 117 346 65 b 402 -19 377 -7 387 -19 b 438 -4 412 -19 423 -13 b 518 88 474 17 495 55 b 628 284 562 150 592 216 b 657 223 648 266 651 243 b 717 13 677 154 696 84 b 755 -29 726 -16 737 -29 b 791 -16 765 -29 776 -24 z',\n        },\n        ornamentPrecompDoubleCadenceUpperPrefix: {\n            x_min: 0,\n            x_max: 1246,\n            y_min: -30,\n            y_max: 296.0302860502196,\n            ha: 326.0302860502196,\n            o: 'm 360 -43 b 559 59 445 -43 503 7 b 698 236 615 111 652 179 b 714 248 704 243 710 248 b 727 235 719 248 721 243 l 848 42 b 883 12 860 22 870 12 b 917 32 891 12 903 19 b 946 62 927 42 939 50 b 1037 192 972 108 1009 147 b 1057 210 1044 204 1051 210 b 1076 190 1063 210 1068 203 l 1176 12 b 1215 -19 1188 -9 1201 -19 b 1250 -6 1225 -19 1237 -14 b 1284 27 1264 3 1274 16 b 1380 190 1323 78 1351 135 b 1395 210 1384 197 1385 210 b 1413 190 1405 210 1410 197 b 1508 40 1436 134 1467 85 b 1564 3 1529 14 1547 3 b 1617 32 1580 3 1597 12 b 1767 238 1678 92 1719 167 b 1794 310 1781 259 1791 282 b 1752 294 1776 317 1764 304 b 1656 164 1711 258 1689 206 b 1629 144 1646 151 1637 144 b 1603 161 1620 144 1613 150 b 1502 315 1562 207 1525 258 b 1452 357 1490 344 1470 357 b 1397 320 1431 357 1411 344 b 1316 170 1368 271 1345 219 b 1280 127 1306 154 1303 127 b 1244 171 1256 127 1254 154 b 1145 337 1210 226 1179 282 b 1110 363 1135 354 1122 363 b 1070 338 1097 363 1084 354 b 1050 311 1063 330 1057 320 b 959 181 1017 271 992 223 b 939 167 950 173 945 167 b 920 184 933 167 927 173 b 818 343 887 238 852 291 b 759 395 795 377 778 395 b 701 344 742 395 724 377 b 698 338 700 341 700 340 b 544 154 652 272 605 207 b 412 98 501 117 458 98 b 304 130 377 98 341 108 b 95 373 204 187 144 275 b 58 426 85 393 82 428 b 19 366 26 426 26 389 b 0 307 13 346 0 327 b 4 287 0 300 1 294 b 174 36 49 194 91 102 b 360 -43 230 -9 289 -43 z',\n        },\n        ornamentPrecompDoubleCadenceUpperPrefixTurn: {\n            x_min: 0,\n            x_max: 1226,\n            y_min: -237,\n            y_max: 436,\n            ha: 673,\n            o: 'm 1279 -341 b 1293 -252 1293 -307 1295 -278 b 1277 36 1287 -156 1282 -59 l 1273 118 b 1318 176 1289 137 1303 157 b 1349 203 1332 193 1342 203 b 1378 168 1359 203 1367 192 b 1456 35 1401 122 1428 78 b 1511 -12 1476 3 1493 -12 b 1568 23 1526 -12 1544 0 b 1597 53 1578 32 1588 42 b 1705 186 1629 101 1669 143 b 1761 284 1728 216 1751 246 b 1765 300 1763 288 1765 295 b 1763 307 1765 302 1765 305 b 1737 302 1754 311 1744 308 b 1718 287 1729 298 1725 292 b 1598 145 1673 245 1637 194 b 1578 130 1590 135 1584 130 b 1557 147 1571 130 1565 135 b 1447 321 1516 202 1488 265 b 1403 351 1433 341 1417 351 b 1358 323 1388 351 1372 341 b 1269 209 1329 285 1299 248 b 1254 521 1264 314 1259 418 b 1228 616 1253 554 1247 588 b 1218 628 1224 621 1223 628 l 1215 628 b 1201 613 1210 626 1202 619 b 1200 600 1200 609 1200 605 l 1200 586 b 1211 348 1204 507 1207 428 b 1217 166 1214 288 1215 226 b 1202 181 1212 168 1208 174 b 1094 334 1168 233 1130 284 b 1048 366 1079 356 1064 366 b 1004 331 1034 366 1018 354 b 904 154 969 275 930 220 b 873 202 887 171 880 187 b 778 356 845 256 819 311 b 737 379 763 372 750 379 b 698 353 724 379 711 370 l 621 232 b 415 114 570 154 495 114 b 302 138 377 114 340 121 b 73 400 187 192 117 284 b 55 420 69 415 62 420 b 42 410 50 420 45 416 b 0 292 23 373 0 334 b 4 262 0 282 1 272 b 168 39 32 168 92 99 b 359 -26 225 -6 292 -26 b 585 76 446 -26 530 10 b 668 202 616 115 641 160 b 693 228 680 219 687 228 b 720 203 700 228 707 219 b 801 63 752 160 775 111 b 844 7 812 42 818 7 b 910 66 877 6 894 39 b 923 94 916 75 919 85 b 995 219 945 137 968 179 b 1025 184 1009 210 1017 197 b 1119 56 1054 141 1087 98 b 1166 20 1138 32 1152 20 b 1215 50 1181 20 1195 30 b 1221 56 1217 52 1218 55 b 1228 -163 1223 -17 1225 -89 b 1279 -341 1231 -223 1251 -278 z',\n        },\n        ornamentPrecompTrillLowerSuffix: {\n            x_min: 0,\n            x_max: 833,\n            y_min: -309,\n            y_max: 319,\n            ha: 628,\n            o: 'm 778 -444 b 801 -445 785 -444 793 -445 b 1037 -338 894 -445 969 -397 b 1200 37 1149 -240 1200 -109 b 1084 406 1200 171 1172 300 b 1024 444 1064 431 1043 444 b 960 390 999 444 978 426 b 841 163 923 314 886 236 b 812 128 832 150 827 128 b 786 167 796 130 793 153 b 660 418 744 251 716 341 b 599 459 639 445 619 459 b 541 410 577 459 557 444 b 439 197 507 340 474 269 b 422 179 435 190 435 179 b 338 393 392 251 379 328 b 275 439 320 423 298 439 b 212 396 253 439 230 425 b 71 219 170 333 128 268 b 0 45 17 173 16 112 b 68 98 32 62 50 78 b 194 264 112 150 153 209 b 230 292 209 282 219 292 b 264 261 240 292 251 282 b 274 242 268 255 269 248 b 346 46 304 179 325 112 b 376 10 351 32 354 10 b 412 35 392 10 403 22 b 452 107 429 56 441 82 b 541 291 481 168 511 230 b 556 307 547 302 552 307 b 573 295 562 307 567 302 b 624 217 595 272 611 246 b 721 1 657 145 685 72 b 755 -27 732 -19 742 -27 b 786 -16 765 -27 775 -24 b 857 73 819 7 840 39 b 952 256 887 134 920 194 b 978 289 963 279 969 289 b 1009 262 985 289 994 281 b 1030 235 1017 253 1024 245 b 1110 -4 1071 161 1099 81 b 1116 -68 1113 -26 1116 -48 b 1009 -243 1116 -140 1090 -200 b 848 -291 956 -272 901 -291 b 730 -261 809 -291 770 -282 b 696 -248 714 -252 703 -248 b 671 -284 684 -248 678 -258 l 662 -312 b 657 -357 658 -330 657 -344 b 744 -439 657 -403 683 -425 z',\n        },\n        brassScoop: {\n            x_min: -0.4444444444444445,\n            x_max: 312,\n            y_min: -390,\n            y_max: 28,\n            ha: 418,\n            o: 'm 0 -562 b 393 -256 171 -504 307 -412 b 449 -39 431 -189 449 -115 b 448 -1 449 -26 449 -14 b 433 40 446 14 448 40 b 408 -3 410 40 412 14 b 396 -66 403 -23 402 -46 b 45 -397 346 -243 209 -337 b 0 -451 13 -409 1 -423 b 0 -562 -1 -485 0 -520 z',\n        },\n        brassDoitMedium: {\n            x_min: -0.32815253965710617,\n            x_max: 476.21251177608565,\n            y_min: -50,\n            y_max: 333.1535583875376,\n            ha: 383.1535583875376,\n            o: 'm 16 -72 b 27 -71 19 -72 23 -72 b 215 -33 89 -56 153 -48 b 521 114 327 -7 435 35 b 685 432 615 199 691 295 b 670 480 684 449 688 475 b 642 441 654 482 648 456 b 403 183 599 321 513 240 b 79 89 301 130 192 105 b 0 -1 -12 76 0 76 b 0 -50 0 -17 1 -33 b 16 -72 0 -65 3 -72 z',\n        },\n        brassFallLipShort: {\n            x_min: 0,\n            x_max: 298,\n            y_min: -344,\n            y_max: 65,\n            ha: 409,\n            o: 'm 396 -495 b 420 -461 412 -487 418 -474 b 429 -382 428 -435 429 -409 b 426 -330 429 -364 428 -347 b 285 -6 410 -209 356 -104 b 98 94 239 59 173 94 b 39 86 79 94 58 92 b 0 49 20 81 0 73 l 0 -52 b 10 -69 0 -62 1 -69 b 20 -68 13 -69 16 -69 b 88 -56 45 -59 66 -56 b 261 -160 156 -56 213 -95 b 396 -495 333 -259 382 -369 z',\n        },\n        brassLiftMedium: {\n            x_min: 0,\n            x_max: 807,\n            y_min: 0,\n            y_max: 838,\n            ha: 838,\n            o: 'm 50 0 b 55 1 52 0 53 0 b 58 23 65 7 59 16 b 55 58 56 36 55 48 b 130 117 55 99 75 112 b 220 213 202 121 220 141 b 315 308 220 289 238 308 l 336 308 b 408 380 393 310 406 321 b 461 452 409 438 416 452 b 485 451 468 452 477 451 b 569 510 531 448 556 464 b 573 543 572 520 572 531 b 657 619 580 605 595 618 b 698 621 670 619 684 619 b 788 700 749 625 778 649 b 798 778 792 726 793 752 b 873 857 806 841 809 845 b 985 950 927 867 973 887 b 1084 1047 1002 1035 1004 1034 b 1162 1128 1133 1056 1162 1087 b 1146 1182 1162 1145 1158 1164 b 1125 1207 1140 1191 1136 1207 l 1122 1207 b 1110 1191 1113 1205 1110 1198 b 1112 1174 1110 1185 1112 1178 b 1048 1110 1109 1126 1096 1113 b 1028 1109 1043 1110 1035 1109 b 939 1022 969 1102 948 1081 b 845 922 929 949 917 936 b 746 812 773 909 753 886 b 744 780 744 802 744 791 b 635 681 737 700 717 683 b 524 583 553 680 536 665 b 439 510 514 520 503 510 b 357 431 377 510 360 492 l 357 406 b 314 364 356 379 343 364 b 238 361 288 364 264 364 b 173 300 202 357 180 334 b 167 245 168 281 167 262 b 105 174 166 192 157 180 b 75 171 95 173 85 171 b 6 112 30 166 14 153 b 0 73 1 98 0 85 b 37 10 0 45 13 26 b 50 0 42 7 46 0 z',\n        },\n        brassFallRoughMedium: {\n            x_min: 0,\n            x_max: 791,\n            y_min: 0,\n            y_max: 819,\n            ha: 819,\n            o: 'm 1117 0 b 1139 101 1129 26 1139 71 b 1138 121 1139 109 1139 115 b 1084 193 1125 171 1110 193 b 1044 183 1073 193 1060 189 b 1022 177 1035 179 1028 177 b 1007 209 1012 177 1008 186 b 876 324 1004 292 959 330 b 799 317 850 321 825 320 b 759 354 772 314 755 320 b 760 373 760 360 760 366 b 759 392 760 379 760 384 b 681 477 753 451 730 477 b 654 474 672 477 664 475 b 606 467 638 471 622 468 b 586 465 599 465 592 465 b 564 481 570 465 564 469 b 569 505 564 487 566 495 b 575 553 572 521 575 537 b 572 585 575 564 573 575 b 481 665 560 657 539 668 b 412 665 458 664 435 665 b 382 690 392 667 382 672 b 383 700 382 693 383 696 b 386 773 387 724 387 749 b 297 858 382 828 351 857 b 229 861 274 858 251 858 b 190 897 207 863 193 871 b 163 1012 186 936 180 976 b 79 1084 145 1050 124 1084 b 66 1083 75 1084 71 1083 b 43 1096 49 1081 43 1087 b 48 1112 43 1100 45 1106 b 53 1130 52 1119 53 1125 b 39 1169 53 1145 45 1158 b 26 1179 36 1175 30 1179 b 16 1171 22 1179 17 1176 b 0 1103 10 1149 0 1126 b 9 1067 0 1092 1 1079 b 91 1021 26 1031 52 1018 b 145 978 122 1024 141 1011 b 156 913 147 956 151 935 b 291 795 170 831 210 795 b 346 768 337 795 346 796 b 344 743 346 760 344 753 b 343 716 344 733 343 724 b 455 600 343 651 390 602 b 505 605 471 599 490 605 b 528 598 514 605 523 603 b 536 579 534 592 536 586 b 524 523 536 562 526 541 b 523 505 524 517 523 511 b 621 405 523 442 560 405 b 639 406 626 405 634 406 b 677 413 652 408 664 410 b 701 416 687 415 696 416 b 721 392 716 416 721 410 b 720 373 721 386 720 380 b 831 255 714 301 759 252 b 897 261 854 255 876 261 b 926 262 909 261 919 262 b 969 197 963 262 965 252 b 971 184 969 193 971 189 b 1031 115 979 137 998 115 b 1071 122 1043 115 1056 118 b 1096 130 1079 125 1086 127 b 1087 59 1094 107 1087 82 b 1117 0 1087 37 1094 17 z',\n        },\n        brassBend: {\n            x_min: 0,\n            x_max: 381,\n            y_min: 0,\n            y_max: 367,\n            ha: 367,\n            o: 'm 298 0 b 472 50 359 0 418 14 b 537 135 501 71 530 92 b 543 216 543 163 543 190 l 543 266 b 544 308 543 281 543 295 b 549 433 546 354 549 395 b 543 507 549 459 547 482 b 533 528 541 516 544 528 b 511 508 524 528 514 520 b 508 478 510 498 508 488 b 504 318 507 425 504 372 b 505 264 504 300 505 282 b 446 181 505 220 484 199 b 294 150 396 160 344 150 b 92 194 226 150 158 167 b 45 269 62 207 45 230 b 46 359 46 300 46 328 b 37 497 46 405 45 451 b 27 523 36 507 37 523 b 4 498 14 524 6 513 b 3 481 3 492 3 487 b 0 409 1 456 0 433 b 4 228 0 348 4 288 b 3 177 4 210 4 194 b 68 53 1 125 20 84 b 200 10 108 27 154 17 b 298 0 233 4 266 0 z',\n        },\n        brassMuteClosed: {\n            x_min: 0,\n            x_max: 274,\n            y_min: 0,\n            y_max: 260,\n            ha: 260,\n            o: 'm 203 0 b 209 1 206 0 207 0 b 216 13 215 4 216 9 l 215 27 l 215 153 b 216 161 216 156 216 158 b 372 164 268 163 318 164 b 395 184 383 164 395 166 l 395 189 b 357 229 392 209 386 229 b 219 228 311 229 265 228 l 223 310 b 209 357 225 328 219 344 b 189 374 203 364 197 374 b 184 373 187 374 186 373 b 177 359 179 372 177 366 l 177 348 l 173 222 l 39 222 b 0 206 12 222 0 219 b 10 174 0 199 3 189 b 46 157 19 157 30 157 b 108 160 68 158 88 160 b 171 161 130 161 150 161 l 167 58 b 184 16 167 40 171 26 b 203 0 192 12 196 0 z',\n        },\n        brassMuteOpen: {\n            x_min: 1,\n            x_max: 313.01193341111656,\n            y_min: 0,\n            y_max: 309,\n            ha: 309,\n            o: 'm 265 0 b 451 189 363 7 452 88 l 451 215 b 348 383 441 285 405 343 b 209 445 288 426 248 445 b 84 379 168 445 132 420 b 69 364 79 373 73 369 b 1 213 30 323 1 275 b 230 0 1 88 94 0 z m 210 62 b 128 73 181 62 154 66 b 40 171 71 91 42 125 b 52 226 40 187 45 206 b 197 374 79 295 130 344 b 228 382 207 380 217 382 b 300 361 252 382 276 370 b 374 308 328 350 353 331 b 410 223 397 284 410 253 b 393 163 410 202 405 181 b 210 62 354 91 288 63 z',\n        },\n        brassFlip: {\n            x_min: 0,\n            x_max: 402,\n            y_min: 0,\n            y_max: 361,\n            ha: 361,\n            o: 'm 579 0 b 511 153 579 68 557 117 b 52 504 359 271 206 387 b 29 520 45 510 39 520 b 20 517 26 520 23 518 b 0 477 3 510 0 494 l 0 125 b 17 20 1 92 1 56 b 40 84 37 40 40 60 b 42 287 40 151 42 219 l 42 363 z',\n        },\n        brassJazzTurn: {\n            x_min: 0,\n            x_max: 646,\n            y_min: 0,\n            y_max: 212,\n            ha: 212,\n            o: 'm 310 0 b 367 33 327 0 344 10 b 389 55 374 40 382 49 b 490 145 423 85 456 114 b 507 154 495 151 501 154 b 524 144 513 154 517 151 b 598 72 547 120 575 98 b 700 24 625 42 662 24 b 765 43 721 24 744 30 b 893 147 812 72 855 105 b 930 212 910 166 923 186 b 912 215 923 213 917 215 b 871 199 896 215 883 209 b 812 153 852 183 832 167 b 789 144 805 148 796 144 b 773 156 782 144 776 147 b 691 251 757 199 720 222 b 603 301 658 282 631 301 b 527 258 580 301 556 288 b 420 156 494 222 455 190 b 399 143 412 147 405 143 b 377 157 392 143 386 147 b 259 282 340 200 300 242 b 219 305 245 298 232 305 b 177 279 204 305 192 297 b 55 127 137 228 95 177 b 0 52 36 104 20 79 b 14 50 6 50 10 50 b 53 66 32 50 45 58 b 115 131 75 88 98 108 b 135 148 124 143 130 148 b 157 132 141 148 148 143 b 252 33 186 96 219 65 b 310 0 275 12 292 0 z',\n        },\n        brassSmear: {\n            x_min: 0,\n            x_max: 334,\n            y_min: 0,\n            y_max: 151,\n            ha: 151,\n            o: 'm 321 0 b 475 125 390 0 436 43 b 481 143 478 131 481 137 b 475 154 481 147 480 151 b 449 148 468 158 458 154 b 395 132 432 137 413 132 b 343 140 377 132 360 137 b 229 194 301 148 266 173 b 168 217 206 209 186 217 b 109 192 148 217 130 209 b 0 26 59 148 32 89 b 59 63 32 29 45 48 b 98 84 72 78 84 84 b 130 73 108 84 118 81 b 213 26 157 58 183 37 b 321 0 255 9 289 0 z',\n        },\n        stringsDownBow: {\n            x_min: 0,\n            x_max: 306,\n            y_min: -0.09607201951262866,\n            y_max: 366,\n            ha: 366.09607201951263,\n            o: 'm 405 0 b 425 17 413 -1 420 9 b 439 66 435 32 439 48 b 441 268 439 137 441 202 b 436 412 441 314 439 361 l 435 413 b 423 469 435 436 431 456 b 344 508 406 501 373 501 b 204 527 298 520 251 527 b 60 498 156 527 108 518 b 7 438 32 485 10 468 l 7 426 b 4 337 7 396 7 367 b 0 140 0 272 0 206 b 1 42 0 107 0 73 b 13 3 1 27 -3 4 b 40 39 29 3 35 24 b 42 53 42 43 40 49 b 49 141 48 84 49 112 b 48 215 49 167 48 192 b 49 252 48 228 48 240 l 49 312 b 130 343 72 331 99 340 b 206 347 156 346 180 347 b 372 314 262 347 318 338 l 390 307 l 390 245 b 390 138 392 212 390 176 b 397 23 390 101 392 62 b 405 0 399 14 393 1 z',\n        },\n        stringsUpBow: {\n            x_min: 0,\n            x_max: 219.2842808242076,\n            y_min: 0,\n            y_max: 489,\n            ha: 489,\n            o: 'm 151 0 b 184 42 170 12 180 26 b 297 554 223 212 261 382 b 315 690 305 598 318 645 b 304 704 315 697 311 704 b 276 670 288 704 282 697 b 157 131 236 490 196 311 l 157 144 b 73 526 134 276 104 396 b 30 677 60 576 52 638 b 13 694 26 684 22 694 b 0 674 9 694 0 691 l 0 671 b 10 603 3 649 6 626 b 105 174 42 461 72 317 b 150 0 117 117 128 58 z',\n        },\n        stringsHarmonic: {\n            x_min: 0,\n            x_max: 191,\n            y_min: 0,\n            y_max: 202,\n            ha: 202,\n            o: 'm 143 0 b 275 122 217 0 275 53 b 127 291 275 206 202 291 b 0 154 63 291 0 222 b 143 0 0 76 71 0 z m 122 68 b 43 105 89 66 59 75 b 39 124 40 111 39 117 b 79 199 39 148 56 180 b 145 226 101 216 122 226 b 199 210 163 226 180 220 b 235 150 223 196 235 173 b 203 92 235 128 225 107 b 122 68 181 76 150 68 z',\n        },\n        pluckedSnapPizzicatoAbove: {\n            x_min: 0,\n            x_max: 201,\n            y_min: 0,\n            y_max: 325,\n            ha: 325,\n            o: 'm 171 0 b 289 99 240 0 289 45 b 258 183 289 130 274 156 b 174 269 236 217 203 240 l 174 408 b 174 429 174 415 176 422 b 131 468 168 451 153 468 b 117 451 120 468 117 461 b 118 429 117 444 118 435 b 115 307 117 389 115 347 b 0 166 59 295 0 223 b 171 0 0 85 89 0 z m 134 55 b 52 131 84 55 52 85 b 115 233 52 179 81 209 b 114 192 114 220 114 206 b 174 120 114 137 114 137 l 174 228 b 233 148 200 207 223 183 b 236 130 235 143 236 135 b 197 72 236 105 223 85 b 134 55 177 60 157 55 z',\n        },\n        pluckedSnapPizzicatoBelow: {\n            x_min: 0,\n            x_max: 211,\n            y_min: 0,\n            y_max: 307,\n            ha: 307,\n            o: 'm 145 7 b 163 0 153 3 158 0 b 173 23 170 0 173 7 l 173 140 l 170 140 l 170 163 l 171 163 b 206 170 179 164 193 166 b 304 287 264 186 304 233 b 281 354 304 308 297 333 b 118 442 240 412 186 439 b 0 324 69 442 0 370 b 115 176 0 266 55 202 l 115 56 b 145 7 114 33 125 19 z m 115 220 b 62 256 92 223 73 230 b 53 292 56 269 53 281 b 78 344 53 311 60 328 b 168 384 105 372 135 384 b 213 376 183 384 199 382 b 253 321 239 366 253 346 b 246 291 253 311 251 301 b 170 226 230 256 203 236 l 170 258 b 148 305 171 278 163 292 b 128 315 143 310 135 315 l 124 315 b 115 301 117 314 115 308 z',\n        },\n        pluckedLeftHandPizzicato: {\n            x_min: 0,\n            x_max: 271,\n            y_min: 0,\n            y_max: 284,\n            ha: 284,\n            o: 'm 213 0 b 223 14 222 0 223 7 b 222 35 223 22 222 29 l 222 176 b 373 170 272 174 323 170 b 390 180 382 170 390 171 l 390 184 b 347 232 386 207 382 232 b 219 238 307 233 266 235 l 219 364 b 171 409 219 395 193 409 b 156 393 160 409 156 402 b 158 370 156 384 158 376 l 158 240 b 16 239 115 240 66 239 b 0 226 7 239 0 238 l 0 223 b 50 179 1 203 29 179 b 158 177 86 179 122 179 l 158 63 b 161 29 158 52 158 40 b 213 0 166 -1 194 1 z',\n        },\n        keyboardPedalPed: {\n            x_min: 0,\n            x_max: 944,\n            y_min: -13,\n            y_max: 550,\n            ha: 563,\n            o: 'm 22 0 b 109 78 53 0 105 46 l 144 333 b 163 376 147 347 140 372 b 364 465 238 390 301 426 b 454 599 416 497 454 540 b 452 618 454 605 454 612 b 320 770 442 694 396 747 b 248 779 295 778 272 779 b 193 778 229 779 212 779 b 160 780 181 778 167 775 b 137 792 153 789 144 791 b 109 789 128 792 118 789 b 7 719 59 789 48 737 b 23 708 16 714 20 708 b 36 710 29 710 33 710 b 53 684 52 710 53 698 l 53 674 b 43 386 53 577 53 482 b 20 164 36 312 30 238 b 1 30 14 120 7 75 b 0 19 0 26 0 22 b 22 0 0 9 4 0 z m 171 425 b 156 442 160 425 156 429 b 157 475 157 452 157 464 b 164 602 161 517 164 560 b 161 698 164 635 163 667 b 184 729 161 720 167 729 l 193 729 b 348 563 278 719 348 641 b 346 539 348 554 347 547 b 171 425 328 459 229 422 z m 979 6 b 1008 13 986 6 995 9 b 1081 101 1047 29 1079 46 b 1116 449 1087 217 1104 333 b 1143 654 1123 518 1133 586 b 1148 685 1145 664 1148 675 b 1140 704 1148 693 1146 700 b 1107 716 1130 713 1119 716 b 1056 706 1092 716 1073 710 b 1037 671 1035 703 1038 685 b 1004 439 1025 595 1014 517 b 986 419 1001 428 999 419 b 979 419 985 419 982 420 b 935 426 965 423 949 425 b 795 376 884 426 838 405 b 664 153 714 323 664 249 b 665 130 664 145 665 138 b 753 29 671 65 704 29 b 815 40 773 29 792 33 b 975 147 873 65 923 101 b 965 45 971 108 968 76 b 979 6 963 17 966 6 z m 393 -17 b 634 145 494 16 579 52 b 638 160 636 151 638 156 b 625 168 638 166 634 168 b 621 167 624 168 622 168 b 524 118 582 164 544 160 b 495 79 517 104 505 92 b 435 33 471 49 452 33 b 380 96 416 33 397 55 b 369 145 373 114 369 131 b 442 225 369 186 395 213 b 468 232 451 228 459 229 b 654 344 539 255 606 285 b 677 395 667 360 677 376 b 672 415 677 402 675 408 b 612 459 661 442 639 455 b 589 461 602 461 592 461 b 348 328 500 461 409 408 b 269 120 302 268 269 199 b 379 -19 269 45 318 -19 b 393 -17 383 -19 389 -19 z m 395 240 b 494 383 418 300 452 344 l 521 405 b 544 419 528 409 536 418 b 554 415 547 419 550 418 b 570 383 564 406 570 396 l 570 379 b 552 331 570 360 562 344 b 395 240 511 285 462 253 z m 827 89 b 792 111 815 89 804 96 b 766 204 775 131 766 158 b 845 360 772 256 799 314 b 871 372 854 369 863 372 b 897 366 880 372 888 369 b 978 279 942 353 963 320 b 976 259 981 272 981 265 b 858 104 942 203 909 147 b 827 89 847 94 837 89 z m 1282 12 b 1336 35 1303 14 1320 23 b 1359 71 1351 45 1359 58 b 1338 102 1359 82 1352 95 b 1254 130 1312 118 1284 130 b 1187 88 1223 130 1202 109 b 1178 65 1182 81 1178 72 b 1195 37 1178 55 1182 45 b 1282 12 1223 23 1253 19 z',\n        },\n        keyboardPedalUp: {\n            x_min: 0,\n            x_max: 436.6015132318337,\n            y_min: 0,\n            y_max: 461,\n            ha: 461,\n            o: 'm 330 0 b 334 1 331 0 333 0 b 340 12 338 4 340 7 l 338 26 b 340 264 338 105 338 184 b 526 95 400 206 461 148 b 559 71 536 88 547 71 b 564 72 560 71 563 71 b 580 121 580 79 580 102 l 580 127 b 543 203 585 158 573 184 b 472 259 518 219 495 238 l 445 285 b 590 292 494 288 541 291 b 622 318 609 294 618 302 b 628 359 625 331 626 346 b 586 402 632 393 621 405 b 464 395 546 399 504 396 l 559 491 b 567 524 567 500 567 510 b 564 543 567 527 567 536 b 539 596 559 563 560 590 b 494 564 521 600 508 577 b 340 413 442 514 390 464 l 340 560 b 287 664 340 600 321 632 b 271 518 274 612 272 566 b 268 445 269 494 269 469 b 117 569 219 488 168 530 b 96 579 109 575 102 579 b 85 560 89 579 85 573 b 124 446 85 518 82 477 b 209 380 153 426 181 403 b 45 374 154 377 99 376 b 0 324 9 374 0 359 b 63 266 0 265 1 265 b 144 272 89 269 117 272 l 196 272 b 108 193 167 246 138 219 b 60 135 76 164 60 151 b 99 73 60 121 73 105 b 104 68 101 72 102 71 b 114 58 107 60 111 58 b 130 66 120 58 124 62 b 259 186 173 107 217 145 b 256 117 259 163 256 140 b 311 13 256 72 271 37 b 330 0 317 10 323 0 z',\n        },\n        pictChokeCymbal: {\n            x_min: 1,\n            x_max: 147,\n            y_min: 0,\n            y_max: 242,\n            ha: 242,\n            o: 'm 79 4 b 207 158 153 32 192 88 b 212 200 210 173 212 187 b 143 336 212 253 187 298 b 98 348 131 344 115 348 b 4 295 60 348 16 327 b 1 276 1 289 1 282 b 9 249 1 266 3 258 b 121 183 35 206 72 183 b 156 186 132 183 144 183 b 26 53 134 115 91 73 b 7 39 13 49 7 45 b 19 20 7 33 12 27 b 59 0 30 9 43 0 b 79 4 65 0 72 1 z',\n        },\n        wiggleArpeggiatoUp: {\n            x_min: -22,\n            x_max: 300,\n            y_min: 0,\n            y_max: 176,\n            ha: 176,\n            o: 'm 173 4 b 196 0 180 1 189 0 b 246 26 215 0 230 9 b 301 117 271 53 285 85 b 312 131 305 125 307 131 b 327 124 315 131 321 128 b 373 86 341 112 353 101 b 412 69 389 75 402 69 b 432 94 425 69 432 79 b 373 181 432 117 413 154 b 235 252 323 216 285 245 b 220 253 229 253 225 253 b 168 215 196 253 181 240 b 111 112 151 180 140 141 b 94 102 105 105 99 102 b 78 111 89 102 84 105 b 0 181 55 135 35 160 b -32 153 -20 194 -32 168 b 0 86 -32 124 -32 109 b 94 36 22 71 73 46 b 173 4 134 16 131 17 z',\n        },\n        arpeggiatoUp: {\n            x_min: 0,\n            x_max: 262,\n            y_min: 0,\n            y_max: 1459,\n            ha: 1459,\n            o: 'm 190 0 b 160 63 187 29 170 45 b 145 108 150 81 145 95 b 183 163 145 128 157 145 b 300 246 222 190 262 216 b 347 318 333 272 347 295 b 301 393 347 341 331 364 b 258 413 289 403 272 408 b 145 449 220 425 183 436 b 117 464 135 452 120 452 b 140 491 115 477 128 484 b 294 593 192 526 243 557 b 330 647 318 611 330 626 b 314 693 330 660 324 675 b 262 736 302 714 285 729 b 170 763 230 744 200 753 b 122 783 153 768 125 768 b 160 831 120 804 143 818 b 288 922 202 861 246 890 b 333 999 318 945 333 972 b 266 1083 333 1032 310 1064 b 189 1115 240 1094 215 1103 b 122 1178 145 1133 122 1153 b 168 1250 122 1200 138 1223 l 180 1257 b 269 1333 210 1283 240 1306 b 305 1405 294 1356 305 1381 b 284 1469 305 1426 298 1447 b 228 1525 269 1492 251 1511 b 183 1600 197 1545 183 1571 b 190 1640 183 1613 184 1626 b 197 1670 193 1650 194 1660 b 272 1735 213 1719 230 1735 b 295 1734 279 1735 287 1735 b 323 1732 305 1732 314 1732 b 350 1731 333 1732 341 1732 b 377 1742 369 1729 377 1732 b 370 1761 377 1747 374 1754 l 301 1898 b 217 2066 274 1954 248 2012 b 186 2101 204 2089 196 2101 b 154 2069 177 2101 167 2091 b 12 1824 105 1987 59 1907 b 0 1787 4 1810 0 1797 b 59 1744 0 1761 20 1745 b 160 1738 92 1744 125 1740 b 145 1692 156 1721 151 1706 b 135 1633 138 1672 135 1652 b 184 1518 135 1591 151 1552 b 229 1475 199 1503 213 1488 b 259 1431 249 1456 259 1444 b 229 1388 259 1420 249 1407 b 151 1325 203 1365 177 1345 b 105 1279 134 1310 118 1296 b 73 1202 84 1251 73 1227 b 108 1123 73 1176 85 1152 b 255 1031 148 1077 199 1051 b 282 1014 274 1025 282 1021 b 262 991 282 1008 275 1001 b 151 914 226 963 189 939 b 79 851 125 896 99 877 b 63 809 69 837 63 824 b 79 769 63 796 68 783 b 202 697 111 729 154 710 b 266 670 225 690 266 688 b 210 622 266 648 232 635 b 82 534 167 593 120 570 b 55 491 63 518 55 505 b 79 448 55 478 63 465 b 255 361 127 395 192 380 b 288 343 269 359 288 357 b 266 312 288 331 275 320 b 144 223 229 278 184 253 b 85 134 104 193 85 166 b 118 53 85 111 96 85 b 190 0 135 29 160 14 z',\n        },\n        arpeggiatoDown: {\n            x_min: 0,\n            x_max: 218,\n            y_min: 0,\n            y_max: 1440,\n            ha: 1440,\n            o: 'm 161 16 b 310 261 210 98 259 180 b 314 275 312 266 314 271 b 302 295 314 282 310 289 b 252 311 287 308 269 311 b 217 310 240 311 229 310 b 190 333 202 310 194 315 b 151 412 186 363 171 389 b 102 501 120 452 102 477 b 150 588 102 524 118 547 b 161 603 154 592 158 598 b 181 661 176 622 181 641 b 173 704 181 675 179 690 b 86 795 156 746 121 770 b 53 829 63 811 53 819 b 78 868 53 840 62 851 b 102 888 85 876 94 883 b 180 956 128 912 156 933 b 216 1028 204 979 216 1002 b 203 1081 216 1044 212 1061 b 115 1171 186 1123 148 1145 b 75 1221 88 1191 75 1207 b 114 1272 75 1237 88 1251 b 173 1308 132 1284 154 1296 b 226 1339 190 1318 209 1328 b 265 1405 253 1359 265 1380 b 258 1447 265 1418 264 1431 b 154 1541 242 1499 199 1521 b 109 1581 124 1555 109 1567 b 141 1627 109 1594 121 1608 b 204 1680 163 1646 184 1662 b 233 1742 223 1699 233 1719 b 226 1777 233 1752 230 1764 b 135 1862 210 1822 173 1840 b 104 1895 114 1875 104 1884 b 118 1930 104 1904 109 1914 b 192 2006 135 1961 161 1986 b 206 2029 203 2013 206 2022 b 192 2064 206 2040 197 2052 b 180 2074 187 2071 184 2074 b 156 2061 171 2074 163 2065 b 84 1983 125 2040 102 2013 b 65 1921 71 1961 65 1941 b 88 1853 65 1899 72 1876 b 171 1784 108 1820 138 1801 b 190 1764 184 1777 190 1770 b 174 1741 190 1757 184 1750 b 107 1683 153 1722 128 1704 b 68 1610 81 1659 68 1636 b 88 1548 68 1591 75 1571 b 177 1470 109 1512 141 1489 b 223 1431 209 1453 223 1443 b 179 1390 223 1420 209 1408 b 128 1361 163 1380 145 1371 b 71 1322 108 1348 88 1338 b 32 1253 45 1300 32 1277 b 48 1198 32 1236 37 1218 b 147 1090 71 1152 108 1120 b 174 1057 166 1076 174 1067 b 153 1022 174 1047 167 1037 b 109 982 140 1008 124 995 b 37 919 85 962 59 942 b 9 860 17 899 9 880 b 26 806 9 844 14 827 b 120 717 50 769 84 740 b 138 691 132 708 138 700 b 130 668 138 684 135 677 b 92 618 118 651 105 635 b 59 531 71 589 59 560 b 84 455 59 507 68 481 b 132 386 98 431 115 408 b 148 341 144 372 148 357 b 144 317 148 333 147 324 b 121 305 140 307 131 305 l 98 305 b 82 304 94 304 88 304 l 32 304 b 0 292 10 304 0 302 b 12 266 0 287 4 279 b 60 164 32 233 46 199 b 127 20 84 117 105 68 b 144 0 132 9 137 0 b 161 16 150 0 154 4 z',\n        },\n        repeat1Bar: {\n            x_min: 0,\n            x_max: 599.1057280164835,\n            y_min: -250,\n            y_max: 175,\n            ha: 425,\n            o: 'm 216 98 b 255 75 236 84 246 75 b 291 104 265 75 274 85 b 323 147 304 117 327 125 b 289 215 323 168 314 184 b 238 252 269 239 253 252 b 187 222 222 252 207 242 b 173 206 183 216 177 212 b 157 170 163 194 157 183 b 174 138 157 160 161 150 b 216 98 189 127 200 109 z m 76 -334 b 181 -285 111 -315 148 -302 b 831 52 396 -168 613 -58 b 863 114 855 63 864 82 b 828 202 855 140 855 176 b 808 213 821 209 815 213 b 793 209 804 213 799 212 l 422 19 b 26 -179 291 -48 164 -124 b 0 -213 10 -186 0 -196 b 3 -232 0 -219 0 -225 b 52 -325 14 -265 37 -294 b 66 -337 55 -331 59 -337 b 76 -334 69 -337 72 -336 z m 769 -360 b 829 -264 779 -360 829 -284 b 769 -176 822 -232 799 -200 b 742 -163 760 -167 750 -163 b 716 -184 733 -163 723 -168 b 683 -228 708 -202 693 -213 b 672 -253 675 -236 672 -245 b 683 -281 672 -262 675 -271 b 752 -353 703 -308 732 -327 b 769 -360 756 -357 763 -360 z',\n        },\n        repeat2Bars: {\n            x_min: 0.008571918423331715,\n            x_max: 775,\n            y_min: -246.92374029115243,\n            y_max: 362.82068246705313,\n            ha: 609.7444227582056,\n            o: 'm 909 412 b 873 351 906 384 893 367 b 436 50 729 249 585 147 l 91 -179 b 62 -174 76 -189 68 -183 b 12 -96 48 -147 24 -125 b 36 -16 -7 -53 -6 -43 b 220 104 96 24 158 65 b 819 507 425 232 624 369 b 881 495 852 530 861 528 b 909 412 899 469 900 439 z m 333 338 b 302 240 330 307 317 274 b 276 235 297 225 287 228 l 233 269 b 203 376 186 307 183 318 b 225 441 212 397 217 419 b 246 454 228 452 232 458 b 333 338 284 441 333 380 z m 1116 228 b 1067 158 1115 192 1092 174 b 910 59 1015 125 963 92 b 478 -240 762 -33 622 -140 b 311 -350 423 -279 366 -314 b 285 -344 298 -360 289 -356 b 239 -258 272 -314 251 -288 b 261 -196 228 -228 235 -210 b 517 -29 348 -144 436 -91 b 1030 321 681 98 861 202 b 1093 307 1060 343 1076 340 b 1116 228 1107 281 1109 252 z m 1070 -105 b 1020 -210 1057 -143 1038 -176 b 998 -210 1014 -219 1004 -215 l 924 -153 b 913 -88 899 -135 897 -112 b 949 -22 926 -66 939 -45 b 998 -7 960 6 976 9 b 1070 -105 1032 -32 1058 -63 z',\n        },\n        repeat4Bars: {\n            x_min: 0,\n            x_max: 1374,\n            y_min: -304,\n            y_max: 304,\n            ha: 608,\n            o: 'm 78 -266 b 92 -258 82 -266 88 -264 b 114 -240 98 -251 107 -246 b 638 107 289 -125 467 -14 b 873 271 716 161 793 216 b 907 337 894 285 906 305 b 887 400 901 354 897 379 b 852 438 877 426 867 438 b 814 420 842 438 829 432 b 135 -33 592 262 366 111 b 12 -121 92 -60 48 -84 b 0 -144 4 -128 0 -135 b 4 -160 0 -148 1 -154 b 63 -255 17 -196 45 -223 b 78 -266 68 -262 72 -266 z m 291 148 b 325 223 302 148 308 170 b 333 256 328 235 330 246 b 264 363 330 305 298 336 b 242 373 255 369 248 373 b 220 347 232 373 225 364 b 202 288 216 327 213 305 b 190 252 193 275 190 262 b 222 200 190 232 202 215 b 291 148 264 170 279 148 z m 815 -367 b 829 -359 819 -367 824 -364 b 851 -343 835 -353 844 -347 b 1375 6 1027 -228 1205 -117 l 1610 170 b 1644 235 1632 184 1643 203 b 1626 300 1639 253 1634 276 b 1590 337 1614 325 1604 337 b 1551 320 1580 337 1567 330 b 873 -135 1329 161 1103 10 b 749 -222 829 -161 785 -184 b 737 -245 742 -230 737 -238 b 742 -261 737 -249 739 -255 b 802 -357 755 -297 782 -325 b 815 -367 805 -363 809 -367 z m 396 -360 b 408 -356 400 -360 403 -359 b 609 -223 471 -307 543 -269 b 896 -19 706 -156 795 -81 b 1164 154 985 37 1074 96 b 1214 223 1189 170 1211 187 b 1176 321 1204 253 1205 292 b 1159 330 1169 327 1165 330 b 1145 324 1155 330 1151 328 b 1048 258 1113 302 1081 278 b 357 -202 809 117 598 -65 b 333 -238 341 -212 333 -223 b 338 -262 333 -245 334 -253 b 384 -350 350 -294 372 -318 b 396 -360 386 -354 390 -360 z m 1162 -438 b 1174 -433 1166 -438 1169 -436 b 1374 -300 1237 -384 1309 -346 b 1660 -96 1470 -233 1561 -158 b 1930 76 1751 -39 1840 19 b 1979 147 1954 92 1977 109 b 1943 243 1968 177 1971 216 b 1924 253 1935 251 1930 253 b 1911 248 1920 253 1915 252 b 1814 181 1878 225 1848 202 b 1123 -279 1575 40 1364 -141 b 1099 -315 1106 -289 1099 -300 b 1103 -338 1099 -321 1100 -330 b 1149 -426 1115 -370 1138 -396 b 1162 -438 1151 -432 1156 -438 z m 1875 -295 b 1882 -291 1878 -295 1879 -294 b 1934 -189 1904 -258 1921 -223 b 1872 -96 1925 -147 1901 -120 b 1840 -78 1858 -84 1848 -78 b 1812 -109 1830 -78 1823 -88 l 1777 -173 b 1770 -199 1773 -181 1770 -190 b 1786 -230 1770 -210 1774 -220 b 1862 -289 1809 -253 1837 -269 b 1875 -295 1865 -292 1871 -295 z',\n        },\n        repeatBarSlash: {\n            x_min: 0,\n            x_max: 630,\n            y_min: -225.19160170741762,\n            y_max: 265.12618221237005,\n            ha: 490.31778391978764,\n            o: 'm 78 -324 b 92 -314 82 -325 88 -321 b 114 -298 96 -307 107 -302 b 638 49 289 -183 467 -72 b 873 215 716 104 792 161 b 907 279 894 229 906 248 b 887 344 901 298 897 321 b 852 382 877 369 867 380 b 814 363 842 383 829 376 b 135 -91 603 192 364 55 b 12 -177 92 -118 45 -137 b 0 -202 4 -186 0 -192 b 4 -217 0 -206 1 -212 b 63 -312 17 -253 42 -284 b 78 -324 68 -318 72 -323 z',\n        },\n        csymDiminished: {\n            x_min: 0,\n            x_max: 506,\n            y_min: -0.011036179317259481,\n            y_max: 500,\n            ha: 500.0110361793173,\n            o: 'm 397 0 b 729 265 576 -1 729 95 b 711 367 729 297 723 331 b 472 670 668 498 586 595 b 315 720 423 701 372 720 b 253 713 295 720 275 719 b 32 514 144 687 75 615 b 0 374 12 468 0 420 b 27 251 0 333 9 292 b 140 117 52 196 92 153 b 397 0 223 52 317 4 z m 340 95 b 132 314 233 84 122 216 b 324 589 145 438 200 539 b 415 611 360 603 389 611 b 544 505 469 611 505 576 b 590 392 564 471 583 432 b 596 343 593 374 596 359 b 340 95 596 210 485 96 z',\n        },\n        csymHalfDiminished: {\n            x_min: -32,\n            x_max: 496,\n            y_min: -33,\n            y_max: 492,\n            ha: 525,\n            o: 'm -29 -48 b 0 -36 -19 -48 -9 -40 b 17 -20 7 -32 12 -24 b 134 94 56 19 95 56 b 372 0 207 43 282 0 b 455 13 397 0 426 4 b 677 258 556 45 671 141 b 678 289 677 268 678 278 b 593 539 678 380 654 467 b 592 541 593 540 592 540 l 684 632 b 713 678 700 647 711 665 b 714 691 714 684 714 688 b 707 704 714 698 711 701 b 691 708 701 707 696 708 b 660 691 680 708 670 701 l 552 585 b 478 634 530 606 507 624 b 361 684 438 648 397 661 b 301 703 341 697 320 703 b 226 677 275 703 251 693 b 27 449 140 618 72 543 b 0 324 9 410 -4 370 b 88 128 -1 243 30 177 b -30 -7 43 86 0 46 b -46 -33 -35 -16 -46 -24 b -42 -42 -46 -36 -45 -39 b -29 -48 -37 -46 -33 -48 z m 141 179 b 121 251 128 200 121 225 b 128 297 121 265 124 281 b 351 575 163 420 248 505 b 377 582 359 579 369 580 b 501 536 422 586 468 567 b 141 179 382 416 261 298 z m 281 105 b 179 137 240 105 206 117 b 210 168 189 147 200 157 l 537 487 b 547 455 541 477 544 467 b 556 370 552 426 556 397 b 429 154 556 274 503 207 b 281 105 384 122 336 105 z',\n        },\n        csymAugmented: {\n            x_min: 0,\n            x_max: 530,\n            y_min: 0,\n            y_max: 539,\n            ha: 539,\n            o: 'm 380 0 b 393 14 384 4 390 9 b 397 46 397 24 397 36 l 397 333 b 736 327 511 331 624 330 b 763 343 755 327 763 333 b 755 361 763 348 760 354 b 635 431 726 402 688 431 l 390 431 l 390 485 b 386 606 392 526 386 566 b 392 664 386 625 387 645 b 395 690 393 672 395 681 b 376 753 395 711 389 734 b 357 776 372 762 369 776 b 350 775 354 776 353 776 b 327 740 337 769 327 759 b 327 621 328 700 327 661 b 330 438 328 559 328 498 l 29 438 b 4 431 20 438 7 442 b 0 413 3 425 0 419 b 7 399 0 408 1 403 b 131 338 45 369 85 340 b 331 334 199 336 265 334 b 333 163 333 276 333 220 b 366 13 333 109 348 63 b 380 0 367 7 374 4 z',\n        },\n        csymMajorSeventh: {\n            x_min: 0,\n            x_max: 593.1050509327923,\n            y_min: 0,\n            y_max: 569,\n            ha: 569,\n            o: 'm 124 1 l 497 27 b 819 50 605 35 711 43 b 854 98 847 52 855 63 b 812 200 845 128 835 166 b 564 585 730 328 648 456 b 435 786 521 652 480 720 b 397 819 419 809 408 819 b 369 792 387 819 379 811 b 7 173 248 585 128 379 b 0 150 3 166 0 158 b 7 128 0 143 3 135 b 89 10 30 86 65 50 b 109 0 95 1 102 0 z m 163 147 b 153 153 158 147 156 148 b 164 179 147 163 158 170 b 426 644 251 334 338 488 b 442 660 432 655 436 660 b 458 645 446 660 452 655 b 727 220 547 503 636 361 b 736 202 732 213 736 206 b 714 190 736 196 730 192 b 179 148 537 177 359 163 b 163 147 174 150 168 147 z',\n        },\n        csymMinor: {\n            x_min: 0,\n            x_max: 481.64484584675915,\n            y_min: 193,\n            y_max: 265.20435472429375,\n            ha: 72.20435472429375,\n            o: 'm 168 278 b 197 279 177 278 187 278 b 431 292 275 287 353 288 l 431 291 b 661 302 508 295 585 300 b 693 311 672 304 688 300 b 674 346 697 324 685 338 b 564 382 641 366 606 384 l 27 360 b 0 347 17 360 1 366 b 19 314 0 333 3 321 b 168 278 66 291 115 278 z',\n        },\n        csymParensLeftTall: {\n            x_min: 0,\n            x_max: 185,\n            y_min: 0,\n            y_max: 1034,\n            ha: 1034,\n            o: 'm 215 0 b 226 17 223 1 223 10 b 229 37 229 24 229 32 b 220 81 229 52 225 66 b 167 203 206 124 181 160 b 86 616 124 338 89 474 b 82 765 85 665 82 716 b 91 886 82 805 84 845 b 245 1319 120 1038 171 1184 b 266 1397 259 1346 266 1371 b 259 1443 266 1411 264 1427 b 226 1489 253 1463 248 1489 b 193 1454 212 1489 203 1467 b 114 1292 158 1404 140 1346 b 0 806 40 1138 0 978 b 3 721 0 779 0 750 b 1 677 1 707 1 693 b 36 418 1 593 16 504 b 144 96 62 307 95 199 b 196 12 158 66 179 39 b 212 0 200 7 204 0 z',\n        },\n        csymParensRightTall: {\n            x_min: -40,\n            x_max: 188.5411603861406,\n            y_min: 0.20204102886728756,\n            y_max: 1058,\n            ha: 1057.7979589711326,\n            o: 'm 30 1 b 63 14 42 -3 55 6 b 122 99 86 40 108 68 b 189 258 145 153 166 204 b 271 667 239 379 268 503 b 246 852 275 708 261 780 b 10 1495 197 1077 128 1295 b -14 1524 4 1505 1 1524 b -16 1522 -14 1524 -16 1524 b -46 1489 -33 1521 -43 1503 b -58 1417 -53 1464 -58 1440 b -36 1335 -58 1390 -52 1364 b 68 1138 0 1270 35 1204 b 163 883 108 1056 137 969 b 206 668 184 814 200 742 b 207 631 207 655 207 642 b 166 426 207 560 192 492 b 46 143 130 330 111 228 b 19 29 19 109 17 69 b 30 1 20 19 24 3 z',\n        },\n        csymBracketLeftTall: {\n            x_min: 0,\n            x_max: 328,\n            y_min: 2,\n            y_max: 807,\n            ha: 805,\n            o: 'm 68 3 b 76 4 71 3 73 3 b 186 13 112 12 150 13 b 240 13 204 13 222 13 l 287 13 b 379 17 317 13 348 13 b 472 121 435 24 472 69 b 467 156 472 132 469 144 b 446 174 462 168 456 174 l 439 174 b 327 166 402 167 364 166 b 265 167 307 166 285 167 l 209 167 b 187 475 199 269 189 372 b 166 985 186 645 187 815 l 377 1002 b 415 1001 389 1002 402 1001 b 456 1027 432 1001 448 1005 b 472 1096 467 1048 472 1073 b 464 1146 472 1113 469 1130 b 439 1162 459 1161 452 1162 b 40 1129 305 1151 173 1139 b 1 1093 17 1128 1 1120 b 0 1009 0 1064 0 1037 b 13 975 0 991 3 981 b 30 670 23 873 30 772 b 29 608 30 649 29 628 l 29 563 b 56 88 29 405 49 246 b 53 22 55 66 55 43 b 68 3 53 12 56 3 z',\n        },\n        csymBracketRightTall: {\n            x_min: 0.8519422934604696,\n            x_max: 306,\n            y_min: -0.17180889215212544,\n            y_max: 829.1037519824849,\n            ha: 829.2755608746371,\n            o: 'm 117 0 b 372 29 203 -3 287 20 l 373 29 b 406 32 383 30 395 30 b 436 60 428 33 432 43 b 441 109 439 76 441 92 b 433 200 441 140 436 170 b 409 696 422 366 409 530 b 416 887 409 763 416 831 b 415 920 416 899 415 910 l 415 1106 b 412 1135 415 1116 415 1126 l 412 1145 b 373 1189 413 1171 408 1192 b 321 1189 356 1189 338 1189 l 215 1189 l 215 1194 l 56 1194 b 6 1153 27 1195 10 1187 b 1 1064 3 1123 4 1093 b 22 1043 0 1050 6 1043 b 84 1044 42 1044 63 1044 b 264 1038 144 1044 203 1040 b 265 958 264 1011 265 985 b 262 845 265 920 264 883 b 259 710 259 801 259 755 b 279 243 259 554 271 399 b 285 170 281 219 284 194 b 95 151 222 161 158 156 b 29 81 27 147 27 147 l 29 73 b 105 0 33 0 33 0 z',\n        },\n        csymParensLeftVeryTall: {\n            x_min: 0,\n            x_max: 116,\n            y_min: 0,\n            y_max: 934.1531437146923,\n            ha: 934.1531437146923,\n            o: 'm 128 0 b 147 17 137 0 144 9 b 167 102 160 45 167 73 b 158 154 167 120 164 137 b 117 307 141 204 130 256 b 63 698 84 435 71 567 b 62 788 62 729 62 757 b 69 916 62 829 63 873 b 109 1172 81 1001 94 1087 b 132 1320 118 1221 137 1269 b 124 1345 131 1329 134 1342 b 96 1332 114 1346 102 1341 b 71 1269 82 1313 75 1292 b 39 1104 59 1214 48 1159 b 0 742 19 988 0 871 b 10 559 3 688 6 624 b 58 226 16 446 33 336 b 112 20 73 157 94 89 b 128 0 115 13 118 0 z',\n        },\n        csymParensRightVeryTall: {\n            x_min: -20,\n            x_max: 111.4332498248095,\n            y_min: -0.07657185734616112,\n            y_max: 1009,\n            ha: 1009.0765718573462,\n            o: 'm -3 0 b 20 22 9 -1 14 12 b 36 56 26 33 32 45 b 99 274 58 128 84 199 b 160 788 135 439 163 605 b 122 1181 164 912 145 1047 b 50 1431 108 1267 86 1351 b 36 1453 48 1439 46 1453 l 35 1453 l 30 1453 b 7 1423 17 1449 7 1440 b 27 1287 9 1377 10 1331 b 96 963 71 1184 85 1074 b 105 818 102 914 105 867 b 91 624 105 753 99 688 b -4 213 72 484 48 344 b -29 101 -19 174 -29 138 b -16 27 -29 76 -24 52 b -3 0 -13 17 -14 3 z',\n        },\n        csymDiagonalArrangementSlash: {\n            x_min: -0.19862981551275186,\n            x_max: 990,\n            y_min: -26.946823529189132,\n            y_max: 1027.5514326488437,\n            ha: 1054.4982561780328,\n            o: 'm 14 -37 b 58 -9 35 -45 46 -22 b 392 333 170 105 279 217 l 765 711 b 1372 1329 968 916 1168 1125 b 1424 1439 1403 1359 1417 1397 b 1426 1457 1424 1444 1426 1450 b 1416 1477 1426 1466 1423 1475 b 1374 1462 1400 1485 1385 1473 b 1181 1269 1309 1397 1246 1331 b 736 831 1031 1122 884 979 b 356 452 609 704 485 576 b 32 132 246 347 143 236 b 0 50 7 109 1 84 b 6 9 -1 37 3 23 b 14 -37 10 -9 0 -32 z',\n        },\n        accidentalNarrowReversedFlat: {\n            x_min: 0,\n            x_max: 208,\n            y_min: -231,\n            y_max: 449,\n            ha: 680,\n            o: 'm 272 -333 b 284 -320 278 -333 281 -328 b 300 -174 297 -272 300 -222 b 275 190 298 -52 279 68 b 268 445 272 275 268 360 l 268 490 b 264 612 269 530 265 572 b 236 647 264 632 252 645 l 235 647 b 217 618 220 647 220 628 b 207 526 210 588 207 556 b 210 432 207 494 210 464 b 216 268 213 377 215 323 l 216 230 l 215 232 b 154 256 194 240 174 251 b 111 264 138 261 124 264 b 3 153 50 264 10 223 b 0 94 0 132 0 114 b 194 -276 0 -63 68 -186 b 255 -323 215 -291 236 -307 b 272 -333 262 -330 268 -333 z m 233 -138 b 71 30 168 -92 105 -45 b 63 59 65 42 63 50 b 96 95 62 75 73 86 b 130 102 108 99 120 102 b 215 76 160 102 187 88 l 220 73 b 225 -22 220 42 222 10 b 233 -138 229 -62 230 -101 z',\n        },\n        accidentalNarrowReversedFlatAndFlat: {\n            x_min: 0,\n            x_max: 335,\n            y_min: -231,\n            y_max: 449,\n            ha: 680,\n            o: 'm 151 490 b 148 612 151 530 150 572 b 132 647 148 632 141 645 b 122 618 124 647 124 628 b 117 526 118 588 117 556 b 118 432 117 494 118 464 b 121 268 120 377 121 323 l 121 232 b 86 256 109 240 98 251 b 62 264 78 261 69 264 b 1 153 29 264 6 223 b 0 94 0 132 0 114 b 109 -276 0 -63 37 -186 b 144 -323 121 -291 132 -307 b 153 -333 147 -330 151 -333 b 160 -320 157 -333 158 -328 b 168 -174 167 -272 168 -222 b 154 190 168 -52 157 68 b 151 445 153 275 151 360 z m 480 153 b 372 264 472 223 432 264 b 328 256 359 264 344 261 b 268 232 308 251 288 240 l 266 230 l 266 268 b 272 432 266 323 269 377 b 275 526 272 464 275 494 b 265 618 275 556 272 588 b 248 647 262 628 262 647 l 246 647 b 219 612 230 645 219 632 b 215 490 217 572 213 530 l 215 445 b 207 190 215 360 210 275 b 183 -174 203 68 183 -52 b 199 -320 183 -222 186 -272 b 210 -333 202 -328 204 -333 b 228 -323 215 -333 220 -330 b 288 -276 246 -307 268 -291 b 482 94 415 -186 482 -63 b 480 153 482 114 482 132 z m 40 30 b 36 59 36 42 36 50 b 55 95 35 75 42 86 b 73 102 60 99 68 102 b 121 76 89 102 105 88 l 124 73 b 127 -22 124 42 125 10 l 131 -138 b 40 30 95 -92 60 -43 z m 419 59 b 412 30 419 50 418 42 b 249 -138 374 -43 314 -92 b 258 -22 252 -101 253 -62 b 262 73 261 10 262 42 l 268 76 b 353 102 295 88 323 102 b 386 95 363 102 374 99 b 419 59 409 86 420 75 z',\n        },\n        accidentalWilsonPlus: {\n            x_min: 0,\n            x_max: 298,\n            y_min: -218,\n            y_max: 218,\n            ha: 436,\n            o: 'm 232 -314 b 236 -301 236 -310 236 -305 l 236 -295 b 243 -52 239 -213 242 -132 l 369 62 b 429 200 413 101 425 147 b 416 243 429 216 428 236 b 383 225 406 251 393 232 l 377 220 b 246 98 336 177 291 138 b 249 242 248 145 246 193 b 225 304 251 265 242 287 b 209 314 220 308 215 314 b 204 312 207 314 206 312 b 196 292 196 310 196 300 b 193 184 194 256 194 220 b 187 48 192 140 190 94 b 46 -72 141 7 94 -32 b 0 -163 13 -98 0 -127 b 1 -187 0 -170 0 -179 b 10 -235 4 -203 6 -219 b 20 -255 12 -242 14 -251 b 36 -245 26 -259 30 -249 b 181 -109 85 -200 132 -154 b 176 -258 180 -158 176 -209 b 232 -314 176 -298 186 -307 z',\n        },\n        accidentalWilsonMinus: {\n            x_min: 0,\n            x_max: 284.2093390143919,\n            y_min: -163,\n            y_max: 163,\n            ha: 326,\n            o: 'm 386 -232 b 409 -163 415 -222 408 -180 b 382 -69 410 -120 408 -89 b 32 228 264 30 141 118 b 17 235 26 233 22 235 b 3 219 9 235 3 228 b 0 157 3 199 0 179 b 29 69 0 125 6 95 b 323 -194 115 -29 222 -111 b 374 -235 338 -206 353 -235 b 386 -232 377 -235 382 -233 z',\n        },\n    },\n    fontFamily: 'Petaluma',\n    resolution: 1000,\n    generatedOn: '2021-12-06T21:04:23.441Z',\n};\n","/**\n * The Petaluma font was created by Steinberg Media.\n * https://github.com/steinbergmedia/petaluma\n */\nexport const PetalumaMetrics = {\n    name: 'Petaluma',\n    smufl: true,\n    stave: {\n        padding: 15,\n        endPaddingMax: 15,\n        endPaddingMin: 7,\n        unalignedNotePadding: 12,\n    },\n    accidental: {\n        noteheadAccidentalPadding: 1,\n        leftPadding: 2,\n        accidentalSpacing: 3,\n    },\n    clef: {\n        default: {\n            point: 32,\n            width: 26,\n        },\n        small: {\n            point: 26,\n            width: 20,\n        },\n        annotations: {\n            '8va': {\n                smuflCode: 'timeSig8',\n                default: {\n                    point: 18,\n                    treble: {\n                        line: -1.4,\n                        shiftX: 12,\n                    },\n                },\n                small: {\n                    point: 16,\n                    treble: {\n                        line: -0.2,\n                        shiftX: 8,\n                    },\n                },\n            },\n            '8vb': {\n                smuflCode: 'timeSig8',\n                default: {\n                    point: 18,\n                    treble: {\n                        line: 6,\n                        shiftX: 10,\n                    },\n                    bass: {\n                        line: 3.5,\n                        shiftX: 1,\n                    },\n                },\n                small: {\n                    point: 16,\n                    treble: {\n                        line: 5.3,\n                        shiftX: 6,\n                    },\n                    bass: {\n                        line: 3.1,\n                        shiftX: 0.5,\n                    },\n                },\n            },\n        },\n        // These may no longer be necessary\n        lineCount: {\n            '8': { point: 55, shiftY: 14 },\n            '7': { point: 47, shiftY: 8 },\n            '6': { point: 32, shiftY: 1 },\n            '5': { point: 30, shiftY: -6 },\n            '4': { point: 23, shiftY: -12 },\n        },\n    },\n    parenthesis: {\n        default: {\n            point: 39,\n            width: 7,\n        },\n        gracenote: {\n            point: (39 * 3) / 5,\n            width: 3,\n        },\n    },\n    pedalMarking: {\n        up: {\n            point: 40,\n        },\n        down: {\n            point: 34,\n        },\n    },\n    // These are for numeric digits, such as in time signatures\n    digits: {\n        // used by timesig\n        shiftLine: -1,\n        point: 22,\n        // used by tuplets\n        tupletPoint: 16,\n        shiftY: -2,\n    },\n    articulation: {\n        articStaccatissimoAbove: {\n            padding: 2,\n        },\n        articStaccatissimoBelow: {\n            padding: 2,\n        },\n    },\n    tremolo: {\n        default: {\n            point: 25,\n            spacing: 5,\n            offsetYStemUp: -5,\n            offsetYStemDown: 5,\n            offsetXStemUp: 13,\n            offsetXStemDown: 1,\n        },\n        grace: {\n            point: 18,\n            spacing: 4,\n            offsetYStemUp: -5,\n            offsetYStemDown: 5,\n            offsetXStemUp: 8,\n            offsetXStemDown: 1,\n        },\n    },\n    staveRepetition: {\n        symbolText: {\n            offsetX: 12,\n            offsetY: 25,\n            spacing: 5,\n        },\n        coda: {\n            offsetY: 25,\n        },\n        segno: {\n            offsetY: 10,\n        },\n    },\n    noteHead: {\n        displaced: {\n            shiftX: -2,\n        },\n    },\n    stem: {\n        heightAdjustmentForFlag: -3,\n        // These are stem (Y) offsets to the note heads. To shift the\n        // noteheads (x-position) themselves, see glyphs.notehead.custom.\n        noteHead: {\n            noteheadTriangleUpHalf: {\n                offsetYBaseStemUp: 5,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadTriangleUpBlack: {\n                offsetYBaseStemUp: 5,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadTriangleUpWhole: {\n                offsetYBaseStemUp: 5,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadXHalf: {\n                offsetYBaseStemUp: -4,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadXBlack: {\n                offsetYBaseStemUp: -4,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadXWhole: {\n                offsetYBaseStemUp: -4,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadHalf: {\n                offsetYBaseStemDown: 1.8,\n                offsetYBaseStemUp: -1.8,\n            },\n            noteheadBlack: {\n                offsetYBaseStemDown: 2,\n                offsetYBaseStemUp: -2,\n            },\n            noteheadSquareWhite: {\n                offsetYBaseStemDown: -5,\n                offsetYBaseStemUp: 5,\n            },\n        },\n    },\n    // Values under here are used by the Glyph class to reposition and rescale\n    // glyphs based on their category. This should be the first stop for\n    // custom font glyph repositioning.\n    //\n    // The glyph loader first looks up a specific set of settings based on the\n    // glyph code, and if not found, uses the defaults from the category. See\n    // glyphs.textNote for an example of this.\n    //\n    // Details in Glyph.lookupFontMetrics.\n    glyphs: {\n        coda: {\n            point: 20,\n            shiftX: -7,\n            shiftY: 8,\n        },\n        segno: {\n            shiftX: -7,\n        },\n        flag: {\n            shiftX: -0.77,\n            flag16thUp: {\n                shiftX: -0.75,\n            },\n            flag32ndUp: {\n                shiftX: -0.85,\n            },\n            flag64thUp: {\n                shiftX: -1.55,\n            },\n            flag128thUp: {\n                shiftX: -1.3,\n            },\n            flag16thDown: {\n                shiftX: -0.75,\n            },\n            flag32ndDown: {\n                shiftX: -0.76,\n            },\n            flag64thDown: {\n                shiftX: -1.5,\n            },\n            flag128thDown: {\n                shiftX: -1.2,\n            },\n            staveTempo: {\n                shiftX: -1,\n            },\n        },\n        clef: {\n            gClef: {\n                default: { scale: 1.1, shiftY: 1 },\n                small: { shiftY: 1.5 },\n            },\n            fClef: {\n                default: { shiftY: -0.5 },\n            },\n        },\n        ornament: {\n            ornamentTurn: {\n                scale: 1.2,\n            },\n            ornamentTurnSlash: {\n                scale: 1.2,\n            },\n        },\n        stringNumber: {\n            verticalPadding: 8,\n            stemPadding: 2,\n            leftPadding: 5,\n            rightPadding: 6,\n        },\n        stroke: {\n            arrowheadBlackDown: {\n                straight: {\n                    shiftX: -4.5,\n                },\n                wiggly: {\n                    shiftX: -1,\n                    shiftY: 1,\n                },\n            },\n            arrowheadBlackUp: {\n                straight: {\n                    shiftX: -0.85,\n                },\n                wiggly: {\n                    shiftX: -1,\n                    shiftY: 1,\n                },\n            },\n        },\n        textNote: {\n            point: 34,\n            breathMarkTick: {\n                point: 36,\n                shiftY: 9,\n            },\n            breathMarkComma: {\n                point: 36,\n            },\n            segno: {\n                point: 30,\n                shiftX: -7,\n                shiftY: 8,\n            },\n            coda: {\n                point: 20,\n                shiftX: -7,\n                shiftY: 8,\n            },\n            ornamentTrill: {\n                shiftX: -10,\n                shiftY: 8,\n            },\n            ornamentMordent: {\n                shiftX: -8,\n            },\n            ornamentShortTrill: {\n                shiftX: -8,\n            },\n        },\n        noteHead: {\n            minPadding: 2,\n            standard: {\n                noteheadBlackStemUp: {\n                    shiftX: 0.5,\n                },\n                noteheadHalfStemUp: {\n                    shiftX: 0.725,\n                },\n                noteheadWholeStemUp: {\n                    shiftX: 1,\n                },\n            },\n            custom: {\n                noteheadCircleXStemUp: {\n                    shiftX: -1,\n                },\n                noteheadCircleXStemDown: {\n                    shiftX: 0.25,\n                },\n                noteheadDiamondHalfStemUp: {\n                    shiftX: 1.5,\n                },\n                noteheadDiamondBlackStemUp: {\n                    shiftX: 1.5,\n                },\n                noteheadDiamondWholeStemUp: {\n                    shiftX: 1,\n                },\n                noteheadXBlackStemUp: {\n                    shiftX: 1,\n                },\n                noteheadXHalfStemUp: {\n                    shiftX: -3,\n                },\n                noteheadXHalfStemDown: {\n                    shiftX: 1,\n                },\n                noteheadXWholeStemUp: {\n                    shiftX: -7,\n                },\n                noteheadXWholeStemDown: {\n                    shiftX: 1,\n                },\n                noteheadSquareWhiteStemDown: {\n                    shiftX: 0.25,\n                },\n                noteheadSquareWhiteStemUp: {\n                    shiftX: -0.75,\n                },\n                noteheadSquareBlackStemUp: {\n                    shiftX: -0.75,\n                },\n                noteheadTriangleUpWholeStemUp: {\n                    shiftX: -0.75,\n                },\n            },\n        },\n        chordSymbol: {\n            global: {\n                superscriptOffset: -400,\n                subscriptOffset: 300,\n                kerningOffset: -150,\n                lowerKerningText: ['D', 'F', 'P', 'T', 'V', 'Y'],\n                upperKerningText: ['L'],\n                spacing: 20,\n                superSubRatio: 0.73,\n            },\n            csymDiminished: {\n                scale: 0.8,\n                leftSideBearing: -95,\n                advanceWidth: 506,\n                yOffset: 0,\n            },\n            csymHalfDiminished: {\n                scale: 0.8,\n                leftSideBearing: -32,\n                advanceWidth: 506,\n                yOffset: 0,\n            },\n            csymAugmented: {\n                scale: 1,\n                leftSideBearing: -25,\n                advanceWidth: 530,\n                yOffset: 0,\n            },\n            csymParensLeftTall: {\n                scale: 0.8,\n                leftSideBearing: 0,\n                advanceWidth: 155,\n                yOffset: 150,\n            },\n            csymParensRightTall: {\n                scale: 0.8,\n                leftSideBearing: 40,\n                advanceWidth: 189,\n                yOffset: 150,\n            },\n            csymBracketLeftTall: {\n                scale: 0.8,\n                leftSideBearing: 0,\n                advanceWidth: 328,\n                yOffset: 0,\n            },\n            csymBracketRightTall: {\n                scale: 0.8,\n                leftSideBearing: 1,\n                advanceWidth: 600,\n                yOffset: 0,\n            },\n            csymParensLeftVeryTall: {\n                scale: 0.95,\n                leftSideBearing: 0,\n                advanceWidth: 210,\n                yOffset: 250,\n            },\n            csymParensRightVeryTall: {\n                scale: 0.9,\n                leftSideBearing: -100,\n                advanceWidth: 111,\n                yOffset: 250,\n            },\n            csymDiagonalArrangementSlash: {\n                scale: 0.6,\n                leftSideBearing: -1,\n                advanceWidth: 990,\n                yOffset: 0,\n            },\n            csymMinor: {\n                scale: 0.7,\n                leftSideBearing: 0,\n                advanceWidth: 482,\n                yOffset: 0,\n            },\n            csymMajorSeventh: {\n                scale: 0.8,\n                leftSideBearing: 100,\n                yOffset: 0,\n                advanceWidth: 600,\n            },\n            accidentalSharp: {\n                scale: 0.7,\n                leftSideBearing: 0,\n                advanceWidth: 425,\n                yOffset: -422,\n            },\n            accidentalFlat: {\n                scale: 0.8,\n                leftSideBearing: -10,\n                advanceWidth: 228,\n                yOffset: -284,\n            },\n        },\n        jazzOrnaments: {\n            brassScoop: {\n                scale: 1.0,\n                xOffset: -12,\n                yOffset: 0,\n                stemUpYOffset: 0,\n                reportedWidth: 10,\n            },\n            brassDoitMedium: {\n                scale: 1.0,\n                xOffset: 16,\n                yOffset: 0,\n                stemUpYOffset: 0,\n                reportedWidth: 5,\n            },\n            brassFallLipShort: {\n                scale: 1.0,\n                xOffset: 16,\n                yOffset: 0,\n                stemUpYOffset: 0,\n                reportedWidth: 5,\n            },\n            brassLiftMedium: {\n                scale: 1.0,\n                xOffset: 16,\n                yOffset: 5,\n                stemUpYOffset: 0,\n                reportedWidth: 5,\n            },\n            brassFallRoughMedium: {\n                scale: 1.0,\n                xOffset: 16,\n                yOffset: 26,\n                stemUpYOffset: 0,\n                reportedWidth: 5,\n            },\n            brassBend: {\n                scale: 1.0,\n                xOffset: 3,\n                yOffset: -8,\n                stemUpYOffset: 28,\n                reportedWidth: 5,\n            },\n            brassMuteClosed: {\n                scale: 1.0,\n                xOffset: 3,\n                yOffset: -8,\n                stemUpYOffset: 26,\n                reportedWidth: 5,\n            },\n            brassMuteOpen: {\n                scale: 1.0,\n                xOffset: 4,\n                yOffset: -8,\n                stemUpYOffset: 27,\n                reportedWidth: 5,\n            },\n            brassFlip: {\n                scale: 1.0,\n                xOffset: 10,\n                yOffset: -4,\n                stemUpYOffset: 0,\n                reportedWidth: 5,\n            },\n            brassJazzTurn: {\n                scale: 1.0,\n                xOffset: 6,\n                yOffset: -4,\n                stemUpYOffset: 0,\n                reportedWidth: 5,\n            },\n            brassSmear: {\n                scale: 1.0,\n                xOffset: 10,\n                yOffset: -4,\n                stemUpYOffset: 0,\n                reportedWidth: 5,\n            },\n        },\n        tuplet: {\n            noteHeadOffset: 20,\n            stemOffset: 10,\n            bottomLine: 4,\n            topModifierOffset: 20,\n        },\n    },\n};\n","export const PetalumaScriptFont = {\n    spacing: 50,\n    glyphs: {\n        ' ': {\n            x_min: 0,\n            x_max: 250,\n            y_min: 0,\n            y_max: 500,\n            ha: 500,\n            leftSideBearing: 0,\n            advanceWidth: 250,\n        },\n        '0': {\n            x_min: 33,\n            x_max: 534,\n            y_min: -13,\n            y_max: 751,\n            ha: 764,\n            leftSideBearing: 33,\n            advanceWidth: 570,\n        },\n        '1': {\n            x_min: 48,\n            x_max: 235,\n            y_min: -17,\n            y_max: 734,\n            ha: 751,\n            leftSideBearing: 48,\n            advanceWidth: 286,\n        },\n        '2': {\n            x_min: 56,\n            x_max: 571,\n            y_min: -19,\n            y_max: 741,\n            ha: 760,\n            leftSideBearing: 56,\n            advanceWidth: 626,\n        },\n        '3': {\n            x_min: 50,\n            x_max: 528,\n            y_min: -7,\n            y_max: 731,\n            ha: 738,\n            leftSideBearing: 50,\n            advanceWidth: 589,\n        },\n        '4': {\n            x_min: 38,\n            x_max: 564,\n            y_min: -13,\n            y_max: 743,\n            ha: 756,\n            leftSideBearing: 38,\n            advanceWidth: 614,\n        },\n        '5': {\n            x_min: 42,\n            x_max: 601,\n            y_min: -34,\n            y_max: 743,\n            ha: 777,\n            leftSideBearing: 42,\n            advanceWidth: 648,\n        },\n        '6': {\n            x_min: 47,\n            x_max: 606,\n            y_min: -16,\n            y_max: 743,\n            ha: 759,\n            leftSideBearing: 47,\n            advanceWidth: 667,\n        },\n        '7': {\n            x_min: 47,\n            x_max: 567,\n            y_min: 5,\n            y_max: 739,\n            ha: 734,\n            leftSideBearing: 0,\n            advanceWidth: 615,\n        },\n        '8': {\n            x_min: 40,\n            x_max: 541,\n            y_min: -15,\n            y_max: 752,\n            ha: 767,\n            leftSideBearing: 40,\n            advanceWidth: 585,\n        },\n        '9': {\n            x_min: 40,\n            x_max: 537,\n            y_min: -52,\n            y_max: 736,\n            ha: 788,\n            leftSideBearing: 40,\n            advanceWidth: 592,\n        },\n        '!': {\n            x_min: 49,\n            x_max: 180,\n            y_min: -7,\n            y_max: 761,\n            ha: 768,\n            leftSideBearing: 49,\n            advanceWidth: 230,\n        },\n        '\"': {\n            x_min: 39,\n            x_max: 304,\n            y_min: 596,\n            y_max: 804,\n            ha: 208,\n            leftSideBearing: 39,\n            advanceWidth: 353,\n        },\n        '#': {\n            x_min: 33,\n            x_max: 599,\n            y_min: -8,\n            y_max: 765,\n            ha: 773,\n            leftSideBearing: 33,\n            advanceWidth: 648,\n        },\n        $: {\n            x_min: 53,\n            x_max: 495,\n            y_min: -111,\n            y_max: 823,\n            ha: 934,\n            leftSideBearing: 53,\n            advanceWidth: 560,\n        },\n        '%': {\n            x_min: 35,\n            x_max: 656,\n            y_min: -128,\n            y_max: 808,\n            ha: 936,\n            leftSideBearing: 35,\n            advanceWidth: 711,\n        },\n        '&': {\n            x_min: 53,\n            x_max: 441,\n            y_min: -3,\n            y_max: 753,\n            ha: 756,\n            leftSideBearing: 53,\n            advanceWidth: 500,\n        },\n        \"'\": {\n            x_min: 43,\n            x_max: 161,\n            y_min: 590,\n            y_max: 811,\n            ha: 221,\n            leftSideBearing: 43,\n            advanceWidth: 217,\n        },\n        '(': {\n            x_min: 41,\n            x_max: 311,\n            y_min: -36,\n            y_max: 845,\n            ha: 881,\n            leftSideBearing: 41,\n            advanceWidth: 308,\n        },\n        ')': {\n            x_min: -8,\n            x_max: 257,\n            y_min: -21,\n            y_max: 852,\n            ha: 873,\n            leftSideBearing: -8,\n            advanceWidth: 280,\n        },\n        '*': {\n            x_min: 59,\n            x_max: 539,\n            y_min: 175,\n            y_max: 589,\n            ha: 414,\n            leftSideBearing: 59,\n            advanceWidth: 601,\n        },\n        '+': {\n            x_min: 33,\n            x_max: 361,\n            y_min: 180,\n            y_max: 587,\n            ha: 407,\n            leftSideBearing: 33,\n            advanceWidth: 400,\n        },\n        ',': {\n            x_min: 15,\n            x_max: 176,\n            y_min: -129,\n            y_max: 92,\n            ha: 221,\n            leftSideBearing: 15,\n            advanceWidth: 205,\n        },\n        '-': {\n            x_min: 40,\n            x_max: 380,\n            y_min: 317,\n            y_max: 452,\n            ha: 135,\n            leftSideBearing: 40,\n            advanceWidth: 422,\n        },\n        '.': {\n            x_min: 48,\n            x_max: 185,\n            y_min: -56,\n            y_max: 84,\n            ha: 140,\n            leftSideBearing: 48,\n            advanceWidth: 227,\n        },\n        '/': {\n            x_min: -58,\n            x_max: 654,\n            y_min: -122,\n            y_max: 844,\n            ha: 966,\n            leftSideBearing: -58,\n            advanceWidth: 626,\n        },\n        ':': {\n            x_min: 65,\n            x_max: 225,\n            y_min: 97,\n            y_max: 536,\n            ha: 439,\n            leftSideBearing: 65,\n            advanceWidth: 302,\n        },\n        ';': {\n            x_min: 13,\n            x_max: 295,\n            y_min: -139,\n            y_max: 536,\n            ha: 675,\n            leftSideBearing: 13,\n            advanceWidth: 334,\n        },\n        '<': {\n            x_min: 28,\n            x_max: 438,\n            y_min: -1,\n            y_max: 607,\n            ha: 608,\n            leftSideBearing: 28,\n            advanceWidth: 475,\n        },\n        '=': {\n            x_min: 40,\n            x_max: 383,\n            y_min: 199.9598640852289,\n            y_max: 541,\n            ha: 341.0401359147711,\n            leftSideBearing: 40,\n            advanceWidth: 422,\n        },\n        '>': {\n            x_min: 35,\n            x_max: 421,\n            y_min: 28,\n            y_max: 632,\n            ha: 604,\n            leftSideBearing: 35,\n            advanceWidth: 466,\n        },\n        '?': {\n            x_min: 45,\n            x_max: 548,\n            y_min: -17,\n            y_max: 767,\n            ha: 784,\n            leftSideBearing: 45,\n            advanceWidth: 592,\n        },\n        '@': {\n            x_min: 51,\n            x_max: 730,\n            y_min: -78,\n            y_max: 753,\n            ha: 831,\n            leftSideBearing: 51,\n            advanceWidth: 781,\n        },\n        A: {\n            x_min: 37,\n            x_max: 554,\n            y_min: -4,\n            y_max: 746,\n            ha: 750,\n            leftSideBearing: 37,\n            advanceWidth: 617,\n        },\n        B: {\n            x_min: 37,\n            x_max: 532,\n            y_min: 3,\n            y_max: 783,\n            ha: 780,\n            leftSideBearing: 37,\n            advanceWidth: 579,\n        },\n        C: {\n            x_min: 37,\n            x_max: 583,\n            y_min: -3,\n            y_max: 775,\n            ha: 778,\n            leftSideBearing: 37,\n            advanceWidth: 623,\n        },\n        D: {\n            x_min: 50,\n            x_max: 530,\n            y_min: -15,\n            y_max: 749,\n            ha: 764,\n            leftSideBearing: 50,\n            advanceWidth: 579,\n        },\n        E: {\n            x_min: 45,\n            x_max: 531,\n            y_min: -1,\n            y_max: 743,\n            ha: 744,\n            leftSideBearing: 45,\n            advanceWidth: 585,\n        },\n        F: {\n            x_min: 45,\n            x_max: 459,\n            y_min: 23,\n            y_max: 727,\n            ha: 704,\n            leftSideBearing: 45,\n            advanceWidth: 510,\n        },\n        G: {\n            x_min: 31,\n            x_max: 577,\n            y_min: -8,\n            y_max: 733,\n            ha: 741,\n            leftSideBearing: 31,\n            advanceWidth: 611,\n        },\n        H: {\n            x_min: 37,\n            x_max: 493,\n            y_min: -22,\n            y_max: 758,\n            ha: 780,\n            leftSideBearing: 37,\n            advanceWidth: 535,\n        },\n        I: {\n            x_min: 47,\n            x_max: 501,\n            y_min: -3,\n            y_max: 731,\n            ha: 734,\n            leftSideBearing: 47,\n            advanceWidth: 541,\n        },\n        J: {\n            x_min: 33,\n            x_max: 531,\n            y_min: -23,\n            y_max: 725,\n            ha: 748,\n            leftSideBearing: 33,\n            advanceWidth: 573,\n        },\n        K: {\n            x_min: 43,\n            x_max: 505,\n            y_min: -10,\n            y_max: 740,\n            ha: 750,\n            leftSideBearing: 43,\n            advanceWidth: 560,\n        },\n        L: {\n            x_min: 49,\n            x_max: 457,\n            y_min: -2,\n            y_max: 746,\n            ha: 748,\n            leftSideBearing: 49,\n            advanceWidth: 510,\n        },\n        M: {\n            x_min: 35,\n            x_max: 699,\n            y_min: 1,\n            y_max: 744,\n            ha: 743,\n            leftSideBearing: 35,\n            advanceWidth: 743,\n        },\n        N: {\n            x_min: 34,\n            x_max: 533,\n            y_min: -17,\n            y_max: 761,\n            ha: 778,\n            leftSideBearing: 34,\n            advanceWidth: 579,\n        },\n        O: {\n            x_min: 41,\n            x_max: 608,\n            y_min: -5,\n            y_max: 735,\n            ha: 740,\n            leftSideBearing: 41,\n            advanceWidth: 667,\n        },\n        P: {\n            x_min: 53,\n            x_max: 451,\n            y_min: -18,\n            y_max: 735,\n            ha: 753,\n            leftSideBearing: 53,\n            advanceWidth: 497,\n        },\n        Q: {\n            x_min: 40,\n            x_max: 599,\n            y_min: -67,\n            y_max: 744,\n            ha: 811,\n            leftSideBearing: 40,\n            advanceWidth: 648,\n        },\n        R: {\n            x_min: 39,\n            x_max: 487,\n            y_min: 16,\n            y_max: 735,\n            ha: 719,\n            leftSideBearing: 39,\n            advanceWidth: 535,\n        },\n        S: {\n            x_min: 35,\n            x_max: 552,\n            y_min: -47,\n            y_max: 708,\n            ha: 755,\n            leftSideBearing: 35,\n            advanceWidth: 604,\n        },\n        T: {\n            x_min: 26,\n            x_max: 656,\n            y_min: -13,\n            y_max: 718,\n            ha: 731,\n            leftSideBearing: 26,\n            advanceWidth: 705,\n        },\n        U: {\n            x_min: 41,\n            x_max: 518,\n            y_min: -20,\n            y_max: 748,\n            ha: 768,\n            leftSideBearing: 41,\n            advanceWidth: 567,\n        },\n        V: {\n            x_min: 47,\n            x_max: 509,\n            y_min: -26,\n            y_max: 744,\n            ha: 770,\n            leftSideBearing: 47,\n            advanceWidth: 567,\n        },\n        W: {\n            x_min: 44,\n            x_max: 789,\n            y_min: -35,\n            y_max: 720,\n            ha: 755,\n            leftSideBearing: 44,\n            advanceWidth: 833,\n        },\n        X: {\n            x_min: 63,\n            x_max: 635,\n            y_min: -10,\n            y_max: 745,\n            ha: 755,\n            leftSideBearing: 63,\n            advanceWidth: 680,\n        },\n        Y: {\n            x_min: 43,\n            x_max: 503,\n            y_min: -21,\n            y_max: 734,\n            ha: 755,\n            leftSideBearing: 43,\n            advanceWidth: 541,\n        },\n        Z: {\n            x_min: 42,\n            x_max: 584,\n            y_min: -10,\n            y_max: 739,\n            ha: 749,\n            leftSideBearing: 42,\n            advanceWidth: 629,\n        },\n        '[': {\n            x_min: 46,\n            x_max: 346,\n            y_min: -150,\n            y_max: 884,\n            ha: 1034,\n            leftSideBearing: 46,\n            advanceWidth: 291,\n        },\n        '\\\\': {\n            x_min: 20,\n            x_max: 616,\n            y_min: -100,\n            y_max: 797,\n            ha: 897,\n            leftSideBearing: 20,\n            advanceWidth: 645,\n        },\n        ']': {\n            x_min: -76,\n            x_max: 226,\n            y_min: -150,\n            y_max: 881,\n            ha: 1031,\n            leftSideBearing: -76,\n            advanceWidth: 297,\n        },\n        '^': {\n            x_min: 43,\n            x_max: 437,\n            y_min: 517,\n            y_max: 812,\n            ha: 295,\n            leftSideBearing: 43,\n            advanceWidth: 478,\n        },\n        _: {\n            x_min: 29,\n            x_max: 563,\n            y_min: -110,\n            y_max: -1,\n            ha: 109,\n            leftSideBearing: 29,\n            advanceWidth: 598,\n        },\n        '`': {\n            x_min: 54,\n            x_max: 321,\n            y_min: 540,\n            y_max: 747,\n            ha: 207,\n            leftSideBearing: 54,\n            advanceWidth: 368,\n        },\n        a: {\n            x_min: 20,\n            x_max: 447,\n            y_min: -17,\n            y_max: 495,\n            ha: 512,\n            leftSideBearing: 20,\n            advanceWidth: 494,\n        },\n        b: {\n            x_min: 37,\n            x_max: 466,\n            y_min: -27,\n            y_max: 770,\n            ha: 797,\n            leftSideBearing: 37,\n            advanceWidth: 510,\n        },\n        c: {\n            x_min: 35,\n            x_max: 456,\n            y_min: -9,\n            y_max: 507,\n            ha: 516,\n            leftSideBearing: 35,\n            advanceWidth: 460,\n        },\n        d: {\n            x_min: 45,\n            x_max: 520,\n            y_min: -15,\n            y_max: 764,\n            ha: 779,\n            leftSideBearing: 45,\n            advanceWidth: 560,\n        },\n        e: {\n            x_min: 33,\n            x_max: 370,\n            y_min: -5,\n            y_max: 501,\n            ha: 506,\n            leftSideBearing: 33,\n            advanceWidth: 397,\n        },\n        f: {\n            x_min: 35,\n            x_max: 411,\n            y_min: -13,\n            y_max: 695,\n            ha: 708,\n            leftSideBearing: 35,\n            advanceWidth: 453,\n        },\n        g: {\n            x_min: 33,\n            x_max: 551,\n            y_min: -257,\n            y_max: 505,\n            ha: 762,\n            leftSideBearing: 33,\n            advanceWidth: 611,\n        },\n        h: {\n            x_min: 32,\n            x_max: 458,\n            y_min: -29,\n            y_max: 743,\n            ha: 772,\n            leftSideBearing: 32,\n            advanceWidth: 491,\n        },\n        i: {\n            x_min: 45,\n            x_max: 167,\n            y_min: -13,\n            y_max: 631,\n            ha: 644,\n            leftSideBearing: 45,\n            advanceWidth: 220,\n        },\n        j: {\n            x_min: -127,\n            x_max: 261,\n            y_min: -231,\n            y_max: 601,\n            ha: 832,\n            leftSideBearing: -127,\n            advanceWidth: 308,\n        },\n        k: {\n            x_min: 39,\n            x_max: 443,\n            y_min: -3,\n            y_max: 700,\n            ha: 703,\n            leftSideBearing: 39,\n            advanceWidth: 497,\n        },\n        l: {\n            x_min: 58,\n            x_max: 168,\n            y_min: -8,\n            y_max: 686,\n            ha: 694,\n            leftSideBearing: 58,\n            advanceWidth: 227,\n        },\n        m: {\n            x_min: 39,\n            x_max: 688,\n            y_min: -14,\n            y_max: 501,\n            ha: 515,\n            leftSideBearing: 39,\n            advanceWidth: 718,\n        },\n        n: {\n            x_min: 45,\n            x_max: 491,\n            y_min: -32,\n            y_max: 512,\n            ha: 544,\n            leftSideBearing: 45,\n            advanceWidth: 541,\n        },\n        o: {\n            x_min: 41,\n            x_max: 424,\n            y_min: -12,\n            y_max: 493,\n            ha: 505,\n            leftSideBearing: 41,\n            advanceWidth: 447,\n        },\n        p: {\n            x_min: 25,\n            x_max: 529,\n            y_min: -260,\n            y_max: 500,\n            ha: 760,\n            leftSideBearing: 25,\n            advanceWidth: 573,\n        },\n        q: {\n            x_min: 53,\n            x_max: 603,\n            y_min: -235,\n            y_max: 514,\n            ha: 749,\n            leftSideBearing: 53,\n            advanceWidth: 623,\n        },\n        r: {\n            x_min: 32,\n            x_max: 407,\n            y_min: -7,\n            y_max: 492,\n            ha: 499,\n            leftSideBearing: 32,\n            advanceWidth: 460,\n        },\n        s: {\n            x_min: 49,\n            x_max: 416,\n            y_min: -12,\n            y_max: 519,\n            ha: 531,\n            leftSideBearing: 49,\n            advanceWidth: 460,\n        },\n        t: {\n            x_min: 32,\n            x_max: 442,\n            y_min: -5,\n            y_max: 684,\n            ha: 689,\n            leftSideBearing: 32,\n            advanceWidth: 469,\n        },\n        u: {\n            x_min: 41,\n            x_max: 487,\n            y_min: -5,\n            y_max: 507,\n            ha: 512,\n            leftSideBearing: 41,\n            advanceWidth: 510,\n        },\n        v: {\n            x_min: 16,\n            x_max: 441,\n            y_min: -20,\n            y_max: 542,\n            ha: 562,\n            leftSideBearing: 16,\n            advanceWidth: 456,\n        },\n        w: {\n            x_min: 39,\n            x_max: 639,\n            y_min: -22,\n            y_max: 505,\n            ha: 527,\n            leftSideBearing: 39,\n            advanceWidth: 661,\n        },\n        x: {\n            x_min: 15,\n            x_max: 505,\n            y_min: -39,\n            y_max: 539,\n            ha: 578,\n            leftSideBearing: 15,\n            advanceWidth: 541,\n        },\n        y: {\n            x_min: -98,\n            x_max: 501,\n            y_min: -242,\n            y_max: 511,\n            ha: 753,\n            leftSideBearing: -98,\n            advanceWidth: 548,\n        },\n        z: {\n            x_min: 27,\n            x_max: 479,\n            y_min: -3,\n            y_max: 494,\n            ha: 497,\n            leftSideBearing: 27,\n            advanceWidth: 494,\n        },\n        '{': {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n            ha: 0,\n            leftSideBearing: 0,\n            advanceWidth: 308,\n        },\n        '|': {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n            ha: 0,\n            leftSideBearing: 0,\n            advanceWidth: 308,\n        },\n        '}': {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n            ha: 0,\n            leftSideBearing: 0,\n            advanceWidth: 308,\n        },\n        '~': {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n            ha: 0,\n            leftSideBearing: 0,\n            advanceWidth: 308,\n        },\n    },\n    fontFamily: 'PetalumaScript',\n    resolution: 1000,\n    generatedOn: '2020-06-14T18:33:25.407Z',\n};\n","export const RobotoSlabFont = {\n    spacing: 50,\n    glyphs: {\n        ' ': {\n            x_min: 0,\n            x_max: 509,\n            y_min: 0,\n            y_max: 2000,\n            ha: 2000,\n            leftSideBearing: 0,\n            advanceWidth: 509,\n        },\n        '0': {\n            x_min: 121,\n            x_max: 1048,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 121,\n            advanceWidth: 1168,\n        },\n        '1': {\n            x_min: 117,\n            x_max: 767,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 117,\n            advanceWidth: 844,\n        },\n        '2': {\n            x_min: 75.8474576645637,\n            x_max: 1040,\n            y_min: 0,\n            y_max: 1477,\n            ha: 1477,\n            leftSideBearing: 75,\n            advanceWidth: 1131,\n        },\n        '3': {\n            x_min: 74.85365853658536,\n            x_max: 994,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 74,\n            advanceWidth: 1106,\n        },\n        '4': {\n            x_min: 63,\n            x_max: 1114,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 63,\n            advanceWidth: 1187,\n        },\n        '5': {\n            x_min: 96.8448275474953,\n            x_max: 982,\n            y_min: -21,\n            y_max: 1456,\n            ha: 1477,\n            leftSideBearing: 96,\n            advanceWidth: 1081,\n        },\n        '6': {\n            x_min: 121,\n            x_max: 1067,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 121,\n            advanceWidth: 1144,\n        },\n        '7': {\n            x_min: 76,\n            x_max: 1060,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: -30,\n            advanceWidth: 1128,\n        },\n        '8': {\n            x_min: 92,\n            x_max: 1039,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 92,\n            advanceWidth: 1131,\n        },\n        '9': {\n            x_min: 84,\n            x_max: 1026,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 84,\n            advanceWidth: 1154,\n        },\n        '!': {\n            x_min: 143,\n            x_max: 340,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 143,\n            advanceWidth: 483,\n        },\n        '\"': {\n            x_min: 166,\n            x_max: 634,\n            y_min: 1055,\n            y_max: 1560,\n            ha: 505,\n            leftSideBearing: 166,\n            advanceWidth: 770,\n        },\n        '#': {\n            x_min: 63,\n            x_max: 1179,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 63,\n            advanceWidth: 1246,\n        },\n        $: {\n            x_min: 81.92156915727656,\n            x_max: 1012,\n            y_min: -208,\n            y_max: 1693,\n            ha: 1901,\n            leftSideBearing: 81,\n            advanceWidth: 1110,\n        },\n        '%': {\n            x_min: 77,\n            x_max: 1384,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 77,\n            advanceWidth: 1460,\n        },\n        '&': {\n            x_min: 74,\n            x_max: 1242,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 74,\n            advanceWidth: 1289,\n        },\n        \"'\": {\n            x_min: 166,\n            x_max: 324,\n            y_min: 1055,\n            y_max: 1560,\n            ha: 505,\n            leftSideBearing: 166,\n            advanceWidth: 460,\n        },\n        '(': {\n            x_min: 114,\n            x_max: 650,\n            y_min: -463,\n            y_max: 1636,\n            ha: 2099,\n            leftSideBearing: 114,\n            advanceWidth: 662,\n        },\n        ')': {\n            x_min: 11,\n            x_max: 547,\n            y_min: -463,\n            y_max: 1636,\n            ha: 2099,\n            leftSideBearing: 11,\n            advanceWidth: 654,\n        },\n        '*': {\n            x_min: 66,\n            x_max: 893,\n            y_min: 607,\n            y_max: 1456,\n            ha: 849,\n            leftSideBearing: 66,\n            advanceWidth: 958,\n        },\n        '+': {\n            x_min: 73,\n            x_max: 1071,\n            y_min: 146,\n            y_max: 1206,\n            ha: 1060,\n            leftSideBearing: 73,\n            advanceWidth: 1145,\n        },\n        ',': {\n            x_min: 23,\n            x_max: 315,\n            y_min: -311,\n            y_max: 221,\n            ha: 532,\n            leftSideBearing: 23,\n            advanceWidth: 404,\n        },\n        '-': {\n            x_min: 154,\n            x_max: 643,\n            y_min: 538,\n            y_max: 692,\n            ha: 154,\n            leftSideBearing: 154,\n            advanceWidth: 797,\n        },\n        '.': {\n            x_min: 145,\n            x_max: 342,\n            y_min: 0,\n            y_max: 202,\n            ha: 202,\n            leftSideBearing: 145,\n            advanceWidth: 493,\n        },\n        '/': {\n            x_min: 0,\n            x_max: 774,\n            y_min: -125,\n            y_max: 1456,\n            ha: 1581,\n            leftSideBearing: 0,\n            advanceWidth: 824,\n        },\n        ':': {\n            x_min: 145,\n            x_max: 342,\n            y_min: 0,\n            y_max: 1082,\n            ha: 1082,\n            leftSideBearing: 145,\n            advanceWidth: 419,\n        },\n        ';': {\n            x_min: 53,\n            x_max: 345,\n            y_min: -311,\n            y_max: 1082,\n            ha: 1393,\n            leftSideBearing: 53,\n            advanceWidth: 424,\n        },\n        '<': {\n            x_min: 76,\n            x_max: 892,\n            y_min: 107,\n            y_max: 1013,\n            ha: 906,\n            leftSideBearing: 76,\n            advanceWidth: 1017,\n        },\n        '=': {\n            x_min: 147,\n            x_max: 981,\n            y_min: 407,\n            y_max: 987,\n            ha: 580,\n            leftSideBearing: 147,\n            advanceWidth: 1127,\n        },\n        '>': {\n            x_min: 125,\n            x_max: 980,\n            y_min: 87,\n            y_max: 993,\n            ha: 906,\n            leftSideBearing: 125,\n            advanceWidth: 1060,\n        },\n        '?': {\n            x_min: 65.92660602419838,\n            x_max: 890,\n            y_min: 0,\n            y_max: 1477,\n            ha: 1477,\n            leftSideBearing: 65,\n            advanceWidth: 953,\n        },\n        '@': {\n            x_min: 84.3592218305664,\n            x_max: 1705.2346925277395,\n            y_min: -453,\n            y_max: 1431,\n            ha: 1884,\n            leftSideBearing: 84,\n            advanceWidth: 1821,\n        },\n        A: {\n            x_min: 70,\n            x_max: 1463,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 70,\n            advanceWidth: 1533,\n        },\n        B: {\n            x_min: 81,\n            x_max: 1253,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1322,\n        },\n        C: {\n            x_min: 80,\n            x_max: 1174,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 80,\n            advanceWidth: 1290,\n        },\n        D: {\n            x_min: 81,\n            x_max: 1291,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1356,\n        },\n        E: {\n            x_min: 81,\n            x_max: 1190,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1306,\n        },\n        F: {\n            x_min: 81,\n            x_max: 1176,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1256,\n        },\n        G: {\n            x_min: 80,\n            x_max: 1226,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 80,\n            advanceWidth: 1346,\n        },\n        H: {\n            x_min: 81,\n            x_max: 1497,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1578,\n        },\n        I: {\n            x_min: 81,\n            x_max: 604,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 685,\n        },\n        J: {\n            x_min: 60,\n            x_max: 1100,\n            y_min: -21,\n            y_max: 1456,\n            ha: 1477,\n            leftSideBearing: 60,\n            advanceWidth: 1169,\n        },\n        K: {\n            x_min: 81,\n            x_max: 1427,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1501,\n        },\n        L: {\n            x_min: 81,\n            x_max: 1130,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1210,\n        },\n        M: {\n            x_min: 94,\n            x_max: 1888,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 94,\n            advanceWidth: 1982,\n        },\n        N: {\n            x_min: 83,\n            x_max: 1509,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 83,\n            advanceWidth: 1592,\n        },\n        O: {\n            x_min: 70,\n            x_max: 1281,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 70,\n            advanceWidth: 1351,\n        },\n        P: {\n            x_min: 81,\n            x_max: 1242,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1297,\n        },\n        Q: {\n            x_min: 70,\n            x_max: 1348,\n            y_min: -245,\n            y_max: 1477,\n            ha: 1722,\n            leftSideBearing: 70,\n            advanceWidth: 1376,\n        },\n        R: {\n            x_min: 81,\n            x_max: 1285,\n            y_min: 0,\n            y_max: 1455,\n            ha: 1455,\n            leftSideBearing: 81,\n            advanceWidth: 1385,\n        },\n        S: {\n            x_min: 115,\n            x_max: 1116,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 115,\n            advanceWidth: 1206,\n        },\n        T: {\n            x_min: 96,\n            x_max: 1306,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 96,\n            advanceWidth: 1406,\n        },\n        U: {\n            x_min: 70,\n            x_max: 1452,\n            y_min: -21,\n            y_max: 1456,\n            ha: 1477,\n            leftSideBearing: 70,\n            advanceWidth: 1522,\n        },\n        V: {\n            x_min: 65,\n            x_max: 1443,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 65,\n            advanceWidth: 1508,\n        },\n        W: {\n            x_min: 72,\n            x_max: 2057,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 72,\n            advanceWidth: 2129,\n        },\n        X: {\n            x_min: 80,\n            x_max: 1449,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 80,\n            advanceWidth: 1529,\n        },\n        Y: {\n            x_min: 65,\n            x_max: 1396,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 65,\n            advanceWidth: 1461,\n        },\n        Z: {\n            x_min: 90,\n            x_max: 1107,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 90,\n            advanceWidth: 1197,\n        },\n        '[': {\n            x_min: 157,\n            x_max: 541,\n            y_min: -312,\n            y_max: 1664,\n            ha: 1976,\n            leftSideBearing: 157,\n            advanceWidth: 573,\n        },\n        '\\\\': {\n            x_min: 36,\n            x_max: 830,\n            y_min: -125,\n            y_max: 1456,\n            ha: 1581,\n            leftSideBearing: 36,\n            advanceWidth: 841,\n        },\n        ']': {\n            x_min: 23,\n            x_max: 408,\n            y_min: -312,\n            y_max: 1664,\n            ha: 1976,\n            leftSideBearing: 23,\n            advanceWidth: 552,\n        },\n        '^': {\n            x_min: 71,\n            x_max: 802,\n            y_min: 729,\n            y_max: 1456,\n            ha: 727,\n            leftSideBearing: 71,\n            advanceWidth: 864,\n        },\n        _: {\n            x_min: 119,\n            x_max: 1041,\n            y_min: -154,\n            y_max: 0,\n            ha: 154,\n            leftSideBearing: 119,\n            advanceWidth: 1168,\n        },\n        '`': {\n            x_min: 40,\n            x_max: 456,\n            y_min: 1288,\n            y_max: 1560,\n            ha: 272,\n            leftSideBearing: 40,\n            advanceWidth: 496,\n        },\n        a: {\n            x_min: 79,\n            x_max: 1053,\n            y_min: -21,\n            y_max: 1102,\n            ha: 1123,\n            leftSideBearing: 79,\n            advanceWidth: 1132,\n        },\n        b: {\n            x_min: -16,\n            x_max: 1071,\n            y_min: -21,\n            y_max: 1560,\n            ha: 1581,\n            leftSideBearing: -16,\n            advanceWidth: 1145,\n        },\n        c: {\n            x_min: 78,\n            x_max: 988,\n            y_min: -21,\n            y_max: 1102,\n            ha: 1123,\n            leftSideBearing: 78,\n            advanceWidth: 1067,\n        },\n        d: {\n            x_min: 78,\n            x_max: 1156,\n            y_min: -21,\n            y_max: 1560,\n            ha: 1581,\n            leftSideBearing: 78,\n            advanceWidth: 1218,\n        },\n        e: {\n            x_min: 74,\n            x_max: 980,\n            y_min: -21,\n            y_max: 1102,\n            ha: 1123,\n            leftSideBearing: 74,\n            advanceWidth: 1059,\n        },\n        f: {\n            x_min: 64,\n            x_max: 731,\n            y_min: 0,\n            y_max: 1581,\n            ha: 1581,\n            leftSideBearing: 64,\n            advanceWidth: 725,\n        },\n        g: {\n            x_min: 78,\n            x_max: 1133,\n            y_min: -437,\n            y_max: 1102,\n            ha: 1539,\n            leftSideBearing: 78,\n            advanceWidth: 1157,\n        },\n        h: {\n            x_min: 49,\n            x_max: 1255,\n            y_min: 0,\n            y_max: 1560,\n            ha: 1560,\n            leftSideBearing: 49,\n            advanceWidth: 1315,\n        },\n        i: {\n            x_min: 67,\n            x_max: 590,\n            y_min: 0,\n            y_max: 1560,\n            ha: 1560,\n            leftSideBearing: 67,\n            advanceWidth: 652,\n        },\n        j: {\n            x_min: -56,\n            x_max: 381,\n            y_min: -437,\n            y_max: 1560,\n            ha: 1997,\n            leftSideBearing: -56,\n            advanceWidth: 525,\n        },\n        k: {\n            x_min: 64,\n            x_max: 1248,\n            y_min: 0,\n            y_max: 1560,\n            ha: 1560,\n            leftSideBearing: 64,\n            advanceWidth: 1287,\n        },\n        l: {\n            x_min: 64,\n            x_max: 587,\n            y_min: 0,\n            y_max: 1560,\n            ha: 1560,\n            leftSideBearing: 64,\n            advanceWidth: 653,\n        },\n        m: {\n            x_min: 74,\n            x_max: 1905,\n            y_min: 0,\n            y_max: 1102,\n            ha: 1102,\n            leftSideBearing: 74,\n            advanceWidth: 1977,\n        },\n        n: {\n            x_min: 74,\n            x_max: 1278,\n            y_min: 0,\n            y_max: 1102,\n            ha: 1102,\n            leftSideBearing: 74,\n            advanceWidth: 1343,\n        },\n        o: {\n            x_min: 78,\n            x_max: 1046,\n            y_min: -21,\n            y_max: 1102,\n            ha: 1123,\n            leftSideBearing: 78,\n            advanceWidth: 1124,\n        },\n        p: {\n            x_min: 34,\n            x_max: 1119,\n            y_min: -416,\n            y_max: 1102,\n            ha: 1518,\n            leftSideBearing: 34,\n            advanceWidth: 1197,\n        },\n        q: {\n            x_min: 78,\n            x_max: 1135,\n            y_min: -416,\n            y_max: 1102,\n            ha: 1518,\n            leftSideBearing: 78,\n            advanceWidth: 1139,\n        },\n        r: {\n            x_min: 72,\n            x_max: 808,\n            y_min: 0,\n            y_max: 1102,\n            ha: 1102,\n            leftSideBearing: 72,\n            advanceWidth: 854,\n        },\n        s: {\n            x_min: 104,\n            x_max: 933,\n            y_min: -21,\n            y_max: 1102,\n            ha: 1123,\n            leftSideBearing: 104,\n            advanceWidth: 1022,\n        },\n        t: {\n            x_min: 24,\n            x_max: 678,\n            y_min: -17,\n            y_max: 1343,\n            ha: 1360,\n            leftSideBearing: 24,\n            advanceWidth: 730,\n        },\n        u: {\n            x_min: 52,\n            x_max: 1181,\n            y_min: -21,\n            y_max: 1082,\n            ha: 1103,\n            leftSideBearing: 52,\n            advanceWidth: 1245,\n        },\n        v: {\n            x_min: 26,\n            x_max: 1176,\n            y_min: 0,\n            y_max: 1082,\n            ha: 1082,\n            leftSideBearing: 26,\n            advanceWidth: 1206,\n        },\n        w: {\n            x_min: 52,\n            x_max: 1777,\n            y_min: 0,\n            y_max: 1082,\n            ha: 1082,\n            leftSideBearing: 52,\n            advanceWidth: 1823,\n        },\n        x: {\n            x_min: 42,\n            x_max: 1163,\n            y_min: 0,\n            y_max: 1082,\n            ha: 1082,\n            leftSideBearing: 42,\n            advanceWidth: 1203,\n        },\n        y: {\n            x_min: 24,\n            x_max: 1172,\n            y_min: -437,\n            y_max: 1082,\n            ha: 1519,\n            leftSideBearing: 24,\n            advanceWidth: 1192,\n        },\n        z: {\n            x_min: 88,\n            x_max: 960,\n            y_min: 0,\n            y_max: 1082,\n            ha: 1082,\n            leftSideBearing: 88,\n            advanceWidth: 1032,\n        },\n        '{': {\n            x_min: 63,\n            x_max: 671,\n            y_min: -364,\n            y_max: 1597,\n            ha: 1961,\n            leftSideBearing: 63,\n            advanceWidth: 701,\n        },\n        '|': {\n            x_min: 150,\n            x_max: 307,\n            y_min: -270,\n            y_max: 1456,\n            ha: 1726,\n            leftSideBearing: 150,\n            advanceWidth: 451,\n        },\n        '}': {\n            x_min: 27,\n            x_max: 635,\n            y_min: -364,\n            y_max: 1597,\n            ha: 1961,\n            leftSideBearing: 27,\n            advanceWidth: 701,\n        },\n        '~': {\n            x_min: 121,\n            x_max: 1257,\n            y_min: 401,\n            y_max: 803,\n            ha: 402,\n            leftSideBearing: 121,\n            advanceWidth: 1386,\n        },\n    },\n    fontFamily: 'Roboto Slab',\n    resolution: 2048,\n    generatedOn: '2020-06-15T19:12:58.120Z',\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// Utility methods used by the rest of the VexFlow codebase.\nimport { Flow } from './flow';\nimport { log, RuntimeError } from './util';\nexport class Vex {\n    // Users of `Vex.forEach(a, fn)` should use `Array.prototype.forEach()` instead.\n    // static forEach<T>(arr: T[], callbackFn: (value: T, index: number, array: T[]) => void) {\n    //   arr.forEach(callbackFn);\n    // }\n    /**\n     * Take `arr` and return a new list consisting of the sorted, unique,\n     * contents of arr. Does not modify `arr`.\n     */\n    // eslint-disable-next-line\n    static sortAndUnique(arr, cmp, eq) {\n        if (arr.length > 1) {\n            const newArr = [];\n            let last;\n            arr.sort(cmp);\n            for (let i = 0; i < arr.length; ++i) {\n                if (i === 0 || !eq(arr[i], last)) {\n                    newArr.push(arr[i]);\n                }\n                last = arr[i];\n            }\n            return newArr;\n        }\n        else {\n            return arr;\n        }\n    }\n    /** Check if array `arr` contains `obj`. */\n    // eslint-disable-next-line\n    static contains(arr, obj) {\n        let i = arr.length;\n        while (i--) {\n            if (arr[i] === obj) {\n                return true;\n            }\n        }\n        return false;\n    }\n    // Get the 2D Canvas context from DOM element `canvas_sel`.\n    static getCanvasContext(canvasSelector) {\n        if (!canvasSelector) {\n            throw new RuntimeError('BadArgument', 'Invalid canvas selector: ' + canvasSelector);\n        }\n        const canvas = document.getElementById(canvasSelector);\n        if (!(canvas && canvas.getContext)) {\n            throw new RuntimeError('UnsupportedBrowserError', 'This browser does not support HTML5 Canvas');\n        }\n        return canvas.getContext('2d');\n    }\n    /** Benchmark. Run function `f` once and report time elapsed shifted by `s` milliseconds. */\n    // eslint-disable-next-line\n    static benchmark(s, f) {\n        const start_time = new Date().getTime();\n        f();\n        const elapsed = new Date().getTime() - start_time;\n        log(s, elapsed + 'ms');\n    }\n    // Get stack trace.\n    static stackTrace() {\n        const err = new Error();\n        return err.stack;\n    }\n}\nVex.Flow = Flow;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n// If you are adding a new music engraving font, search for instances of ADD_MUSIC_FONT throughout the code base.\n// To compile your new font into vexflow.js, take a look at src/fonts/load_all.ts\n// You can export a font module which can be dynamically loaded by vexflow-core.js (see: Gruntfile.js).\n// ADD_MUSIC_FONT\n// To add a new music engraving font XXX, make a copy of this file and name it load_xxx.ts.\n// Then you will need to generate xxx_glyphs.ts and xxx_metrics.ts.\n// xxx_glyphs.ts is created by tools/fonts/fontgen_smufl.js\n// xxx_metrics.ts is created by hand. You could copy bravura_metrics.ts and modify/remove/add entries where necessary.\nimport { Font } from '../font';\nimport { BravuraFont } from './bravura_glyphs';\nimport { BravuraMetrics } from './bravura_metrics';\nexport function loadBravura() {\n    Font.load('Bravura', BravuraFont, BravuraMetrics);\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font } from '../font';\nimport { GonvilleFont } from './gonville_glyphs';\nimport { GonvilleMetrics } from './gonville_metrics';\nexport function loadGonville() {\n    Font.load('Gonville', GonvilleFont, GonvilleMetrics);\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font } from '../font';\nimport { PetalumaFont } from './petaluma_glyphs';\nimport { PetalumaMetrics } from './petaluma_metrics';\nexport function loadPetaluma() {\n    Font.load('Petaluma', PetalumaFont, PetalumaMetrics);\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font } from '../font';\nimport { CustomFont } from './custom_glyphs';\nimport { CustomMetrics } from './custom_metrics';\nexport function loadCustom() {\n    Font.load('Custom', CustomFont, CustomMetrics);\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n//\n// vexflow.ts is the entry point for the build output file vexflow.js.\n// It statically bundles all the music engraving fonts, and sets the music font stack to:\n// Flow.setMusicFont('Bravura', 'Gonville', 'Custom');\n// The webpack config inside Gruntfile.js sets the mode to 'production' to produce a minified build.\nimport { Flow } from '../src/flow';\nimport { loadAllMusicFonts } from '../src/fonts/load_all';\nimport { loadTextFonts } from '../src/fonts/textfonts';\nloadAllMusicFonts();\nFlow.setMusicFont('Bravura', 'Gonville', 'Custom');\nloadTextFonts();\n// Re-export all exports from index.ts.\nexport * from '../src/index';\n// Also collect all exports into a default export for CJS projects.\nexport * as default from '../src/index';\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font } from '../font';\nimport { TextFormatter } from '../textformatter';\nimport { PetalumaScriptFont } from './petalumascript_glyphs';\nimport { RobotoSlabFont } from './robotoslab_glyphs';\nexport function loadTextFonts() {\n    // Roboto Slab\n    {\n        const fontData = RobotoSlabFont;\n        const { fontFamily, resolution, glyphs } = fontData;\n        Font.load(fontFamily, fontData);\n        // Previously we used 'H', but it isn't actually the tallest or the widest.\n        // Interestingly, the lowercase 'b' is the tallest glyph.\n        const maxSizeGlyph = 'b';\n        TextFormatter.registerInfo({\n            family: fontFamily,\n            resolution,\n            glyphs,\n            maxSizeGlyph,\n            monospaced: false,\n            bold: false,\n            italic: false,\n            superscriptOffset: 0.66,\n            subscriptOffset: 0.66,\n            serifs: true,\n            description: 'Text font to pair with the Bravura / Gonville music fonts.',\n        });\n    }\n    // PetalumaScript\n    {\n        const fontData = PetalumaScriptFont;\n        const { fontFamily, resolution, glyphs } = fontData;\n        Font.load(fontFamily, fontData);\n        // M is wider, but H is taller. :-)\n        // Lowercase b is also taller in this font.\n        const maxSizeGlyph = 'b';\n        TextFormatter.registerInfo({\n            family: fontFamily,\n            resolution,\n            glyphs,\n            maxSizeGlyph,\n            monospaced: false,\n            bold: false,\n            italic: false,\n            superscriptOffset: 0.66,\n            subscriptOffset: 0.66,\n            serifs: false,\n            description: 'Text font to pair with the Petaluma music font.',\n        });\n    }\n}\n","import {\n  Beam,\n  Formatter,\n  Stave,\n  StaveNote,\n  SVGContext,\n  Voice,\n  VoiceTime\n} from \"vexflow\";\n\nexport class NoteDisplayer {\n  constructor(\n    private readonly context: SVGContext,\n    private readonly stave: Stave\n  ) {}\n\n  private lastNote: SVGElement | null = null;\n\n  protected ndraw(voiceInfo: { notesList: StaveNote[]; voiceTime: VoiceTime }) {\n    if (this.lastNote) {\n      this.context.svg.removeChild(this.lastNote);\n    }\n    this.lastNote = this.context.openGroup();\n\n    const voice = new Voice(voiceInfo.voiceTime);\n    voice.addTickables(voiceInfo.notesList);\n    new Formatter().joinVoices([voice]).format([voice]);\n    let beams = Beam.generateBeams(voiceInfo.notesList);\n    voice.draw(this.context, this.stave);\n    beams.forEach((beam) => {\n      beam.setContext(this.context).draw();\n    });\n    this.context.closeGroup();\n  }\n}\n","import { VirtualKeyboard } from \"./VirtualKeyboard\";\ntype QuestionCallback = (key: string, result: boolean) => void;\nexport class Question {\n  constructor(\n    private readonly div: HTMLDivElement,\n    private readonly virtualKeyboard: VirtualKeyboard | null = null,\n    private readonly answerSize: number = 4,\n    private readonly interval: number = 0,\n    private readonly resultDelay: number = 1000\n  ) {\n    this.initAnswser();\n  }\n  private answerBtnList!: Array<HTMLDivElement>;\n\n  private initAnswser() {\n    this.answerBtnList = [];\n    for (let index = 0; index < this.answerSize; index++) {\n      this.answerBtnList.push(document.createElement(\"div\"));\n    }\n    for (const [i, htmlEle] of this.answerBtnList.entries()) {\n      htmlEle.classList.add(\"answer-btn\");\n      this.div.appendChild(htmlEle);\n      htmlEle.addEventListener(\"click\", () => {\n        this.answerBtnClicked(i);\n      });\n    }\n  }\n  private rightIndex: number = 0;\n  private rightAnswer: string = \"\";\n\n  private answerBtnClicked(idx: number) {\n    if (this.disabled) return;\n    if (this.timeout != null) clearTimeout(this.timeout);\n    const result = idx === this.rightIndex;\n    this.showAnswer(result);\n  }\n  public extenalInput(note: string) {\n    if (this.disabled) return;\n    if (this.timeout != null) clearTimeout(this.timeout);\n    const result = note === this.rightAnswer;\n    this.showAnswer(result);\n  }\n\n  private disabled = false;\n\n  private showAnswer(result: boolean) {\n    this.disabled = true;\n    this.answerBtnList[this.rightIndex].classList.add(\"right-answer\");\n    this.virtualKeyboard?.highlightKey(this.rightAnswer);\n    setTimeout(\n      () => {\n        this.disabled = false;\n        this.notifyListener(this.rightAnswer, result);\n      },\n      result ? 300 : this.resultDelay\n    );\n  }\n\n  setAnswer(answer: string, selections: string[]) {\n    this.answerBtnList.forEach((btn, idx) => {\n      btn.classList.remove(\"right-answer\");\n      btn.innerText = selections[idx].toUpperCase();\n    });\n    this.virtualKeyboard?.removeKeyHighlight();\n\n    const rightIndex = selections.indexOf(answer);\n    this.rightIndex = rightIndex;\n    this.rightAnswer = answer;\n    if (this.interval !== 0) {\n      this.timeout = setTimeout(() => {\n        this.showAnswer(false);\n      }, this.interval);\n    }\n  }\n\n  private timeout: number | null = null;\n  private _resultCb: QuestionCallback | null = null;\n\n  public set resultCb(_resultCb: QuestionCallback) {\n    this._resultCb = _resultCb;\n  }\n  private notifyListener(key: string, result: boolean) {\n    if (this._resultCb != null) {\n      this._resultCb(key, result);\n    }\n  }\n}\n","import { Renderer, Stave, SVGContext } from \"vexflow\";\nexport class StaveDisplayer {\n  private context: SVGContext;\n  private stave: Stave | null = null;\n  private renderer: Renderer;\n  private width: number = 110;\n  constructor(\n    private readonly div: HTMLDivElement,\n    private clef: \"treble\" | \"bass\" = \"treble\",\n    private readonly timeSignature = \"4/4\"\n  ) {\n    this.renderer = new Renderer(this.div, Renderer.Backends.SVG);\n\n    this.renderer.resize(this.width + 50, 300);\n\n    this.context = this.renderer.getContext() as SVGContext;\n    this.draw();\n  }\n  setClef(clef: \"treble\" | \"bass\") {\n    this.clef = clef;\n  }\n\n  private staveEle: SVGElement | null = null;\n\n  draw() {\n    if (this.staveEle) {\n      this.context.svg.removeChild(this.staveEle);\n    }\n    this.staveEle = this.context.openGroup();\n    this.stave = new Stave(0, 80, this.width);\n    this.stave.addClef(this.clef).addTimeSignature(this.timeSignature);\n    this.stave.setContext(this.context).draw();\n    this.context.closeGroup();\n  }\n\n  getContext() {\n    return this.context;\n  }\n\n  getStave() {\n    if (this.stave == null) {\n      throw \"Stave is not existed\";\n    }\n    return this.stave;\n  }\n\n  setWidth(width: number) {\n    this.width = width;\n    this.renderer.resize(width + 80, 300);\n    this.draw();\n  }\n}\n"],"names":["$mDWTX","parcelRequire","$ee5d42cf118989ed$export$3589f7641dd1cf22","constructor","start","end","this","setRange","range","noteRange","next","Math","floor","random","length","available","$ee5d42cf118989ed$export$f7554055d55979cf","$ee5d42cf118989ed$export$856235dc1a30fe7c","$df5bef30413a053b$var$noteOrder","$df5bef30413a053b$export$d972e07f7527d6ac","a","by","_iter","$df5bef30413a053b$export$b9f9ab316a5d50e2","$df5bef30413a053b$export$b5b585e73412508a","$df5bef30413a053b$export$707f5117bc3b485","noteName","note","String","fromCharCode","charCodeAt","group","$df5bef30413a053b$export$226b7919325adf58","from","to","initial","split","parseInt","last","b","indexOf","push","$df5bef30413a053b$export$b1e438fe12f4b8ef","mid","near","initial1","initial2","index","$df5bef30413a053b$export$448332262467e042","arr","n","$cLG06","$8f618c12a37831ee$export$f88a5202af686c2f","config","size","learnRate","keepNegetaive","bassMap","Map","trebleMap","map","addWrong","has","set","get","addNewNote","addRight","delete","deleteMinialKey","key","_small","Infinity","k","v","entries","shouldDeleteNote","fullList","forEach","weight","randomItem","setClef","clef","$f61ac4e421fd59a6$export$114aa43ee4755930","list","totalWeight","reduce","prev","curr","randomNum","min","max","weightSum","i","toFixed","$6EGpo","$21adcba9e974cb54$export$9ee568263ceb5d41","$7M1XI","NoteDisplayer","context","stave","voiceInfo","super","draw","noteChar","notes","StaveNote","keys","duration","subDuration","ndraw","notesList","voiceTime","window","globalThis","module","__webpack_require__","exports","definition","o","Object","defineProperty","enumerable","g","Function","e","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","isCategory","category","checkAncestors","constructorFcn","CATEGORY","getPrototypeOf","isAccidental","Category","Accidental","isAnnotation","Annotation","isBarline","Barline","isDot","Dot","isGraceNote","GraceNote","isGraceNoteGroup","GraceNoteGroup","isNote","Note","isRenderContext","RenderContext","isStaveNote","isStemmableNote","StemmableNote","isTabNote","TabNote","Articulation","BarNote","Beam","Bend","ChordSymbol","Clef","ClefNote","Crescendo","Curve","Element","Fraction","FretHandFinger","GhostNote","Glyph","GlyphNote","GraceTabNote","KeySignature","KeySigNote","Modifier","MultiMeasureRest","NoteHead","NoteSubGroup","Ornament","Parenthesis","PedalMarking","RepeatNote","Repetition","Stave","StaveConnector","StaveHairpin","StaveLine","StaveModifier","StaveSection","StaveTempo","StaveText","StaveTie","Stem","StringNumber","Stroke","System","TabSlide","TabStave","TabTie","TextBracket","TextDynamics","TextNote","Tickable","TimeSignature","TimeSigNote","Tremolo","Tuplet","Vibrato","VibratoBracket","Voice","Volta","RuntimeError","Error","code","message","globalObject","self","t1","defined","x","log","block","args","line","Array","slice","join","console","warn","err","stack","midLine","mid_line","prefix","text","normalizeAngle","PI","numerator","denominator","static","Number","isNaN","t","GCD","LCM","shift","LCMM","simplify","u","d","gcd","add","param1","param2","otherNumerator","otherDenominator","getNumeratorAndDenominator","lcm","subtract","multiply","divide","equals","compare","__staticFractionA","copy","__staticFractionB","greaterThan","greaterThanEquals","lessThan","lessThanEquals","clone","other","quotient","remainder","makeAbs","abs","toString","toSimplifiedString","__staticFractionTmp","toMixedString","s","q","f","parse","str","BoundingBox","y","w","h","that","getX","getY","getW","getH","setX","setY","setW","setH","move","mergeWith","boundingBox","new_x","new_y","new_w","new_h","BoundingBoxComputation","x1","NaN","y1","x2","y2","getX1","getY1","width","height","addPoint","addX","addY","addQuadraticCurve","p0x","p0y","p1x","p1y","p2x","p2y","p01x","denom","it","p01y","addBezierCurve","p3x","p3y","p0","p1","p2","p3","pow","c","b2ac","sqrt","t2","FontWeight","FontStyle","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","throw","result","done","then","apply","fontParser","NORMAL","BOLD","ITALIC","Fonts","Font","fontName","name","fontSize","SIZE","_a","scaleToPxFrom","pt","parseFloat","unit","replace","toLowerCase","style","fromCSSString","family","SANS_SERIF","cssFontShorthand","document","createElement","font","fontFamily","fontWeight","fontStyle","fontInfo","st","trim","wt","sz","scaleFactor","parsedWeight","woffURL","includeWoff2","fontFace","FontFace","load","fonts","host","WEB_FONT_HOST","files","WEB_FONT_FILES","fontPath","loadWebFont","data","metrics","setData","setMetrics","getName","getData","getMetrics","hasData","getResolution","resolution","getGlyphs","glyphs","lookupMetric","defaultValue","keyParts","currObj","SERIF","px","em","in","mm","cm","PetalumaScript","Index","id","type","class","Registry","defaultRegistry","registry","clear","setIndexValue","elem","updateIndex","oldValue","getElementById","getAttribute","register","setAttribute","onRegister","_b","getElementsByAttribute","attribute","index_attr","index_attr_val","getElementsByType","getElementsByClass","className","onUpdate","info","includes","attrs","newID","el","getCategory","classes","rendered","getDefaultRegistry","ID","setStyle","getStyle","applyStyle","save","shadowColor","setShadowColor","shadowBlur","setShadowBlur","fillStyle","setFillStyle","strokeStyle","setStrokeStyle","lineWidth","setLineWidth","restoreStyle","restore","drawWithStyle","checkContext","hasClass","addClass","removeClass","isRendered","setRendered","getAttributes","oldID","getBoundingBox","getContext","setContext","setFont","toCSSString","textFont","defaultTextFont","TEXT_FONT","fontIsObject","fontIsString","fontIsUndefined","sizeWeightStyleAreUndefined","assign","validate","getFont","resetFont","setFontSize","getFontSize","fontSizeInPoints","convertSizeToPointValue","fontSizeInPixels","convertSizeToPixelValue","OutlineCode","ModifierPosition","MOVE","LINE","QUADRATIC","BEZIER","GlyphCacheEntry","fontStack","point","loadMetrics","bbox","getOutlineBoundingBox","outline","scale","x_shift","y_shift","lookupFontMetric","GlyphOutline","originX","originY","nextX","nextY","parts","options","topGlyphs","botGlyphs","originShift","setOptions","reset","glyph","lookupGlyph","x_min","x_max","ha","cached_outline","ctx","x_pos","y_pos","cache","lookup","customScale","renderOutline","go","beginPath","moveTo","lineTo","quadraticCurveTo","bezierCurveTo","fill","bboxComp","penX","penY","getCode","setPoint","setStave","getXShift","setXShift","getYshift","setYShift","checkMetrics","metricsScale","setOriginX","xShift","setOriginY","yShift","setOrigin","render","xPos","yPos","checkStave","renderToStave","getYForGlyphs","CURRENT_CACHE_KEY","entry","MUSIC_FONT_STACK","CENTER","LEFT","RIGHT","ABOVE","BELOW","text_line","position","Position","spacingFromNextModifier","PositionString","center","above","below","left","right","getWidth","setWidth","getNote","checkAttachedNote","setNote","getIndex","checkIndex","setIndex","getModifierContext","modifierContext","checkModifierContext","setModifierContext","getPosition","setPosition","setTextLine","setSpacingFromNextModifier","getSpacingFromNextModifier","alignSubNotesWithNote","subNotes","tickContext","getTickContext","getStave","subNoteXOffset","modLeftPx","modRightPx","subNote","subTickContext","setXOffset","Music","NUM_TONES","canonical_notes","roots","root_values","root_indices","diatonic_intervals","diatonic_accidentals","unison","accidental","m2","M2","m3","M3","p4","dim5","p5","m6","M6","b7","M7","octave","intervals","b2","min2","S","H","maj2","T","W","b3","min3","maj3","b5","aug4","b6","aug5","maj6","m7","min7","dom7","maj7","scales","major","minor","ionian","dorian","phyrgian","lydian","mixolydian","aeolian","locrian","scaleTypes","M","m","accidentals","noteValues","root_index","int_val","cn","cb","cbb","dn","db","dbb","en","eb","ebb","fn","fb","fbb","gn","gb","gbb","an","ab","abb","bn","bb","bbb","isValidNoteValue","isValidIntervalValue","interval","getNoteParts","noteString","match","exec","root","getKeyParts","keyString","getNoteValue","getIntervalValue","intervalString","getCanonicalNoteName","noteValue","getCanonicalIntervalName","intervalValue","getRelativeNoteValue","direction","sum","getRelativeNoteName","rootValue","multiplier","reverse_interval","relativeNoteName","getScaleTones","tones","nextNote","getIntervalBetween","note1","note2","difference","createScaleMap","keySignature","keySigParts","scaleName","keySigString","noteLocation","scaleMap","rootName","RESOLUTION","durations","durationAliases","keySignatures","C","num","Am","F","acc","Dm","Bb","Gm","Eb","Cm","Ab","Fm","Db","Bbm","Gb","Ebm","Cb","Abm","G","Em","D","Bm","A","E","B","clefs","treble","line_shift","bass","tenor","alto","soprano","percussion","subbass","french","notesInfo","CN","CB","CBB","DN","DB","DBB","EN","EB","EBB","FN","FB","FBB","GN","GB","GBB","AN","AB","ABB","BN","BB","BBB","R","rest","X","shift_right","customNoteHeads","D0","D1","D2","D3","T0","T1","T2","T3","X0","X1","X2","X3","S1","S2","R1","R2","parenRightPaddingAdjustment","bs","bss","bbs","ashs","afhf","accSagittal5v7KleismaUp","accSagittal5v7KleismaDown","accSagittal5CommaUp","accSagittal5CommaDown","accSagittal7CommaUp","accSagittal7CommaDown","accSagittal25SmallDiesisUp","accSagittal25SmallDiesisDown","accSagittal35MediumDiesisUp","accSagittal35MediumDiesisDown","accSagittal11MediumDiesisUp","accSagittal11MediumDiesisDown","accSagittal11LargeDiesisUp","accSagittal11LargeDiesisDown","accSagittal35LargeDiesisUp","accSagittal35LargeDiesisDown","accSagittalSharp25SDown","accSagittalFlat25SUp","accSagittalSharp7CDown","accSagittalFlat7CUp","accSagittalSharp5CDown","accSagittalFlat5CUp","accSagittalSharp5v7kDown","accSagittalFlat5v7kUp","accSagittalSharp","accSagittalFlat","accSagittalSharp5v7kUp","accSagittalFlat5v7kDown","accSagittalSharp5CUp","accSagittalFlat5CDown","accSagittalSharp7CUp","accSagittalFlat7CDown","accSagittalSharp25SUp","accSagittalFlat25SDown","accSagittalSharp35MUp","accSagittalFlat35MDown","accSagittalSharp11MUp","accSagittalFlat11MDown","accSagittalSharp11LUp","accSagittalFlat11LDown","accSagittalSharp35LUp","accSagittalFlat35LDown","accSagittalDoubleSharp25SDown","accSagittalDoubleFlat25SUp","accSagittalDoubleSharp7CDown","accSagittalDoubleFlat7CUp","accSagittalDoubleSharp5CDown","accSagittalDoubleFlat5CUp","accSagittalDoubleSharp5v7kDown","accSagittalDoubleFlat5v7kUp","accSagittalDoubleSharp","accSagittalDoubleFlat","accSagittal7v11KleismaUp","accSagittal7v11KleismaDown","accSagittal17CommaUp","accSagittal17CommaDown","accSagittal55CommaUp","accSagittal55CommaDown","accSagittal7v11CommaUp","accSagittal7v11CommaDown","accSagittal5v11SmallDiesisUp","accSagittal5v11SmallDiesisDown","accSagittalSharp5v11SDown","accSagittalFlat5v11SUp","accSagittalSharp7v11CDown","accSagittalFlat7v11CUp","accSagittalSharp55CDown","accSagittalFlat55CUp","accSagittalSharp17CDown","accSagittalFlat17CUp","accSagittalSharp7v11kDown","accSagittalFlat7v11kUp","accSagittalSharp7v11kUp","accSagittalFlat7v11kDown","accSagittalSharp17CUp","accSagittalFlat17CDown","accSagittalSharp55CUp","accSagittalFlat55CDown","accSagittalSharp7v11CUp","accSagittalFlat7v11CDown","accSagittalSharp5v11SUp","accSagittalFlat5v11SDown","accSagittalDoubleSharp5v11SDown","accSagittalDoubleFlat5v11SUp","accSagittalDoubleSharp7v11CDown","accSagittalDoubleFlat7v11CUp","accSagittalDoubleSharp55CDown","accSagittalDoubleFlat55CUp","accSagittalDoubleSharp17CDown","accSagittalDoubleFlat17CUp","accSagittalDoubleSharp7v11kDown","accSagittalDoubleFlat7v11kUp","accSagittal23CommaUp","accSagittal23CommaDown","accSagittal5v19CommaUp","accSagittal5v19CommaDown","accSagittal5v23SmallDiesisUp","accSagittal5v23SmallDiesisDown","accSagittalSharp5v23SDown","accSagittalFlat5v23SUp","accSagittalSharp5v19CDown","accSagittalFlat5v19CUp","accSagittalSharp23CDown","accSagittalFlat23CUp","accSagittalSharp23CUp","accSagittalFlat23CDown","accSagittalSharp5v19CUp","accSagittalFlat5v19CDown","accSagittalSharp5v23SUp","accSagittalFlat5v23SDown","accSagittalDoubleSharp5v23SDown","accSagittalDoubleFlat5v23SUp","accSagittalDoubleSharp5v19CDown","accSagittalDoubleFlat5v19CUp","accSagittalDoubleSharp23CDown","accSagittalDoubleFlat23CUp","accSagittal19SchismaUp","accSagittal19SchismaDown","accSagittal17KleismaUp","accSagittal17KleismaDown","accSagittal143CommaUp","accSagittal143CommaDown","accSagittal11v49CommaUp","accSagittal11v49CommaDown","accSagittal19CommaUp","accSagittal19CommaDown","accSagittal7v19CommaUp","accSagittal7v19CommaDown","accSagittal49SmallDiesisUp","accSagittal49SmallDiesisDown","accSagittal23SmallDiesisUp","accSagittal23SmallDiesisDown","accSagittal5v13MediumDiesisUp","accSagittal5v13MediumDiesisDown","accSagittal11v19MediumDiesisUp","accSagittal11v19MediumDiesisDown","accSagittal49MediumDiesisUp","accSagittal49MediumDiesisDown","accSagittal5v49MediumDiesisUp","accSagittal5v49MediumDiesisDown","accSagittal49LargeDiesisUp","accSagittal49LargeDiesisDown","accSagittal11v19LargeDiesisUp","accSagittal11v19LargeDiesisDown","accSagittal5v13LargeDiesisUp","accSagittal5v13LargeDiesisDown","accSagittalSharp23SDown","accSagittalFlat23SUp","accSagittalSharp49SDown","accSagittalFlat49SUp","accSagittalSharp7v19CDown","accSagittalFlat7v19CUp","accSagittalSharp19CDown","accSagittalFlat19CUp","accSagittalSharp11v49CDown","accSagittalFlat11v49CUp","accSagittalSharp143CDown","accSagittalFlat143CUp","accSagittalSharp17kDown","accSagittalFlat17kUp","accSagittalSharp19sDown","accSagittalFlat19sUp","accSagittalSharp19sUp","accSagittalFlat19sDown","accSagittalSharp17kUp","accSagittalFlat17kDown","accSagittalSharp143CUp","accSagittalFlat143CDown","accSagittalSharp11v49CUp","accSagittalFlat11v49CDown","accSagittalSharp19CUp","accSagittalFlat19CDown","accSagittalSharp7v19CUp","accSagittalFlat7v19CDown","accSagittalSharp49SUp","accSagittalFlat49SDown","accSagittalSharp23SUp","accSagittalFlat23SDown","accSagittalSharp5v13MUp","accSagittalFlat5v13MDown","accSagittalSharp11v19MUp","accSagittalFlat11v19MDown","accSagittalSharp49MUp","accSagittalFlat49MDown","accSagittalSharp5v49MUp","accSagittalFlat5v49MDown","accSagittalSharp49LUp","accSagittalFlat49LDown","accSagittalSharp11v19LUp","accSagittalFlat11v19LDown","accSagittalSharp5v13LUp","accSagittalFlat5v13LDown","accSagittalDoubleSharp23SDown","accSagittalDoubleFlat23SUp","accSagittalDoubleSharp49SDown","accSagittalDoubleFlat49SUp","accSagittalDoubleSharp7v19CDown","accSagittalDoubleFlat7v19CUp","accSagittalDoubleSharp19CDown","accSagittalDoubleFlat19CUp","accSagittalDoubleSharp11v49CDown","accSagittalDoubleFlat11v49CUp","accSagittalDoubleSharp143CDown","accSagittalDoubleFlat143CUp","accSagittalDoubleSharp17kDown","accSagittalDoubleFlat17kUp","accSagittalDoubleSharp19sDown","accSagittalDoubleFlat19sUp","accSagittalShaftUp","accSagittalShaftDown","accSagittalAcute","accSagittalGrave","accSagittal1MinaUp","accSagittal1MinaDown","accSagittal2MinasUp","accSagittal2MinasDown","accSagittal1TinaUp","accSagittal1TinaDown","accSagittal2TinasUp","accSagittal2TinasDown","accSagittal3TinasUp","accSagittal3TinasDown","accSagittal4TinasUp","accSagittal4TinasDown","accSagittal5TinasUp","accSagittal5TinasDown","accSagittal6TinasUp","accSagittal6TinasDown","accSagittal7TinasUp","accSagittal7TinasDown","accSagittal8TinasUp","accSagittal8TinasDown","accSagittal9TinasUp","accSagittal9TinasDown","accSagittalFractionalTinaUp","accSagittalFractionalTinaDown","accidentalNarrowReversedFlat","accidentalNarrowReversedFlatAndFlat","accidentalWilsonPlus","accidentalWilsonMinus","articulations","between_lines","av","aboveCode","belowCode","ao","ah","am","ornaments","mordent","mordent_inverted","turn","turn_inverted","tr","upprall","downprall","prallup","pralldown","upmordent","downmordent","lineprall","prallprall","scoop","doit","fall","doitLong","fallLong","bend","plungerClosed","plungerOpen","flip","jazzTurn","smear","Tables","keyOctaveGlyph","params","octave_shift","pieces","toUpperCase","clefProperties","stroke","int_value","customNoteHeadProps","glyphName","displaced","integer","fret","shift_y","glyphMetrics","TABLATURE_FONT_SCALE","undefined","textWidth","artic","spec","keySpec","acc_list","durationNumber","sanitizeDuration","durationToFraction","ticks","durationCodes","glyphTypeProperties","customGlyphTypeProperties","code_head","common","NOTATION_FONT_SCALE","STEM_WIDTH","STEM_HEIGHT","STAVE_LINE_THICKNESS","SLASH_NOTEHEAD_WIDTH","STAVE_LINE_DISTANCE","TEXT_HEIGHT_OFFSET_HACK","accidentalMap","accidentalColumnsTable","second_on_bottom","spaced_out_tetrachord","spaced_out_pentachord","very_spaced_out_pentachord","spaced_out_hexachord","very_spaced_out_hexachord","unicode","sharp","flat","natural","triangle","degrees","circle","validTypes","TIME4_4","num_beats","beat_value","stem","stem_offset","flag","stem_up_extension","stem_down_extension","tabnote_stem_up_extension","tabnote_stem_down_extension","dot_shiftY","line_above","line_below","beam_count","stem_beam_extension","code_flag_upstem","code_flag_downstem","L","DEBUG","render_options","font_scale","parenLeftPadding","parenRightPadding","accidentalCodes","cautionary","state","musicFont","currentMusicFont","noteheadAccidentalPadding","leftShift","left_shift","accidentalSpacing","additionalPadding","accList","prevNote","shiftL","props","getKeyProps","getLeftDisplacedHeadPx","lineSpace","getSpacingBetweenLines","getYForLine","accLine","round","sort","lineList","previousLine","accShift","flatLine","dblSharpLine","numAcc","column","totalColumns","noFurtherConflicts","groupStart","groupEnd","checkCollision","getGroupLine","getGroupLines","indexes","lineDifference","indexA","indexB","item","notColliding","indexPairs","every","line1","line2","groupLength","groupMember","endCase","patternLength","collisionDetected","columnWidths","columnXOffsets","totalShift","accCount","lastAccOnLine","clearance","clearanceRequired","collision","voices","tickPositions","tickNoteMap","voice","tickPosition","getTickables","shouldIgnoreTicks","notesAtPosition","getTicks","music","scaleMapKey","tickPos","tickables","modifiedPitches","processNote","isRest","staveNote","keyIndex","accidentalString","pitch","sameAccidental","previouslyModified","getModifiers","modifier","splice","addModifier","getGraceNotes","fontScale","parenLeft","parenRight","parenWidth","setAsCautionary","getModifierStartXY","accX","accY","stem_up_y_offset","stem_down_y_offset","stem_up_y_base_offset","stem_down_y_base_offset","x_begin","x_end","y_top","y_bottom","stem_extension","stem_direction","hide","isStemlet","stemletHeight","renderHeightAdjustment","UP","DOWN","WIDTH","HEIGHT","setNoteHeadXBounds","setDirection","setExtension","ext","getExtension","setYBounds","getHeight","y_offset","getExtents","isStemUp","ys","stemHeight","innerMostNoteheadY","outerMostNoteheadY","topY","baseY","setVisibility","isVisible","setStemlet","adjustHeightForFlag","adjustHeightForBeam","stem_x","stem_y","y_base_offset","stemletYOffset","TextFormatter","textWidthCache","formatterInfo","serifs","monospaced","italic","bold","superscriptOffset","subscriptOffset","maxSizeGlyph","cacheKey","updateParams","registeredFonts","requestedFont","candidates","requestedFamilies","requestedFamily","startsWith","formatter","values","isBold","isItalic","perfectMatch","find","partialMatch","fontSizeInPt","overwrite","updateCacheKey","getGlyphMetrics","character","maxHeight","getWidthForCharacterInEm","advanceWidth","getWidthForTextInEm","cachedWidths","getWidthForTextInPx","AnnotationHorizontalJustify","AnnotationVerticalJustify","CENTER_STEM","TOP","BOTTOM","horizontalJustification","verticalJustification","minAnnotationPadding","annotations","leftWidth","rightWidth","maxLeftGlyphWidth","maxRightGlyphWidth","annotation","textFormatter","create","verticalSpaceNeeded","glyphWidth","getGlyph","stemDirection","hasStem","getStemDirection","lines","draw_stem","getStem","getNoteType","getNumLines","VerticalJustify","noteLine","getLineNumber","leastString","top_text_line","greatestString","curBottom","rightOverlap","right_shift","leftOverlap","setVerticalJustification","just","VerticalJustifyString","getJustification","setJustification","HorizontalJustifyString","classString","openGroup","text_width","measureText","text_height","getStemX","stem_ext","spacing","has_stem","checkStem","getYs","yt","getYForTopText","getYForBottomText","getTopLineTopY","extents","getStemExtents","fillText","closeGroup","HorizontalJustify","centerStem","top","bottom","roundToNearestHalf","mathFn","isWithinLines","getRoundingFunction","ceil","isStaveOrGraceNote","maxGlyphWidth","getIncrement","articulation","increment","curTop","maxWidth","articWidth","overlap","builder","articNameToCode","staccato","tenuto","accent","articString","getFactory","articulationCodes","textLine","canSitBetweenLines","staffSpace","isTab","shouldSitOutsideStaff","initialOffset","isOnStemTip","padding","mt","stemTipY","stemBaseY","INITIAL_OFFSET","dt","offsetDirection","articLine","snappedLine","setRawFont","drawDot","color","arc","closePath","_preFormatted","_postFormatted","intrinsicTicks","tickMultiplier","modifiers","tupletStack","align_center","center_x_shift","ignore_ticks","formatterMetrics","freedom","iterations","space","used","mean","deviation","setIgnoreTicks","checkTickContext","getFormatterMetrics","getCenterXShift","isCenterAligned","setCenterXShift","centerXShift","setCenterAlignment","getVoice","setVoice","getTuplet","tuplet","getTupletStack","resetTuplet","noteCount","notesOccupied","getNoteCount","getNotesOccupied","applyTickMultiplier","pop","setTuplet","addToModifierContext","mc","addMember","setTickContext","tc","preFormat","preFormatted","postFormat","postFormatted","getIntrinsicTicks","setIntrinsicTicks","getTickMultiplier","setDuration","getAbsoluteX","noteStruct","parsedNoteStruct","parseNoteStruct","JSON","stringify","keyProps","noteType","customTypes","duration_override","getGlyphProps","customGlyphs","playNote","leftDisplacedHeadPx","rightDisplacedHeadPx","annotation_spacing","glyph_font_scale","stroke_px","xStart","xPre1","xAbs","xPost1","notePx","xPost2","xEnd","xFreedomRight","xWidth","yy","spaceDeviation","durationString","dots","durationProps","parseDuration","durationToTicks","currentTicks","getPlayNote","setPlayNote","addStroke","setYs","getRightDisplacedHeadPx","setLeftDisplacedHeadPx","setRightDisplacedHeadPx","isTopNote","getLineForRest","getGlyphWidth","getDuration","isDotted","getModifiersByType","getBeam","beam","checkBeam","hasBeam","setBeam","signature","filter","getRightParenthesisPx","getLeftParenthesisPx","getFirstDotPx","getMembers","getState","glyphPx","getNoteStartX","getTieRightX","tieStartX","getTieLeftX","tieEndX","getKeys","StaveModifierPosition","BarlineType","ChordSymbolHorizontalJustify","ChordSymbolVerticalJustify","SymbolTypes","SymbolModifiers","VoiceMode","BEGIN","END","placeGlyphOnLine","customShift","getPadding","setPadding","setLayoutMetrics","layoutMetrics","getLayoutMetrics","SINGLE","DOUBLE","REPEAT_BEGIN","REPEAT_END","REPEAT_BOTH","NONE","thickness","TYPE","widths","paddings","layoutMetricsMap","xMin","xMax","paddingLeft","paddingRight","setType","typeString","single","double","repeatBegin","repeatEnd","repeatBoth","none","getType","drawVerticalBar","drawVerticalEndBar","drawRepeatBar","double_bar","staveCtx","botY","getBottomLineBottomY","fillRect","begin","dot_x","dot_radius","dot_y","barline","release","phrase","tap","line_width","line_style","bend_width","release_width","updateWidth","bends","last_width","stringPos","setTap","getText","getTextHeight","totalWidth","additional_width","draw_width","lowestY","bend_height","annotation_y","renderBend","cp_x","cp_y","renderRelease","renderArrowHead","yBase","renderText","render_x","last_bend","last_bend_draw_width","last_drawn_width","Nt","GLYPH","TEXT","SUBSCRIPT","SUPERSCRIPT","symbolBlocks","horizontal","vertical","useKerning","reportWidth","superSubRatio","global","NO_TEXT_FORMAT","val","noFormat","glyphCode","engravingFontResolution","spacingBetweenBlocks","metric","getMetricForGlyph","yOffset","leftSideBearing","kerningOffset","chordSymbol","lowerKerningText","upperKerningText","symbolModifier","symbols","nonSuperWidth","reportedWidths","symbol","fontAdj","scaleSize","glyphAdj","lineSpaces","vAlign","j","sup","isSuperscript","sub","isSubscript","superSubScale","adj","symbolType","superSubFontSize","getWidthForGlyph","getYShiftForGlyph","getXShiftForGlyph","getYOffsetForText","over","setEnableKerning","updateKerningAdjustments","updateOverBarAdjustments","getVertical","getReportWidth","setReportWidth","barIndex","findIndex","xoff","yoff","symIndex","accum","getKerningAdjustment","currSymbol","prevSymbol","adjustment","preKernUpper","preKernLower","some","xx","kerningOffsetPixels","getSymbolBlock","_c","symbolBlock","glyphArgs","glyphPoints","addSymbolBlock","parameters","addText","addTextSuperscript","addTextSubscript","addGlyphSuperscript","addGlyph","addGlyphOrText","char","addLine","setVertical","vj","setHorizontal","hj","getHorizontal","yMax","y_max","stem_base","isSuper","isSub","curY","smallerFontSize","diminished","dim","halfDiminished","augmented","majorSeventh","leftParen","rightParen","leftBracket","rightBracket","leftParenTall","rightParenTall","symbolTypes","symbolModifiers","radius","all","dot","setDotShiftY","dot_list","max_shift_map","note_id","dot_shift","x_width","last_line","last_note","prev_dotted_space","half_shiftY","forceFlagRight","finger","x_offset","nums","nums_list","prev_note","shiftLeft","shiftRight","pos","textHeight","shiftR","numShiftL","numShiftR","xWidthL","xWidthR","lastLine","lastNote","num_shift","numWidth","fingerings","fingeringString","number","Fingering","fingering","setFretHandFinger","getFretHandFinger","setOffsetX","setOffsetY","setNotes","cp1","cp2","text_shift_x","first_x_shift","last_x_shift","tie_spacing","first_note","first_indices","last_indices","isPartial","renderTie","first_ys","last_ys","last_x_px","first_x_px","first_y_px","last_y_px","top_cp_y","bottom_cp_y","center_x","getTieStartX","getTieEndX","STRICT","SOFT","FULL","time","resolutionMultiplier","mode","ticksUsed","largestTickWidth","softmaxFactor","totalTicks","smallestTickCount","Mode","getTotalTicks","getTicksUsed","getLargestTickWidth","getSmallestTickCount","getMode","setMode","getResolutionMultiplier","getActualResolution","tickable","setStrict","strict","isComplete","setSoftmaxFactor","factor","reCalculateExpTicksUsed","expTicksUsed","softmax","tickValue","addTickable","addTickables","grace_notes","show_slur","slur","slur_y_shift","beams","gracenote_groups","group_list","gracenote_group","is_stavenote","formatWidth","group_shift","Formatter","joinVoices","format","getMinTotalWidth","beamNotes","beam_width","partial_beam_length","graceNote","TieClass","groups","TickContext","tickID","currentTick","maxTicks","maxTickable","minTicks","minTickable","xBase","xOffset","tickablesByVoice","totalLeftPx","totalRightPx","tContexts","tContext","contexts","getTickID","getXBase","setXBase","getXOffset","getMaxTicks","getMinTicks","getMaxTickable","getMinTickable","getTickableForVoice","voiceIndex","getTickablesByVoice","getCenterAlignedTickables","getCurrentTick","setCurrentTick","tick","delayed","accidentalLowerPadding","accidentalUpperPadding","ornament","ornamentCodes","adjustForStemDirection","reportedWidth","stemUpYOffset","ornamentAlignWithNoteHead","ornamentNoteTransition","ornamentRelease","ornamentAttack","ornamentArticulation","jazzOrnaments","setDelayed","setUpperAccidental","accid","accidentalUpper","setLowerAccidental","accidentalLower","stemDir","stemExtents","isPlacedOnNoteheadSide","lineSpacing","glyphYBetweenLines","glyphX","glyphY","delayXShift","startX","nextContext","getNextContext","parentheses","x_widthL","x_widthR","parenthesis","renderGlyph","custom_glyph","stem_up_x_offset","stem_down_x_offset","note_type","glyph_code","custom_glyph_code","slashed","isDisplaced","getLine","setLine","displacementStemAdjustment","fontShift","displacedFontShift","half_spacing","min_y","getYForNote","head_x","categorySuffix","staveSpace","durationToNumber","breve_lines","setStem","buildStem","buildFlag","hasFlag","flagCode","getBaseCustomNoteHeadGlyph","getStemLength","getStemExtension","getBeamCount","getStemMinimumLength","setStemDirection","offsets","offsetYBaseStemUp","offsetYTopStemUp","offsetYBaseStemDown","offsetYTopStemDown","getCenterGlyphX","stem_extension_override","setStemLength","drawStem","stemOptions","shiftRestVertical","dir","delta","maxLine","minLine","setKeyLine","getKeyLine","ledgerLineStyle","use_default_head_x","_noteHeads","LEDGER_LINE_OFFSET","calculateKeyProps","auto_stem","autoStem","STEM_UP","STEM_DOWN","minNoteheadPadding","minL","stemMax","stemMin","maxL","isrest","voice_shift","getVoiceShiftWidth","is_displaced","noteU","noteM","noteL","voiceXShift","lineDiff","whiteNoteHeadCount","blackNoteHeadCount","noteHeadStyles","noteHead","buildNoteHeads","noteHeadStyle","head","calcNoteDisplacements","noteProps","notehead","calculateOptimalStemDirection","keyProperties","minY","maxY","halfLineSpacing","frac","resultLine","thisLine","isChord","getNoteHeadBounds","setNoteDisplaced","getRightShift","restLine","setStemStyle","getStemStyle","setLedgerLineStyle","getLedgerLineStyle","setFlagStyle","flagStyle","getFlagStyle","setKeyStyle","noteHeadPadding","shouldDrawFlag","nonDisplacedX","displacedX","highestDisplacedLine","lowestDisplacedLine","yTop","yBottom","highestLine","lowestLine","highestNonDisplacedLine","lowestNonDisplacedLine","displaced_x","non_displaced_x","highest_line","lowest_line","highest_displaced_line","lowest_displaced_line","highest_non_displaced_line","lowest_non_displaced_line","getNoteHeadBeginX","getNoteHeadEndX","noteHeads","note_heads","drawLedgerLines","doubleWidth","min_x","drawLedgerLine","normal","ledgerWidth","getDefaultLedgerLineStyle","drawModifiers","noteheadStyle","hasNoBeam","drawFlag","_d","_e","noteStemHeight","flagX","flagY","getStaveNoteScale","pointerBBox","drawNoteHeads","super_stem_extension","mid_line_distance","lines_over_octave_from_mid_line","spacing_between_lines","xBegin","shouldRenderStem","stemX","isHTMLCanvas","element","HTMLCanvasElement","toDataURL","isHTMLDiv","HTMLDivElement","appendChild","CanvasContext","context2D","canvas","CANVAS_BROWSER_SIZE_LIMIT","limit","clearRect","cls","child","setBackgroundFillStyle","blur","getTransform","setLineCap","capType","lineCap","setLineDash","dash","resize","devicePixelRatio","sanitizeCanvasDims","rect","cp1x","cp1y","cp2x","cp2y","cpx","cpy","startAngle","endAngle","counterclockwise","fontBoundingBoxAscent","fontBoundingBoxDescent","actualBoundingBoxAscent","actualBoundingBoxDescent","ATTRIBUTES_TO_IGNORE","path","SVG_NS","TWO_PI","SVGContext","backgroundFillStyle","fontCSSString","svg","parent","pen","defaultFontAttributes","attributes","shadow_attributes","state_stack","svgElementType","createElementNS","lineDash","applyAttributes","visibleWidth","visibleHeight","setViewBox","viewBox_or_minX","viewBoxString","attrNamesToIgnore","nodeName","attrName","setAttributeNS","lastChild","removeChild","rectangle","x0","cos","y0","sin","large","sweep","getShadowStyle","sa","measureTextCache","txt","textContent","savedState","fontAttributes","RendererBackends","RendererLineEndType","TextJustification","VoltaType","measureImpl","getBBox","CANVAS","SVG","Renderer","arg0","arg1","backend","maybeElement","Backends","elementId","background","renderer","lastContext","buildContext","fromX","fromY","toX","toY","dashPattern","dx","dy","angle","atan2","idx","dashLength","nx","ny","LineEndType","string_number","dashed","leg","stringNumber","shift_left","glyphLine","num_shiftR","num_width","setLineEndType","setStringNumber","setLastNote","setDashed","stemPadding","verticalPadding","leftPadding","rightPadding","len","pattern","drawDashedLine","all_voices","strokes","strokeList","string","getPositions","strokeShift","addEndNote","note_end","line_space","arrow","arrow_shift_x","arrow_y","text_y","Type","BRUSH_DOWN","BRUSH_UP","ROLL_DOWN","RASQUEDO_DOWN","ROLL_UP","RASQUEDO_UP","ARPEGGIO_DIRECTIONLESS","strokeLine","harsh","vibrato_width","wave_height","wave_width","wave_girth","setVibratoWidth","vibratos","vibrato","setHarsh","vx","vy","renderVibrato","opts","num_waves","ce","ModifierContext","members","formatted","member","getLeftShift","types","tab","attachment","numLines","shiftY","cancelKeySpec","alterKeySpec","setKeySig","glyphFontScale","xPositions","paddingForced","convertToGlyph","nextAcc","accGlyphData","extraWidth","xPosition","cancelKey","convertToCancelAccList","cancel_accList","different_types","naturals","cancelled","concat","addToStave","convertAccLines","customLines","offset","alterKey","convertToAlterAccList","firstAccidentalType","cancelAccList","getEndClef","getClef","symbol_type","setShiftX","setShiftY","CODA_RIGHT","drawCodaFixed","CODA_LEFT","drawSymbolText","SEGNO_LEFT","drawSignoFixed","SEGNO_RIGHT","DC","DC_AL_CODA","DC_AL_FINE","DS","DS_AL_CODA","DS_AL_FINE","FINE","TO_CODA","draw_coda","text_x","symbol_x","modifierWidth","getVerticalBarWidth","section","shift_x","setStaveSection","textMeasurements","tempo","setTempo","bpm","stem_height","superscript","subscript","smooth","justification","struct","GLYPHS","segno","mordent_upper","mordent_lower","p","z","coda","pedal_open","pedal_close","caesura_straight","caesura_curved","breath","Justification","setStaveText","setText","getBottomLineY","MID","BEGIN_END","volta","top_y","vert_height","TimeSignatureGlyph","timeSignature","topDigits","botDigits","topWidth","timeSigType","topGlyph","botWidth","botGlyph","topStartX","botStartX","start_x","topLine","bottomLine","timeSpec","customPadding","validate_args","fontLineShift","parseTimeSpec","numbers","test","makeTimeSignatureGlyph","getInfo","setTimeSig","SORT_ORDER_BEG_MODIFIERS","SORT_ORDER_END_MODIFIERS","end_x","measure","endClef","vertical_bar_width","num_lines","fill_style","left_bar","right_bar","spacing_between_lines_px","space_above_staff_ln","space_below_staff_ln","top_text_position","bottom_text_position","line_config","bounds","defaultLedgerLineStyle","resetLines","addEndModifier","defaultPadding","setDefaultLedgerLineStyle","visible","setNoteStartX","begBarline","getNoteEndX","setNumLines","mod","setMeasure","getModifierXShift","setRepetitionType","setVoltaType","number_t","setSection","staveSection","getBottomY","headroom","getLineForY","setBegBarType","setEndBarType","clefSpec","addClef","setEndClef","setKeySignature","addKeySignature","setEndKeySignature","setTimeSignature","timeSignatures","addTimeSignature","setEndTimeSignature","addEndClef","addEndTimeSignature","addTrebleGlyph","noPosition","noCategory","sortByCategory","items","order","temp","endBarline","begModifiers","endModifiers","lastBarlineIdx","getConfigForLines","setConfigForLine","line_number","setConfigForLines","lines_configuration","drawBoldDoubleLine","topX","BOLD_DOUBLE_LEFT","BOLD_DOUBLE_RIGHT","variableWidth","top_stave","bottom_stave","texts","SINGLE_RIGHT","content","THIN_DOUBLE","attachment_height","SINGLE_LEFT","BRACE","x3","y3","cpx1","cpy1","cpx2","cpy2","cpx3","cpy3","cpx4","cpy4","cpx5","cpy5","cpx6","cpy6","cpx7","cpy7","cpx8","cpy8","BRACKET","singleRight","singleLeft","brace","bracket","boldDoubleLeft","boldDoubleRight","thinDouble","sumArray","createContexts","makeContext","addToContext","tickToContextMap","tickList","integerTicks","newContext","array","getRestLineForNextNoteGroup","currRestLine","currNoteIndex","nextRestLine","noteIndex","formatterOptions","globalSoftmax","maxIterations","justifyWidth","totalCost","durationStats","minTotalWidth","hasMinTotalWidth","tickContexts","modifierContexts","contextGaps","total","gaps","lossHistory","paddingBetween","accumulator","stavePadding","gap","auto_beam","align_rests","applyAndGetBeams","formatToStave","tabstave","tabnotes","autobeam","notevoice","tabvoice","alignAllNotes","alignTuplets","currTickable","prevTickable","alignRests","AlignRestsToNotes","preCalculateMinTotalWidth","unalignedPadding","unalignedCtxCount","wsum","dsum","createTickContexts","contextList","contextMap","wavg","wvar","ll","wpads","davg","dvar","dpads","padmax","unalignedPad","createModifierContexts","contextArray","renderingContext","voicesParam","evaluate","firstContext","calculateIdealDistances","adjustedJustifyWidth","backTickable","prevContext","backVoices","matchingVoices","maxNegativeShiftPx","expectedDistance","thisTickable","insideLeftEdge","backMetrics","insideRightEdge","fromTickable","fromTickablePx","shiftToIdealDistances","idealDistances","centerX","spaceAccum","contextX","ideal","errorPx","negativeShiftPx","configMinPadding","configMaxPadding","targetWidth","distances","actualWidth","minDistance","mdCalc","di","paddingMaxCalc","curTargetWidth","lastTickablePadding","lastTickable","tickWidth","paddingMax","paddingMin","maxX","prevTick","prevMetrics","currMetrics","leftNoteEdge","rightNote","rightMetrics","stats","count","totalDeviation","tune","alpha","current","cost","postFormatContexts","optionsParam","TupletLocation","numerator_glyphs","denom_glyphs","num_notes","beats_occupied","beatsOccupiedDeprecationWarning","notes_occupied","bracketed","ratioed","setTupletLocation","location","LOCATION_TOP","resolveGlyphs","attach","LOCATION_BOTTOM","NESTING_OFFSET","detach","setBracketed","setRatioed","getNotes","getBeatsOccupied","setBeatsOccupied","beats","setNotesOccupied","unshift","getNestedTupletCount","maxTupletCount","countTuplets","minTupletCount","tupletCount","getYPosition","nested_tuplet_y_offset","topModifierOffset","modLines","modY","noteHeadOffset","stemOffset","lineCheck","nn","bottom_y","addGlyphWidth","notation_start_x","colon_x","colon_radius","calculateStemDirection","lineSum","keyProp","BEAM_LEFT","BEAM_RIGHT","BEAM_BOTH","slope","forcedPartialDirections","stem_weight","memo","break_on_indices","max_slope","min_slope","slope_iterations","slope_cost","show_stemlets","stemlet_extension","flat_beams","min_flat_beam_offset","time_sig","beatTotal","beatValue","generateBeams","tickGroups","unprocessedNotes","currentTickGroup","noteGroups","currentGroup","nextTickGroup","nextGroup","currentGroupTotalTicks","unprocessedNote","ticksPerGroup","vf_notes","unbeamable","sanitizedGroups","tempGroup","isFirstOrLast","breaksOnEachRest","beam_rests","breaksOnFirstOrLastRest","beam_middle_only","breakOnStemChange","maintain_stem_directions","prevDirection","isUnbeamableDuration","beamedNoteGroups","beamable","allTuplets","uniqueTuplets","noteTuplet","secondary_breaks","secondary_break_ticks","flat_beam_offset","beamCount","breakSecondaryAt","indices","setPartialBeamSideAt","side","unsetPartialBeamSideAt","getSlopeY","calculateSlope","firstNote","initialSlope","firstStemTipY","firstStemX","minCost","MAX_VALUE","bestSlope","totalStemExtension","yShiftTemp","adjustedStemTipY","diff","idealSlope","calculateFlatSlope","extremeY","extremeBeamCount","currentExtreme","extremeTest","newOffset","getBeamYToDraw","beamY","applyStemExtensions","beamedStemTipY","preBeamExtension","beamExtension","totalBeamWidth","lookupBeamDirection","prev_tick","next_tick","forcedBeamDirection","lookup_duration","prev_note_gets_beam","next_note_gets_beam","note_gets_beam","getBeamLines","tick_of_duration","beam_started","beam_lines","current_beam","previous_should_break","tick_tally","should_break","next_note","beam_alone","beam_direction","last_beam","drawStems","drawBeamLines","valid_beam_durations","beamThickness","beamLines","beam_line","startBeamX","startBeamY","lastBeamX","lastBeamY","clef_obj","abs_x","extend_left","extend_right","decrescendo","setHeight","setDecrescendo","decresc","tick_context","next_context","begin_x","half_height","reverse","CurvePosition","NEAR_HEAD","NEAR_TOP","position_end","invert","cps","nearHead","nearTop","renderCurve","first_x","first_y","last_x","last_y","cp0x","cp0y","cp_spacing","end_metric","Ge","Parser","flattenMatches","matchedString","results","grammar","errorPos","expect","matchFail","returnPos","matchSuccess","matchToken","token","noSpace","regexp","RegExp","success","incrementPos","expectOne","rule","maybe","allMatches","oneMatch","localPos","or","gotOne","numMatches","expectOneOrMore","more","expectZeroOrMore","ruleFunc","bind","oneOrMore","zeroOrMore","matches","run","je","EasyScore","EasyScoreGrammar","PIECE","PIECES","EOL","CHORDORNOTE","PARAMS","commitPiece","COMMA","DURATION","DOTS","OPTS","CHORD","SINGLENOTE","LPAREN","NOTES","RPAREN","addChord","NOTE","NOTENAME","ACCIDENTAL","OCTAVE","addSingleNote","MICROTONES","ACCIDENTALS","DOT","setNoteDots","SLASH","MAYBESLASH","TYPES","setNoteType","DURATIONS","setNoteDuration","LBRACKET","KEYVAL","KEYVALS","RBRACKET","KEY","EQUALS","VAL","addNoteOption","SVAL","DVAL","Piece","chord","Builder","factory","commitHooks","elements","rollingDuration","resetPiece","getElements","addCommitHook","commitHook","piece","addNote","standardAccidentals","notePiece","buildAndAttach","setId","commaSeparatedRegex","setClass","defaults","easyScoreHook","throwOnError","parser","ERROR_MSG","parameter","ignoreTicks","setGlyph","SCALE","slash","ret","staveNoteScale","offsetScale","slashBBox","calcBeamedNotesSlashBBox","noteHeadBounds","defaultStemExtention","defaultOffsetY","slashStemOffset","slashBeamOffset","protrusions","beam_slope","scaleX","beam_angle","atan","iPointOnBeam","slash_angle","protrusion_stem_dx","protrusion_stem_dy","protrusion_beam_dx","protrusion_beam_dy","stem0X","stemY","semibreve_rest","number_of_measures","xs","hasPaddingLeft","hasPaddingRight","hasLineThickness","hasSymbolSpacing","padding_left","padding_right","line_thickness","symbol_spacing","use_symbols","show_number","number_line","number_glyph_point","serif_thickness","semibreve_rest_glyph_scale","getXs","drawLine","spacingBetweenLines","lineThicknessHalf","serifThickness","bot","leftIndented","rightIndented","lineTop","lineBottom","drawSymbols","n4","n2","n1","rest_scale","rest_width","yMiddle","timeSig","drawPedalGlyph","glyph_data","custom_depress_text","custom_release_text","bracket_height","text_margin_right","bracket_line_width","pedal","MIXED","setCustomText","depress","drawBracketed","prev_x","prev_y","is_pedal_depressed","next_is_same","prev_is_same","drawText","pedal_depress","pedal_release","mixed","CODES","drawArrowHead","line_dash","rounded_end","draw_start_arrow","draw_end_arrow","arrowhead_length","arrowhead_angle","text_position_vertical","TextVerticalPosition","text_justification","applyLineStyle","applyFontStyle","drawArrowLine","pt1","pt2","both_arrows","distance","ratio","end_y","start_y","line_angle","angle1","angle2","top_x","bottom_x","start_position","end_position","first_index","last_index","upwards_slope","notehead_width","vertical_position","spaceBetweenStaves","autoWidth","noJustification","debugFormatter","formatIterations","noPadding","details","formatOptions","addConnector","connector","addStave","staveOptions","spaceAbove","spaceBelow","debugNoteMetrics","options_details","allVoices","debugNoteMetricsYs","part","lastY","plotDebugging","plotMetrics","positions","ghost","draw_dots","draw_stem_through_stave","setGhost","tabToGlyph","getStemY","stemDownLine","stemStartLine","flag_x","flag_y","drawStemThrough","stemThrough","stemLines","unused_strings","up_stem","down_stem","line_spacing","total_lines","stem_lines","strings","containsLastString","containsFirstString","line_ys","isTopBound","isBottomBound","strings_used","stem_through","drawPositions","tab_x","render_stem","addTabGlyph","gi","TextBracketPosition","stop","show_bracket","underline_superscript","Positions","PositionsString","main_measure","main_width","main_height","super_y","super_measure","super_width","super_height","line_y","fi","sequence","glyph_font_size","total_width","letter","letter_x","current_letter","timeSigInfo","bracket_data","stop_x","wi","Factory","renderQ","systems","staves","initRenderer","getVoices","ghostNote","textNote","barNote","clefNote","timeSigNote","keySigNote","hJustify","vJustify","kerning","numMeasures","multiMeasureRest","secondaryBeamBreaks","partialBeamDirections","curve","tie","vibratoBracket","textBracket","system","KeyManager","setKey","getKey","scaleMapByValue","originalScaleMapByValue","getAccidental","selectNote","scaleNote","modparts","change","valueNote","originalValueNote","hairpin","left_shift_px","right_shift_px","right_shift_ticks","left_shift_ticks","ppt","pixelsPerTick","l_shift_px","r_shift_px","hairpin_options","setRenderOptions","renderHairpin","dis","staff_height","l_shift","r_shift","CRESC","DECRESC","first_fret","last_fret","SLIDE_UP","SLIDE_DOWN","slide_y","y_spacing_scale","extra_stroke_scale","y_spacing","Tuning","tuningString","tuningValues","setTuning","names","standard","dagdad","dropd","standardBanjo","noteToInteger","getValueForString","stringNum","getValueForFret","fretNum","stringValue","getNoteForFret","integerToNote","Fi","Flow","BUILD","VERSION","DATE","fontNames","fontModuleOrPath","hasKeySignature","getKeySignatures","BravuraFont","bracketTop","y_min","bracketBottom","barlineTick","breathMarkTick","gClef","cClef","fClef","unpitchedPercussionClef1","timeSig0","timeSig1","timeSig2","timeSig3","timeSig4","timeSig5","timeSig6","timeSig7","timeSig8","timeSig9","timeSigCommon","timeSigCutCommon","timeSigPlus","timeSigPlusSmall","timeSigMinus","timeSigParensRight","timeSigParensRightSmall","timeSigParensLeft","timeSigParensLeftSmall","noteheadDoubleWhole","noteheadWhole","noteheadHalf","noteheadBlack","noteheadXWhole","noteheadXHalf","noteheadXBlack","noteheadCircleX","noteheadTriangleUpWhole","noteheadTriangleUpHalf","noteheadTriangleUpBlack","noteheadDiamondWhole","noteheadDiamondHalf","noteheadDiamondBlack","noteheadSquareWhite","noteheadSquareBlack","noteheadParenthesis","noteheadParenthesisRight","noteheadParenthesisLeft","augmentationDot","tremolo1","flag8thUp","flag8thDown","flag16thUp","flag16thDown","flag32ndUp","flag32ndDown","flag64thUp","flag64thDown","flag128thUp","flag128thDown","accidentalFlat","accidentalNatural","accidentalSharp","accidentalDoubleSharp","accidentalDoubleFlat","accidentalParensLeft","accidentalParensRight","accidentalQuarterToneFlatStein","accidentalThreeQuarterTonesFlatZimmermann","accidentalQuarterToneSharpStein","accidentalThreeQuarterTonesSharpStein","accidentalBuyukMucennebFlat","accidentalBakiyeFlat","accidentalKomaSharp","accidentalKucukMucennebSharp","accidentalKoron","accidentalSori","articAccentAbove","articAccentBelow","articTenutoAbove","articTenutoBelow","articStaccatoAbove","articStaccatoBelow","articStaccatissimoAbove","articStaccatissimoBelow","articMarcatoAbove","articMarcatoBelow","fermataAbove","fermataBelow","breathMarkComma","breathMarkUpbow","caesura","caesuraCurved","restMaxima","restDoubleWhole","restWhole","restHalf","restQuarter","rest8th","rest16th","rest32nd","rest64th","rest128th","dynamicPiano","dynamicMezzo","dynamicForte","dynamicRinforzando","dynamicSforzando","dynamicZ","ornamentTrill","ornamentTurn","ornamentTurnSlash","ornamentMordent","ornamentShortTrill","ornamentTremblement","ornamentPrecompAppoggTrill","ornamentPrecompSlideTrillDAnglebert","ornamentPrecompSlideTrillBach","ornamentPrecompTrillSuffixDandrieu","ornamentPrecompDoubleCadenceUpperPrefix","ornamentPrecompDoubleCadenceUpperPrefixTurn","ornamentPrecompTrillLowerSuffix","brassScoop","brassDoitMedium","brassFallLipShort","brassLiftMedium","brassFallRoughMedium","brassBend","brassMuteClosed","brassMuteOpen","brassFlip","brassJazzTurn","brassSmear","stringsDownBow","stringsUpBow","stringsHarmonic","pluckedSnapPizzicatoAbove","pluckedSnapPizzicatoBelow","pluckedLeftHandPizzicato","keyboardPedalPed","keyboardPedalUp","pictChokeCymbal","wiggleArpeggiatoUp","arrowheadBlackUp","arrowheadBlackDown","arpeggiatoUp","arpeggiatoDown","repeat1Bar","repeat2Bars","repeat4Bars","repeatBarSlash","csymDiminished","csymHalfDiminished","csymAugmented","csymMajorSeventh","csymMinor","csymParensLeftTall","csymParensRightTall","csymBracketLeftTall","csymBracketRightTall","csymParensLeftVeryTall","csymParensRightVeryTall","csymDiagonalArrangementSlash","generatedOn","BravuraMetrics","smufl","endPaddingMax","endPaddingMin","unalignedNotePadding","default","small","smuflCode","shiftX","lineCount","gracenote","pedalMarking","up","down","digits","shiftLine","tupletPoint","tremolo","offsetYStemUp","offsetYStemDown","offsetXStemUp","offsetXStemDown","grace","staveRepetition","symbolText","offsetX","offsetY","heightAdjustmentForFlag","staveTempo","straight","wiggly","minPadding","restQuarterStemUp","restQuarterStemDown","custom","noteheadCircleXStemUp","noteheadCircleXStemDown","noteheadDiamondHalfStemUp","noteheadDiamondBlackStemUp","noteheadDiamondWholeStemUp","noteheadXHalfStemUp","noteheadXHalfStemDown","noteheadXWholeStemUp","noteheadXWholeStemDown","noteheadSquareWhiteStemDown","noteheadSquareWhiteStemUp","noteheadSquareBlackStemUp","noteheadTriangleUpWholeStemUp","CustomFont","vexAccidentalMicrotonal2","vexAccidentalMicrotonal3","vexAccidentalMicrotonal4","vexNoteHeadRectBlack","vexNoteHeadRectWhite","CustomMetrics","GonvilleFont","vexAccidentalMicrotonal1","vexWiggleArpeggioUp","vexNoteHeadMutedBreve","cssFontWeight","ascender","underlinePosition","cssFontStyle","yMin","original_font_information","postscript_name","version_string","vendor_url","full_font_name","font_family_name","copyright","description","trademark","designer","designer_url","unique_font_identifier","license_url","license_description","manufacturer_name","font_sub_family_name","descender","lineHeight","underlineThickness","GonvilleMetrics","PetalumaFont","PetalumaMetrics","noteheadBlackStemUp","noteheadHalfStemUp","noteheadWholeStemUp","noteheadXBlackStemUp","PetalumaScriptFont","$","I","J","K","N","O","Q","U","V","Y","Z","_","l","RobotoSlabFont","Vex","cmp","eq","newArr","canvasSelector","start_time","Date","getTime","setMusicFont","fontData","registerInfo","$f2f1f3968500bd50$export$6385ab77f5d4645","$562fa9bbccdeeb73$export$38435c7d2fecd2f","div","virtualKeyboard","answerSize","resultDelay","rightIndex","rightAnswer","disabled","timeout","_resultCb","initAnswser","answerBtnList","htmlEle","classList","addEventListener","answerBtnClicked","clearTimeout","showAnswer","extenalInput","highlightKey","setTimeout","notifyListener","setAnswer","answer","selections","btn","remove","innerText","removeKeyHighlight","resultCb","$7da7a1de1179de9d$export$1274a57bdce2819e","staveEle"],"version":3,"file":"interval-quantities.9b68473f.js.map"}